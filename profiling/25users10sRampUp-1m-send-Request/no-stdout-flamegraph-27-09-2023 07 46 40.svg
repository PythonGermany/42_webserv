<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1400" height="966" onload="init(evt)" viewBox="0 0 1400 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1390" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1390" y="949.00"> </text><svg id="frames" x="10" width="1380" total_samples="15620"><g><title>Http::processFile (2 samples, 0.01%)</title><rect x="0.0256%" y="885" width="0.0128%" height="15" fill="rgb(253,96,38)" fg:x="4" fg:w="2"/><text x="0.2399%" y="895.50"></text></g><g><title>ListenSocket::onPollEvent (2 samples, 0.01%)</title><rect x="0.0512%" y="885" width="0.0128%" height="15" fill="rgb(234,106,36)" fg:x="8" fg:w="2"/><text x="0.2655%" y="895.50"></text></g><g><title>Address::~Address (2 samples, 0.01%)</title><rect x="0.0512%" y="869" width="0.0128%" height="15" fill="rgb(211,197,29)" fg:x="8" fg:w="2"/><text x="0.2655%" y="879.50"></text></g><g><title>Log::write (2 samples, 0.01%)</title><rect x="0.0640%" y="885" width="0.0128%" height="15" fill="rgb(230,27,54)" fg:x="10" fg:w="2"/><text x="0.2783%" y="895.50"></text></g><g><title>[[heap]] (4 samples, 0.03%)</title><rect x="0.1024%" y="885" width="0.0256%" height="15" fill="rgb(221,205,47)" fg:x="16" fg:w="4"/><text x="0.3167%" y="895.50"></text></g><g><title>__xstat64 (6 samples, 0.04%)</title><rect x="0.1344%" y="869" width="0.0384%" height="15" fill="rgb(220,214,18)" fg:x="21" fg:w="6"/><text x="0.3487%" y="879.50"></text></g><g><title>__irqentry_text_start (6 samples, 0.04%)</title><rect x="0.1344%" y="853" width="0.0384%" height="15" fill="rgb(229,107,3)" fg:x="21" fg:w="6"/><text x="0.3487%" y="863.50"></text></g><g><title>[[stack]] (9 samples, 0.06%)</title><rect x="0.1280%" y="885" width="0.0576%" height="15" fill="rgb(208,199,53)" fg:x="20" fg:w="9"/><text x="0.3423%" y="895.50"></text></g><g><title>Http::getContextArgs[abi:cxx11] (3 samples, 0.02%)</title><rect x="0.2561%" y="805" width="0.0192%" height="15" fill="rgb(253,99,20)" fg:x="40" fg:w="3"/><text x="0.4704%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.02%)</title><rect x="0.2945%" y="789" width="0.0192%" height="15" fill="rgb(240,176,52)" fg:x="46" fg:w="3"/><text x="0.5088%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.01%)</title><rect x="0.3137%" y="789" width="0.0128%" height="15" fill="rgb(244,92,22)" fg:x="49" fg:w="2"/><text x="0.5280%" y="799.50"></text></g><g><title>Http::isMehodImplemented (10 samples, 0.06%)</title><rect x="0.2753%" y="805" width="0.0640%" height="15" fill="rgb(208,46,35)" fg:x="43" fg:w="10"/><text x="0.4896%" y="815.50"></text></g><g><title>std::operator==&lt;char&gt; (2 samples, 0.01%)</title><rect x="0.3265%" y="789" width="0.0128%" height="15" fill="rgb(243,52,2)" fg:x="51" fg:w="2"/><text x="0.5408%" y="799.50"></text></g><g><title>std::char_traits&lt;char&gt;::compare (2 samples, 0.01%)</title><rect x="0.3265%" y="773" width="0.0128%" height="15" fill="rgb(243,198,3)" fg:x="51" fg:w="2"/><text x="0.5408%" y="783.50"></text></g><g><title>Context::exists (2 samples, 0.01%)</title><rect x="0.3649%" y="757" width="0.0128%" height="15" fill="rgb(247,57,9)" fg:x="57" fg:w="2"/><text x="0.5792%" y="767.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="0.3649%" y="741" width="0.0128%" height="15" fill="rgb(242,154,52)" fg:x="57" fg:w="2"/><text x="0.5792%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="0.3649%" y="725" width="0.0128%" height="15" fill="rgb(207,227,6)" fg:x="57" fg:w="2"/><text x="0.5792%" y="735.50"></text></g><g><title>Context::getDirective (7 samples, 0.04%)</title><rect x="0.3585%" y="773" width="0.0448%" height="15" fill="rgb(251,123,38)" fg:x="56" fg:w="7"/><text x="0.5728%" y="783.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator[] (4 samples, 0.03%)</title><rect x="0.3777%" y="757" width="0.0256%" height="15" fill="rgb(241,90,24)" fg:x="59" fg:w="4"/><text x="0.5920%" y="767.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::lower_bound (3 samples, 0.02%)</title><rect x="0.3841%" y="741" width="0.0192%" height="15" fill="rgb(236,33,33)" fg:x="60" fg:w="3"/><text x="0.5984%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::lower_bound (3 samples, 0.02%)</title><rect x="0.3841%" y="725" width="0.0192%" height="15" fill="rgb(234,73,1)" fg:x="60" fg:w="3"/><text x="0.5984%" y="735.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (3 samples, 0.02%)</title><rect x="0.3841%" y="709" width="0.0192%" height="15" fill="rgb(237,13,3)" fg:x="60" fg:w="3"/><text x="0.5984%" y="719.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2 samples, 0.01%)</title><rect x="0.3905%" y="693" width="0.0128%" height="15" fill="rgb(228,56,32)" fg:x="61" fg:w="2"/><text x="0.6048%" y="703.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="0.3905%" y="677" width="0.0128%" height="15" fill="rgb(241,103,2)" fg:x="61" fg:w="2"/><text x="0.6048%" y="687.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.01%)</title><rect x="0.3905%" y="661" width="0.0128%" height="15" fill="rgb(212,2,49)" fg:x="61" fg:w="2"/><text x="0.6048%" y="671.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator= (2 samples, 0.01%)</title><rect x="0.4161%" y="773" width="0.0128%" height="15" fill="rgb(253,123,43)" fg:x="65" fg:w="2"/><text x="0.6304%" y="783.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="0.4161%" y="757" width="0.0128%" height="15" fill="rgb(248,65,39)" fg:x="65" fg:w="2"/><text x="0.6304%" y="767.50"></text></g><g><title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="0.4161%" y="741" width="0.0128%" height="15" fill="rgb(253,109,20)" fg:x="65" fg:w="2"/><text x="0.6304%" y="751.50"></text></g><g><title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2 samples, 0.01%)</title><rect x="0.4161%" y="725" width="0.0128%" height="15" fill="rgb(252,132,47)" fg:x="65" fg:w="2"/><text x="0.6304%" y="735.50"></text></g><g><title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2 samples, 0.01%)</title><rect x="0.4161%" y="709" width="0.0128%" height="15" fill="rgb(210,190,6)" fg:x="65" fg:w="2"/><text x="0.6304%" y="719.50"></text></g><g><title>std::_Construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="0.4161%" y="693" width="0.0128%" height="15" fill="rgb(210,114,0)" fg:x="65" fg:w="2"/><text x="0.6304%" y="703.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (2 samples, 0.01%)</title><rect x="0.4289%" y="773" width="0.0128%" height="15" fill="rgb(238,104,0)" fg:x="67" fg:w="2"/><text x="0.6432%" y="783.50"></text></g><g><title>Http::getAllowedMethods[abi:cxx11] (18 samples, 0.12%)</title><rect x="0.3393%" y="789" width="0.1152%" height="15" fill="rgb(231,65,46)" fg:x="53" fg:w="18"/><text x="0.5536%" y="799.50"></text></g><g><title>std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="0.4417%" y="773" width="0.0128%" height="15" fill="rgb(229,229,29)" fg:x="69" fg:w="2"/><text x="0.6560%" y="783.50"></text></g><g><title>Http::isMethodValid (19 samples, 0.12%)</title><rect x="0.3393%" y="805" width="0.1216%" height="15" fill="rgb(247,62,44)" fg:x="53" fg:w="19"/><text x="0.5536%" y="815.50"></text></g><g><title>Context::exists (2 samples, 0.01%)</title><rect x="0.5058%" y="773" width="0.0128%" height="15" fill="rgb(247,57,9)" fg:x="79" fg:w="2"/><text x="0.7200%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_lower_bound (4 samples, 0.03%)</title><rect x="0.5250%" y="709" width="0.0256%" height="15" fill="rgb(246,72,10)" fg:x="82" fg:w="4"/><text x="0.7393%" y="719.50"></text></g><g><title>Context::exists (6 samples, 0.04%)</title><rect x="0.5186%" y="757" width="0.0384%" height="15" fill="rgb(247,57,9)" fg:x="81" fg:w="6"/><text x="0.7329%" y="767.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (5 samples, 0.03%)</title><rect x="0.5250%" y="741" width="0.0320%" height="15" fill="rgb(242,154,52)" fg:x="82" fg:w="5"/><text x="0.7393%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (5 samples, 0.03%)</title><rect x="0.5250%" y="725" width="0.0320%" height="15" fill="rgb(207,227,6)" fg:x="82" fg:w="5"/><text x="0.7393%" y="735.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.01%)</title><rect x="0.5570%" y="757" width="0.0128%" height="15" fill="rgb(254,182,12)" fg:x="87" fg:w="2"/><text x="0.7713%" y="767.50"></text></g><g><title>Context::getDirective (12 samples, 0.08%)</title><rect x="0.5058%" y="789" width="0.0768%" height="15" fill="rgb(251,123,38)" fg:x="79" fg:w="12"/><text x="0.7200%" y="799.50"></text></g><g><title>Context::getDirective (10 samples, 0.06%)</title><rect x="0.5186%" y="773" width="0.0640%" height="15" fill="rgb(251,123,38)" fg:x="81" fg:w="10"/><text x="0.7329%" y="783.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="0.5698%" y="757" width="0.0128%" height="15" fill="rgb(241,90,24)" fg:x="89" fg:w="2"/><text x="0.7841%" y="767.50"></text></g><g><title>File::File (2 samples, 0.01%)</title><rect x="0.5826%" y="789" width="0.0128%" height="15" fill="rgb(248,0,51)" fg:x="91" fg:w="2"/><text x="0.7969%" y="799.50"></text></g><g><title>link_path_walk.part.0 (5 samples, 0.03%)</title><rect x="0.6146%" y="661" width="0.0320%" height="15" fill="rgb(224,50,14)" fg:x="96" fg:w="5"/><text x="0.8289%" y="671.50"></text></g><g><title>walk_component (2 samples, 0.01%)</title><rect x="0.6338%" y="645" width="0.0128%" height="15" fill="rgb(250,91,19)" fg:x="99" fg:w="2"/><text x="0.8481%" y="655.50"></text></g><g><title>filename_lookup (7 samples, 0.04%)</title><rect x="0.6082%" y="693" width="0.0448%" height="15" fill="rgb(251,85,21)" fg:x="95" fg:w="7"/><text x="0.8225%" y="703.50"></text></g><g><title>path_lookupat (7 samples, 0.04%)</title><rect x="0.6082%" y="677" width="0.0448%" height="15" fill="rgb(214,118,26)" fg:x="95" fg:w="7"/><text x="0.8225%" y="687.50"></text></g><g><title>__do_sys_newstat (13 samples, 0.08%)</title><rect x="0.5954%" y="725" width="0.0832%" height="15" fill="rgb(232,11,11)" fg:x="93" fg:w="13"/><text x="0.8097%" y="735.50"></text></g><g><title>vfs_statx (12 samples, 0.08%)</title><rect x="0.6018%" y="709" width="0.0768%" height="15" fill="rgb(253,80,28)" fg:x="94" fg:w="12"/><text x="0.8161%" y="719.50"></text></g><g><title>File::dir (14 samples, 0.09%)</title><rect x="0.5954%" y="789" width="0.0896%" height="15" fill="rgb(217,56,25)" fg:x="93" fg:w="14"/><text x="0.8097%" y="799.50"></text></g><g><title>__xstat64 (14 samples, 0.09%)</title><rect x="0.5954%" y="773" width="0.0896%" height="15" fill="rgb(220,214,18)" fg:x="93" fg:w="14"/><text x="0.8097%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.09%)</title><rect x="0.5954%" y="757" width="0.0896%" height="15" fill="rgb(205,226,15)" fg:x="93" fg:w="14"/><text x="0.8097%" y="767.50"></text></g><g><title>do_syscall_64 (14 samples, 0.09%)</title><rect x="0.5954%" y="741" width="0.0896%" height="15" fill="rgb(220,74,14)" fg:x="93" fg:w="14"/><text x="0.8097%" y="751.50"></text></g><g><title>cp_new_stat (3 samples, 0.02%)</title><rect x="0.7234%" y="709" width="0.0192%" height="15" fill="rgb(206,214,9)" fg:x="113" fg:w="3"/><text x="0.9377%" y="719.50"></text></g><g><title>from_kuid_munged (2 samples, 0.01%)</title><rect x="0.7298%" y="693" width="0.0128%" height="15" fill="rgb(207,150,32)" fg:x="114" fg:w="2"/><text x="0.9441%" y="703.50"></text></g><g><title>ext4_file_getattr (5 samples, 0.03%)</title><rect x="0.7554%" y="693" width="0.0320%" height="15" fill="rgb(216,81,46)" fg:x="118" fg:w="5"/><text x="0.9697%" y="703.50"></text></g><g><title>ext4_getattr (4 samples, 0.03%)</title><rect x="0.7618%" y="677" width="0.0256%" height="15" fill="rgb(245,33,42)" fg:x="119" fg:w="4"/><text x="0.9761%" y="687.50"></text></g><g><title>complete_walk (4 samples, 0.03%)</title><rect x="0.8131%" y="661" width="0.0256%" height="15" fill="rgb(233,57,23)" fg:x="127" fg:w="4"/><text x="1.0273%" y="671.50"></text></g><g><title>try_to_unlazy (3 samples, 0.02%)</title><rect x="0.8195%" y="645" width="0.0192%" height="15" fill="rgb(250,130,2)" fg:x="128" fg:w="3"/><text x="1.0337%" y="655.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="0.9475%" y="629" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="148" fg:w="2"/><text x="1.1618%" y="639.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="0.9475%" y="613" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="148" fg:w="2"/><text x="1.1618%" y="623.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="0.9475%" y="597" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="148" fg:w="2"/><text x="1.1618%" y="607.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="0.9475%" y="581" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="148" fg:w="2"/><text x="1.1618%" y="591.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="0.9475%" y="565" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="148" fg:w="2"/><text x="1.1618%" y="575.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="0.9475%" y="549" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="148" fg:w="2"/><text x="1.1618%" y="559.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="0.9475%" y="533" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="148" fg:w="2"/><text x="1.1618%" y="543.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="0.9475%" y="517" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="148" fg:w="2"/><text x="1.1618%" y="527.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="0.9475%" y="501" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="148" fg:w="2"/><text x="1.1618%" y="511.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="0.9475%" y="485" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="148" fg:w="2"/><text x="1.1618%" y="495.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="0.9475%" y="469" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="148" fg:w="2"/><text x="1.1618%" y="479.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="0.9475%" y="453" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="148" fg:w="2"/><text x="1.1618%" y="463.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="0.9475%" y="437" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="148" fg:w="2"/><text x="1.1618%" y="447.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="0.9475%" y="421" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="148" fg:w="2"/><text x="1.1618%" y="431.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="0.9475%" y="405" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="148" fg:w="2"/><text x="1.1618%" y="415.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="0.9475%" y="389" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="148" fg:w="2"/><text x="1.1618%" y="399.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="0.9475%" y="373" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="148" fg:w="2"/><text x="1.1618%" y="383.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="0.9475%" y="357" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="148" fg:w="2"/><text x="1.1618%" y="367.50"></text></g><g><title>inode_permission.part.0 (21 samples, 0.13%)</title><rect x="0.8451%" y="645" width="0.1344%" height="15" fill="rgb(226,127,45)" fg:x="132" fg:w="21"/><text x="1.0594%" y="655.50"></text></g><g><title>generic_permission (3 samples, 0.02%)</title><rect x="0.9603%" y="629" width="0.0192%" height="15" fill="rgb(224,35,39)" fg:x="150" fg:w="3"/><text x="1.1746%" y="639.50"></text></g><g><title>security_inode_permission (2 samples, 0.01%)</title><rect x="0.9795%" y="645" width="0.0128%" height="15" fill="rgb(206,97,32)" fg:x="153" fg:w="2"/><text x="1.1938%" y="655.50"></text></g><g><title>link_path_walk.part.0 (57 samples, 0.36%)</title><rect x="0.8387%" y="661" width="0.3649%" height="15" fill="rgb(224,50,14)" fg:x="131" fg:w="57"/><text x="1.0530%" y="671.50"></text></g><g><title>walk_component (33 samples, 0.21%)</title><rect x="0.9923%" y="645" width="0.2113%" height="15" fill="rgb(250,91,19)" fg:x="155" fg:w="33"/><text x="1.2066%" y="655.50"></text></g><g><title>lookup_fast (32 samples, 0.20%)</title><rect x="0.9987%" y="629" width="0.2049%" height="15" fill="rgb(223,109,4)" fg:x="156" fg:w="32"/><text x="1.2130%" y="639.50"></text></g><g><title>__d_lookup_rcu (31 samples, 0.20%)</title><rect x="1.0051%" y="613" width="0.1985%" height="15" fill="rgb(227,66,48)" fg:x="157" fg:w="31"/><text x="1.2194%" y="623.50"></text></g><g><title>path_init (10 samples, 0.06%)</title><rect x="1.2036%" y="661" width="0.0640%" height="15" fill="rgb(215,181,33)" fg:x="188" fg:w="10"/><text x="1.4179%" y="671.50"></text></g><g><title>dput (3 samples, 0.02%)</title><rect x="1.2676%" y="645" width="0.0192%" height="15" fill="rgb(252,3,5)" fg:x="198" fg:w="3"/><text x="1.4819%" y="655.50"></text></g><g><title>terminate_walk (5 samples, 0.03%)</title><rect x="1.2676%" y="661" width="0.0320%" height="15" fill="rgb(225,202,12)" fg:x="198" fg:w="5"/><text x="1.4819%" y="671.50"></text></g><g><title>mntput (2 samples, 0.01%)</title><rect x="1.2868%" y="645" width="0.0128%" height="15" fill="rgb(231,62,36)" fg:x="201" fg:w="2"/><text x="1.5011%" y="655.50"></text></g><g><title>path_lookupat (90 samples, 0.58%)</title><rect x="0.8003%" y="677" width="0.5762%" height="15" fill="rgb(214,118,26)" fg:x="125" fg:w="90"/><text x="1.0145%" y="687.50"></text></g><g><title>walk_component (12 samples, 0.08%)</title><rect x="1.2996%" y="661" width="0.0768%" height="15" fill="rgb(250,91,19)" fg:x="203" fg:w="12"/><text x="1.5139%" y="671.50"></text></g><g><title>lookup_fast (12 samples, 0.08%)</title><rect x="1.2996%" y="645" width="0.0768%" height="15" fill="rgb(223,109,4)" fg:x="203" fg:w="12"/><text x="1.5139%" y="655.50"></text></g><g><title>__d_lookup_rcu (12 samples, 0.08%)</title><rect x="1.2996%" y="629" width="0.0768%" height="15" fill="rgb(227,66,48)" fg:x="203" fg:w="12"/><text x="1.5139%" y="639.50"></text></g><g><title>filename_lookup (95 samples, 0.61%)</title><rect x="0.7875%" y="693" width="0.6082%" height="15" fill="rgb(251,85,21)" fg:x="123" fg:w="95"/><text x="1.0017%" y="703.50"></text></g><g><title>putname (3 samples, 0.02%)</title><rect x="1.3764%" y="677" width="0.0192%" height="15" fill="rgb(212,216,17)" fg:x="215" fg:w="3"/><text x="1.5907%" y="687.50"></text></g><g><title>security_inode_getattr (19 samples, 0.12%)</title><rect x="1.4085%" y="693" width="0.1216%" height="15" fill="rgb(232,137,28)" fg:x="220" fg:w="19"/><text x="1.6227%" y="703.50"></text></g><g><title>tomoyo_path_perm (7 samples, 0.04%)</title><rect x="1.4853%" y="677" width="0.0448%" height="15" fill="rgb(217,76,1)" fg:x="232" fg:w="7"/><text x="1.6996%" y="687.50"></text></g><g><title>tomoyo_init_request_info (5 samples, 0.03%)</title><rect x="1.4981%" y="661" width="0.0320%" height="15" fill="rgb(221,167,18)" fg:x="234" fg:w="5"/><text x="1.7124%" y="671.50"></text></g><g><title>kmem_cache_alloc (5 samples, 0.03%)</title><rect x="1.5557%" y="661" width="0.0320%" height="15" fill="rgb(223,51,51)" fg:x="243" fg:w="5"/><text x="1.7700%" y="671.50"></text></g><g><title>__virt_addr_valid (2 samples, 0.01%)</title><rect x="1.6069%" y="629" width="0.0128%" height="15" fill="rgb(216,204,49)" fg:x="251" fg:w="2"/><text x="1.8212%" y="639.50"></text></g><g><title>user_path_at_empty (15 samples, 0.10%)</title><rect x="1.5301%" y="693" width="0.0960%" height="15" fill="rgb(238,106,16)" fg:x="239" fg:w="15"/><text x="1.7444%" y="703.50"></text></g><g><title>getname_flags.part.0 (13 samples, 0.08%)</title><rect x="1.5429%" y="677" width="0.0832%" height="15" fill="rgb(214,38,37)" fg:x="241" fg:w="13"/><text x="1.7572%" y="687.50"></text></g><g><title>strncpy_from_user (6 samples, 0.04%)</title><rect x="1.5877%" y="661" width="0.0384%" height="15" fill="rgb(245,149,46)" fg:x="248" fg:w="6"/><text x="1.8020%" y="671.50"></text></g><g><title>__check_object_size (4 samples, 0.03%)</title><rect x="1.6005%" y="645" width="0.0256%" height="15" fill="rgb(218,1,22)" fg:x="250" fg:w="4"/><text x="1.8148%" y="655.50"></text></g><g><title>__do_sys_newstat (144 samples, 0.92%)</title><rect x="0.7106%" y="725" width="0.9219%" height="15" fill="rgb(232,11,11)" fg:x="111" fg:w="144"/><text x="0.9249%" y="735.50"></text></g><g><title>vfs_statx (139 samples, 0.89%)</title><rect x="0.7426%" y="709" width="0.8899%" height="15" fill="rgb(253,80,28)" fg:x="116" fg:w="139"/><text x="0.9569%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (147 samples, 0.94%)</title><rect x="0.6978%" y="757" width="0.9411%" height="15" fill="rgb(205,226,15)" fg:x="109" fg:w="147"/><text x="0.9121%" y="767.50"></text></g><g><title>do_syscall_64 (146 samples, 0.93%)</title><rect x="0.7042%" y="741" width="0.9347%" height="15" fill="rgb(220,74,14)" fg:x="110" fg:w="146"/><text x="0.9185%" y="751.50"></text></g><g><title>File::exists (150 samples, 0.96%)</title><rect x="0.6850%" y="789" width="0.9603%" height="15" fill="rgb(233,182,48)" fg:x="107" fg:w="150"/><text x="0.8993%" y="799.50"></text></g><g><title>__xstat64 (150 samples, 0.96%)</title><rect x="0.6850%" y="773" width="0.9603%" height="15" fill="rgb(220,214,18)" fg:x="107" fg:w="150"/><text x="0.8993%" y="783.50"></text></g><g><title>File::getExtension[abi:cxx11] (4 samples, 0.03%)</title><rect x="1.6453%" y="789" width="0.0256%" height="15" fill="rgb(248,218,44)" fg:x="257" fg:w="4"/><text x="1.8596%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (2 samples, 0.01%)</title><rect x="1.6581%" y="773" width="0.0128%" height="15" fill="rgb(211,47,36)" fg:x="259" fg:w="2"/><text x="1.8724%" y="783.50"></text></g><g><title>complete_walk (2 samples, 0.01%)</title><rect x="1.7157%" y="645" width="0.0128%" height="15" fill="rgb(233,57,23)" fg:x="268" fg:w="2"/><text x="1.9300%" y="655.50"></text></g><g><title>try_to_unlazy (2 samples, 0.01%)</title><rect x="1.7157%" y="629" width="0.0128%" height="15" fill="rgb(250,130,2)" fg:x="268" fg:w="2"/><text x="1.9300%" y="639.50"></text></g><g><title>link_path_walk.part.0 (3 samples, 0.02%)</title><rect x="1.7286%" y="645" width="0.0192%" height="15" fill="rgb(224,50,14)" fg:x="270" fg:w="3"/><text x="1.9428%" y="655.50"></text></g><g><title>walk_component (2 samples, 0.01%)</title><rect x="1.7350%" y="629" width="0.0128%" height="15" fill="rgb(250,91,19)" fg:x="271" fg:w="2"/><text x="1.9492%" y="639.50"></text></g><g><title>filename_lookup (8 samples, 0.05%)</title><rect x="1.7029%" y="677" width="0.0512%" height="15" fill="rgb(251,85,21)" fg:x="266" fg:w="8"/><text x="1.9172%" y="687.50"></text></g><g><title>path_lookupat (7 samples, 0.04%)</title><rect x="1.7093%" y="661" width="0.0448%" height="15" fill="rgb(214,118,26)" fg:x="267" fg:w="7"/><text x="1.9236%" y="671.50"></text></g><g><title>kmem_cache_alloc (3 samples, 0.02%)</title><rect x="1.7542%" y="645" width="0.0192%" height="15" fill="rgb(223,51,51)" fg:x="274" fg:w="3"/><text x="1.9684%" y="655.50"></text></g><g><title>user_path_at_empty (5 samples, 0.03%)</title><rect x="1.7542%" y="677" width="0.0320%" height="15" fill="rgb(238,106,16)" fg:x="274" fg:w="5"/><text x="1.9684%" y="687.50"></text></g><g><title>getname_flags.part.0 (5 samples, 0.03%)</title><rect x="1.7542%" y="661" width="0.0320%" height="15" fill="rgb(214,38,37)" fg:x="274" fg:w="5"/><text x="1.9684%" y="671.50"></text></g><g><title>strncpy_from_user (2 samples, 0.01%)</title><rect x="1.7734%" y="645" width="0.0128%" height="15" fill="rgb(245,149,46)" fg:x="277" fg:w="2"/><text x="1.9877%" y="655.50"></text></g><g><title>File::getLastModified (19 samples, 0.12%)</title><rect x="1.6709%" y="773" width="0.1216%" height="15" fill="rgb(221,212,34)" fg:x="261" fg:w="19"/><text x="1.8852%" y="783.50"></text></g><g><title>__xstat64 (19 samples, 0.12%)</title><rect x="1.6709%" y="757" width="0.1216%" height="15" fill="rgb(220,214,18)" fg:x="261" fg:w="19"/><text x="1.8852%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18 samples, 0.12%)</title><rect x="1.6773%" y="741" width="0.1152%" height="15" fill="rgb(205,226,15)" fg:x="262" fg:w="18"/><text x="1.8916%" y="751.50"></text></g><g><title>do_syscall_64 (18 samples, 0.12%)</title><rect x="1.6773%" y="725" width="0.1152%" height="15" fill="rgb(220,74,14)" fg:x="262" fg:w="18"/><text x="1.8916%" y="735.50"></text></g><g><title>__do_sys_newstat (16 samples, 0.10%)</title><rect x="1.6901%" y="709" width="0.1024%" height="15" fill="rgb(232,11,11)" fg:x="264" fg:w="16"/><text x="1.9044%" y="719.50"></text></g><g><title>vfs_statx (15 samples, 0.10%)</title><rect x="1.6965%" y="693" width="0.0960%" height="15" fill="rgb(253,80,28)" fg:x="265" fg:w="15"/><text x="1.9108%" y="703.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="1.7990%" y="757" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="281" fg:w="4"/><text x="2.0133%" y="767.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="1.8118%" y="741" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="283" fg:w="2"/><text x="2.0261%" y="751.50"></text></g><g><title>getTime (18 samples, 0.12%)</title><rect x="1.7926%" y="773" width="0.1152%" height="15" fill="rgb(245,134,19)" fg:x="280" fg:w="18"/><text x="2.0069%" y="783.50"></text></g><g><title>strftime_l (12 samples, 0.08%)</title><rect x="1.8310%" y="757" width="0.0768%" height="15" fill="rgb(247,36,6)" fg:x="286" fg:w="12"/><text x="2.0453%" y="767.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.06%)</title><rect x="1.8438%" y="741" width="0.0640%" height="15" fill="rgb(247,113,52)" fg:x="288" fg:w="10"/><text x="2.0581%" y="751.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="1.8886%" y="725" width="0.0192%" height="15" fill="rgb(247,113,52)" fg:x="295" fg:w="3"/><text x="2.1029%" y="735.50"></text></g><g><title>File::lastModified (38 samples, 0.24%)</title><rect x="1.6709%" y="789" width="0.2433%" height="15" fill="rgb(230,175,3)" fg:x="261" fg:w="38"/><text x="1.8852%" y="799.50"></text></g><g><title>complete_walk (2 samples, 0.01%)</title><rect x="1.9334%" y="661" width="0.0128%" height="15" fill="rgb(233,57,23)" fg:x="302" fg:w="2"/><text x="2.1477%" y="671.50"></text></g><g><title>try_to_unlazy (2 samples, 0.01%)</title><rect x="1.9334%" y="645" width="0.0128%" height="15" fill="rgb(250,130,2)" fg:x="302" fg:w="2"/><text x="2.1477%" y="655.50"></text></g><g><title>__legitimize_path (2 samples, 0.01%)</title><rect x="1.9334%" y="629" width="0.0128%" height="15" fill="rgb(208,103,0)" fg:x="302" fg:w="2"/><text x="2.1477%" y="639.50"></text></g><g><title>filename_lookup (7 samples, 0.04%)</title><rect x="1.9206%" y="693" width="0.0448%" height="15" fill="rgb(251,85,21)" fg:x="300" fg:w="7"/><text x="2.1349%" y="703.50"></text></g><g><title>path_lookupat (6 samples, 0.04%)</title><rect x="1.9270%" y="677" width="0.0384%" height="15" fill="rgb(214,118,26)" fg:x="301" fg:w="6"/><text x="2.1413%" y="687.50"></text></g><g><title>link_path_walk.part.0 (3 samples, 0.02%)</title><rect x="1.9462%" y="661" width="0.0192%" height="15" fill="rgb(224,50,14)" fg:x="304" fg:w="3"/><text x="2.1605%" y="671.50"></text></g><g><title>walk_component (2 samples, 0.01%)</title><rect x="1.9526%" y="645" width="0.0128%" height="15" fill="rgb(250,91,19)" fg:x="305" fg:w="2"/><text x="2.1669%" y="655.50"></text></g><g><title>mntput_no_expire (2 samples, 0.01%)</title><rect x="1.9654%" y="693" width="0.0128%" height="15" fill="rgb(231,188,50)" fg:x="307" fg:w="2"/><text x="2.1797%" y="703.50"></text></g><g><title>user_path_at_empty (4 samples, 0.03%)</title><rect x="1.9782%" y="693" width="0.0256%" height="15" fill="rgb(238,106,16)" fg:x="309" fg:w="4"/><text x="2.1925%" y="703.50"></text></g><g><title>getname_flags.part.0 (4 samples, 0.03%)</title><rect x="1.9782%" y="677" width="0.0256%" height="15" fill="rgb(214,38,37)" fg:x="309" fg:w="4"/><text x="2.1925%" y="687.50"></text></g><g><title>kmem_cache_alloc (3 samples, 0.02%)</title><rect x="1.9846%" y="661" width="0.0192%" height="15" fill="rgb(223,51,51)" fg:x="310" fg:w="3"/><text x="2.1989%" y="671.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.01%)</title><rect x="1.9910%" y="645" width="0.0128%" height="15" fill="rgb(212,11,50)" fg:x="311" fg:w="2"/><text x="2.2053%" y="655.50"></text></g><g><title>File::readable (15 samples, 0.10%)</title><rect x="1.9142%" y="789" width="0.0960%" height="15" fill="rgb(241,128,18)" fg:x="299" fg:w="15"/><text x="2.1285%" y="799.50"></text></g><g><title>__xstat64 (15 samples, 0.10%)</title><rect x="1.9142%" y="773" width="0.0960%" height="15" fill="rgb(220,214,18)" fg:x="299" fg:w="15"/><text x="2.1285%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.10%)</title><rect x="1.9142%" y="757" width="0.0960%" height="15" fill="rgb(205,226,15)" fg:x="299" fg:w="15"/><text x="2.1285%" y="767.50"></text></g><g><title>do_syscall_64 (15 samples, 0.10%)</title><rect x="1.9142%" y="741" width="0.0960%" height="15" fill="rgb(220,74,14)" fg:x="299" fg:w="15"/><text x="2.1285%" y="751.50"></text></g><g><title>__do_sys_newstat (15 samples, 0.10%)</title><rect x="1.9142%" y="725" width="0.0960%" height="15" fill="rgb(232,11,11)" fg:x="299" fg:w="15"/><text x="2.1285%" y="735.50"></text></g><g><title>vfs_statx (14 samples, 0.09%)</title><rect x="1.9206%" y="709" width="0.0896%" height="15" fill="rgb(253,80,28)" fg:x="300" fg:w="14"/><text x="2.1349%" y="719.50"></text></g><g><title>complete_walk (3 samples, 0.02%)</title><rect x="2.0230%" y="661" width="0.0192%" height="15" fill="rgb(233,57,23)" fg:x="316" fg:w="3"/><text x="2.2373%" y="671.50"></text></g><g><title>try_to_unlazy (2 samples, 0.01%)</title><rect x="2.0294%" y="645" width="0.0128%" height="15" fill="rgb(250,130,2)" fg:x="317" fg:w="2"/><text x="2.2437%" y="655.50"></text></g><g><title>filename_lookup (7 samples, 0.04%)</title><rect x="2.0166%" y="693" width="0.0448%" height="15" fill="rgb(251,85,21)" fg:x="315" fg:w="7"/><text x="2.2309%" y="703.50"></text></g><g><title>path_lookupat (7 samples, 0.04%)</title><rect x="2.0166%" y="677" width="0.0448%" height="15" fill="rgb(214,118,26)" fg:x="315" fg:w="7"/><text x="2.2309%" y="687.50"></text></g><g><title>link_path_walk.part.0 (3 samples, 0.02%)</title><rect x="2.0423%" y="661" width="0.0192%" height="15" fill="rgb(224,50,14)" fg:x="319" fg:w="3"/><text x="2.2565%" y="671.50"></text></g><g><title>File::size (11 samples, 0.07%)</title><rect x="2.0102%" y="789" width="0.0704%" height="15" fill="rgb(217,35,38)" fg:x="314" fg:w="11"/><text x="2.2245%" y="799.50"></text></g><g><title>__xstat64 (11 samples, 0.07%)</title><rect x="2.0102%" y="773" width="0.0704%" height="15" fill="rgb(220,214,18)" fg:x="314" fg:w="11"/><text x="2.2245%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.07%)</title><rect x="2.0102%" y="757" width="0.0704%" height="15" fill="rgb(205,226,15)" fg:x="314" fg:w="11"/><text x="2.2245%" y="767.50"></text></g><g><title>do_syscall_64 (11 samples, 0.07%)</title><rect x="2.0102%" y="741" width="0.0704%" height="15" fill="rgb(220,74,14)" fg:x="314" fg:w="11"/><text x="2.2245%" y="751.50"></text></g><g><title>__do_sys_newstat (11 samples, 0.07%)</title><rect x="2.0102%" y="725" width="0.0704%" height="15" fill="rgb(232,11,11)" fg:x="314" fg:w="11"/><text x="2.2245%" y="735.50"></text></g><g><title>vfs_statx (11 samples, 0.07%)</title><rect x="2.0102%" y="709" width="0.0704%" height="15" fill="rgb(253,80,28)" fg:x="314" fg:w="11"/><text x="2.2245%" y="719.50"></text></g><g><title>user_path_at_empty (2 samples, 0.01%)</title><rect x="2.0679%" y="693" width="0.0128%" height="15" fill="rgb(238,106,16)" fg:x="323" fg:w="2"/><text x="2.2821%" y="703.50"></text></g><g><title>getname_flags.part.0 (2 samples, 0.01%)</title><rect x="2.0679%" y="677" width="0.0128%" height="15" fill="rgb(214,38,37)" fg:x="323" fg:w="2"/><text x="2.2821%" y="687.50"></text></g><g><title>strncpy_from_user (2 samples, 0.01%)</title><rect x="2.0679%" y="661" width="0.0128%" height="15" fill="rgb(245,149,46)" fg:x="323" fg:w="2"/><text x="2.2821%" y="671.50"></text></g><g><title>Response::Response (4 samples, 0.03%)</title><rect x="2.0871%" y="789" width="0.0256%" height="15" fill="rgb(215,13,29)" fg:x="326" fg:w="4"/><text x="2.3014%" y="799.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map (2 samples, 0.01%)</title><rect x="2.0999%" y="773" width="0.0128%" height="15" fill="rgb(235,99,43)" fg:x="328" fg:w="2"/><text x="2.3142%" y="783.50"></text></g><g><title>Response::operator= (2 samples, 0.01%)</title><rect x="2.1127%" y="789" width="0.0128%" height="15" fill="rgb(206,25,0)" fg:x="330" fg:w="2"/><text x="2.3270%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.01%)</title><rect x="2.1127%" y="773" width="0.0128%" height="15" fill="rgb(233,7,30)" fg:x="330" fg:w="2"/><text x="2.3270%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (2 samples, 0.01%)</title><rect x="2.1511%" y="693" width="0.0128%" height="15" fill="rgb(213,181,10)" fg:x="336" fg:w="2"/><text x="2.3654%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_begin (2 samples, 0.01%)</title><rect x="2.1511%" y="677" width="0.0128%" height="15" fill="rgb(240,39,4)" fg:x="336" fg:w="2"/><text x="2.3654%" y="687.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (4 samples, 0.03%)</title><rect x="2.1511%" y="709" width="0.0256%" height="15" fill="rgb(206,139,2)" fg:x="336" fg:w="4"/><text x="2.3654%" y="719.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (4 samples, 0.03%)</title><rect x="2.1831%" y="693" width="0.0256%" height="15" fill="rgb(249,156,9)" fg:x="341" fg:w="4"/><text x="2.3974%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node (4 samples, 0.03%)</title><rect x="2.1831%" y="677" width="0.0256%" height="15" fill="rgb(223,17,51)" fg:x="341" fg:w="4"/><text x="2.3974%" y="687.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node (3 samples, 0.02%)</title><rect x="2.1895%" y="661" width="0.0192%" height="15" fill="rgb(240,154,39)" fg:x="342" fg:w="3"/><text x="2.4038%" y="671.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (3 samples, 0.02%)</title><rect x="2.1895%" y="645" width="0.0192%" height="15" fill="rgb(232,149,36)" fg:x="342" fg:w="3"/><text x="2.4038%" y="655.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (3 samples, 0.02%)</title><rect x="2.1895%" y="629" width="0.0192%" height="15" fill="rgb(205,50,19)" fg:x="342" fg:w="3"/><text x="2.4038%" y="639.50"></text></g><g><title>operator new (3 samples, 0.02%)</title><rect x="2.1895%" y="613" width="0.0192%" height="15" fill="rgb(214,91,1)" fg:x="342" fg:w="3"/><text x="2.4038%" y="623.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="2.1895%" y="597" width="0.0192%" height="15" fill="rgb(232,24,50)" fg:x="342" fg:w="3"/><text x="2.4038%" y="607.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::insert (11 samples, 0.07%)</title><rect x="2.1447%" y="757" width="0.0704%" height="15" fill="rgb(253,1,32)" fg:x="335" fg:w="11"/><text x="2.3590%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_ (10 samples, 0.06%)</title><rect x="2.1511%" y="741" width="0.0640%" height="15" fill="rgb(229,182,52)" fg:x="336" fg:w="10"/><text x="2.3654%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (10 samples, 0.06%)</title><rect x="2.1511%" y="725" width="0.0640%" height="15" fill="rgb(227,197,36)" fg:x="336" fg:w="10"/><text x="2.3654%" y="735.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (6 samples, 0.04%)</title><rect x="2.1767%" y="709" width="0.0384%" height="15" fill="rgb(210,214,38)" fg:x="340" fg:w="6"/><text x="2.3910%" y="719.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (16 samples, 0.10%)</title><rect x="2.1255%" y="773" width="0.1024%" height="15" fill="rgb(213,223,15)" fg:x="332" fg:w="16"/><text x="2.3398%" y="783.50"></text></g><g><title>Response::setHeader (22 samples, 0.14%)</title><rect x="2.1255%" y="789" width="0.1408%" height="15" fill="rgb(253,98,0)" fg:x="332" fg:w="22"/><text x="2.3398%" y="799.50"></text></g><g><title>std::transform&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int (*)(int)&gt; (6 samples, 0.04%)</title><rect x="2.2279%" y="773" width="0.0384%" height="15" fill="rgb(232,139,18)" fg:x="348" fg:w="6"/><text x="2.4422%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (8 samples, 0.05%)</title><rect x="2.2663%" y="741" width="0.0512%" height="15" fill="rgb(243,60,52)" fg:x="354" fg:w="8"/><text x="2.4806%" y="751.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (4 samples, 0.03%)</title><rect x="2.2919%" y="725" width="0.0256%" height="15" fill="rgb(228,56,32)" fg:x="358" fg:w="4"/><text x="2.5062%" y="735.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="2.2983%" y="709" width="0.0192%" height="15" fill="rgb(241,103,2)" fg:x="359" fg:w="3"/><text x="2.5126%" y="719.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3 samples, 0.02%)</title><rect x="2.2983%" y="693" width="0.0192%" height="15" fill="rgb(212,2,49)" fg:x="359" fg:w="3"/><text x="2.5126%" y="703.50"></text></g><g><title>VirtualHost::getMimeType (9 samples, 0.06%)</title><rect x="2.2663%" y="789" width="0.0576%" height="15" fill="rgb(228,222,25)" fg:x="354" fg:w="9"/><text x="2.4806%" y="799.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (9 samples, 0.06%)</title><rect x="2.2663%" y="773" width="0.0576%" height="15" fill="rgb(251,39,6)" fg:x="354" fg:w="9"/><text x="2.4806%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (9 samples, 0.06%)</title><rect x="2.2663%" y="757" width="0.0576%" height="15" fill="rgb(215,30,0)" fg:x="354" fg:w="9"/><text x="2.4806%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.01%)</title><rect x="2.3431%" y="789" width="0.0128%" height="15" fill="rgb(240,176,52)" fg:x="366" fg:w="2"/><text x="2.5574%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.02%)</title><rect x="2.3624%" y="789" width="0.0192%" height="15" fill="rgb(244,92,22)" fg:x="369" fg:w="3"/><text x="2.5766%" y="799.50"></text></g><g><title>std::__basic_file&lt;char&gt;::__basic_file (4 samples, 0.03%)</title><rect x="2.4136%" y="757" width="0.0256%" height="15" fill="rgb(232,110,51)" fg:x="377" fg:w="4"/><text x="2.6279%" y="767.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::basic_filebuf (9 samples, 0.06%)</title><rect x="2.4072%" y="773" width="0.0576%" height="15" fill="rgb(232,91,52)" fg:x="376" fg:w="9"/><text x="2.6215%" y="783.50"></text></g><g><title>std::use_facet&lt;std::codecvt&lt;char, char, __mbstate_t&gt; &gt; (3 samples, 0.02%)</title><rect x="2.4456%" y="757" width="0.0192%" height="15" fill="rgb(221,191,45)" fg:x="382" fg:w="3"/><text x="2.6599%" y="767.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="2.4776%" y="725" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="387" fg:w="4"/><text x="2.6919%" y="735.50"></text></g><g><title>_IO_link_in (4 samples, 0.03%)</title><rect x="2.4776%" y="709" width="0.0256%" height="15" fill="rgb(235,219,6)" fg:x="387" fg:w="4"/><text x="2.6919%" y="719.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="2.5096%" y="709" width="0.0192%" height="15" fill="rgb(247,113,52)" fg:x="392" fg:w="3"/><text x="2.7239%" y="719.50"></text></g><g><title>__alloc_fd (2 samples, 0.01%)</title><rect x="2.5544%" y="613" width="0.0128%" height="15" fill="rgb(234,27,45)" fg:x="399" fg:w="2"/><text x="2.7687%" y="623.50"></text></g><g><title>build_open_flags (4 samples, 0.03%)</title><rect x="2.5672%" y="613" width="0.0256%" height="15" fill="rgb(212,226,28)" fg:x="401" fg:w="4"/><text x="2.7815%" y="623.50"></text></g><g><title>__slab_alloc (2 samples, 0.01%)</title><rect x="2.6440%" y="533" width="0.0128%" height="15" fill="rgb(229,140,31)" fg:x="413" fg:w="2"/><text x="2.8583%" y="543.50"></text></g><g><title>memcg_slab_post_alloc_hook (4 samples, 0.03%)</title><rect x="2.6569%" y="533" width="0.0256%" height="15" fill="rgb(242,216,24)" fg:x="415" fg:w="4"/><text x="2.8711%" y="543.50"></text></g><g><title>kmem_cache_alloc (10 samples, 0.06%)</title><rect x="2.6376%" y="549" width="0.0640%" height="15" fill="rgb(223,51,51)" fg:x="412" fg:w="10"/><text x="2.8519%" y="559.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.01%)</title><rect x="2.6889%" y="533" width="0.0128%" height="15" fill="rgb(212,11,50)" fg:x="420" fg:w="2"/><text x="2.9031%" y="543.50"></text></g><g><title>apparmor_file_alloc_security (2 samples, 0.01%)</title><rect x="2.7081%" y="533" width="0.0128%" height="15" fill="rgb(239,6,47)" fg:x="423" fg:w="2"/><text x="2.9224%" y="543.50"></text></g><g><title>__alloc_file (15 samples, 0.10%)</title><rect x="2.6376%" y="565" width="0.0960%" height="15" fill="rgb(208,34,24)" fg:x="412" fg:w="15"/><text x="2.8519%" y="575.50"></text></g><g><title>security_file_alloc (5 samples, 0.03%)</title><rect x="2.7017%" y="549" width="0.0320%" height="15" fill="rgb(251,33,6)" fg:x="422" fg:w="5"/><text x="2.9160%" y="559.50"></text></g><g><title>kmem_cache_alloc (2 samples, 0.01%)</title><rect x="2.7209%" y="533" width="0.0128%" height="15" fill="rgb(223,51,51)" fg:x="425" fg:w="2"/><text x="2.9352%" y="543.50"></text></g><g><title>alloc_empty_file (16 samples, 0.10%)</title><rect x="2.6376%" y="581" width="0.1024%" height="15" fill="rgb(242,156,16)" fg:x="412" fg:w="16"/><text x="2.8519%" y="591.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="2.7657%" y="565" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="432" fg:w="2"/><text x="2.9800%" y="575.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="2.7657%" y="549" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="432" fg:w="2"/><text x="2.9800%" y="559.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="2.7657%" y="533" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="432" fg:w="2"/><text x="2.9800%" y="543.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="2.7657%" y="517" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="432" fg:w="2"/><text x="2.9800%" y="527.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="2.7657%" y="501" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="432" fg:w="2"/><text x="2.9800%" y="511.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="2.7657%" y="485" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="432" fg:w="2"/><text x="2.9800%" y="495.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="2.7657%" y="469" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="432" fg:w="2"/><text x="2.9800%" y="479.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="2.7657%" y="453" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="432" fg:w="2"/><text x="2.9800%" y="463.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="2.7657%" y="437" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="432" fg:w="2"/><text x="2.9800%" y="447.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="2.7657%" y="421" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="432" fg:w="2"/><text x="2.9800%" y="431.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="2.7657%" y="405" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="432" fg:w="2"/><text x="2.9800%" y="415.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="2.7657%" y="389" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="432" fg:w="2"/><text x="2.9800%" y="399.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="2.7657%" y="373" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="432" fg:w="2"/><text x="2.9800%" y="383.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="2.7657%" y="357" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="432" fg:w="2"/><text x="2.9800%" y="367.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="2.7657%" y="341" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="432" fg:w="2"/><text x="2.9800%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="2.7657%" y="325" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="432" fg:w="2"/><text x="2.9800%" y="335.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="2.7657%" y="309" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="432" fg:w="2"/><text x="2.9800%" y="319.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="2.7657%" y="293" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="432" fg:w="2"/><text x="2.9800%" y="303.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="2.7657%" y="277" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="432" fg:w="2"/><text x="2.9800%" y="287.50"></text></g><g><title>dquot_file_open (2 samples, 0.01%)</title><rect x="2.7785%" y="565" width="0.0128%" height="15" fill="rgb(207,110,7)" fg:x="434" fg:w="2"/><text x="2.9928%" y="575.50"></text></g><g><title>errseq_sample (4 samples, 0.03%)</title><rect x="2.7913%" y="565" width="0.0256%" height="15" fill="rgb(242,103,10)" fg:x="436" fg:w="4"/><text x="3.0056%" y="575.50"></text></g><g><title>fscrypt_file_open (5 samples, 0.03%)</title><rect x="2.8233%" y="549" width="0.0320%" height="15" fill="rgb(235,1,22)" fg:x="441" fg:w="5"/><text x="3.0376%" y="559.50"></text></g><g><title>dget_parent (2 samples, 0.01%)</title><rect x="2.8425%" y="533" width="0.0128%" height="15" fill="rgb(239,199,25)" fg:x="444" fg:w="2"/><text x="3.0568%" y="543.50"></text></g><g><title>ext4_file_open (7 samples, 0.04%)</title><rect x="2.8169%" y="565" width="0.0448%" height="15" fill="rgb(214,87,30)" fg:x="440" fg:w="7"/><text x="3.0312%" y="575.50"></text></g><g><title>__srcu_read_lock (4 samples, 0.03%)</title><rect x="2.9001%" y="533" width="0.0256%" height="15" fill="rgb(223,99,5)" fg:x="453" fg:w="4"/><text x="3.1144%" y="543.50"></text></g><g><title>security_file_open (10 samples, 0.06%)</title><rect x="2.8681%" y="565" width="0.0640%" height="15" fill="rgb(210,168,47)" fg:x="448" fg:w="10"/><text x="3.0824%" y="575.50"></text></g><g><title>tomoyo_check_open_permission (8 samples, 0.05%)</title><rect x="2.8809%" y="549" width="0.0512%" height="15" fill="rgb(246,102,49)" fg:x="450" fg:w="8"/><text x="3.0952%" y="559.50"></text></g><g><title>do_dentry_open (31 samples, 0.20%)</title><rect x="2.7401%" y="581" width="0.1985%" height="15" fill="rgb(251,170,35)" fg:x="428" fg:w="31"/><text x="2.9544%" y="591.50"></text></g><g><title>inode_permission.part.0 (2 samples, 0.01%)</title><rect x="2.9513%" y="565" width="0.0128%" height="15" fill="rgb(226,127,45)" fg:x="461" fg:w="2"/><text x="3.1656%" y="575.50"></text></g><g><title>link_path_walk.part.0 (8 samples, 0.05%)</title><rect x="2.9385%" y="581" width="0.0512%" height="15" fill="rgb(224,50,14)" fg:x="459" fg:w="8"/><text x="3.1528%" y="591.50"></text></g><g><title>walk_component (4 samples, 0.03%)</title><rect x="2.9641%" y="565" width="0.0256%" height="15" fill="rgb(250,91,19)" fg:x="463" fg:w="4"/><text x="3.1784%" y="575.50"></text></g><g><title>lookup_fast (3 samples, 0.02%)</title><rect x="2.9706%" y="549" width="0.0192%" height="15" fill="rgb(223,109,4)" fg:x="464" fg:w="3"/><text x="3.1848%" y="559.50"></text></g><g><title>__d_lookup_rcu (3 samples, 0.02%)</title><rect x="2.9706%" y="533" width="0.0192%" height="15" fill="rgb(227,66,48)" fg:x="464" fg:w="3"/><text x="3.1848%" y="543.50"></text></g><g><title>do_filp_open (63 samples, 0.40%)</title><rect x="2.5928%" y="613" width="0.4033%" height="15" fill="rgb(219,26,10)" fg:x="405" fg:w="63"/><text x="2.8071%" y="623.50"></text></g><g><title>path_openat (58 samples, 0.37%)</title><rect x="2.6248%" y="597" width="0.3713%" height="15" fill="rgb(228,25,37)" fg:x="410" fg:w="58"/><text x="2.8391%" y="607.50"></text></g><g><title>kmem_cache_alloc (2 samples, 0.01%)</title><rect x="3.0026%" y="597" width="0.0128%" height="15" fill="rgb(223,51,51)" fg:x="469" fg:w="2"/><text x="3.2168%" y="607.50"></text></g><g><title>getname_flags.part.0 (3 samples, 0.02%)</title><rect x="3.0026%" y="613" width="0.0192%" height="15" fill="rgb(214,38,37)" fg:x="469" fg:w="3"/><text x="3.2168%" y="623.50"></text></g><g><title>do_syscall_64 (78 samples, 0.50%)</title><rect x="2.5416%" y="661" width="0.4994%" height="15" fill="rgb(220,74,14)" fg:x="397" fg:w="78"/><text x="2.7559%" y="671.50"></text></g><g><title>__x64_sys_openat (77 samples, 0.49%)</title><rect x="2.5480%" y="645" width="0.4930%" height="15" fill="rgb(236,228,31)" fg:x="398" fg:w="77"/><text x="2.7623%" y="655.50"></text></g><g><title>do_sys_openat2 (77 samples, 0.49%)</title><rect x="2.5480%" y="629" width="0.4930%" height="15" fill="rgb(208,111,23)" fg:x="398" fg:w="77"/><text x="2.7623%" y="639.50"></text></g><g><title>kmem_cache_free (3 samples, 0.02%)</title><rect x="3.0218%" y="613" width="0.0192%" height="15" fill="rgb(225,137,16)" fg:x="472" fg:w="3"/><text x="3.2361%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (79 samples, 0.51%)</title><rect x="2.5416%" y="677" width="0.5058%" height="15" fill="rgb(205,226,15)" fg:x="397" fg:w="79"/><text x="2.7559%" y="687.50"></text></g><g><title>_IO_file_fopen (86 samples, 0.55%)</title><rect x="2.5032%" y="725" width="0.5506%" height="15" fill="rgb(230,71,35)" fg:x="391" fg:w="86"/><text x="2.7175%" y="735.50"></text></g><g><title>_IO_file_open (82 samples, 0.52%)</title><rect x="2.5288%" y="709" width="0.5250%" height="15" fill="rgb(224,210,15)" fg:x="395" fg:w="82"/><text x="2.7431%" y="719.50"></text></g><g><title>__open64 (81 samples, 0.52%)</title><rect x="2.5352%" y="693" width="0.5186%" height="15" fill="rgb(239,156,4)" fg:x="396" fg:w="81"/><text x="2.7495%" y="703.50"></text></g><g><title>[libc-2.31.so] (96 samples, 0.61%)</title><rect x="2.4776%" y="741" width="0.6146%" height="15" fill="rgb(247,113,52)" fg:x="387" fg:w="96"/><text x="2.6919%" y="751.50"></text></g><g><title>__libc_malloc (6 samples, 0.04%)</title><rect x="3.0538%" y="725" width="0.0384%" height="15" fill="rgb(232,24,50)" fg:x="477" fg:w="6"/><text x="3.2681%" y="735.50"></text></g><g><title>std::__basic_file&lt;char&gt;::open (99 samples, 0.63%)</title><rect x="2.4712%" y="757" width="0.6338%" height="15" fill="rgb(253,221,0)" fg:x="386" fg:w="99"/><text x="2.6855%" y="767.50"></text></g><g><title>operator new (12 samples, 0.08%)</title><rect x="3.1178%" y="741" width="0.0768%" height="15" fill="rgb(214,91,1)" fg:x="487" fg:w="12"/><text x="3.3321%" y="751.50"></text></g><g><title>__libc_malloc (12 samples, 0.08%)</title><rect x="3.1178%" y="725" width="0.0768%" height="15" fill="rgb(232,24,50)" fg:x="487" fg:w="12"/><text x="3.3321%" y="735.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.07%)</title><rect x="3.1242%" y="709" width="0.0704%" height="15" fill="rgb(247,113,52)" fg:x="488" fg:w="11"/><text x="3.3385%" y="719.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (115 samples, 0.74%)</title><rect x="2.4648%" y="773" width="0.7362%" height="15" fill="rgb(232,25,18)" fg:x="385" fg:w="115"/><text x="2.6791%" y="783.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (15 samples, 0.10%)</title><rect x="3.1050%" y="757" width="0.0960%" height="15" fill="rgb(231,75,9)" fg:x="485" fg:w="15"/><text x="3.3193%" y="767.50"></text></g><g><title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ifstream (127 samples, 0.81%)</title><rect x="2.3944%" y="789" width="0.8131%" height="15" fill="rgb(230,170,3)" fg:x="374" fg:w="127"/><text x="2.6087%" y="799.50"></text></g><g><title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="3.2330%" y="725" width="0.0128%" height="15" fill="rgb(243,107,3)" fg:x="505" fg:w="2"/><text x="3.4473%" y="735.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (4 samples, 0.03%)</title><rect x="3.2330%" y="741" width="0.0256%" height="15" fill="rgb(237,227,49)" fg:x="505" fg:w="4"/><text x="3.4473%" y="751.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (5 samples, 0.03%)</title><rect x="3.2330%" y="757" width="0.0320%" height="15" fill="rgb(223,206,25)" fg:x="505" fg:w="5"/><text x="3.4473%" y="767.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (8 samples, 0.05%)</title><rect x="3.2202%" y="773" width="0.0512%" height="15" fill="rgb(230,13,26)" fg:x="503" fg:w="8"/><text x="3.4345%" y="783.50"></text></g><g><title>std::ostream::_M_insert&lt;unsigned long&gt; (2 samples, 0.01%)</title><rect x="3.2843%" y="773" width="0.0128%" height="15" fill="rgb(226,22,13)" fg:x="513" fg:w="2"/><text x="3.4985%" y="783.50"></text></g><g><title>Http::processFile (444 samples, 2.84%)</title><rect x="0.4609%" y="805" width="2.8425%" height="15" fill="rgb(253,96,38)" fg:x="72" fg:w="444"/><text x="0.6752%" y="815.50">Htt..</text></g><g><title>toString&lt;unsigned long&gt; (13 samples, 0.08%)</title><rect x="3.2202%" y="789" width="0.0832%" height="15" fill="rgb(226,165,29)" fg:x="503" fg:w="13"/><text x="3.4345%" y="799.50"></text></g><g><title>Uri::pathOutOfBound (3 samples, 0.02%)</title><rect x="3.3163%" y="789" width="0.0192%" height="15" fill="rgb(218,183,48)" fg:x="518" fg:w="3"/><text x="3.5305%" y="799.50"></text></g><g><title>Request::isValid (7 samples, 0.04%)</title><rect x="3.3099%" y="805" width="0.0448%" height="15" fill="rgb(210,87,46)" fg:x="517" fg:w="7"/><text x="3.5241%" y="815.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="3.3419%" y="789" width="0.0128%" height="15" fill="rgb(251,39,6)" fg:x="522" fg:w="2"/><text x="3.5562%" y="799.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="3.3419%" y="773" width="0.0128%" height="15" fill="rgb(215,30,0)" fg:x="522" fg:w="2"/><text x="3.5562%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (2 samples, 0.01%)</title><rect x="3.3419%" y="757" width="0.0128%" height="15" fill="rgb(243,60,52)" fg:x="522" fg:w="2"/><text x="3.5562%" y="767.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="3.5595%" y="741" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="556" fg:w="4"/><text x="3.7738%" y="751.50"></text></g><g><title>__strtoull_internal (8 samples, 0.05%)</title><rect x="3.5851%" y="741" width="0.0512%" height="15" fill="rgb(240,161,22)" fg:x="560" fg:w="8"/><text x="3.7994%" y="751.50"></text></g><g><title>_IO_sscanf (40 samples, 0.26%)</title><rect x="3.4059%" y="773" width="0.2561%" height="15" fill="rgb(247,41,21)" fg:x="532" fg:w="40"/><text x="3.6202%" y="783.50"></text></g><g><title>[libc-2.31.so] (38 samples, 0.24%)</title><rect x="3.4187%" y="757" width="0.2433%" height="15" fill="rgb(247,113,52)" fg:x="534" fg:w="38"/><text x="3.6330%" y="767.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="3.6428%" y="741" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="569" fg:w="3"/><text x="3.8571%" y="751.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="3.6428%" y="725" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="569" fg:w="3"/><text x="3.8571%" y="735.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="3.6428%" y="709" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="569" fg:w="3"/><text x="3.8571%" y="719.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="3.6428%" y="693" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="569" fg:w="3"/><text x="3.8571%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="3.6428%" y="677" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="569" fg:w="3"/><text x="3.8571%" y="687.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="3.6428%" y="661" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="569" fg:w="3"/><text x="3.8571%" y="671.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="3.6492%" y="645" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="570" fg:w="2"/><text x="3.8635%" y="655.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (4 samples, 0.03%)</title><rect x="3.6812%" y="773" width="0.0256%" height="15" fill="rgb(247,126,12)" fg:x="575" fg:w="4"/><text x="3.8955%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.01%)</title><rect x="3.6940%" y="757" width="0.0128%" height="15" fill="rgb(250,46,35)" fg:x="577" fg:w="2"/><text x="3.9083%" y="767.50"></text></g><g><title>percentDecode (54 samples, 0.35%)</title><rect x="3.3675%" y="789" width="0.3457%" height="15" fill="rgb(216,181,17)" fg:x="526" fg:w="54"/><text x="3.5818%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.01%)</title><rect x="3.7132%" y="789" width="0.0128%" height="15" fill="rgb(233,7,30)" fg:x="580" fg:w="2"/><text x="3.9275%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.01%)</title><rect x="3.7132%" y="773" width="0.0128%" height="15" fill="rgb(223,211,19)" fg:x="580" fg:w="2"/><text x="3.9275%" y="783.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="3.7132%" y="757" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="580" fg:w="2"/><text x="3.9275%" y="767.50"></text></g><g><title>Uri::decode (59 samples, 0.38%)</title><rect x="3.3547%" y="805" width="0.3777%" height="15" fill="rgb(233,44,47)" fg:x="524" fg:w="59"/><text x="3.5690%" y="815.50"></text></g><g><title>Context::exists (2 samples, 0.01%)</title><rect x="3.7580%" y="773" width="0.0128%" height="15" fill="rgb(247,57,9)" fg:x="587" fg:w="2"/><text x="3.9723%" y="783.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="3.7580%" y="757" width="0.0128%" height="15" fill="rgb(242,154,52)" fg:x="587" fg:w="2"/><text x="3.9723%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="3.7580%" y="741" width="0.0128%" height="15" fill="rgb(207,227,6)" fg:x="587" fg:w="2"/><text x="3.9723%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_lower_bound (2 samples, 0.01%)</title><rect x="3.7580%" y="725" width="0.0128%" height="15" fill="rgb(246,72,10)" fg:x="587" fg:w="2"/><text x="3.9723%" y="735.50"></text></g><g><title>VirtualHost::getAddress[abi:cxx11] (9 samples, 0.06%)</title><rect x="3.7324%" y="805" width="0.0576%" height="15" fill="rgb(210,66,49)" fg:x="583" fg:w="9"/><text x="3.9467%" y="815.50"></text></g><g><title>Context::getDirective (7 samples, 0.04%)</title><rect x="3.7452%" y="789" width="0.0448%" height="15" fill="rgb(251,123,38)" fg:x="585" fg:w="7"/><text x="3.9595%" y="799.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator[] (3 samples, 0.02%)</title><rect x="3.7708%" y="773" width="0.0192%" height="15" fill="rgb(241,90,24)" fg:x="589" fg:w="3"/><text x="3.9851%" y="783.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::lower_bound (3 samples, 0.02%)</title><rect x="3.7708%" y="757" width="0.0192%" height="15" fill="rgb(236,33,33)" fg:x="589" fg:w="3"/><text x="3.9851%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::lower_bound (3 samples, 0.02%)</title><rect x="3.7708%" y="741" width="0.0192%" height="15" fill="rgb(234,73,1)" fg:x="589" fg:w="3"/><text x="3.9851%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (3 samples, 0.02%)</title><rect x="3.7708%" y="725" width="0.0192%" height="15" fill="rgb(237,13,3)" fg:x="589" fg:w="3"/><text x="3.9851%" y="735.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2 samples, 0.01%)</title><rect x="3.7772%" y="709" width="0.0128%" height="15" fill="rgb(228,56,32)" fg:x="590" fg:w="2"/><text x="3.9915%" y="719.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="3.7772%" y="693" width="0.0128%" height="15" fill="rgb(241,103,2)" fg:x="590" fg:w="2"/><text x="3.9915%" y="703.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.01%)</title><rect x="3.7772%" y="677" width="0.0128%" height="15" fill="rgb(212,2,49)" fg:x="590" fg:w="2"/><text x="3.9915%" y="687.50"></text></g><g><title>Context::exists (4 samples, 0.03%)</title><rect x="3.7964%" y="789" width="0.0256%" height="15" fill="rgb(247,57,9)" fg:x="593" fg:w="4"/><text x="4.0107%" y="799.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (4 samples, 0.03%)</title><rect x="3.7964%" y="773" width="0.0256%" height="15" fill="rgb(242,154,52)" fg:x="593" fg:w="4"/><text x="4.0107%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (4 samples, 0.03%)</title><rect x="3.7964%" y="757" width="0.0256%" height="15" fill="rgb(207,227,6)" fg:x="593" fg:w="4"/><text x="4.0107%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_lower_bound (4 samples, 0.03%)</title><rect x="3.7964%" y="741" width="0.0256%" height="15" fill="rgb(246,72,10)" fg:x="593" fg:w="4"/><text x="4.0107%" y="751.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2 samples, 0.01%)</title><rect x="3.8092%" y="725" width="0.0128%" height="15" fill="rgb(228,56,32)" fg:x="595" fg:w="2"/><text x="4.0235%" y="735.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="3.8092%" y="709" width="0.0128%" height="15" fill="rgb(241,103,2)" fg:x="595" fg:w="2"/><text x="4.0235%" y="719.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.01%)</title><rect x="3.8092%" y="693" width="0.0128%" height="15" fill="rgb(212,2,49)" fg:x="595" fg:w="2"/><text x="4.0235%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt; &gt;::_S_key (3 samples, 0.02%)</title><rect x="3.8540%" y="709" width="0.0192%" height="15" fill="rgb(230,43,3)" fg:x="602" fg:w="3"/><text x="4.0683%" y="719.50"></text></g><g><title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt;::_M_valptr (3 samples, 0.02%)</title><rect x="3.8540%" y="693" width="0.0192%" height="15" fill="rgb(253,94,4)" fg:x="602" fg:w="3"/><text x="4.0683%" y="703.50"></text></g><g><title>Context::getContext (14 samples, 0.09%)</title><rect x="3.8284%" y="789" width="0.0896%" height="15" fill="rgb(240,0,33)" fg:x="598" fg:w="14"/><text x="4.0427%" y="799.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt; &gt;::operator[] (13 samples, 0.08%)</title><rect x="3.8348%" y="773" width="0.0832%" height="15" fill="rgb(226,141,48)" fg:x="599" fg:w="13"/><text x="4.0491%" y="783.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt; &gt;::lower_bound (12 samples, 0.08%)</title><rect x="3.8412%" y="757" width="0.0768%" height="15" fill="rgb(225,35,17)" fg:x="600" fg:w="12"/><text x="4.0555%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt; &gt;::lower_bound (10 samples, 0.06%)</title><rect x="3.8540%" y="741" width="0.0640%" height="15" fill="rgb(208,224,50)" fg:x="602" fg:w="10"/><text x="4.0683%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (10 samples, 0.06%)</title><rect x="3.8540%" y="725" width="0.0640%" height="15" fill="rgb(226,133,54)" fg:x="602" fg:w="10"/><text x="4.0683%" y="735.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (7 samples, 0.04%)</title><rect x="3.8732%" y="709" width="0.0448%" height="15" fill="rgb(228,56,32)" fg:x="605" fg:w="7"/><text x="4.0875%" y="719.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (7 samples, 0.04%)</title><rect x="3.8732%" y="693" width="0.0448%" height="15" fill="rgb(241,103,2)" fg:x="605" fg:w="7"/><text x="4.0875%" y="703.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (7 samples, 0.04%)</title><rect x="3.8732%" y="677" width="0.0448%" height="15" fill="rgb(212,2,49)" fg:x="605" fg:w="7"/><text x="4.0875%" y="687.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="3.8860%" y="661" width="0.0320%" height="15" fill="rgb(247,113,52)" fg:x="607" fg:w="5"/><text x="4.1003%" y="671.50"></text></g><g><title>endsWith (3 samples, 0.02%)</title><rect x="3.9245%" y="789" width="0.0192%" height="15" fill="rgb(245,132,52)" fg:x="613" fg:w="3"/><text x="4.1387%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2 samples, 0.01%)</title><rect x="3.9309%" y="773" width="0.0128%" height="15" fill="rgb(239,29,9)" fg:x="614" fg:w="2"/><text x="4.1451%" y="783.50"></text></g><g><title>startsWith (2 samples, 0.01%)</title><rect x="3.9437%" y="789" width="0.0128%" height="15" fill="rgb(208,27,37)" fg:x="616" fg:w="2"/><text x="4.1579%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.02%)</title><rect x="3.9629%" y="789" width="0.0192%" height="15" fill="rgb(240,176,52)" fg:x="619" fg:w="3"/><text x="4.1772%" y="799.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="3.9885%" y="773" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="623" fg:w="4"/><text x="4.2028%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (8 samples, 0.05%)</title><rect x="3.9821%" y="789" width="0.0512%" height="15" fill="rgb(254,182,12)" fg:x="622" fg:w="8"/><text x="4.1964%" y="799.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="4.0781%" y="773" width="0.0192%" height="15" fill="rgb(247,113,52)" fg:x="637" fg:w="3"/><text x="4.2924%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (11 samples, 0.07%)</title><rect x="4.0333%" y="789" width="0.0704%" height="15" fill="rgb(244,92,22)" fg:x="630" fg:w="11"/><text x="4.2476%" y="799.50"></text></g><g><title>VirtualHost::matchLocation (52 samples, 0.33%)</title><rect x="3.7900%" y="805" width="0.3329%" height="15" fill="rgb(243,79,28)" fg:x="592" fg:w="52"/><text x="4.0043%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (6 samples, 0.04%)</title><rect x="4.1229%" y="805" width="0.0384%" height="15" fill="rgb(216,50,33)" fg:x="644" fg:w="6"/><text x="4.3372%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (5 samples, 0.03%)</title><rect x="4.1293%" y="789" width="0.0320%" height="15" fill="rgb(250,46,35)" fg:x="645" fg:w="5"/><text x="4.3436%" y="799.50"></text></g><g><title>operator new (4 samples, 0.03%)</title><rect x="4.1357%" y="773" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="646" fg:w="4"/><text x="4.3500%" y="783.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="4.1421%" y="757" width="0.0192%" height="15" fill="rgb(232,24,50)" fg:x="647" fg:w="3"/><text x="4.3564%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.01%)</title><rect x="4.1805%" y="789" width="0.0128%" height="15" fill="rgb(216,50,33)" fg:x="653" fg:w="2"/><text x="4.3948%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.01%)</title><rect x="4.1805%" y="773" width="0.0128%" height="15" fill="rgb(250,46,35)" fg:x="653" fg:w="2"/><text x="4.3948%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.03%)</title><rect x="4.1933%" y="789" width="0.0256%" height="15" fill="rgb(254,182,12)" fg:x="655" fg:w="4"/><text x="4.4076%" y="799.50"></text></g><g><title>std::distance&lt;char*&gt; (2 samples, 0.01%)</title><rect x="4.2061%" y="773" width="0.0128%" height="15" fill="rgb(213,138,18)" fg:x="657" fg:w="2"/><text x="4.4204%" y="783.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (7 samples, 0.04%)</title><rect x="4.1805%" y="805" width="0.0448%" height="15" fill="rgb(226,32,40)" fg:x="653" fg:w="7"/><text x="4.3948%" y="815.50"></text></g><g><title>Http::processRequest (625 samples, 4.00%)</title><rect x="0.2305%" y="821" width="4.0013%" height="15" fill="rgb(223,169,38)" fg:x="36" fg:w="625"/><text x="0.4448%" y="831.50">Http:..</text></g><g><title>__gnu_cxx::__normal_iterator&lt;pollfd*, std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt; &gt;::operator++ (2 samples, 0.01%)</title><rect x="4.2510%" y="773" width="0.0128%" height="15" fill="rgb(241,80,15)" fg:x="664" fg:w="2"/><text x="4.4652%" y="783.50"></text></g><g><title>Poll::addPollEvent (6 samples, 0.04%)</title><rect x="4.2446%" y="789" width="0.0384%" height="15" fill="rgb(243,35,49)" fg:x="663" fg:w="6"/><text x="4.4588%" y="799.50"></text></g><g><title>AConnection::send (9 samples, 0.06%)</title><rect x="4.2382%" y="805" width="0.0576%" height="15" fill="rgb(252,37,44)" fg:x="662" fg:w="9"/><text x="4.4524%" y="815.50"></text></g><g><title>__fdget_pos (2 samples, 0.01%)</title><rect x="4.3278%" y="709" width="0.0128%" height="15" fill="rgb(205,61,45)" fg:x="676" fg:w="2"/><text x="4.5421%" y="719.50"></text></g><g><title>__fget_light (2 samples, 0.01%)</title><rect x="4.3278%" y="693" width="0.0128%" height="15" fill="rgb(243,103,32)" fg:x="676" fg:w="2"/><text x="4.5421%" y="703.50"></text></g><g><title>__fsnotify_parent (2 samples, 0.01%)</title><rect x="4.3406%" y="693" width="0.0128%" height="15" fill="rgb(232,3,50)" fg:x="678" fg:w="2"/><text x="4.5549%" y="703.50"></text></g><g><title>file_update_time (5 samples, 0.03%)</title><rect x="4.3726%" y="661" width="0.0320%" height="15" fill="rgb(237,12,27)" fg:x="683" fg:w="5"/><text x="4.5869%" y="671.50"></text></g><g><title>generic_update_time (4 samples, 0.03%)</title><rect x="4.3790%" y="645" width="0.0256%" height="15" fill="rgb(212,0,0)" fg:x="684" fg:w="4"/><text x="4.5933%" y="655.50"></text></g><g><title>__mark_inode_dirty (3 samples, 0.02%)</title><rect x="4.3854%" y="629" width="0.0192%" height="15" fill="rgb(212,91,54)" fg:x="685" fg:w="3"/><text x="4.5997%" y="639.50"></text></g><g><title>ext4_dirty_inode (2 samples, 0.01%)</title><rect x="4.3918%" y="613" width="0.0128%" height="15" fill="rgb(235,194,15)" fg:x="686" fg:w="2"/><text x="4.6061%" y="623.50"></text></g><g><title>__ext4_mark_inode_dirty (2 samples, 0.01%)</title><rect x="4.3918%" y="597" width="0.0128%" height="15" fill="rgb(250,159,10)" fg:x="686" fg:w="2"/><text x="4.6061%" y="607.50"></text></g><g><title>ext4_reserve_inode_write (2 samples, 0.01%)</title><rect x="4.3918%" y="581" width="0.0128%" height="15" fill="rgb(232,18,0)" fg:x="686" fg:w="2"/><text x="4.6061%" y="591.50"></text></g><g><title>balance_dirty_pages_ratelimited (5 samples, 0.03%)</title><rect x="4.4046%" y="645" width="0.0320%" height="15" fill="rgb(221,121,40)" fg:x="688" fg:w="5"/><text x="4.6189%" y="655.50"></text></g><g><title>__ext4_journal_start_sb (7 samples, 0.04%)</title><rect x="4.4366%" y="629" width="0.0448%" height="15" fill="rgb(251,66,45)" fg:x="693" fg:w="7"/><text x="4.6509%" y="639.50"></text></g><g><title>jbd2__journal_start (6 samples, 0.04%)</title><rect x="4.4430%" y="613" width="0.0384%" height="15" fill="rgb(212,174,30)" fg:x="694" fg:w="6"/><text x="4.6573%" y="623.50"></text></g><g><title>kmem_cache_alloc (4 samples, 0.03%)</title><rect x="4.4558%" y="597" width="0.0256%" height="15" fill="rgb(223,51,51)" fg:x="696" fg:w="4"/><text x="4.6701%" y="607.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (3 samples, 0.02%)</title><rect x="4.4622%" y="581" width="0.0192%" height="15" fill="rgb(212,11,50)" fg:x="697" fg:w="3"/><text x="4.6765%" y="591.50"></text></g><g><title>ext4_da_reserve_space (2 samples, 0.01%)</title><rect x="4.4942%" y="597" width="0.0128%" height="15" fill="rgb(253,48,44)" fg:x="702" fg:w="2"/><text x="4.7085%" y="607.50"></text></g><g><title>ext4_es_lookup_extent (2 samples, 0.01%)</title><rect x="4.5134%" y="597" width="0.0128%" height="15" fill="rgb(215,19,43)" fg:x="705" fg:w="2"/><text x="4.7277%" y="607.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="4.5134%" y="581" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="705" fg:w="2"/><text x="4.7277%" y="591.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="4.5134%" y="565" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="705" fg:w="2"/><text x="4.7277%" y="575.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="4.5134%" y="549" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="705" fg:w="2"/><text x="4.7277%" y="559.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="4.5134%" y="533" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="705" fg:w="2"/><text x="4.7277%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="4.5134%" y="517" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="705" fg:w="2"/><text x="4.7277%" y="527.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="4.5134%" y="501" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="705" fg:w="2"/><text x="4.7277%" y="511.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="4.5134%" y="485" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="705" fg:w="2"/><text x="4.7277%" y="495.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="4.5134%" y="469" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="705" fg:w="2"/><text x="4.7277%" y="479.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="4.5134%" y="453" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="705" fg:w="2"/><text x="4.7277%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="4.5134%" y="437" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="705" fg:w="2"/><text x="4.7277%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="4.5134%" y="421" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="705" fg:w="2"/><text x="4.7277%" y="431.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="4.5134%" y="405" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="705" fg:w="2"/><text x="4.7277%" y="415.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="4.5134%" y="389" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="705" fg:w="2"/><text x="4.7277%" y="399.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="4.5134%" y="373" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="705" fg:w="2"/><text x="4.7277%" y="383.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="4.5134%" y="357" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="705" fg:w="2"/><text x="4.7277%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="4.5134%" y="341" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="705" fg:w="2"/><text x="4.7277%" y="351.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="4.5134%" y="325" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="705" fg:w="2"/><text x="4.7277%" y="335.50"></text></g><g><title>ext4_block_write_begin (8 samples, 0.05%)</title><rect x="4.4814%" y="629" width="0.0512%" height="15" fill="rgb(218,63,41)" fg:x="700" fg:w="8"/><text x="4.6957%" y="639.50"></text></g><g><title>ext4_da_get_block_prep (6 samples, 0.04%)</title><rect x="4.4942%" y="613" width="0.0384%" height="15" fill="rgb(235,98,3)" fg:x="702" fg:w="6"/><text x="4.7085%" y="623.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.02%)</title><rect x="4.5519%" y="597" width="0.0192%" height="15" fill="rgb(245,49,10)" fg:x="711" fg:w="3"/><text x="4.7661%" y="607.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.02%)</title><rect x="4.5519%" y="581" width="0.0192%" height="15" fill="rgb(246,35,53)" fg:x="711" fg:w="3"/><text x="4.7661%" y="591.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="4.5711%" y="565" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="714" fg:w="2"/><text x="4.7853%" y="575.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="4.5711%" y="549" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="714" fg:w="2"/><text x="4.7853%" y="559.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="4.5711%" y="533" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="714" fg:w="2"/><text x="4.7853%" y="543.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="4.5711%" y="517" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="714" fg:w="2"/><text x="4.7853%" y="527.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="4.5711%" y="501" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="714" fg:w="2"/><text x="4.7853%" y="511.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="4.5711%" y="485" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="714" fg:w="2"/><text x="4.7853%" y="495.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="4.5711%" y="469" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="714" fg:w="2"/><text x="4.7853%" y="479.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="4.5711%" y="453" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="714" fg:w="2"/><text x="4.7853%" y="463.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="4.5711%" y="437" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="714" fg:w="2"/><text x="4.7853%" y="447.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="4.5711%" y="421" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="714" fg:w="2"/><text x="4.7853%" y="431.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="4.5711%" y="405" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="714" fg:w="2"/><text x="4.7853%" y="415.50"></text></g><g><title>__add_to_page_cache_locked (3 samples, 0.02%)</title><rect x="4.5711%" y="581" width="0.0192%" height="15" fill="rgb(229,179,48)" fg:x="714" fg:w="3"/><text x="4.7853%" y="591.50"></text></g><g><title>pagecache_get_page (9 samples, 0.06%)</title><rect x="4.5391%" y="613" width="0.0576%" height="15" fill="rgb(254,146,25)" fg:x="709" fg:w="9"/><text x="4.7533%" y="623.50"></text></g><g><title>add_to_page_cache_lru (4 samples, 0.03%)</title><rect x="4.5711%" y="597" width="0.0256%" height="15" fill="rgb(223,55,45)" fg:x="714" fg:w="4"/><text x="4.7853%" y="607.50"></text></g><g><title>grab_cache_page_write_begin (11 samples, 0.07%)</title><rect x="4.5327%" y="629" width="0.0704%" height="15" fill="rgb(221,143,40)" fg:x="708" fg:w="11"/><text x="4.7469%" y="639.50"></text></g><g><title>ext4_da_write_begin (27 samples, 0.17%)</title><rect x="4.4366%" y="645" width="0.1729%" height="15" fill="rgb(235,31,43)" fg:x="693" fg:w="27"/><text x="4.6509%" y="655.50"></text></g><g><title>__ext4_journal_stop (2 samples, 0.01%)</title><rect x="4.6159%" y="629" width="0.0128%" height="15" fill="rgb(225,40,54)" fg:x="721" fg:w="2"/><text x="4.8302%" y="639.50"></text></g><g><title>jbd2_journal_stop (2 samples, 0.01%)</title><rect x="4.6159%" y="613" width="0.0128%" height="15" fill="rgb(229,91,7)" fg:x="721" fg:w="2"/><text x="4.8302%" y="623.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (5 samples, 0.03%)</title><rect x="4.6287%" y="613" width="0.0320%" height="15" fill="rgb(249,65,48)" fg:x="723" fg:w="5"/><text x="4.8430%" y="623.50"></text></g><g><title>mark_buffer_dirty (3 samples, 0.02%)</title><rect x="4.6415%" y="597" width="0.0192%" height="15" fill="rgb(238,162,48)" fg:x="725" fg:w="3"/><text x="4.8558%" y="607.50"></text></g><g><title>__set_page_dirty (3 samples, 0.02%)</title><rect x="4.6415%" y="581" width="0.0192%" height="15" fill="rgb(221,172,50)" fg:x="725" fg:w="3"/><text x="4.8558%" y="591.50"></text></g><g><title>account_page_dirtied (2 samples, 0.01%)</title><rect x="4.6479%" y="565" width="0.0128%" height="15" fill="rgb(240,165,27)" fg:x="726" fg:w="2"/><text x="4.8622%" y="575.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.01%)</title><rect x="4.6479%" y="549" width="0.0128%" height="15" fill="rgb(247,169,19)" fg:x="726" fg:w="2"/><text x="4.8622%" y="559.50"></text></g><g><title>ext4_mark_iloc_dirty (6 samples, 0.04%)</title><rect x="4.6799%" y="565" width="0.0384%" height="15" fill="rgb(236,133,21)" fg:x="731" fg:w="6"/><text x="4.8942%" y="575.50"></text></g><g><title>__getblk_gfp (2 samples, 0.01%)</title><rect x="4.7311%" y="517" width="0.0128%" height="15" fill="rgb(223,110,34)" fg:x="739" fg:w="2"/><text x="4.9454%" y="527.50"></text></g><g><title>__find_get_block (2 samples, 0.01%)</title><rect x="4.7311%" y="501" width="0.0128%" height="15" fill="rgb(254,214,1)" fg:x="739" fg:w="2"/><text x="4.9454%" y="511.50"></text></g><g><title>ext4_da_write_end (22 samples, 0.14%)</title><rect x="4.6095%" y="645" width="0.1408%" height="15" fill="rgb(230,92,14)" fg:x="720" fg:w="22"/><text x="4.8238%" y="655.50"></text></g><g><title>generic_write_end (19 samples, 0.12%)</title><rect x="4.6287%" y="629" width="0.1216%" height="15" fill="rgb(207,107,21)" fg:x="723" fg:w="19"/><text x="4.8430%" y="639.50"></text></g><g><title>__mark_inode_dirty (14 samples, 0.09%)</title><rect x="4.6607%" y="613" width="0.0896%" height="15" fill="rgb(212,91,54)" fg:x="728" fg:w="14"/><text x="4.8750%" y="623.50"></text></g><g><title>ext4_dirty_inode (13 samples, 0.08%)</title><rect x="4.6671%" y="597" width="0.0832%" height="15" fill="rgb(235,194,15)" fg:x="729" fg:w="13"/><text x="4.8814%" y="607.50"></text></g><g><title>__ext4_mark_inode_dirty (12 samples, 0.08%)</title><rect x="4.6735%" y="581" width="0.0768%" height="15" fill="rgb(250,159,10)" fg:x="730" fg:w="12"/><text x="4.8878%" y="591.50"></text></g><g><title>ext4_reserve_inode_write (5 samples, 0.03%)</title><rect x="4.7183%" y="565" width="0.0320%" height="15" fill="rgb(232,18,0)" fg:x="737" fg:w="5"/><text x="4.9326%" y="575.50"></text></g><g><title>ext4_get_inode_loc (4 samples, 0.03%)</title><rect x="4.7247%" y="549" width="0.0256%" height="15" fill="rgb(251,31,11)" fg:x="738" fg:w="4"/><text x="4.9390%" y="559.50"></text></g><g><title>__ext4_get_inode_loc (4 samples, 0.03%)</title><rect x="4.7247%" y="533" width="0.0256%" height="15" fill="rgb(231,98,31)" fg:x="738" fg:w="4"/><text x="4.9390%" y="543.50"></text></g><g><title>ext4_buffered_write_iter (64 samples, 0.41%)</title><rect x="4.3534%" y="677" width="0.4097%" height="15" fill="rgb(214,47,26)" fg:x="680" fg:w="64"/><text x="4.5677%" y="687.50"></text></g><g><title>generic_perform_write (56 samples, 0.36%)</title><rect x="4.4046%" y="661" width="0.3585%" height="15" fill="rgb(218,161,27)" fg:x="688" fg:w="56"/><text x="4.6189%" y="671.50"></text></g><g><title>iov_iter_fault_in_readable (2 samples, 0.01%)</title><rect x="4.7503%" y="645" width="0.0128%" height="15" fill="rgb(223,182,1)" fg:x="742" fg:w="2"/><text x="4.9646%" y="655.50"></text></g><g><title>new_sync_write (65 samples, 0.42%)</title><rect x="4.3534%" y="693" width="0.4161%" height="15" fill="rgb(220,167,51)" fg:x="680" fg:w="65"/><text x="4.5677%" y="703.50"></text></g><g><title>__write (76 samples, 0.49%)</title><rect x="4.2958%" y="773" width="0.4866%" height="15" fill="rgb(227,101,21)" fg:x="671" fg:w="76"/><text x="4.5101%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (74 samples, 0.47%)</title><rect x="4.3086%" y="757" width="0.4738%" height="15" fill="rgb(205,226,15)" fg:x="673" fg:w="74"/><text x="4.5229%" y="767.50"></text></g><g><title>do_syscall_64 (73 samples, 0.47%)</title><rect x="4.3150%" y="741" width="0.4673%" height="15" fill="rgb(220,74,14)" fg:x="674" fg:w="73"/><text x="4.5293%" y="751.50"></text></g><g><title>ksys_write (71 samples, 0.45%)</title><rect x="4.3278%" y="725" width="0.4545%" height="15" fill="rgb(223,155,43)" fg:x="676" fg:w="71"/><text x="4.5421%" y="735.50"></text></g><g><title>vfs_write (69 samples, 0.44%)</title><rect x="4.3406%" y="709" width="0.4417%" height="15" fill="rgb(216,184,13)" fg:x="678" fg:w="69"/><text x="4.5549%" y="719.50"></text></g><g><title>security_file_permission (2 samples, 0.01%)</title><rect x="4.7695%" y="693" width="0.0128%" height="15" fill="rgb(224,58,37)" fg:x="745" fg:w="2"/><text x="4.9838%" y="703.50"></text></g><g><title>apparmor_file_permission (2 samples, 0.01%)</title><rect x="4.7695%" y="677" width="0.0128%" height="15" fill="rgb(223,123,50)" fg:x="745" fg:w="2"/><text x="4.9838%" y="687.50"></text></g><g><title>File::write (77 samples, 0.49%)</title><rect x="4.2958%" y="789" width="0.4930%" height="15" fill="rgb(221,56,14)" fg:x="671" fg:w="77"/><text x="4.5101%" y="799.50"></text></g><g><title>getTime (2 samples, 0.01%)</title><rect x="4.7887%" y="789" width="0.0128%" height="15" fill="rgb(245,134,19)" fg:x="748" fg:w="2"/><text x="5.0030%" y="799.50"></text></g><g><title>strftime_l (2 samples, 0.01%)</title><rect x="4.7887%" y="773" width="0.0128%" height="15" fill="rgb(247,36,6)" fg:x="748" fg:w="2"/><text x="5.0030%" y="783.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="4.7887%" y="757" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="748" fg:w="2"/><text x="5.0030%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (9 samples, 0.06%)</title><rect x="4.8143%" y="773" width="0.0576%" height="15" fill="rgb(216,50,33)" fg:x="752" fg:w="9"/><text x="5.0286%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (7 samples, 0.04%)</title><rect x="4.8271%" y="757" width="0.0448%" height="15" fill="rgb(250,46,35)" fg:x="754" fg:w="7"/><text x="5.0414%" y="767.50"></text></g><g><title>operator new (6 samples, 0.04%)</title><rect x="4.8335%" y="741" width="0.0384%" height="15" fill="rgb(214,91,1)" fg:x="755" fg:w="6"/><text x="5.0478%" y="751.50"></text></g><g><title>__libc_malloc (6 samples, 0.04%)</title><rect x="4.8335%" y="725" width="0.0384%" height="15" fill="rgb(232,24,50)" fg:x="755" fg:w="6"/><text x="5.0478%" y="735.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.01%)</title><rect x="4.8720%" y="773" width="0.0128%" height="15" fill="rgb(254,182,12)" fg:x="761" fg:w="2"/><text x="5.0862%" y="783.50"></text></g><g><title>Log::write (96 samples, 0.61%)</title><rect x="4.2958%" y="805" width="0.6146%" height="15" fill="rgb(230,27,54)" fg:x="671" fg:w="96"/><text x="4.5101%" y="815.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (16 samples, 0.10%)</title><rect x="4.8079%" y="789" width="0.1024%" height="15" fill="rgb(226,32,40)" fg:x="751" fg:w="16"/><text x="5.0222%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (4 samples, 0.03%)</title><rect x="4.8848%" y="773" width="0.0256%" height="15" fill="rgb(211,92,40)" fg:x="763" fg:w="4"/><text x="5.0990%" y="783.50"></text></g><g><title>operator new (4 samples, 0.03%)</title><rect x="4.8848%" y="757" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="763" fg:w="4"/><text x="5.0990%" y="767.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="4.8912%" y="741" width="0.0192%" height="15" fill="rgb(232,24,50)" fg:x="764" fg:w="3"/><text x="5.1055%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (2 samples, 0.01%)</title><rect x="4.9104%" y="741" width="0.0128%" height="15" fill="rgb(206,58,30)" fg:x="767" fg:w="2"/><text x="5.1247%" y="751.50"></text></g><g><title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (2 samples, 0.01%)</title><rect x="4.9104%" y="725" width="0.0128%" height="15" fill="rgb(223,36,30)" fg:x="767" fg:w="2"/><text x="5.1247%" y="735.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (5 samples, 0.03%)</title><rect x="4.9104%" y="757" width="0.0320%" height="15" fill="rgb(243,60,52)" fg:x="767" fg:w="5"/><text x="5.1247%" y="767.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (3 samples, 0.02%)</title><rect x="4.9232%" y="741" width="0.0192%" height="15" fill="rgb(228,56,32)" fg:x="769" fg:w="3"/><text x="5.1375%" y="751.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="4.9232%" y="725" width="0.0192%" height="15" fill="rgb(241,103,2)" fg:x="769" fg:w="3"/><text x="5.1375%" y="735.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.01%)</title><rect x="4.9296%" y="709" width="0.0128%" height="15" fill="rgb(212,2,49)" fg:x="770" fg:w="2"/><text x="5.1439%" y="719.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (6 samples, 0.04%)</title><rect x="4.9104%" y="789" width="0.0384%" height="15" fill="rgb(251,39,6)" fg:x="767" fg:w="6"/><text x="5.1247%" y="799.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (6 samples, 0.04%)</title><rect x="4.9104%" y="773" width="0.0384%" height="15" fill="rgb(215,30,0)" fg:x="767" fg:w="6"/><text x="5.1247%" y="783.50"></text></g><g><title>Request::getHeader (10 samples, 0.06%)</title><rect x="4.9104%" y="805" width="0.0640%" height="15" fill="rgb(238,121,14)" fg:x="767" fg:w="10"/><text x="5.1247%" y="815.50"></text></g><g><title>std::transform&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int (*)(int)&gt; (4 samples, 0.03%)</title><rect x="4.9488%" y="789" width="0.0256%" height="15" fill="rgb(232,139,18)" fg:x="773" fg:w="4"/><text x="5.1631%" y="799.50"></text></g><g><title>tolower (3 samples, 0.02%)</title><rect x="4.9552%" y="773" width="0.0192%" height="15" fill="rgb(241,224,41)" fg:x="774" fg:w="3"/><text x="5.1695%" y="783.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="4.9936%" y="789" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="780" fg:w="2"/><text x="5.2079%" y="799.50"></text></g><g><title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator++ (3 samples, 0.02%)</title><rect x="5.0128%" y="789" width="0.0192%" height="15" fill="rgb(211,28,32)" fg:x="783" fg:w="3"/><text x="5.2271%" y="799.50"></text></g><g><title>std::_Rb_tree_increment (2 samples, 0.01%)</title><rect x="5.0192%" y="773" width="0.0128%" height="15" fill="rgb(205,67,33)" fg:x="784" fg:w="2"/><text x="5.2335%" y="783.50"></text></g><g><title>operator new (2 samples, 0.01%)</title><rect x="5.0512%" y="757" width="0.0128%" height="15" fill="rgb(214,91,1)" fg:x="789" fg:w="2"/><text x="5.2655%" y="767.50"></text></g><g><title>__libc_malloc (2 samples, 0.01%)</title><rect x="5.0512%" y="741" width="0.0128%" height="15" fill="rgb(232,24,50)" fg:x="789" fg:w="2"/><text x="5.2655%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (6 samples, 0.04%)</title><rect x="5.0320%" y="789" width="0.0384%" height="15" fill="rgb(216,50,33)" fg:x="786" fg:w="6"/><text x="5.2463%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.03%)</title><rect x="5.0448%" y="773" width="0.0256%" height="15" fill="rgb(250,46,35)" fg:x="788" fg:w="4"/><text x="5.2591%" y="783.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="5.1152%" y="741" width="0.0192%" height="15" fill="rgb(247,113,52)" fg:x="799" fg:w="3"/><text x="5.3295%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (9 samples, 0.06%)</title><rect x="5.0832%" y="773" width="0.0576%" height="15" fill="rgb(216,50,33)" fg:x="794" fg:w="9"/><text x="5.2975%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (5 samples, 0.03%)</title><rect x="5.1088%" y="757" width="0.0320%" height="15" fill="rgb(250,46,35)" fg:x="798" fg:w="5"/><text x="5.3231%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.01%)</title><rect x="5.1408%" y="773" width="0.0128%" height="15" fill="rgb(254,182,12)" fg:x="803" fg:w="2"/><text x="5.3551%" y="783.50"></text></g><g><title>Response::generateHead[abi:cxx11] (30 samples, 0.19%)</title><rect x="4.9744%" y="805" width="0.1921%" height="15" fill="rgb(210,158,47)" fg:x="777" fg:w="30"/><text x="5.1887%" y="815.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14 samples, 0.09%)</title><rect x="5.0768%" y="789" width="0.0896%" height="15" fill="rgb(226,32,40)" fg:x="793" fg:w="14"/><text x="5.2911%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (2 samples, 0.01%)</title><rect x="5.1536%" y="773" width="0.0128%" height="15" fill="rgb(209,28,51)" fg:x="805" fg:w="2"/><text x="5.3679%" y="783.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="5.1536%" y="757" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="805" fg:w="2"/><text x="5.3679%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (2 samples, 0.01%)</title><rect x="5.1729%" y="741" width="0.0128%" height="15" fill="rgb(206,58,30)" fg:x="808" fg:w="2"/><text x="5.3871%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (3 samples, 0.02%)</title><rect x="5.1729%" y="757" width="0.0192%" height="15" fill="rgb(243,60,52)" fg:x="808" fg:w="3"/><text x="5.3871%" y="767.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (4 samples, 0.03%)</title><rect x="5.1729%" y="789" width="0.0256%" height="15" fill="rgb(251,39,6)" fg:x="808" fg:w="4"/><text x="5.3871%" y="799.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (4 samples, 0.03%)</title><rect x="5.1729%" y="773" width="0.0256%" height="15" fill="rgb(215,30,0)" fg:x="808" fg:w="4"/><text x="5.3871%" y="783.50"></text></g><g><title>Response::getHeader (10 samples, 0.06%)</title><rect x="5.1665%" y="805" width="0.0640%" height="15" fill="rgb(223,50,9)" fg:x="807" fg:w="10"/><text x="5.3807%" y="815.50"></text></g><g><title>std::transform&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int (*)(int)&gt; (5 samples, 0.03%)</title><rect x="5.1985%" y="789" width="0.0320%" height="15" fill="rgb(232,139,18)" fg:x="812" fg:w="5"/><text x="5.4127%" y="799.50"></text></g><g><title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.03%)</title><rect x="5.2049%" y="773" width="0.0256%" height="15" fill="rgb(253,175,3)" fg:x="813" fg:w="4"/><text x="5.4192%" y="783.50"></text></g><g><title>Response::getVersion[abi:cxx11] (2 samples, 0.01%)</title><rect x="5.2369%" y="805" width="0.0128%" height="15" fill="rgb(236,222,3)" fg:x="818" fg:w="2"/><text x="5.4512%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.01%)</title><rect x="5.2369%" y="789" width="0.0128%" height="15" fill="rgb(254,182,12)" fg:x="818" fg:w="2"/><text x="5.4512%" y="799.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (3 samples, 0.02%)</title><rect x="5.2625%" y="725" width="0.0192%" height="15" fill="rgb(206,139,2)" fg:x="822" fg:w="3"/><text x="5.4768%" y="735.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2 samples, 0.01%)</title><rect x="5.2689%" y="709" width="0.0128%" height="15" fill="rgb(228,56,32)" fg:x="823" fg:w="2"/><text x="5.4832%" y="719.50"></text></g><g><title>__gnu_cxx::__is_null_pointer&lt;char&gt; (2 samples, 0.01%)</title><rect x="5.2945%" y="613" width="0.0128%" height="15" fill="rgb(220,66,38)" fg:x="827" fg:w="2"/><text x="5.5088%" y="623.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node (4 samples, 0.03%)</title><rect x="5.2881%" y="677" width="0.0256%" height="15" fill="rgb(241,70,20)" fg:x="826" fg:w="4"/><text x="5.5024%" y="687.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct (4 samples, 0.03%)</title><rect x="5.2881%" y="661" width="0.0256%" height="15" fill="rgb(253,150,38)" fg:x="826" fg:w="4"/><text x="5.5024%" y="671.50"></text></g><g><title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (4 samples, 0.03%)</title><rect x="5.2881%" y="645" width="0.0256%" height="15" fill="rgb(250,81,54)" fg:x="826" fg:w="4"/><text x="5.5024%" y="655.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.02%)</title><rect x="5.2945%" y="629" width="0.0192%" height="15" fill="rgb(254,182,12)" fg:x="827" fg:w="3"/><text x="5.5088%" y="639.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (13 samples, 0.08%)</title><rect x="5.2817%" y="709" width="0.0832%" height="15" fill="rgb(249,156,9)" fg:x="825" fg:w="13"/><text x="5.4960%" y="719.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node (12 samples, 0.08%)</title><rect x="5.2881%" y="693" width="0.0768%" height="15" fill="rgb(223,17,51)" fg:x="826" fg:w="12"/><text x="5.5024%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node (8 samples, 0.05%)</title><rect x="5.3137%" y="677" width="0.0512%" height="15" fill="rgb(240,154,39)" fg:x="830" fg:w="8"/><text x="5.5280%" y="687.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (8 samples, 0.05%)</title><rect x="5.3137%" y="661" width="0.0512%" height="15" fill="rgb(232,149,36)" fg:x="830" fg:w="8"/><text x="5.5280%" y="671.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (8 samples, 0.05%)</title><rect x="5.3137%" y="645" width="0.0512%" height="15" fill="rgb(205,50,19)" fg:x="830" fg:w="8"/><text x="5.5280%" y="655.50"></text></g><g><title>operator new (7 samples, 0.04%)</title><rect x="5.3201%" y="629" width="0.0448%" height="15" fill="rgb(214,91,1)" fg:x="831" fg:w="7"/><text x="5.5344%" y="639.50"></text></g><g><title>__libc_malloc (7 samples, 0.04%)</title><rect x="5.3201%" y="613" width="0.0448%" height="15" fill="rgb(232,24,50)" fg:x="831" fg:w="7"/><text x="5.5344%" y="623.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.04%)</title><rect x="5.3265%" y="597" width="0.0384%" height="15" fill="rgb(247,113,52)" fg:x="832" fg:w="6"/><text x="5.5408%" y="607.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::insert (17 samples, 0.11%)</title><rect x="5.2625%" y="773" width="0.1088%" height="15" fill="rgb(253,1,32)" fg:x="822" fg:w="17"/><text x="5.4768%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_ (17 samples, 0.11%)</title><rect x="5.2625%" y="757" width="0.1088%" height="15" fill="rgb(229,182,52)" fg:x="822" fg:w="17"/><text x="5.4768%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (17 samples, 0.11%)</title><rect x="5.2625%" y="741" width="0.1088%" height="15" fill="rgb(227,197,36)" fg:x="822" fg:w="17"/><text x="5.4768%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (14 samples, 0.09%)</title><rect x="5.2817%" y="725" width="0.0896%" height="15" fill="rgb(210,214,38)" fg:x="825" fg:w="14"/><text x="5.4960%" y="735.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (2 samples, 0.01%)</title><rect x="5.3713%" y="773" width="0.0128%" height="15" fill="rgb(227,173,21)" fg:x="839" fg:w="2"/><text x="5.5856%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (2 samples, 0.01%)</title><rect x="5.3713%" y="757" width="0.0128%" height="15" fill="rgb(216,120,34)" fg:x="839" fg:w="2"/><text x="5.5856%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (2 samples, 0.01%)</title><rect x="5.3713%" y="741" width="0.0128%" height="15" fill="rgb(243,60,52)" fg:x="839" fg:w="2"/><text x="5.5856%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (2 samples, 0.01%)</title><rect x="5.3713%" y="725" width="0.0128%" height="15" fill="rgb(206,58,30)" fg:x="839" fg:w="2"/><text x="5.5856%" y="735.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (21 samples, 0.13%)</title><rect x="5.2561%" y="789" width="0.1344%" height="15" fill="rgb(213,223,15)" fg:x="821" fg:w="21"/><text x="5.4704%" y="799.50"></text></g><g><title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="5.3969%" y="773" width="0.0128%" height="15" fill="rgb(253,175,3)" fg:x="843" fg:w="2"/><text x="5.6112%" y="783.50"></text></g><g><title>Response::setHeader (26 samples, 0.17%)</title><rect x="5.2497%" y="805" width="0.1665%" height="15" fill="rgb(253,98,0)" fg:x="820" fg:w="26"/><text x="5.4640%" y="815.50"></text></g><g><title>std::transform&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int (*)(int)&gt; (4 samples, 0.03%)</title><rect x="5.3905%" y="789" width="0.0256%" height="15" fill="rgb(232,139,18)" fg:x="842" fg:w="4"/><text x="5.6048%" y="799.50"></text></g><g><title>getTime (6 samples, 0.04%)</title><rect x="5.4225%" y="805" width="0.0384%" height="15" fill="rgb(245,134,19)" fg:x="847" fg:w="6"/><text x="5.6368%" y="815.50"></text></g><g><title>strftime_l (3 samples, 0.02%)</title><rect x="5.4417%" y="789" width="0.0192%" height="15" fill="rgb(247,36,6)" fg:x="850" fg:w="3"/><text x="5.6560%" y="799.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="5.4417%" y="773" width="0.0192%" height="15" fill="rgb(247,113,52)" fg:x="850" fg:w="3"/><text x="5.6560%" y="783.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (2 samples, 0.01%)</title><rect x="5.4866%" y="789" width="0.0128%" height="15" fill="rgb(223,206,25)" fg:x="857" fg:w="2"/><text x="5.7008%" y="799.50"></text></g><g><title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream (6 samples, 0.04%)</title><rect x="5.4673%" y="805" width="0.0384%" height="15" fill="rgb(252,210,43)" fg:x="854" fg:w="6"/><text x="5.6816%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.02%)</title><rect x="5.5058%" y="805" width="0.0192%" height="15" fill="rgb(244,92,22)" fg:x="860" fg:w="3"/><text x="5.7200%" y="815.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="5.5058%" y="789" width="0.0192%" height="15" fill="rgb(247,113,52)" fg:x="860" fg:w="3"/><text x="5.7200%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.03%)</title><rect x="5.5250%" y="805" width="0.0256%" height="15" fill="rgb(216,41,4)" fg:x="863" fg:w="4"/><text x="5.7393%" y="815.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="5.5634%" y="613" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="869" fg:w="2"/><text x="5.7777%" y="623.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="5.5634%" y="597" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="869" fg:w="2"/><text x="5.7777%" y="607.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="5.5634%" y="581" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="869" fg:w="2"/><text x="5.7777%" y="591.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="5.5634%" y="565" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="869" fg:w="2"/><text x="5.7777%" y="575.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="5.5634%" y="549" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="869" fg:w="2"/><text x="5.7777%" y="559.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="5.5634%" y="533" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="869" fg:w="2"/><text x="5.7777%" y="543.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="5.5634%" y="517" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="869" fg:w="2"/><text x="5.7777%" y="527.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="5.5634%" y="501" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="869" fg:w="2"/><text x="5.7777%" y="511.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="5.5634%" y="485" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="869" fg:w="2"/><text x="5.7777%" y="495.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="5.5634%" y="469" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="869" fg:w="2"/><text x="5.7777%" y="479.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="5.5634%" y="453" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="869" fg:w="2"/><text x="5.7777%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="5.5634%" y="437" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="869" fg:w="2"/><text x="5.7777%" y="447.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="5.5634%" y="421" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="869" fg:w="2"/><text x="5.7777%" y="431.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4 samples, 0.03%)</title><rect x="5.5570%" y="789" width="0.0256%" height="15" fill="rgb(216,50,33)" fg:x="868" fg:w="4"/><text x="5.7713%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.03%)</title><rect x="5.5570%" y="773" width="0.0256%" height="15" fill="rgb(250,46,35)" fg:x="868" fg:w="4"/><text x="5.7713%" y="783.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="5.5570%" y="757" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="868" fg:w="4"/><text x="5.7713%" y="767.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="5.5634%" y="741" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="869" fg:w="3"/><text x="5.7777%" y="751.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="5.5634%" y="725" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="869" fg:w="3"/><text x="5.7777%" y="735.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="5.5634%" y="709" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="869" fg:w="3"/><text x="5.7777%" y="719.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="5.5634%" y="693" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="869" fg:w="3"/><text x="5.7777%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="5.5634%" y="677" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="869" fg:w="3"/><text x="5.7777%" y="687.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="5.5634%" y="661" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="869" fg:w="3"/><text x="5.7777%" y="671.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="5.5634%" y="645" width="0.0192%" height="15" fill="rgb(231,11,52)" fg:x="869" fg:w="3"/><text x="5.7777%" y="655.50"></text></g><g><title>virtnet_poll (3 samples, 0.02%)</title><rect x="5.5634%" y="629" width="0.0192%" height="15" fill="rgb(213,187,12)" fg:x="869" fg:w="3"/><text x="5.7777%" y="639.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (12 samples, 0.08%)</title><rect x="5.5506%" y="805" width="0.0768%" height="15" fill="rgb(226,32,40)" fg:x="867" fg:w="12"/><text x="5.7649%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.04%)</title><rect x="5.5826%" y="789" width="0.0448%" height="15" fill="rgb(254,182,12)" fg:x="872" fg:w="7"/><text x="5.7969%" y="799.50"></text></g><g><title>Http::sendResponse (221 samples, 1.41%)</title><rect x="4.2318%" y="821" width="1.4149%" height="15" fill="rgb(226,37,44)" fg:x="661" fg:w="221"/><text x="4.4460%" y="831.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="5.6274%" y="805" width="0.0192%" height="15" fill="rgb(214,68,17)" fg:x="879" fg:w="3"/><text x="5.8417%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.01%)</title><rect x="5.6338%" y="789" width="0.0128%" height="15" fill="rgb(212,2,49)" fg:x="880" fg:w="2"/><text x="5.8481%" y="799.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="5.6338%" y="773" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="880" fg:w="2"/><text x="5.8481%" y="783.50"></text></g><g><title>Request::Request (3 samples, 0.02%)</title><rect x="5.6466%" y="821" width="0.0192%" height="15" fill="rgb(236,207,40)" fg:x="882" fg:w="3"/><text x="5.8609%" y="831.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="5.6722%" y="805" width="0.0128%" height="15" fill="rgb(251,39,6)" fg:x="886" fg:w="2"/><text x="5.8865%" y="815.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="5.6722%" y="789" width="0.0128%" height="15" fill="rgb(215,30,0)" fg:x="886" fg:w="2"/><text x="5.8865%" y="799.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (2 samples, 0.01%)</title><rect x="5.6722%" y="773" width="0.0128%" height="15" fill="rgb(243,60,52)" fg:x="886" fg:w="2"/><text x="5.8865%" y="783.50"></text></g><g><title>Request::getHeader (4 samples, 0.03%)</title><rect x="5.6658%" y="821" width="0.0256%" height="15" fill="rgb(238,121,14)" fg:x="885" fg:w="4"/><text x="5.8801%" y="831.50"></text></g><g><title>Uri::operator= (2 samples, 0.01%)</title><rect x="5.6978%" y="805" width="0.0128%" height="15" fill="rgb(253,13,14)" fg:x="890" fg:w="2"/><text x="5.9121%" y="815.50"></text></g><g><title>Request::operator= (8 samples, 0.05%)</title><rect x="5.6978%" y="821" width="0.0512%" height="15" fill="rgb(217,165,16)" fg:x="890" fg:w="8"/><text x="5.9121%" y="831.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator= (5 samples, 0.03%)</title><rect x="5.7170%" y="805" width="0.0320%" height="15" fill="rgb(217,57,53)" fg:x="893" fg:w="5"/><text x="5.9313%" y="815.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator= (2 samples, 0.01%)</title><rect x="5.7362%" y="789" width="0.0128%" height="15" fill="rgb(248,210,34)" fg:x="896" fg:w="2"/><text x="5.9505%" y="799.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node::_Reuse_or_alloc_node (2 samples, 0.01%)</title><rect x="5.7362%" y="773" width="0.0128%" height="15" fill="rgb(226,5,33)" fg:x="896" fg:w="2"/><text x="5.9505%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.01%)</title><rect x="5.7618%" y="773" width="0.0128%" height="15" fill="rgb(240,176,52)" fg:x="900" fg:w="2"/><text x="5.9761%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (4 samples, 0.03%)</title><rect x="5.7746%" y="773" width="0.0256%" height="15" fill="rgb(233,7,30)" fg:x="902" fg:w="4"/><text x="5.9889%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (4 samples, 0.03%)</title><rect x="5.7746%" y="757" width="0.0256%" height="15" fill="rgb(223,211,19)" fg:x="902" fg:w="4"/><text x="5.9889%" y="767.50"></text></g><g><title>operator new (4 samples, 0.03%)</title><rect x="5.7746%" y="741" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="902" fg:w="4"/><text x="5.9889%" y="751.50"></text></g><g><title>__libc_malloc (4 samples, 0.03%)</title><rect x="5.7746%" y="725" width="0.0256%" height="15" fill="rgb(232,24,50)" fg:x="902" fg:w="4"/><text x="5.9889%" y="735.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="5.7810%" y="709" width="0.0192%" height="15" fill="rgb(247,113,52)" fg:x="903" fg:w="3"/><text x="5.9953%" y="719.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (7 samples, 0.04%)</title><rect x="5.8195%" y="741" width="0.0448%" height="15" fill="rgb(243,60,52)" fg:x="909" fg:w="7"/><text x="6.0337%" y="751.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (5 samples, 0.03%)</title><rect x="5.8323%" y="725" width="0.0320%" height="15" fill="rgb(228,56,32)" fg:x="911" fg:w="5"/><text x="6.0466%" y="735.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="5.8451%" y="709" width="0.0192%" height="15" fill="rgb(241,103,2)" fg:x="913" fg:w="3"/><text x="6.0594%" y="719.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (10 samples, 0.06%)</title><rect x="5.8067%" y="773" width="0.0640%" height="15" fill="rgb(251,39,6)" fg:x="907" fg:w="10"/><text x="6.0209%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (9 samples, 0.06%)</title><rect x="5.8131%" y="757" width="0.0576%" height="15" fill="rgb(215,30,0)" fg:x="908" fg:w="9"/><text x="6.0273%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (4 samples, 0.03%)</title><rect x="5.8835%" y="709" width="0.0256%" height="15" fill="rgb(206,139,2)" fg:x="919" fg:w="4"/><text x="6.0978%" y="719.50"></text></g><g><title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_const_cast (2 samples, 0.01%)</title><rect x="5.8963%" y="693" width="0.0128%" height="15" fill="rgb(242,94,49)" fg:x="921" fg:w="2"/><text x="6.1106%" y="703.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct (2 samples, 0.01%)</title><rect x="5.9155%" y="645" width="0.0128%" height="15" fill="rgb(253,150,38)" fg:x="924" fg:w="2"/><text x="6.1298%" y="655.50"></text></g><g><title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (2 samples, 0.01%)</title><rect x="5.9155%" y="629" width="0.0128%" height="15" fill="rgb(250,81,54)" fg:x="924" fg:w="2"/><text x="6.1298%" y="639.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.01%)</title><rect x="5.9155%" y="613" width="0.0128%" height="15" fill="rgb(254,182,12)" fg:x="924" fg:w="2"/><text x="6.1298%" y="623.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node (3 samples, 0.02%)</title><rect x="5.9155%" y="661" width="0.0192%" height="15" fill="rgb(241,70,20)" fg:x="924" fg:w="3"/><text x="6.1298%" y="671.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (13 samples, 0.08%)</title><rect x="5.9155%" y="693" width="0.0832%" height="15" fill="rgb(249,156,9)" fg:x="924" fg:w="13"/><text x="6.1298%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node (13 samples, 0.08%)</title><rect x="5.9155%" y="677" width="0.0832%" height="15" fill="rgb(223,17,51)" fg:x="924" fg:w="13"/><text x="6.1298%" y="687.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node (10 samples, 0.06%)</title><rect x="5.9347%" y="661" width="0.0640%" height="15" fill="rgb(240,154,39)" fg:x="927" fg:w="10"/><text x="6.1490%" y="671.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (10 samples, 0.06%)</title><rect x="5.9347%" y="645" width="0.0640%" height="15" fill="rgb(232,149,36)" fg:x="927" fg:w="10"/><text x="6.1490%" y="655.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (9 samples, 0.06%)</title><rect x="5.9411%" y="629" width="0.0576%" height="15" fill="rgb(205,50,19)" fg:x="928" fg:w="9"/><text x="6.1554%" y="639.50"></text></g><g><title>operator new (9 samples, 0.06%)</title><rect x="5.9411%" y="613" width="0.0576%" height="15" fill="rgb(214,91,1)" fg:x="928" fg:w="9"/><text x="6.1554%" y="623.50"></text></g><g><title>__libc_malloc (9 samples, 0.06%)</title><rect x="5.9411%" y="597" width="0.0576%" height="15" fill="rgb(232,24,50)" fg:x="928" fg:w="9"/><text x="6.1554%" y="607.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::insert (22 samples, 0.14%)</title><rect x="5.8771%" y="757" width="0.1408%" height="15" fill="rgb(253,1,32)" fg:x="918" fg:w="22"/><text x="6.0914%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_ (22 samples, 0.14%)</title><rect x="5.8771%" y="741" width="0.1408%" height="15" fill="rgb(229,182,52)" fg:x="918" fg:w="22"/><text x="6.0914%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (22 samples, 0.14%)</title><rect x="5.8771%" y="725" width="0.1408%" height="15" fill="rgb(227,197,36)" fg:x="918" fg:w="22"/><text x="6.0914%" y="735.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (17 samples, 0.11%)</title><rect x="5.9091%" y="709" width="0.1088%" height="15" fill="rgb(210,214,38)" fg:x="923" fg:w="17"/><text x="6.1234%" y="719.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (3 samples, 0.02%)</title><rect x="5.9987%" y="693" width="0.0192%" height="15" fill="rgb(216,64,20)" fg:x="937" fg:w="3"/><text x="6.2130%" y="703.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (25 samples, 0.16%)</title><rect x="5.8707%" y="773" width="0.1601%" height="15" fill="rgb(213,223,15)" fg:x="917" fg:w="25"/><text x="6.0850%" y="783.50"></text></g><g><title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.03%)</title><rect x="6.0435%" y="757" width="0.0256%" height="15" fill="rgb(253,175,3)" fg:x="944" fg:w="4"/><text x="6.2578%" y="767.50"></text></g><g><title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="6.0563%" y="741" width="0.0128%" height="15" fill="rgb(235,156,39)" fg:x="946" fg:w="2"/><text x="6.2706%" y="751.50"></text></g><g><title>std::transform&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int (*)(int)&gt; (24 samples, 0.15%)</title><rect x="6.0307%" y="773" width="0.1536%" height="15" fill="rgb(232,139,18)" fg:x="942" fg:w="24"/><text x="6.2450%" y="783.50"></text></g><g><title>tolower (18 samples, 0.12%)</title><rect x="6.0691%" y="757" width="0.1152%" height="15" fill="rgb(241,224,41)" fg:x="948" fg:w="18"/><text x="6.2834%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::erase (8 samples, 0.05%)</title><rect x="6.1908%" y="757" width="0.0512%" height="15" fill="rgb(226,31,7)" fg:x="967" fg:w="8"/><text x="6.4051%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_erase (6 samples, 0.04%)</title><rect x="6.2036%" y="741" width="0.0384%" height="15" fill="rgb(230,127,2)" fg:x="969" fg:w="6"/><text x="6.4179%" y="751.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="6.2292%" y="725" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="973" fg:w="2"/><text x="6.4435%" y="735.50"></text></g><g><title>Request::setHeader (78 samples, 0.50%)</title><rect x="5.7618%" y="789" width="0.4994%" height="15" fill="rgb(246,210,30)" fg:x="900" fg:w="78"/><text x="5.9761%" y="799.50"></text></g><g><title>trimStart (12 samples, 0.08%)</title><rect x="6.1844%" y="773" width="0.0768%" height="15" fill="rgb(251,136,50)" fg:x="966" fg:w="12"/><text x="6.3987%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_not_of (3 samples, 0.02%)</title><rect x="6.2420%" y="757" width="0.0192%" height="15" fill="rgb(219,74,46)" fg:x="975" fg:w="3"/><text x="6.4563%" y="767.50"></text></g><g><title>Request::parseHeader (85 samples, 0.54%)</title><rect x="5.7554%" y="805" width="0.5442%" height="15" fill="rgb(217,141,20)" fg:x="899" fg:w="85"/><text x="5.9697%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.03%)</title><rect x="6.2740%" y="789" width="0.0256%" height="15" fill="rgb(254,182,12)" fg:x="980" fg:w="4"/><text x="6.4883%" y="799.50"></text></g><g><title>operator new (2 samples, 0.01%)</title><rect x="6.2868%" y="773" width="0.0128%" height="15" fill="rgb(214,91,1)" fg:x="982" fg:w="2"/><text x="6.5011%" y="783.50"></text></g><g><title>__libc_malloc (2 samples, 0.01%)</title><rect x="6.2868%" y="757" width="0.0128%" height="15" fill="rgb(232,24,50)" fg:x="982" fg:w="2"/><text x="6.5011%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.02%)</title><rect x="6.3508%" y="773" width="0.0192%" height="15" fill="rgb(233,7,30)" fg:x="992" fg:w="3"/><text x="6.5651%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.01%)</title><rect x="6.3572%" y="757" width="0.0128%" height="15" fill="rgb(223,211,19)" fg:x="993" fg:w="2"/><text x="6.5715%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (2 samples, 0.01%)</title><rect x="6.3700%" y="773" width="0.0128%" height="15" fill="rgb(237,70,52)" fg:x="995" fg:w="2"/><text x="6.5843%" y="783.50"></text></g><g><title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.03%)</title><rect x="6.3956%" y="757" width="0.0256%" height="15" fill="rgb(253,175,3)" fg:x="999" fg:w="4"/><text x="6.6099%" y="767.50"></text></g><g><title>Uri::load (18 samples, 0.12%)</title><rect x="6.3124%" y="789" width="0.1152%" height="15" fill="rgb(211,228,34)" fg:x="986" fg:w="18"/><text x="6.5267%" y="799.50"></text></g><g><title>std::transform&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int (*)(int)&gt; (7 samples, 0.04%)</title><rect x="6.3828%" y="773" width="0.0448%" height="15" fill="rgb(232,139,18)" fg:x="997" fg:w="7"/><text x="6.5971%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.03%)</title><rect x="6.4341%" y="789" width="0.0256%" height="15" fill="rgb(254,182,12)" fg:x="1005" fg:w="4"/><text x="6.6483%" y="799.50"></text></g><g><title>operator new (3 samples, 0.02%)</title><rect x="6.4405%" y="773" width="0.0192%" height="15" fill="rgb(214,91,1)" fg:x="1006" fg:w="3"/><text x="6.6547%" y="783.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="6.4405%" y="757" width="0.0192%" height="15" fill="rgb(232,24,50)" fg:x="1006" fg:w="3"/><text x="6.6547%" y="767.50"></text></g><g><title>Uri::Uri (26 samples, 0.17%)</title><rect x="6.2996%" y="805" width="0.1665%" height="15" fill="rgb(239,171,0)" fg:x="984" fg:w="26"/><text x="6.5139%" y="815.50"></text></g><g><title>Uri::~Uri (2 samples, 0.01%)</title><rect x="6.4661%" y="805" width="0.0128%" height="15" fill="rgb(235,113,14)" fg:x="1010" fg:w="2"/><text x="6.6804%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_of (5 samples, 0.03%)</title><rect x="6.4981%" y="789" width="0.0320%" height="15" fill="rgb(212,119,18)" fg:x="1015" fg:w="5"/><text x="6.7124%" y="799.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="6.5109%" y="773" width="0.0192%" height="15" fill="rgb(247,113,52)" fg:x="1017" fg:w="3"/><text x="6.7252%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (3 samples, 0.02%)</title><rect x="6.5301%" y="789" width="0.0192%" height="15" fill="rgb(237,70,52)" fg:x="1020" fg:w="3"/><text x="6.7444%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.02%)</title><rect x="6.5301%" y="773" width="0.0192%" height="15" fill="rgb(240,176,52)" fg:x="1020" fg:w="3"/><text x="6.7444%" y="783.50"></text></g><g><title>operator new (2 samples, 0.01%)</title><rect x="6.5365%" y="757" width="0.0128%" height="15" fill="rgb(214,91,1)" fg:x="1021" fg:w="2"/><text x="6.7508%" y="767.50"></text></g><g><title>__libc_malloc (2 samples, 0.01%)</title><rect x="6.5365%" y="741" width="0.0128%" height="15" fill="rgb(232,24,50)" fg:x="1021" fg:w="2"/><text x="6.7508%" y="751.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.03%)</title><rect x="6.5557%" y="757" width="0.0256%" height="15" fill="rgb(242,20,7)" fg:x="1024" fg:w="4"/><text x="6.7700%" y="767.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct (4 samples, 0.03%)</title><rect x="6.5557%" y="741" width="0.0256%" height="15" fill="rgb(240,12,15)" fg:x="1024" fg:w="4"/><text x="6.7700%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.03%)</title><rect x="6.5557%" y="725" width="0.0256%" height="15" fill="rgb(254,182,12)" fg:x="1024" fg:w="4"/><text x="6.7700%" y="735.50"></text></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate (5 samples, 0.03%)</title><rect x="6.5877%" y="757" width="0.0320%" height="15" fill="rgb(254,83,21)" fg:x="1029" fg:w="5"/><text x="6.8020%" y="767.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocate (5 samples, 0.03%)</title><rect x="6.5877%" y="741" width="0.0320%" height="15" fill="rgb(254,98,4)" fg:x="1029" fg:w="5"/><text x="6.8020%" y="751.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocate (4 samples, 0.03%)</title><rect x="6.5941%" y="725" width="0.0256%" height="15" fill="rgb(252,103,37)" fg:x="1030" fg:w="4"/><text x="6.8084%" y="735.50"></text></g><g><title>operator new (4 samples, 0.03%)</title><rect x="6.5941%" y="709" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="1030" fg:w="4"/><text x="6.8084%" y="719.50"></text></g><g><title>__libc_malloc (2 samples, 0.01%)</title><rect x="6.6069%" y="693" width="0.0128%" height="15" fill="rgb(232,24,50)" fg:x="1032" fg:w="2"/><text x="6.8212%" y="703.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert (21 samples, 0.13%)</title><rect x="6.5493%" y="773" width="0.1344%" height="15" fill="rgb(232,153,51)" fg:x="1023" fg:w="21"/><text x="6.7636%" y="783.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_check_len (8 samples, 0.05%)</title><rect x="6.6325%" y="757" width="0.0512%" height="15" fill="rgb(222,5,51)" fg:x="1036" fg:w="8"/><text x="6.8468%" y="767.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (4 samples, 0.03%)</title><rect x="6.6581%" y="741" width="0.0256%" height="15" fill="rgb(229,204,43)" fg:x="1040" fg:w="4"/><text x="6.8724%" y="751.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_max_size (3 samples, 0.02%)</title><rect x="6.6645%" y="725" width="0.0192%" height="15" fill="rgb(211,88,54)" fg:x="1041" fg:w="3"/><text x="6.8788%" y="735.50"></text></g><g><title>std::min&lt;unsigned long&gt; (2 samples, 0.01%)</title><rect x="6.6709%" y="709" width="0.0128%" height="15" fill="rgb(243,137,43)" fg:x="1042" fg:w="2"/><text x="6.8852%" y="719.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (24 samples, 0.15%)</title><rect x="6.5493%" y="789" width="0.1536%" height="15" fill="rgb(228,192,54)" fg:x="1023" fg:w="24"/><text x="6.7636%" y="799.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (3 samples, 0.02%)</title><rect x="6.6837%" y="773" width="0.0192%" height="15" fill="rgb(229,111,34)" fg:x="1044" fg:w="3"/><text x="6.8980%" y="783.50"></text></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="6.6901%" y="757" width="0.0128%" height="15" fill="rgb(243,58,5)" fg:x="1045" fg:w="2"/><text x="6.9044%" y="767.50"></text></g><g><title>split (40 samples, 0.26%)</title><rect x="6.4789%" y="805" width="0.2561%" height="15" fill="rgb(229,86,52)" fg:x="1012" fg:w="40"/><text x="6.6932%" y="815.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (5 samples, 0.03%)</title><rect x="6.7029%" y="789" width="0.0320%" height="15" fill="rgb(238,104,0)" fg:x="1047" fg:w="5"/><text x="6.9172%" y="799.50"></text></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_base (4 samples, 0.03%)</title><rect x="6.7093%" y="773" width="0.0256%" height="15" fill="rgb(225,180,26)" fg:x="1048" fg:w="4"/><text x="6.9236%" y="783.50"></text></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (2 samples, 0.01%)</title><rect x="6.7222%" y="757" width="0.0128%" height="15" fill="rgb(226,149,33)" fg:x="1050" fg:w="2"/><text x="6.9364%" y="767.50"></text></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (2 samples, 0.01%)</title><rect x="6.7222%" y="741" width="0.0128%" height="15" fill="rgb(208,165,31)" fg:x="1050" fg:w="2"/><text x="6.9364%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (5 samples, 0.03%)</title><rect x="6.7414%" y="805" width="0.0320%" height="15" fill="rgb(237,70,52)" fg:x="1053" fg:w="5"/><text x="6.9556%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.03%)</title><rect x="6.7478%" y="789" width="0.0256%" height="15" fill="rgb(240,176,52)" fg:x="1054" fg:w="4"/><text x="6.9620%" y="799.50"></text></g><g><title>operator new (4 samples, 0.03%)</title><rect x="6.7478%" y="773" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="1054" fg:w="4"/><text x="6.9620%" y="783.50"></text></g><g><title>__libc_malloc (4 samples, 0.03%)</title><rect x="6.7478%" y="757" width="0.0256%" height="15" fill="rgb(232,24,50)" fg:x="1054" fg:w="4"/><text x="6.9620%" y="767.50"></text></g><g><title>Request::parseHead (163 samples, 1.04%)</title><rect x="5.7490%" y="821" width="1.0435%" height="15" fill="rgb(235,106,14)" fg:x="898" fg:w="163"/><text x="5.9633%" y="831.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (2 samples, 0.01%)</title><rect x="6.7798%" y="805" width="0.0128%" height="15" fill="rgb(250,109,37)" fg:x="1059" fg:w="2"/><text x="6.9941%" y="815.50"></text></g><g><title>Request::~Request (2 samples, 0.01%)</title><rect x="6.7926%" y="821" width="0.0128%" height="15" fill="rgb(228,65,47)" fg:x="1061" fg:w="2"/><text x="7.0069%" y="831.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~map (2 samples, 0.01%)</title><rect x="6.7926%" y="805" width="0.0128%" height="15" fill="rgb(212,16,20)" fg:x="1061" fg:w="2"/><text x="7.0069%" y="815.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (2 samples, 0.01%)</title><rect x="6.7926%" y="789" width="0.0128%" height="15" fill="rgb(248,132,45)" fg:x="1061" fg:w="2"/><text x="7.0069%" y="799.50"></text></g><g><title>Uri::generate[abi:cxx11] (7 samples, 0.04%)</title><rect x="6.8054%" y="821" width="0.0448%" height="15" fill="rgb(254,59,54)" fg:x="1063" fg:w="7"/><text x="7.0197%" y="831.50"></text></g><g><title>std::operator!=&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="6.8310%" y="805" width="0.0192%" height="15" fill="rgb(221,23,49)" fg:x="1067" fg:w="3"/><text x="7.0453%" y="815.50"></text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="6.8374%" y="789" width="0.0128%" height="15" fill="rgb(214,68,17)" fg:x="1068" fg:w="2"/><text x="7.0517%" y="799.50"></text></g><g><title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="6.8886%" y="741" width="0.0128%" height="15" fill="rgb(207,140,3)" fg:x="1076" fg:w="2"/><text x="7.1029%" y="751.50"></text></g><g><title>__dynamic_cast (2 samples, 0.01%)</title><rect x="6.8886%" y="725" width="0.0128%" height="15" fill="rgb(214,65,42)" fg:x="1076" fg:w="2"/><text x="7.1029%" y="735.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (9 samples, 0.06%)</title><rect x="6.8822%" y="757" width="0.0576%" height="15" fill="rgb(237,227,49)" fg:x="1075" fg:w="9"/><text x="7.0965%" y="767.50"></text></g><g><title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.03%)</title><rect x="6.9078%" y="741" width="0.0320%" height="15" fill="rgb(214,68,44)" fg:x="1079" fg:w="5"/><text x="7.1221%" y="751.50"></text></g><g><title>__dynamic_cast (4 samples, 0.03%)</title><rect x="6.9142%" y="725" width="0.0256%" height="15" fill="rgb(214,65,42)" fg:x="1080" fg:w="4"/><text x="7.1285%" y="735.50"></text></g><g><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.01%)</title><rect x="6.9270%" y="709" width="0.0128%" height="15" fill="rgb(228,90,48)" fg:x="1082" fg:w="2"/><text x="7.1413%" y="719.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10 samples, 0.06%)</title><rect x="6.8822%" y="773" width="0.0640%" height="15" fill="rgb(223,206,25)" fg:x="1075" fg:w="10"/><text x="7.0965%" y="783.50"></text></g><g><title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (13 samples, 0.08%)</title><rect x="6.8694%" y="789" width="0.0832%" height="15" fill="rgb(249,22,27)" fg:x="1073" fg:w="13"/><text x="7.0837%" y="799.50"></text></g><g><title>Address::Address (16 samples, 0.10%)</title><rect x="6.8694%" y="805" width="0.1024%" height="15" fill="rgb(231,26,17)" fg:x="1073" fg:w="16"/><text x="7.0837%" y="815.50"></text></g><g><title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_ostringstream (3 samples, 0.02%)</title><rect x="6.9526%" y="789" width="0.0192%" height="15" fill="rgb(209,216,33)" fg:x="1086" fg:w="3"/><text x="7.1669%" y="799.50"></text></g><g><title>Address::operator== (4 samples, 0.03%)</title><rect x="6.9718%" y="805" width="0.0256%" height="15" fill="rgb(246,87,5)" fg:x="1089" fg:w="4"/><text x="7.1861%" y="815.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (8 samples, 0.05%)</title><rect x="7.0038%" y="789" width="0.0512%" height="15" fill="rgb(242,154,52)" fg:x="1094" fg:w="8"/><text x="7.2181%" y="799.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (6 samples, 0.04%)</title><rect x="7.0166%" y="773" width="0.0384%" height="15" fill="rgb(207,227,6)" fg:x="1096" fg:w="6"/><text x="7.2309%" y="783.50"></text></g><g><title>Context::exists (9 samples, 0.06%)</title><rect x="7.0038%" y="805" width="0.0576%" height="15" fill="rgb(247,57,9)" fg:x="1094" fg:w="9"/><text x="7.2181%" y="815.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_S_key (5 samples, 0.03%)</title><rect x="7.1191%" y="725" width="0.0320%" height="15" fill="rgb(224,54,49)" fg:x="1112" fg:w="5"/><text x="7.3334%" y="735.50"></text></g><g><title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_valptr (4 samples, 0.03%)</title><rect x="7.1255%" y="709" width="0.0256%" height="15" fill="rgb(212,56,21)" fg:x="1113" fg:w="4"/><text x="7.3398%" y="719.50"></text></g><g><title>std::__addressof&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; const&gt; (3 samples, 0.02%)</title><rect x="7.1319%" y="693" width="0.0192%" height="15" fill="rgb(214,85,54)" fg:x="1114" fg:w="3"/><text x="7.3462%" y="703.50"></text></g><g><title>Context::getDirective (17 samples, 0.11%)</title><rect x="7.0615%" y="805" width="0.1088%" height="15" fill="rgb(251,123,38)" fg:x="1103" fg:w="17"/><text x="7.2757%" y="815.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator[] (15 samples, 0.10%)</title><rect x="7.0743%" y="789" width="0.0960%" height="15" fill="rgb(241,90,24)" fg:x="1105" fg:w="15"/><text x="7.2885%" y="799.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::lower_bound (10 samples, 0.06%)</title><rect x="7.1063%" y="773" width="0.0640%" height="15" fill="rgb(236,33,33)" fg:x="1110" fg:w="10"/><text x="7.3206%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::lower_bound (8 samples, 0.05%)</title><rect x="7.1191%" y="757" width="0.0512%" height="15" fill="rgb(234,73,1)" fg:x="1112" fg:w="8"/><text x="7.3334%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (8 samples, 0.05%)</title><rect x="7.1191%" y="741" width="0.0512%" height="15" fill="rgb(237,13,3)" fg:x="1112" fg:w="8"/><text x="7.3334%" y="751.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2 samples, 0.01%)</title><rect x="7.1575%" y="725" width="0.0128%" height="15" fill="rgb(228,56,32)" fg:x="1118" fg:w="2"/><text x="7.3718%" y="735.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="7.1575%" y="709" width="0.0128%" height="15" fill="rgb(241,103,2)" fg:x="1118" fg:w="2"/><text x="7.3718%" y="719.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.01%)</title><rect x="7.1575%" y="693" width="0.0128%" height="15" fill="rgb(212,2,49)" fg:x="1118" fg:w="2"/><text x="7.3718%" y="703.50"></text></g><g><title>__gnu_cxx::operator!=&lt;VirtualHost*, std::vector&lt;VirtualHost, std::allocator&lt;VirtualHost&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="7.1767%" y="805" width="0.0128%" height="15" fill="rgb(237,79,24)" fg:x="1121" fg:w="2"/><text x="7.3910%" y="815.50"></text></g><g><title>std::_Rb_tree_const_iterator&lt;Address&gt;::operator++ (6 samples, 0.04%)</title><rect x="7.2023%" y="805" width="0.0384%" height="15" fill="rgb(217,217,31)" fg:x="1125" fg:w="6"/><text x="7.4166%" y="815.50"></text></g><g><title>std::_Rb_tree_increment (6 samples, 0.04%)</title><rect x="7.2023%" y="789" width="0.0384%" height="15" fill="rgb(205,67,33)" fg:x="1125" fg:w="6"/><text x="7.4166%" y="799.50"></text></g><g><title>std::set&lt;Address, std::less&lt;Address&gt;, std::allocator&lt;Address&gt; &gt;::begin (7 samples, 0.04%)</title><rect x="7.2407%" y="805" width="0.0448%" height="15" fill="rgb(227,118,18)" fg:x="1131" fg:w="7"/><text x="7.4550%" y="815.50"></text></g><g><title>std::_Rb_tree&lt;Address, Address, std::_Identity&lt;Address&gt;, std::less&lt;Address&gt;, std::allocator&lt;Address&gt; &gt;::begin (7 samples, 0.04%)</title><rect x="7.2407%" y="789" width="0.0448%" height="15" fill="rgb(217,118,20)" fg:x="1131" fg:w="7"/><text x="7.4550%" y="799.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;VirtualHost**, VirtualHost**, std::allocator&lt;VirtualHost*&gt; &gt; (2 samples, 0.01%)</title><rect x="7.3047%" y="773" width="0.0128%" height="15" fill="rgb(224,185,6)" fg:x="1141" fg:w="2"/><text x="7.5190%" y="783.50"></text></g><g><title>std::vector&lt;VirtualHost*, std::allocator&lt;VirtualHost*&gt; &gt;::push_back (7 samples, 0.04%)</title><rect x="7.2919%" y="805" width="0.0448%" height="15" fill="rgb(250,124,27)" fg:x="1139" fg:w="7"/><text x="7.5062%" y="815.50"></text></g><g><title>std::vector&lt;VirtualHost*, std::allocator&lt;VirtualHost*&gt; &gt;::_M_realloc_insert (6 samples, 0.04%)</title><rect x="7.2983%" y="789" width="0.0384%" height="15" fill="rgb(237,187,46)" fg:x="1140" fg:w="6"/><text x="7.5126%" y="799.50"></text></g><g><title>std::vector&lt;VirtualHost*, std::allocator&lt;VirtualHost*&gt; &gt;::_M_check_len (3 samples, 0.02%)</title><rect x="7.3175%" y="773" width="0.0192%" height="15" fill="rgb(245,51,36)" fg:x="1143" fg:w="3"/><text x="7.5318%" y="783.50"></text></g><g><title>std::vector&lt;VirtualHost*, std::allocator&lt;VirtualHost*&gt; &gt;::max_size (3 samples, 0.02%)</title><rect x="7.3175%" y="757" width="0.0192%" height="15" fill="rgb(238,119,6)" fg:x="1143" fg:w="3"/><text x="7.5318%" y="767.50"></text></g><g><title>std::vector&lt;VirtualHost*, std::allocator&lt;VirtualHost*&gt; &gt;::_S_max_size (2 samples, 0.01%)</title><rect x="7.3239%" y="741" width="0.0128%" height="15" fill="rgb(218,80,15)" fg:x="1144" fg:w="2"/><text x="7.5382%" y="751.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;VirtualHost*&gt;, VirtualHost*&gt;::max_size (2 samples, 0.01%)</title><rect x="7.3239%" y="725" width="0.0128%" height="15" fill="rgb(221,204,47)" fg:x="1144" fg:w="2"/><text x="7.5382%" y="735.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (2 samples, 0.01%)</title><rect x="7.3496%" y="805" width="0.0128%" height="15" fill="rgb(238,104,0)" fg:x="1148" fg:w="2"/><text x="7.5638%" y="815.50"></text></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_base (2 samples, 0.01%)</title><rect x="7.3496%" y="789" width="0.0128%" height="15" fill="rgb(225,180,26)" fg:x="1148" fg:w="2"/><text x="7.5638%" y="799.50"></text></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_create_storage (2 samples, 0.01%)</title><rect x="7.3496%" y="773" width="0.0128%" height="15" fill="rgb(235,219,32)" fg:x="1148" fg:w="2"/><text x="7.5638%" y="783.50"></text></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate (2 samples, 0.01%)</title><rect x="7.3496%" y="757" width="0.0128%" height="15" fill="rgb(254,83,21)" fg:x="1148" fg:w="2"/><text x="7.5638%" y="767.50"></text></g><g><title>VirtualHost::matchVirtualHost (81 samples, 0.52%)</title><rect x="6.8502%" y="821" width="0.5186%" height="15" fill="rgb(209,165,38)" fg:x="1070" fg:w="81"/><text x="7.0645%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.01%)</title><rect x="7.3816%" y="821" width="0.0128%" height="15" fill="rgb(240,176,52)" fg:x="1153" fg:w="2"/><text x="7.5958%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.02%)</title><rect x="7.3944%" y="821" width="0.0192%" height="15" fill="rgb(254,182,12)" fg:x="1155" fg:w="3"/><text x="7.6087%" y="831.50"></text></g><g><title>operator new (2 samples, 0.01%)</title><rect x="7.4008%" y="805" width="0.0128%" height="15" fill="rgb(214,91,1)" fg:x="1156" fg:w="2"/><text x="7.6151%" y="815.50"></text></g><g><title>__libc_malloc (2 samples, 0.01%)</title><rect x="7.4008%" y="789" width="0.0128%" height="15" fill="rgb(232,24,50)" fg:x="1156" fg:w="2"/><text x="7.6151%" y="799.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="7.4328%" y="773" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="1161" fg:w="2"/><text x="7.6471%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (5 samples, 0.03%)</title><rect x="7.4328%" y="805" width="0.0320%" height="15" fill="rgb(216,50,33)" fg:x="1161" fg:w="5"/><text x="7.6471%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (5 samples, 0.03%)</title><rect x="7.4328%" y="789" width="0.0320%" height="15" fill="rgb(250,46,35)" fg:x="1161" fg:w="5"/><text x="7.6471%" y="799.50"></text></g><g><title>operator new (2 samples, 0.01%)</title><rect x="7.4520%" y="773" width="0.0128%" height="15" fill="rgb(214,91,1)" fg:x="1164" fg:w="2"/><text x="7.6663%" y="783.50"></text></g><g><title>__libc_malloc (2 samples, 0.01%)</title><rect x="7.4520%" y="757" width="0.0128%" height="15" fill="rgb(232,24,50)" fg:x="1164" fg:w="2"/><text x="7.6663%" y="767.50"></text></g><g><title>operator new (2 samples, 0.01%)</title><rect x="7.4648%" y="789" width="0.0128%" height="15" fill="rgb(214,91,1)" fg:x="1166" fg:w="2"/><text x="7.6791%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.03%)</title><rect x="7.4648%" y="805" width="0.0320%" height="15" fill="rgb(254,182,12)" fg:x="1166" fg:w="5"/><text x="7.6791%" y="815.50"></text></g><g><title>std::distance&lt;char*&gt; (2 samples, 0.01%)</title><rect x="7.4840%" y="789" width="0.0128%" height="15" fill="rgb(213,138,18)" fg:x="1169" fg:w="2"/><text x="7.6983%" y="799.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14 samples, 0.09%)</title><rect x="7.4200%" y="821" width="0.0896%" height="15" fill="rgb(226,32,40)" fg:x="1159" fg:w="14"/><text x="7.6343%" y="831.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.04%)</title><rect x="7.5992%" y="725" width="0.0448%" height="15" fill="rgb(247,113,52)" fg:x="1187" fg:w="7"/><text x="7.8135%" y="735.50"></text></g><g><title>inet_ntop (20 samples, 0.13%)</title><rect x="7.5224%" y="789" width="0.1280%" height="15" fill="rgb(221,131,48)" fg:x="1175" fg:w="20"/><text x="7.7367%" y="799.50"></text></g><g><title>sprintf (18 samples, 0.12%)</title><rect x="7.5352%" y="773" width="0.1152%" height="15" fill="rgb(213,81,41)" fg:x="1177" fg:w="18"/><text x="7.7495%" y="783.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.12%)</title><rect x="7.5352%" y="757" width="0.1152%" height="15" fill="rgb(247,113,52)" fg:x="1177" fg:w="18"/><text x="7.7495%" y="767.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.11%)</title><rect x="7.5416%" y="741" width="0.1088%" height="15" fill="rgb(247,113,52)" fg:x="1178" fg:w="17"/><text x="7.7559%" y="751.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (4 samples, 0.03%)</title><rect x="7.6569%" y="757" width="0.0256%" height="15" fill="rgb(213,123,36)" fg:x="1196" fg:w="4"/><text x="7.8711%" y="767.50"></text></g><g><title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (6 samples, 0.04%)</title><rect x="7.6504%" y="789" width="0.0384%" height="15" fill="rgb(221,154,13)" fg:x="1195" fg:w="6"/><text x="7.8647%" y="799.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (6 samples, 0.04%)</title><rect x="7.6504%" y="773" width="0.0384%" height="15" fill="rgb(222,170,8)" fg:x="1195" fg:w="6"/><text x="7.8647%" y="783.50"></text></g><g><title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (9 samples, 0.06%)</title><rect x="7.6953%" y="773" width="0.0576%" height="15" fill="rgb(244,144,25)" fg:x="1202" fg:w="9"/><text x="7.9095%" y="783.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (6 samples, 0.04%)</title><rect x="7.7145%" y="757" width="0.0384%" height="15" fill="rgb(213,123,36)" fg:x="1205" fg:w="6"/><text x="7.9288%" y="767.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (5 samples, 0.03%)</title><rect x="7.7209%" y="741" width="0.0320%" height="15" fill="rgb(226,199,5)" fg:x="1206" fg:w="5"/><text x="7.9352%" y="751.50"></text></g><g><title>operator&lt;&lt; (38 samples, 0.24%)</title><rect x="7.5160%" y="805" width="0.2433%" height="15" fill="rgb(206,204,30)" fg:x="1174" fg:w="38"/><text x="7.7303%" y="815.50"></text></g><g><title>std::ostream::_M_insert&lt;unsigned long&gt; (11 samples, 0.07%)</title><rect x="7.6889%" y="789" width="0.0704%" height="15" fill="rgb(226,22,13)" fg:x="1201" fg:w="11"/><text x="7.9031%" y="799.50"></text></g><g><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.01%)</title><rect x="7.8233%" y="725" width="0.0128%" height="15" fill="rgb(228,90,48)" fg:x="1222" fg:w="2"/><text x="8.0376%" y="735.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="7.8233%" y="709" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="1222" fg:w="2"/><text x="8.0376%" y="719.50"></text></g><g><title>__dynamic_cast (3 samples, 0.02%)</title><rect x="7.8233%" y="741" width="0.0192%" height="15" fill="rgb(214,65,42)" fg:x="1222" fg:w="3"/><text x="8.0376%" y="751.50"></text></g><g><title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (8 samples, 0.05%)</title><rect x="7.7977%" y="757" width="0.0512%" height="15" fill="rgb(215,60,9)" fg:x="1218" fg:w="8"/><text x="8.0120%" y="767.50"></text></g><g><title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (6 samples, 0.04%)</title><rect x="7.8553%" y="757" width="0.0384%" height="15" fill="rgb(243,107,3)" fg:x="1227" fg:w="6"/><text x="8.0696%" y="767.50"></text></g><g><title>__dynamic_cast (4 samples, 0.03%)</title><rect x="7.8681%" y="741" width="0.0256%" height="15" fill="rgb(214,65,42)" fg:x="1229" fg:w="4"/><text x="8.0824%" y="751.50"></text></g><g><title>__cxxabiv1::__si_class_type_info::__do_dyncast (3 samples, 0.02%)</title><rect x="7.8745%" y="725" width="0.0192%" height="15" fill="rgb(253,149,54)" fg:x="1230" fg:w="3"/><text x="8.0888%" y="735.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (18 samples, 0.12%)</title><rect x="7.7849%" y="773" width="0.1152%" height="15" fill="rgb(237,227,49)" fg:x="1216" fg:w="18"/><text x="7.9992%" y="783.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (21 samples, 0.13%)</title><rect x="7.7785%" y="789" width="0.1344%" height="15" fill="rgb(223,206,25)" fg:x="1215" fg:w="21"/><text x="7.9928%" y="799.50"></text></g><g><title>std::ios_base::_M_init (2 samples, 0.01%)</title><rect x="7.9001%" y="773" width="0.0128%" height="15" fill="rgb(211,168,7)" fg:x="1234" fg:w="2"/><text x="8.1144%" y="783.50"></text></g><g><title>std::ios_base::ios_base (2 samples, 0.01%)</title><rect x="7.9129%" y="789" width="0.0128%" height="15" fill="rgb(227,77,35)" fg:x="1236" fg:w="2"/><text x="8.1272%" y="799.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (27 samples, 0.17%)</title><rect x="7.7593%" y="805" width="0.1729%" height="15" fill="rgb(230,13,26)" fg:x="1212" fg:w="27"/><text x="7.9736%" y="815.50"></text></g><g><title>Http::OnHeadRecv (1,209 samples, 7.74%)</title><rect x="0.2113%" y="837" width="7.7401%" height="15" fill="rgb(217,223,8)" fg:x="33" fg:w="1209"/><text x="0.4256%" y="847.50">Http::OnHeadR..</text></g><g><title>toString&lt;Address&amp;&gt; (69 samples, 0.44%)</title><rect x="7.5096%" y="821" width="0.4417%" height="15" fill="rgb(233,146,38)" fg:x="1173" fg:w="69"/><text x="7.7239%" y="831.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (2 samples, 0.01%)</title><rect x="7.9385%" y="805" width="0.0128%" height="15" fill="rgb(221,29,6)" fg:x="1240" fg:w="2"/><text x="8.1528%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (3 samples, 0.02%)</title><rect x="7.9513%" y="837" width="0.0192%" height="15" fill="rgb(217,130,49)" fg:x="1242" fg:w="3"/><text x="8.1656%" y="847.50"></text></g><g><title>AConnection::passReadBuffer (1,216 samples, 7.78%)</title><rect x="0.2049%" y="853" width="7.7849%" height="15" fill="rgb(214,198,32)" fg:x="32" fg:w="1216"/><text x="0.4192%" y="863.50">AConnection::..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (3 samples, 0.02%)</title><rect x="7.9706%" y="837" width="0.0192%" height="15" fill="rgb(237,70,52)" fg:x="1245" fg:w="3"/><text x="8.1848%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.01%)</title><rect x="7.9770%" y="821" width="0.0128%" height="15" fill="rgb(240,176,52)" fg:x="1246" fg:w="2"/><text x="8.1912%" y="831.50"></text></g><g><title>__irqentry_text_start (38 samples, 0.24%)</title><rect x="8.0026%" y="837" width="0.2433%" height="15" fill="rgb(229,107,3)" fg:x="1250" fg:w="38"/><text x="8.2168%" y="847.50"></text></g><g><title>import_single_range (2 samples, 0.01%)</title><rect x="8.3035%" y="773" width="0.0128%" height="15" fill="rgb(208,154,40)" fg:x="1297" fg:w="2"/><text x="8.5177%" y="783.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="8.3739%" y="741" width="0.0256%" height="15" fill="rgb(229,107,3)" fg:x="1308" fg:w="4"/><text x="8.5882%" y="751.50"></text></g><g><title>kfree (2 samples, 0.01%)</title><rect x="8.4123%" y="725" width="0.0128%" height="15" fill="rgb(222,6,37)" fg:x="1314" fg:w="2"/><text x="8.6266%" y="735.50"></text></g><g><title>__kfree_skb (7 samples, 0.04%)</title><rect x="8.3995%" y="741" width="0.0448%" height="15" fill="rgb(208,195,26)" fg:x="1312" fg:w="7"/><text x="8.6138%" y="751.50"></text></g><g><title>skb_release_head_state (2 samples, 0.01%)</title><rect x="8.4315%" y="725" width="0.0128%" height="15" fill="rgb(221,1,22)" fg:x="1317" fg:w="2"/><text x="8.6458%" y="735.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.02%)</title><rect x="8.4443%" y="741" width="0.0192%" height="15" fill="rgb(252,29,18)" fg:x="1319" fg:w="3"/><text x="8.6586%" y="751.50"></text></g><g><title>release_sock (4 samples, 0.03%)</title><rect x="8.4827%" y="741" width="0.0256%" height="15" fill="rgb(217,78,19)" fg:x="1325" fg:w="4"/><text x="8.6970%" y="751.50"></text></g><g><title>_copy_to_iter (3 samples, 0.02%)</title><rect x="8.5659%" y="709" width="0.0192%" height="15" fill="rgb(220,50,42)" fg:x="1338" fg:w="3"/><text x="8.7802%" y="719.50"></text></g><g><title>copy_user_generic_string (3 samples, 0.02%)</title><rect x="8.5659%" y="693" width="0.0192%" height="15" fill="rgb(233,29,30)" fg:x="1338" fg:w="3"/><text x="8.7802%" y="703.50"></text></g><g><title>skb_copy_datagram_iter (16 samples, 0.10%)</title><rect x="8.5083%" y="741" width="0.1024%" height="15" fill="rgb(241,149,22)" fg:x="1329" fg:w="16"/><text x="8.7226%" y="751.50"></text></g><g><title>__skb_datagram_iter (12 samples, 0.08%)</title><rect x="8.5339%" y="725" width="0.0768%" height="15" fill="rgb(248,96,51)" fg:x="1333" fg:w="12"/><text x="8.7482%" y="735.50"></text></g><g><title>simple_copy_to_iter (4 samples, 0.03%)</title><rect x="8.5851%" y="709" width="0.0256%" height="15" fill="rgb(239,76,11)" fg:x="1341" fg:w="4"/><text x="8.7994%" y="719.50"></text></g><g><title>__check_object_size (2 samples, 0.01%)</title><rect x="8.5980%" y="693" width="0.0128%" height="15" fill="rgb(218,1,22)" fg:x="1343" fg:w="2"/><text x="8.8122%" y="703.50"></text></g><g><title>__virt_addr_valid (2 samples, 0.01%)</title><rect x="8.5980%" y="677" width="0.0128%" height="15" fill="rgb(216,204,49)" fg:x="1343" fg:w="2"/><text x="8.8122%" y="687.50"></text></g><g><title>inet_recvmsg (48 samples, 0.31%)</title><rect x="8.3163%" y="773" width="0.3073%" height="15" fill="rgb(247,19,13)" fg:x="1299" fg:w="48"/><text x="8.5305%" y="783.50"></text></g><g><title>tcp_recvmsg (48 samples, 0.31%)</title><rect x="8.3163%" y="757" width="0.3073%" height="15" fill="rgb(228,39,8)" fg:x="1299" fg:w="48"/><text x="8.5305%" y="767.50"></text></g><g><title>tcp_rcv_space_adjust (2 samples, 0.01%)</title><rect x="8.6108%" y="741" width="0.0128%" height="15" fill="rgb(251,209,13)" fg:x="1345" fg:w="2"/><text x="8.8250%" y="751.50"></text></g><g><title>aa_sk_perm (9 samples, 0.06%)</title><rect x="8.6620%" y="741" width="0.0576%" height="15" fill="rgb(235,5,54)" fg:x="1353" fg:w="9"/><text x="8.8763%" y="751.50"></text></g><g><title>sock_recvmsg (16 samples, 0.10%)</title><rect x="8.6236%" y="773" width="0.1024%" height="15" fill="rgb(241,13,25)" fg:x="1347" fg:w="16"/><text x="8.8378%" y="783.50"></text></g><g><title>security_socket_recvmsg (13 samples, 0.08%)</title><rect x="8.6428%" y="757" width="0.0832%" height="15" fill="rgb(251,47,32)" fg:x="1350" fg:w="13"/><text x="8.8571%" y="767.50"></text></g><g><title>do_syscall_64 (75 samples, 0.48%)</title><rect x="8.2586%" y="821" width="0.4802%" height="15" fill="rgb(220,74,14)" fg:x="1290" fg:w="75"/><text x="8.4729%" y="831.50"></text></g><g><title>__x64_sys_recvfrom (74 samples, 0.47%)</title><rect x="8.2650%" y="805" width="0.4738%" height="15" fill="rgb(244,149,45)" fg:x="1291" fg:w="74"/><text x="8.4793%" y="815.50"></text></g><g><title>__sys_recvfrom (73 samples, 0.47%)</title><rect x="8.2714%" y="789" width="0.4673%" height="15" fill="rgb(223,213,54)" fg:x="1292" fg:w="73"/><text x="8.4857%" y="799.50"></text></g><g><title>sockfd_lookup_light (2 samples, 0.01%)</title><rect x="8.7260%" y="773" width="0.0128%" height="15" fill="rgb(234,43,45)" fg:x="1363" fg:w="2"/><text x="8.9403%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (77 samples, 0.49%)</title><rect x="8.2586%" y="837" width="0.4930%" height="15" fill="rgb(205,226,15)" fg:x="1290" fg:w="77"/><text x="8.4729%" y="847.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.01%)</title><rect x="8.7388%" y="821" width="0.0128%" height="15" fill="rgb(215,101,28)" fg:x="1365" fg:w="2"/><text x="8.9531%" y="831.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="8.7388%" y="805" width="0.0128%" height="15" fill="rgb(240,77,26)" fg:x="1365" fg:w="2"/><text x="8.9531%" y="815.50"></text></g><g><title>__recv (119 samples, 0.76%)</title><rect x="7.9962%" y="853" width="0.7618%" height="15" fill="rgb(241,155,16)" fg:x="1249" fg:w="119"/><text x="8.2104%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (6 samples, 0.04%)</title><rect x="8.7708%" y="837" width="0.0384%" height="15" fill="rgb(254,182,12)" fg:x="1370" fg:w="6"/><text x="8.9851%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (3 samples, 0.02%)</title><rect x="8.7900%" y="821" width="0.0192%" height="15" fill="rgb(241,200,23)" fg:x="1373" fg:w="3"/><text x="9.0043%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.02%)</title><rect x="8.7900%" y="805" width="0.0192%" height="15" fill="rgb(254,182,12)" fg:x="1373" fg:w="3"/><text x="9.0043%" y="815.50"></text></g><g><title>operator new (2 samples, 0.01%)</title><rect x="8.7964%" y="789" width="0.0128%" height="15" fill="rgb(214,91,1)" fg:x="1374" fg:w="2"/><text x="9.0107%" y="799.50"></text></g><g><title>__libc_malloc (2 samples, 0.01%)</title><rect x="8.7964%" y="773" width="0.0128%" height="15" fill="rgb(232,24,50)" fg:x="1374" fg:w="2"/><text x="9.0107%" y="783.50"></text></g><g><title>AConnection::onPollIn (1,347 samples, 8.62%)</title><rect x="0.1921%" y="869" width="8.6236%" height="15" fill="rgb(238,25,4)" fg:x="30" fg:w="1347"/><text x="0.4063%" y="879.50">AConnection::on..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt; (8 samples, 0.05%)</title><rect x="8.7644%" y="853" width="0.0512%" height="15" fill="rgb(217,84,11)" fg:x="1369" fg:w="8"/><text x="8.9787%" y="863.50"></text></g><g><title>__irqentry_text_start (11 samples, 0.07%)</title><rect x="8.8412%" y="853" width="0.0704%" height="15" fill="rgb(229,107,3)" fg:x="1381" fg:w="11"/><text x="9.0555%" y="863.50"></text></g><g><title>__write (12 samples, 0.08%)</title><rect x="8.8412%" y="869" width="0.0768%" height="15" fill="rgb(227,101,21)" fg:x="1381" fg:w="12"/><text x="9.0555%" y="879.50"></text></g><g><title>close (9 samples, 0.06%)</title><rect x="8.9181%" y="869" width="0.0576%" height="15" fill="rgb(227,142,28)" fg:x="1393" fg:w="9"/><text x="9.1323%" y="879.50"></text></g><g><title>__irqentry_text_start (9 samples, 0.06%)</title><rect x="8.9181%" y="853" width="0.0576%" height="15" fill="rgb(229,107,3)" fg:x="1393" fg:w="9"/><text x="9.1323%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.01%)</title><rect x="8.9821%" y="869" width="0.0128%" height="15" fill="rgb(250,46,35)" fg:x="1403" fg:w="2"/><text x="9.1964%" y="879.50"></text></g><g><title>__dynamic_cast (2 samples, 0.01%)</title><rect x="9.0269%" y="789" width="0.0128%" height="15" fill="rgb(214,65,42)" fg:x="1410" fg:w="2"/><text x="9.2412%" y="799.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="9.0269%" y="773" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="1410" fg:w="2"/><text x="9.2412%" y="783.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (4 samples, 0.03%)</title><rect x="9.0205%" y="837" width="0.0256%" height="15" fill="rgb(223,206,25)" fg:x="1409" fg:w="4"/><text x="9.2348%" y="847.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (4 samples, 0.03%)</title><rect x="9.0205%" y="821" width="0.0256%" height="15" fill="rgb(237,227,49)" fg:x="1409" fg:w="4"/><text x="9.2348%" y="831.50"></text></g><g><title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (3 samples, 0.02%)</title><rect x="9.0269%" y="805" width="0.0192%" height="15" fill="rgb(207,56,42)" fg:x="1410" fg:w="3"/><text x="9.2412%" y="815.50"></text></g><g><title>[unknown] (1,384 samples, 8.86%)</title><rect x="0.1921%" y="885" width="8.8604%" height="15" fill="rgb(227,28,50)" fg:x="30" fg:w="1384"/><text x="0.4063%" y="895.50">[unknown]</text></g><g><title>toString&lt;Address&amp;&gt; (5 samples, 0.03%)</title><rect x="9.0205%" y="869" width="0.0320%" height="15" fill="rgb(233,146,38)" fg:x="1409" fg:w="5"/><text x="9.2348%" y="879.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (5 samples, 0.03%)</title><rect x="9.0205%" y="853" width="0.0320%" height="15" fill="rgb(230,13,26)" fg:x="1409" fg:w="5"/><text x="9.2348%" y="863.50"></text></g><g><title>Poll::getInstance (3 samples, 0.02%)</title><rect x="12.1959%" y="757" width="0.0192%" height="15" fill="rgb(237,174,43)" fg:x="1905" fg:w="3"/><text x="12.4102%" y="767.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="12.2151%" y="757" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="767.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="12.2151%" y="741" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="751.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="12.2151%" y="725" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="735.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="12.2151%" y="709" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="719.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="12.2151%" y="693" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="703.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="12.2151%" y="677" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="687.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="12.2151%" y="661" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="671.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="12.2151%" y="645" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="655.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="12.2151%" y="629" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="639.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="12.2151%" y="613" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="623.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="12.2151%" y="597" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="607.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="12.2151%" y="581" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="591.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="12.2151%" y="565" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="1908" fg:w="2"/><text x="12.4294%" y="575.50"></text></g><g><title>Poll::setTimeout (23 samples, 0.15%)</title><rect x="12.0871%" y="773" width="0.1472%" height="15" fill="rgb(227,76,18)" fg:x="1888" fg:w="23"/><text x="12.3014%" y="783.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="12.2343%" y="773" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="1911" fg:w="2"/><text x="12.4486%" y="783.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="13.3291%" y="453" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="2082" fg:w="2"/><text x="13.5434%" y="463.50"></text></g><g><title>net_rx_action (5 samples, 0.03%)</title><rect x="13.3163%" y="645" width="0.0320%" height="15" fill="rgb(231,11,52)" fg:x="2080" fg:w="5"/><text x="13.5305%" y="655.50"></text></g><g><title>virtnet_poll (5 samples, 0.03%)</title><rect x="13.3163%" y="629" width="0.0320%" height="15" fill="rgb(213,187,12)" fg:x="2080" fg:w="5"/><text x="13.5305%" y="639.50"></text></g><g><title>napi_complete_done (5 samples, 0.03%)</title><rect x="13.3163%" y="613" width="0.0320%" height="15" fill="rgb(226,216,13)" fg:x="2080" fg:w="5"/><text x="13.5305%" y="623.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="13.3227%" y="597" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="2081" fg:w="4"/><text x="13.5369%" y="607.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="13.3227%" y="581" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="2081" fg:w="4"/><text x="13.5369%" y="591.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="13.3227%" y="565" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="2081" fg:w="4"/><text x="13.5369%" y="575.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="13.3227%" y="549" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="2081" fg:w="4"/><text x="13.5369%" y="559.50"></text></g><g><title>ip_sublist_rcv_finish (4 samples, 0.03%)</title><rect x="13.3227%" y="533" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="2081" fg:w="4"/><text x="13.5369%" y="543.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="13.3227%" y="517" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="2081" fg:w="4"/><text x="13.5369%" y="527.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="13.3227%" y="501" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="2081" fg:w="4"/><text x="13.5369%" y="511.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="13.3291%" y="485" width="0.0192%" height="15" fill="rgb(224,38,0)" fg:x="2082" fg:w="3"/><text x="13.5434%" y="495.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="13.3291%" y="469" width="0.0192%" height="15" fill="rgb(228,220,18)" fg:x="2082" fg:w="3"/><text x="13.5434%" y="479.50"></text></g><g><title>common_interrupt (7 samples, 0.04%)</title><rect x="13.3163%" y="725" width="0.0448%" height="15" fill="rgb(250,67,32)" fg:x="2080" fg:w="7"/><text x="13.5305%" y="735.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.04%)</title><rect x="13.3163%" y="709" width="0.0448%" height="15" fill="rgb(240,18,12)" fg:x="2080" fg:w="7"/><text x="13.5305%" y="719.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.04%)</title><rect x="13.3163%" y="693" width="0.0448%" height="15" fill="rgb(223,89,53)" fg:x="2080" fg:w="7"/><text x="13.5305%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (7 samples, 0.04%)</title><rect x="13.3163%" y="677" width="0.0448%" height="15" fill="rgb(208,184,36)" fg:x="2080" fg:w="7"/><text x="13.5305%" y="687.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.04%)</title><rect x="13.3163%" y="661" width="0.0448%" height="15" fill="rgb(249,91,22)" fg:x="2080" fg:w="7"/><text x="13.5305%" y="671.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.01%)</title><rect x="13.3483%" y="645" width="0.0128%" height="15" fill="rgb(220,151,48)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="655.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.01%)</title><rect x="13.3483%" y="629" width="0.0128%" height="15" fill="rgb(218,189,37)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="639.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.01%)</title><rect x="13.3483%" y="613" width="0.0128%" height="15" fill="rgb(238,207,14)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="623.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="13.3483%" y="597" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="607.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="13.3483%" y="581" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="591.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="13.3483%" y="565" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="575.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="13.3483%" y="549" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="559.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="13.3483%" y="533" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="543.50"></text></g><g><title>__qdisc_run (2 samples, 0.01%)</title><rect x="13.3483%" y="517" width="0.0128%" height="15" fill="rgb(252,144,25)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="527.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="13.3483%" y="501" width="0.0128%" height="15" fill="rgb(222,128,44)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="511.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="13.3483%" y="485" width="0.0128%" height="15" fill="rgb(251,86,39)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="495.50"></text></g><g><title>start_xmit (2 samples, 0.01%)</title><rect x="13.3483%" y="469" width="0.0128%" height="15" fill="rgb(211,140,13)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="479.50"></text></g><g><title>virtqueue_notify (2 samples, 0.01%)</title><rect x="13.3483%" y="453" width="0.0128%" height="15" fill="rgb(219,119,18)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="463.50"></text></g><g><title>vp_notify (2 samples, 0.01%)</title><rect x="13.3483%" y="437" width="0.0128%" height="15" fill="rgb(230,193,37)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="447.50"></text></g><g><title>iowrite16 (2 samples, 0.01%)</title><rect x="13.3483%" y="421" width="0.0128%" height="15" fill="rgb(218,139,37)" fg:x="2085" fg:w="2"/><text x="13.5626%" y="431.50"></text></g><g><title>asm_common_interrupt (9 samples, 0.06%)</title><rect x="13.3163%" y="741" width="0.0576%" height="15" fill="rgb(248,227,45)" fg:x="2080" fg:w="9"/><text x="13.5305%" y="751.50"></text></g><g><title>irqentry_exit_to_user_mode (2 samples, 0.01%)</title><rect x="13.3611%" y="725" width="0.0128%" height="15" fill="rgb(229,166,35)" fg:x="2087" fg:w="2"/><text x="13.5754%" y="735.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="13.3611%" y="709" width="0.0128%" height="15" fill="rgb(240,77,26)" fg:x="2087" fg:w="2"/><text x="13.5754%" y="719.50"></text></g><g><title>[[vdso]] (130 samples, 0.83%)</title><rect x="12.5480%" y="757" width="0.8323%" height="15" fill="rgb(229,169,17)" fg:x="1960" fg:w="130"/><text x="12.7623%" y="767.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="13.4059%" y="469" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="2094" fg:w="2"/><text x="13.6202%" y="479.50"></text></g><g><title>__vdso_gettimeofday (184 samples, 1.18%)</title><rect x="12.2471%" y="773" width="1.1780%" height="15" fill="rgb(246,114,18)" fg:x="1913" fg:w="184"/><text x="12.4614%" y="783.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.04%)</title><rect x="13.3867%" y="757" width="0.0384%" height="15" fill="rgb(248,227,45)" fg:x="2091" fg:w="6"/><text x="13.6010%" y="767.50"></text></g><g><title>common_interrupt (6 samples, 0.04%)</title><rect x="13.3867%" y="741" width="0.0384%" height="15" fill="rgb(250,67,32)" fg:x="2091" fg:w="6"/><text x="13.6010%" y="751.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.03%)</title><rect x="13.3931%" y="725" width="0.0320%" height="15" fill="rgb(240,18,12)" fg:x="2092" fg:w="5"/><text x="13.6074%" y="735.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.03%)</title><rect x="13.3931%" y="709" width="0.0320%" height="15" fill="rgb(223,89,53)" fg:x="2092" fg:w="5"/><text x="13.6074%" y="719.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.03%)</title><rect x="13.3931%" y="693" width="0.0320%" height="15" fill="rgb(208,184,36)" fg:x="2092" fg:w="5"/><text x="13.6074%" y="703.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.03%)</title><rect x="13.3931%" y="677" width="0.0320%" height="15" fill="rgb(249,91,22)" fg:x="2092" fg:w="5"/><text x="13.6074%" y="687.50"></text></g><g><title>net_rx_action (5 samples, 0.03%)</title><rect x="13.3931%" y="661" width="0.0320%" height="15" fill="rgb(231,11,52)" fg:x="2092" fg:w="5"/><text x="13.6074%" y="671.50"></text></g><g><title>virtnet_poll (5 samples, 0.03%)</title><rect x="13.3931%" y="645" width="0.0320%" height="15" fill="rgb(213,187,12)" fg:x="2092" fg:w="5"/><text x="13.6074%" y="655.50"></text></g><g><title>napi_complete_done (5 samples, 0.03%)</title><rect x="13.3931%" y="629" width="0.0320%" height="15" fill="rgb(226,216,13)" fg:x="2092" fg:w="5"/><text x="13.6074%" y="639.50"></text></g><g><title>netif_receive_skb_list_internal (5 samples, 0.03%)</title><rect x="13.3931%" y="613" width="0.0320%" height="15" fill="rgb(216,153,44)" fg:x="2092" fg:w="5"/><text x="13.6074%" y="623.50"></text></g><g><title>__netif_receive_skb_list_core (5 samples, 0.03%)</title><rect x="13.3931%" y="597" width="0.0320%" height="15" fill="rgb(227,176,26)" fg:x="2092" fg:w="5"/><text x="13.6074%" y="607.50"></text></g><g><title>ip_list_rcv (5 samples, 0.03%)</title><rect x="13.3931%" y="581" width="0.0320%" height="15" fill="rgb(215,38,16)" fg:x="2092" fg:w="5"/><text x="13.6074%" y="591.50"></text></g><g><title>ip_sublist_rcv (5 samples, 0.03%)</title><rect x="13.3931%" y="565" width="0.0320%" height="15" fill="rgb(207,166,9)" fg:x="2092" fg:w="5"/><text x="13.6074%" y="575.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="13.4059%" y="549" width="0.0192%" height="15" fill="rgb(223,178,14)" fg:x="2094" fg:w="3"/><text x="13.6202%" y="559.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="13.4059%" y="533" width="0.0192%" height="15" fill="rgb(220,94,29)" fg:x="2094" fg:w="3"/><text x="13.6202%" y="543.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.02%)</title><rect x="13.4059%" y="517" width="0.0192%" height="15" fill="rgb(207,19,13)" fg:x="2094" fg:w="3"/><text x="13.6202%" y="527.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="13.4059%" y="501" width="0.0192%" height="15" fill="rgb(224,38,0)" fg:x="2094" fg:w="3"/><text x="13.6202%" y="511.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="13.4059%" y="485" width="0.0192%" height="15" fill="rgb(228,220,18)" fg:x="2094" fg:w="3"/><text x="13.6202%" y="495.50"></text></g><g><title>handle_edge_irq (2 samples, 0.01%)</title><rect x="13.4251%" y="741" width="0.0128%" height="15" fill="rgb(219,15,9)" fg:x="2097" fg:w="2"/><text x="13.6394%" y="751.50"></text></g><g><title>handle_irq_event (2 samples, 0.01%)</title><rect x="13.4251%" y="725" width="0.0128%" height="15" fill="rgb(209,73,52)" fg:x="2097" fg:w="2"/><text x="13.6394%" y="735.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="13.4251%" y="709" width="0.0128%" height="15" fill="rgb(239,110,26)" fg:x="2097" fg:w="2"/><text x="13.6394%" y="719.50"></text></g><g><title>vring_interrupt (2 samples, 0.01%)</title><rect x="13.4251%" y="693" width="0.0128%" height="15" fill="rgb(206,212,41)" fg:x="2097" fg:w="2"/><text x="13.6394%" y="703.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="13.4379%" y="645" width="0.0192%" height="15" fill="rgb(226,216,13)" fg:x="2099" fg:w="3"/><text x="13.6522%" y="655.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="13.4379%" y="629" width="0.0192%" height="15" fill="rgb(216,153,44)" fg:x="2099" fg:w="3"/><text x="13.6522%" y="639.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="13.4379%" y="613" width="0.0192%" height="15" fill="rgb(227,176,26)" fg:x="2099" fg:w="3"/><text x="13.6522%" y="623.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="13.4379%" y="597" width="0.0192%" height="15" fill="rgb(215,38,16)" fg:x="2099" fg:w="3"/><text x="13.6522%" y="607.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="13.4379%" y="581" width="0.0192%" height="15" fill="rgb(207,166,9)" fg:x="2099" fg:w="3"/><text x="13.6522%" y="591.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="13.4379%" y="565" width="0.0192%" height="15" fill="rgb(223,178,14)" fg:x="2099" fg:w="3"/><text x="13.6522%" y="575.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="13.4379%" y="549" width="0.0192%" height="15" fill="rgb(220,94,29)" fg:x="2099" fg:w="3"/><text x="13.6522%" y="559.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.02%)</title><rect x="13.4379%" y="533" width="0.0192%" height="15" fill="rgb(207,19,13)" fg:x="2099" fg:w="3"/><text x="13.6522%" y="543.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="13.4443%" y="517" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="2100" fg:w="2"/><text x="13.6586%" y="527.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="13.4443%" y="501" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="2100" fg:w="2"/><text x="13.6586%" y="511.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="13.4443%" y="485" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="2100" fg:w="2"/><text x="13.6586%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="13.4443%" y="469" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="2100" fg:w="2"/><text x="13.6586%" y="479.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="13.4443%" y="453" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="2100" fg:w="2"/><text x="13.6586%" y="463.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="13.4379%" y="677" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="2099" fg:w="4"/><text x="13.6522%" y="687.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="13.4379%" y="661" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="2099" fg:w="4"/><text x="13.6522%" y="671.50"></text></g><g><title>common_interrupt (8 samples, 0.05%)</title><rect x="13.4251%" y="757" width="0.0512%" height="15" fill="rgb(250,67,32)" fg:x="2097" fg:w="8"/><text x="13.6394%" y="767.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.04%)</title><rect x="13.4379%" y="741" width="0.0384%" height="15" fill="rgb(240,18,12)" fg:x="2099" fg:w="6"/><text x="13.6522%" y="751.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.04%)</title><rect x="13.4379%" y="725" width="0.0384%" height="15" fill="rgb(223,89,53)" fg:x="2099" fg:w="6"/><text x="13.6522%" y="735.50"></text></g><g><title>asm_call_sysvec_on_stack (6 samples, 0.04%)</title><rect x="13.4379%" y="709" width="0.0384%" height="15" fill="rgb(208,184,36)" fg:x="2099" fg:w="6"/><text x="13.6522%" y="719.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.04%)</title><rect x="13.4379%" y="693" width="0.0384%" height="15" fill="rgb(249,91,22)" fg:x="2099" fg:w="6"/><text x="13.6522%" y="703.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.01%)</title><rect x="13.4635%" y="677" width="0.0128%" height="15" fill="rgb(220,151,48)" fg:x="2103" fg:w="2"/><text x="13.6778%" y="687.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.01%)</title><rect x="13.4635%" y="661" width="0.0128%" height="15" fill="rgb(218,189,37)" fg:x="2103" fg:w="2"/><text x="13.6778%" y="671.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.01%)</title><rect x="13.4635%" y="645" width="0.0128%" height="15" fill="rgb(238,207,14)" fg:x="2103" fg:w="2"/><text x="13.6778%" y="655.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="13.4635%" y="629" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="2103" fg:w="2"/><text x="13.6778%" y="639.50"></text></g><g><title>asm_common_interrupt (9 samples, 0.06%)</title><rect x="13.4251%" y="773" width="0.0576%" height="15" fill="rgb(248,227,45)" fg:x="2097" fg:w="9"/><text x="13.6394%" y="783.50"></text></g><g><title>__irqentry_text_start (6 samples, 0.04%)</title><rect x="15.4673%" y="757" width="0.0384%" height="15" fill="rgb(229,107,3)" fg:x="2416" fg:w="6"/><text x="15.6816%" y="767.50"></text></g><g><title>handle_edge_irq (2 samples, 0.01%)</title><rect x="15.5122%" y="725" width="0.0128%" height="15" fill="rgb(219,15,9)" fg:x="2423" fg:w="2"/><text x="15.7264%" y="735.50"></text></g><g><title>handle_irq_event (2 samples, 0.01%)</title><rect x="15.5122%" y="709" width="0.0128%" height="15" fill="rgb(209,73,52)" fg:x="2423" fg:w="2"/><text x="15.7264%" y="719.50"></text></g><g><title>__qdisc_run (2 samples, 0.01%)</title><rect x="15.5506%" y="357" width="0.0128%" height="15" fill="rgb(252,144,25)" fg:x="2429" fg:w="2"/><text x="15.7649%" y="367.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="15.5506%" y="341" width="0.0128%" height="15" fill="rgb(222,128,44)" fg:x="2429" fg:w="2"/><text x="15.7649%" y="351.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="15.5506%" y="325" width="0.0128%" height="15" fill="rgb(251,86,39)" fg:x="2429" fg:w="2"/><text x="15.7649%" y="335.50"></text></g><g><title>start_xmit (2 samples, 0.01%)</title><rect x="15.5506%" y="309" width="0.0128%" height="15" fill="rgb(211,140,13)" fg:x="2429" fg:w="2"/><text x="15.7649%" y="319.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.03%)</title><rect x="15.5506%" y="421" width="0.0320%" height="15" fill="rgb(238,106,36)" fg:x="2429" fg:w="5"/><text x="15.7649%" y="431.50"></text></g><g><title>__ip_queue_xmit (5 samples, 0.03%)</title><rect x="15.5506%" y="405" width="0.0320%" height="15" fill="rgb(224,11,5)" fg:x="2429" fg:w="5"/><text x="15.7649%" y="415.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.03%)</title><rect x="15.5506%" y="389" width="0.0320%" height="15" fill="rgb(219,227,11)" fg:x="2429" fg:w="5"/><text x="15.7649%" y="399.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="15.5506%" y="373" width="0.0320%" height="15" fill="rgb(232,116,37)" fg:x="2429" fg:w="5"/><text x="15.7649%" y="383.50"></text></g><g><title>pfifo_fast_enqueue (3 samples, 0.02%)</title><rect x="15.5634%" y="357" width="0.0192%" height="15" fill="rgb(250,59,0)" fg:x="2431" fg:w="3"/><text x="15.7777%" y="367.50"></text></g><g><title>__tcp_push_pending_frames (8 samples, 0.05%)</title><rect x="15.5442%" y="453" width="0.0512%" height="15" fill="rgb(226,88,38)" fg:x="2428" fg:w="8"/><text x="15.7585%" y="463.50"></text></g><g><title>tcp_write_xmit (8 samples, 0.05%)</title><rect x="15.5442%" y="437" width="0.0512%" height="15" fill="rgb(236,72,36)" fg:x="2428" fg:w="8"/><text x="15.7585%" y="447.50"></text></g><g><title>__kfree_skb (2 samples, 0.01%)</title><rect x="15.6082%" y="437" width="0.0128%" height="15" fill="rgb(208,195,26)" fg:x="2438" fg:w="2"/><text x="15.8225%" y="447.50"></text></g><g><title>kfree (2 samples, 0.01%)</title><rect x="15.6082%" y="421" width="0.0128%" height="15" fill="rgb(222,6,37)" fg:x="2438" fg:w="2"/><text x="15.8225%" y="431.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (2 samples, 0.01%)</title><rect x="15.6082%" y="405" width="0.0128%" height="15" fill="rgb(208,166,34)" fg:x="2438" fg:w="2"/><text x="15.8225%" y="415.50"></text></g><g><title>tcp_ack (6 samples, 0.04%)</title><rect x="15.6018%" y="453" width="0.0384%" height="15" fill="rgb(213,228,3)" fg:x="2437" fg:w="6"/><text x="15.8161%" y="463.50"></text></g><g><title>napi_complete_done (19 samples, 0.12%)</title><rect x="15.5378%" y="629" width="0.1216%" height="15" fill="rgb(226,216,13)" fg:x="2427" fg:w="19"/><text x="15.7521%" y="639.50"></text></g><g><title>netif_receive_skb_list_internal (19 samples, 0.12%)</title><rect x="15.5378%" y="613" width="0.1216%" height="15" fill="rgb(216,153,44)" fg:x="2427" fg:w="19"/><text x="15.7521%" y="623.50"></text></g><g><title>__netif_receive_skb_list_core (19 samples, 0.12%)</title><rect x="15.5378%" y="597" width="0.1216%" height="15" fill="rgb(227,176,26)" fg:x="2427" fg:w="19"/><text x="15.7521%" y="607.50"></text></g><g><title>ip_list_rcv (19 samples, 0.12%)</title><rect x="15.5378%" y="581" width="0.1216%" height="15" fill="rgb(215,38,16)" fg:x="2427" fg:w="19"/><text x="15.7521%" y="591.50"></text></g><g><title>ip_sublist_rcv (19 samples, 0.12%)</title><rect x="15.5378%" y="565" width="0.1216%" height="15" fill="rgb(207,166,9)" fg:x="2427" fg:w="19"/><text x="15.7521%" y="575.50"></text></g><g><title>ip_sublist_rcv_finish (19 samples, 0.12%)</title><rect x="15.5378%" y="549" width="0.1216%" height="15" fill="rgb(223,178,14)" fg:x="2427" fg:w="19"/><text x="15.7521%" y="559.50"></text></g><g><title>ip_local_deliver_finish (19 samples, 0.12%)</title><rect x="15.5378%" y="533" width="0.1216%" height="15" fill="rgb(220,94,29)" fg:x="2427" fg:w="19"/><text x="15.7521%" y="543.50"></text></g><g><title>ip_protocol_deliver_rcu (19 samples, 0.12%)</title><rect x="15.5378%" y="517" width="0.1216%" height="15" fill="rgb(207,19,13)" fg:x="2427" fg:w="19"/><text x="15.7521%" y="527.50"></text></g><g><title>tcp_v4_rcv (19 samples, 0.12%)</title><rect x="15.5378%" y="501" width="0.1216%" height="15" fill="rgb(224,38,0)" fg:x="2427" fg:w="19"/><text x="15.7521%" y="511.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 0.12%)</title><rect x="15.5378%" y="485" width="0.1216%" height="15" fill="rgb(228,220,18)" fg:x="2427" fg:w="19"/><text x="15.7521%" y="495.50"></text></g><g><title>tcp_rcv_established (19 samples, 0.12%)</title><rect x="15.5378%" y="469" width="0.1216%" height="15" fill="rgb(224,50,47)" fg:x="2427" fg:w="19"/><text x="15.7521%" y="479.50"></text></g><g><title>virtnet_poll (21 samples, 0.13%)</title><rect x="15.5314%" y="645" width="0.1344%" height="15" fill="rgb(213,187,12)" fg:x="2426" fg:w="21"/><text x="15.7457%" y="655.50"></text></g><g><title>common_interrupt (28 samples, 0.18%)</title><rect x="15.5058%" y="741" width="0.1793%" height="15" fill="rgb(250,67,32)" fg:x="2422" fg:w="28"/><text x="15.7200%" y="751.50"></text></g><g><title>irq_exit_rcu (25 samples, 0.16%)</title><rect x="15.5250%" y="725" width="0.1601%" height="15" fill="rgb(240,18,12)" fg:x="2425" fg:w="25"/><text x="15.7393%" y="735.50"></text></g><g><title>do_softirq_own_stack (25 samples, 0.16%)</title><rect x="15.5250%" y="709" width="0.1601%" height="15" fill="rgb(223,89,53)" fg:x="2425" fg:w="25"/><text x="15.7393%" y="719.50"></text></g><g><title>asm_call_sysvec_on_stack (25 samples, 0.16%)</title><rect x="15.5250%" y="693" width="0.1601%" height="15" fill="rgb(208,184,36)" fg:x="2425" fg:w="25"/><text x="15.7393%" y="703.50"></text></g><g><title>__softirqentry_text_start (25 samples, 0.16%)</title><rect x="15.5250%" y="677" width="0.1601%" height="15" fill="rgb(249,91,22)" fg:x="2425" fg:w="25"/><text x="15.7393%" y="687.50"></text></g><g><title>net_rx_action (25 samples, 0.16%)</title><rect x="15.5250%" y="661" width="0.1601%" height="15" fill="rgb(231,11,52)" fg:x="2425" fg:w="25"/><text x="15.7393%" y="671.50"></text></g><g><title>virtnet_poll_tx (3 samples, 0.02%)</title><rect x="15.6658%" y="645" width="0.0192%" height="15" fill="rgb(251,188,47)" fg:x="2447" fg:w="3"/><text x="15.8801%" y="655.50"></text></g><g><title>free_old_xmit_skbs (3 samples, 0.02%)</title><rect x="15.6658%" y="629" width="0.0192%" height="15" fill="rgb(235,178,6)" fg:x="2447" fg:w="3"/><text x="15.8801%" y="639.50"></text></g><g><title>virtqueue_get_buf_ctx_split (2 samples, 0.01%)</title><rect x="15.6722%" y="613" width="0.0128%" height="15" fill="rgb(235,34,35)" fg:x="2448" fg:w="2"/><text x="15.8865%" y="623.50"></text></g><g><title>detach_buf_split (2 samples, 0.01%)</title><rect x="15.6722%" y="597" width="0.0128%" height="15" fill="rgb(228,101,1)" fg:x="2448" fg:w="2"/><text x="15.8865%" y="607.50"></text></g><g><title>asm_common_interrupt (30 samples, 0.19%)</title><rect x="15.5058%" y="757" width="0.1921%" height="15" fill="rgb(248,227,45)" fg:x="2422" fg:w="30"/><text x="15.7200%" y="767.50"></text></g><g><title>irqentry_exit_to_user_mode (2 samples, 0.01%)</title><rect x="15.6850%" y="741" width="0.0128%" height="15" fill="rgb(229,166,35)" fg:x="2450" fg:w="2"/><text x="15.8993%" y="751.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="15.6850%" y="725" width="0.0128%" height="15" fill="rgb(240,77,26)" fg:x="2450" fg:w="2"/><text x="15.8993%" y="735.50"></text></g><g><title>schedule (2 samples, 0.01%)</title><rect x="15.6850%" y="709" width="0.0128%" height="15" fill="rgb(213,215,35)" fg:x="2450" fg:w="2"/><text x="15.8993%" y="719.50"></text></g><g><title>__schedule (2 samples, 0.01%)</title><rect x="15.6850%" y="693" width="0.0128%" height="15" fill="rgb(207,40,26)" fg:x="2450" fg:w="2"/><text x="15.8993%" y="703.50"></text></g><g><title>AConnection::onNoPollEvent (613 samples, 3.92%)</title><rect x="11.7798%" y="789" width="3.9245%" height="15" fill="rgb(239,49,17)" fg:x="1840" fg:w="613"/><text x="11.9941%" y="799.50">AConn..</text></g><g><title>operator- (347 samples, 2.22%)</title><rect x="13.4827%" y="773" width="2.2215%" height="15" fill="rgb(208,63,48)" fg:x="2106" fg:w="347"/><text x="13.6970%" y="783.50">op..</text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="16.1268%" y="773" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="2519" fg:w="2"/><text x="16.3410%" y="783.50"></text></g><g><title>__irqentry_text_start (22 samples, 0.14%)</title><rect x="16.3188%" y="757" width="0.1408%" height="15" fill="rgb(229,107,3)" fg:x="2549" fg:w="22"/><text x="16.5331%" y="767.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="16.4789%" y="661" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="2574" fg:w="2"/><text x="16.6932%" y="671.50"></text></g><g><title>asm_common_interrupt (5 samples, 0.03%)</title><rect x="16.4661%" y="757" width="0.0320%" height="15" fill="rgb(248,227,45)" fg:x="2572" fg:w="5"/><text x="16.6804%" y="767.50"></text></g><g><title>common_interrupt (4 samples, 0.03%)</title><rect x="16.4725%" y="741" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="2573" fg:w="4"/><text x="16.6868%" y="751.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="16.4789%" y="725" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="2574" fg:w="3"/><text x="16.6932%" y="735.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="16.4789%" y="709" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="2574" fg:w="3"/><text x="16.6932%" y="719.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="16.4789%" y="693" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="2574" fg:w="3"/><text x="16.6932%" y="703.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="16.4789%" y="677" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="2574" fg:w="3"/><text x="16.6932%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.03%)</title><rect x="16.5045%" y="757" width="0.0320%" height="15" fill="rgb(234,224,53)" fg:x="2578" fg:w="5"/><text x="16.7188%" y="767.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="16.7734%" y="709" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="2620" fg:w="3"/><text x="16.9877%" y="719.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="16.8758%" y="693" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="2636" fg:w="2"/><text x="17.0901%" y="703.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="16.8886%" y="693" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="703.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="16.8886%" y="677" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="687.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="16.8886%" y="661" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="671.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="16.8886%" y="645" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="655.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="16.8886%" y="629" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="639.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="16.8886%" y="613" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="623.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="16.8886%" y="597" width="0.0192%" height="15" fill="rgb(231,11,52)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="607.50"></text></g><g><title>virtnet_poll (3 samples, 0.02%)</title><rect x="16.8886%" y="581" width="0.0192%" height="15" fill="rgb(213,187,12)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="591.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="16.8886%" y="565" width="0.0192%" height="15" fill="rgb(226,216,13)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="575.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="16.8886%" y="549" width="0.0192%" height="15" fill="rgb(216,153,44)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="559.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="16.8886%" y="533" width="0.0192%" height="15" fill="rgb(227,176,26)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="543.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="16.8886%" y="517" width="0.0192%" height="15" fill="rgb(215,38,16)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="527.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="16.8886%" y="501" width="0.0192%" height="15" fill="rgb(207,166,9)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="511.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="16.8886%" y="485" width="0.0192%" height="15" fill="rgb(223,178,14)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="495.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="16.8886%" y="469" width="0.0192%" height="15" fill="rgb(220,94,29)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="479.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.02%)</title><rect x="16.8886%" y="453" width="0.0192%" height="15" fill="rgb(207,19,13)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="463.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="16.8886%" y="437" width="0.0192%" height="15" fill="rgb(224,38,0)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="447.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="16.8886%" y="421" width="0.0192%" height="15" fill="rgb(228,220,18)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="431.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.02%)</title><rect x="16.8886%" y="405" width="0.0192%" height="15" fill="rgb(224,50,47)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.02%)</title><rect x="16.8886%" y="389" width="0.0192%" height="15" fill="rgb(226,88,38)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="399.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.02%)</title><rect x="16.8886%" y="373" width="0.0192%" height="15" fill="rgb(236,72,36)" fg:x="2638" fg:w="3"/><text x="17.1029%" y="383.50"></text></g><g><title>import_single_range (7 samples, 0.04%)</title><rect x="16.9078%" y="693" width="0.0448%" height="15" fill="rgb(208,154,40)" fg:x="2641" fg:w="7"/><text x="17.1221%" y="703.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="17.0423%" y="677" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="2662" fg:w="3"/><text x="17.2565%" y="687.50"></text></g><g><title>inet_send_prepare (6 samples, 0.04%)</title><rect x="17.1831%" y="661" width="0.0384%" height="15" fill="rgb(240,111,44)" fg:x="2684" fg:w="6"/><text x="17.3974%" y="671.50"></text></g><g><title>inet_sendmsg (25 samples, 0.16%)</title><rect x="17.0679%" y="677" width="0.1601%" height="15" fill="rgb(243,57,38)" fg:x="2666" fg:w="25"/><text x="17.2821%" y="687.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="17.5032%" y="661" width="0.0256%" height="15" fill="rgb(229,107,3)" fg:x="2734" fg:w="4"/><text x="17.7175%" y="671.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="17.6761%" y="549" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="2761" fg:w="2"/><text x="17.8903%" y="559.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="17.6761%" y="533" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="2761" fg:w="2"/><text x="17.8903%" y="543.50"></text></g><g><title>aa_sk_perm (25 samples, 0.16%)</title><rect x="17.5352%" y="661" width="0.1601%" height="15" fill="rgb(235,5,54)" fg:x="2739" fg:w="25"/><text x="17.7495%" y="671.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="17.6761%" y="645" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="2761" fg:w="3"/><text x="17.8903%" y="655.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="17.6761%" y="629" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="2761" fg:w="3"/><text x="17.8903%" y="639.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="17.6761%" y="613" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="2761" fg:w="3"/><text x="17.8903%" y="623.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="17.6761%" y="597" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="2761" fg:w="3"/><text x="17.8903%" y="607.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="17.6761%" y="581" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="2761" fg:w="3"/><text x="17.8903%" y="591.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="17.6761%" y="565" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="2761" fg:w="3"/><text x="17.8903%" y="575.50"></text></g><g><title>apparmor_socket_sendmsg (7 samples, 0.04%)</title><rect x="17.6953%" y="661" width="0.0448%" height="15" fill="rgb(214,172,22)" fg:x="2764" fg:w="7"/><text x="17.9095%" y="671.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="17.7401%" y="661" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="671.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="17.7401%" y="645" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="655.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="17.7401%" y="629" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="639.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="17.7401%" y="613" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="17.7401%" y="597" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="607.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="17.7401%" y="581" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="591.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="17.7401%" y="565" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="575.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="17.7401%" y="549" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="559.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="17.7401%" y="533" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="543.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="17.7401%" y="517" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="527.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="17.7401%" y="501" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="511.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="17.7401%" y="485" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="495.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="17.7401%" y="469" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="479.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="17.7401%" y="453" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="463.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="17.7401%" y="437" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="447.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="17.7401%" y="421" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="431.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="17.7401%" y="405" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="415.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="17.7401%" y="389" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="399.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="17.7401%" y="373" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="383.50"></text></g><g><title>tcp_ack (2 samples, 0.01%)</title><rect x="17.7401%" y="357" width="0.0128%" height="15" fill="rgb(213,228,3)" fg:x="2771" fg:w="2"/><text x="17.9544%" y="367.50"></text></g><g><title>tomoyo_socket_sendmsg (15 samples, 0.10%)</title><rect x="17.7529%" y="661" width="0.0960%" height="15" fill="rgb(226,26,53)" fg:x="2773" fg:w="15"/><text x="17.9672%" y="671.50"></text></g><g><title>security_socket_sendmsg (109 samples, 0.70%)</title><rect x="17.2279%" y="677" width="0.6978%" height="15" fill="rgb(207,90,34)" fg:x="2691" fg:w="109"/><text x="17.4422%" y="687.50"></text></g><g><title>tomoyo_socket_sendmsg_permission (12 samples, 0.08%)</title><rect x="17.8489%" y="661" width="0.0768%" height="15" fill="rgb(250,22,27)" fg:x="2788" fg:w="12"/><text x="18.0632%" y="671.50"></text></g><g><title>__local_bh_enable_ip (20 samples, 0.13%)</title><rect x="17.9641%" y="661" width="0.1280%" height="15" fill="rgb(252,29,18)" fg:x="2806" fg:w="20"/><text x="18.1784%" y="671.50"></text></g><g><title>do_softirq (2 samples, 0.01%)</title><rect x="18.0794%" y="645" width="0.0128%" height="15" fill="rgb(239,215,27)" fg:x="2824" fg:w="2"/><text x="18.2937%" y="655.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="18.0794%" y="629" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="2824" fg:w="2"/><text x="18.2937%" y="639.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="18.0794%" y="613" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="2824" fg:w="2"/><text x="18.2937%" y="623.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="18.0794%" y="597" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="2824" fg:w="2"/><text x="18.2937%" y="607.50"></text></g><g><title>_raw_spin_unlock_bh (2 samples, 0.01%)</title><rect x="18.0922%" y="661" width="0.0128%" height="15" fill="rgb(228,228,18)" fg:x="2826" fg:w="2"/><text x="18.3065%" y="671.50"></text></g><g><title>lock_sock_nested (20 samples, 0.13%)</title><rect x="18.1114%" y="661" width="0.1280%" height="15" fill="rgb(207,134,26)" fg:x="2829" fg:w="20"/><text x="18.3257%" y="671.50"></text></g><g><title>_raw_spin_lock_bh (10 samples, 0.06%)</title><rect x="18.1754%" y="645" width="0.0640%" height="15" fill="rgb(217,35,53)" fg:x="2839" fg:w="10"/><text x="18.3897%" y="655.50"></text></g><g><title>__kmalloc (3 samples, 0.02%)</title><rect x="18.3931%" y="405" width="0.0192%" height="15" fill="rgb(221,108,10)" fg:x="2873" fg:w="3"/><text x="18.6074%" y="415.50"></text></g><g><title>virtqueue_add_outbuf (6 samples, 0.04%)</title><rect x="18.3803%" y="437" width="0.0384%" height="15" fill="rgb(207,208,9)" fg:x="2871" fg:w="6"/><text x="18.5946%" y="447.50"></text></g><g><title>virtqueue_add_split (5 samples, 0.03%)</title><rect x="18.3867%" y="421" width="0.0320%" height="15" fill="rgb(238,41,16)" fg:x="2872" fg:w="5"/><text x="18.6010%" y="431.50"></text></g><g><title>dev_hard_start_xmit (12 samples, 0.08%)</title><rect x="18.3739%" y="469" width="0.0768%" height="15" fill="rgb(251,86,39)" fg:x="2870" fg:w="12"/><text x="18.5882%" y="479.50"></text></g><g><title>start_xmit (12 samples, 0.08%)</title><rect x="18.3739%" y="453" width="0.0768%" height="15" fill="rgb(211,140,13)" fg:x="2870" fg:w="12"/><text x="18.5882%" y="463.50"></text></g><g><title>virtqueue_notify (5 samples, 0.03%)</title><rect x="18.4187%" y="437" width="0.0320%" height="15" fill="rgb(219,119,18)" fg:x="2877" fg:w="5"/><text x="18.6330%" y="447.50"></text></g><g><title>vp_notify (5 samples, 0.03%)</title><rect x="18.4187%" y="421" width="0.0320%" height="15" fill="rgb(230,193,37)" fg:x="2877" fg:w="5"/><text x="18.6330%" y="431.50"></text></g><g><title>iowrite16 (5 samples, 0.03%)</title><rect x="18.4187%" y="405" width="0.0320%" height="15" fill="rgb(218,139,37)" fg:x="2877" fg:w="5"/><text x="18.6330%" y="415.50"></text></g><g><title>__qdisc_run (15 samples, 0.10%)</title><rect x="18.3611%" y="501" width="0.0960%" height="15" fill="rgb(252,144,25)" fg:x="2868" fg:w="15"/><text x="18.5754%" y="511.50"></text></g><g><title>sch_direct_xmit (14 samples, 0.09%)</title><rect x="18.3675%" y="485" width="0.0896%" height="15" fill="rgb(222,128,44)" fg:x="2869" fg:w="14"/><text x="18.5818%" y="495.50"></text></g><g><title>__ip_queue_xmit (18 samples, 0.12%)</title><rect x="18.3483%" y="549" width="0.1152%" height="15" fill="rgb(224,11,5)" fg:x="2866" fg:w="18"/><text x="18.5626%" y="559.50"></text></g><g><title>ip_finish_output2 (16 samples, 0.10%)</title><rect x="18.3611%" y="533" width="0.1024%" height="15" fill="rgb(219,227,11)" fg:x="2868" fg:w="16"/><text x="18.5754%" y="543.50"></text></g><g><title>__dev_queue_xmit (16 samples, 0.10%)</title><rect x="18.3611%" y="517" width="0.1024%" height="15" fill="rgb(232,116,37)" fg:x="2868" fg:w="16"/><text x="18.5754%" y="527.50"></text></g><g><title>__tcp_transmit_skb (20 samples, 0.13%)</title><rect x="18.3419%" y="565" width="0.1280%" height="15" fill="rgb(238,106,36)" fg:x="2865" fg:w="20"/><text x="18.5562%" y="575.50"></text></g><g><title>tcp_rbtree_insert (2 samples, 0.01%)</title><rect x="18.4763%" y="549" width="0.0128%" height="15" fill="rgb(239,95,6)" fg:x="2886" fg:w="2"/><text x="18.6906%" y="559.50"></text></g><g><title>tcp_event_new_data_sent (3 samples, 0.02%)</title><rect x="18.4763%" y="565" width="0.0192%" height="15" fill="rgb(227,19,23)" fg:x="2886" fg:w="3"/><text x="18.6906%" y="575.50"></text></g><g><title>__tcp_push_pending_frames (26 samples, 0.17%)</title><rect x="18.3355%" y="597" width="0.1665%" height="15" fill="rgb(226,88,38)" fg:x="2864" fg:w="26"/><text x="18.5498%" y="607.50"></text></g><g><title>tcp_write_xmit (26 samples, 0.17%)</title><rect x="18.3355%" y="581" width="0.1665%" height="15" fill="rgb(236,72,36)" fg:x="2864" fg:w="26"/><text x="18.5498%" y="591.50"></text></g><g><title>kfree (3 samples, 0.02%)</title><rect x="18.5211%" y="565" width="0.0192%" height="15" fill="rgb(222,6,37)" fg:x="2893" fg:w="3"/><text x="18.7354%" y="575.50"></text></g><g><title>__kfree_skb (4 samples, 0.03%)</title><rect x="18.5211%" y="581" width="0.0256%" height="15" fill="rgb(208,195,26)" fg:x="2893" fg:w="4"/><text x="18.7354%" y="591.50"></text></g><g><title>bictcp_cong_avoid (2 samples, 0.01%)</title><rect x="18.5595%" y="581" width="0.0128%" height="15" fill="rgb(224,107,48)" fg:x="2899" fg:w="2"/><text x="18.7738%" y="591.50"></text></g><g><title>tcp_slow_start (2 samples, 0.01%)</title><rect x="18.5595%" y="565" width="0.0128%" height="15" fill="rgb(214,166,43)" fg:x="2899" fg:w="2"/><text x="18.7738%" y="575.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (2 samples, 0.01%)</title><rect x="18.5787%" y="581" width="0.0128%" height="15" fill="rgb(213,104,8)" fg:x="2902" fg:w="2"/><text x="18.7930%" y="591.50"></text></g><g><title>tcp_ack (14 samples, 0.09%)</title><rect x="18.5083%" y="597" width="0.0896%" height="15" fill="rgb(213,228,3)" fg:x="2891" fg:w="14"/><text x="18.7226%" y="607.50"></text></g><g><title>__release_sock (43 samples, 0.28%)</title><rect x="18.3355%" y="645" width="0.2753%" height="15" fill="rgb(211,114,53)" fg:x="2864" fg:w="43"/><text x="18.5498%" y="655.50"></text></g><g><title>tcp_v4_do_rcv (43 samples, 0.28%)</title><rect x="18.3355%" y="629" width="0.2753%" height="15" fill="rgb(228,220,18)" fg:x="2864" fg:w="43"/><text x="18.5498%" y="639.50"></text></g><g><title>tcp_rcv_established (43 samples, 0.28%)</title><rect x="18.3355%" y="613" width="0.2753%" height="15" fill="rgb(224,50,47)" fg:x="2864" fg:w="43"/><text x="18.5498%" y="623.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.02%)</title><rect x="18.6108%" y="645" width="0.0192%" height="15" fill="rgb(217,35,53)" fg:x="2907" fg:w="3"/><text x="18.8250%" y="655.50"></text></g><g><title>release_sock (68 samples, 0.44%)</title><rect x="18.2394%" y="661" width="0.4353%" height="15" fill="rgb(217,78,19)" fg:x="2849" fg:w="68"/><text x="18.4537%" y="671.50"></text></g><g><title>tcp_release_cb (7 samples, 0.04%)</title><rect x="18.6300%" y="645" width="0.0448%" height="15" fill="rgb(230,144,50)" fg:x="2910" fg:w="7"/><text x="18.8442%" y="655.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="18.6620%" y="629" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="2915" fg:w="2"/><text x="18.8763%" y="639.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="19.6287%" y="645" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="3066" fg:w="3"/><text x="19.8430%" y="655.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="19.8143%" y="613" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="3095" fg:w="3"/><text x="20.0286%" y="623.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="19.8399%" y="613" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="3099" fg:w="3"/><text x="20.0542%" y="623.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="19.8399%" y="597" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="3099" fg:w="3"/><text x="20.0542%" y="607.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="19.8399%" y="581" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="3099" fg:w="3"/><text x="20.0542%" y="591.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="19.8464%" y="565" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="3100" fg:w="2"/><text x="20.0606%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="19.8464%" y="549" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="3100" fg:w="2"/><text x="20.0606%" y="559.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="19.8464%" y="533" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="3100" fg:w="2"/><text x="20.0606%" y="543.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="19.8464%" y="517" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="3100" fg:w="2"/><text x="20.0606%" y="527.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="19.8464%" y="501" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="3100" fg:w="2"/><text x="20.0606%" y="511.50"></text></g><g><title>__mod_memcg_state.part.0 (23 samples, 0.15%)</title><rect x="19.8976%" y="597" width="0.1472%" height="15" fill="rgb(252,169,8)" fg:x="3108" fg:w="23"/><text x="20.1119%" y="607.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="20.2049%" y="581" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="3156" fg:w="2"/><text x="20.4192%" y="591.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="20.2049%" y="565" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="3156" fg:w="2"/><text x="20.4192%" y="575.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="20.2049%" y="549" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="3156" fg:w="2"/><text x="20.4192%" y="559.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="20.2049%" y="533" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="3156" fg:w="2"/><text x="20.4192%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="20.2049%" y="517" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="3156" fg:w="2"/><text x="20.4192%" y="527.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="20.2049%" y="501" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="3156" fg:w="2"/><text x="20.4192%" y="511.50"></text></g><g><title>page_counter_try_charge (16 samples, 0.10%)</title><rect x="20.2177%" y="581" width="0.1024%" height="15" fill="rgb(222,104,3)" fg:x="3158" fg:w="16"/><text x="20.4320%" y="591.50"></text></g><g><title>propagate_protected_usage (3 samples, 0.02%)</title><rect x="20.3009%" y="565" width="0.0192%" height="15" fill="rgb(246,0,33)" fg:x="3171" fg:w="3"/><text x="20.5152%" y="575.50"></text></g><g><title>mem_cgroup_charge_skmem (79 samples, 0.51%)</title><rect x="19.8592%" y="613" width="0.5058%" height="15" fill="rgb(248,15,41)" fg:x="3102" fg:w="79"/><text x="20.0734%" y="623.50"></text></g><g><title>try_charge (48 samples, 0.31%)</title><rect x="20.0576%" y="597" width="0.3073%" height="15" fill="rgb(208,116,22)" fg:x="3133" fg:w="48"/><text x="20.2719%" y="607.50"></text></g><g><title>refill_stock (7 samples, 0.04%)</title><rect x="20.3201%" y="581" width="0.0448%" height="15" fill="rgb(214,139,20)" fg:x="3174" fg:w="7"/><text x="20.5344%" y="591.50"></text></g><g><title>__sk_mem_schedule (119 samples, 0.76%)</title><rect x="19.6479%" y="645" width="0.7618%" height="15" fill="rgb(219,50,38)" fg:x="3069" fg:w="119"/><text x="19.8622%" y="655.50"></text></g><g><title>__sk_mem_raise_allocated (112 samples, 0.72%)</title><rect x="19.6927%" y="629" width="0.7170%" height="15" fill="rgb(232,27,1)" fg:x="3076" fg:w="112"/><text x="19.9070%" y="639.50"></text></g><g><title>tcp_leave_memory_pressure (7 samples, 0.04%)</title><rect x="20.3649%" y="613" width="0.0448%" height="15" fill="rgb(250,176,35)" fg:x="3181" fg:w="7"/><text x="20.5792%" y="623.50"></text></g><g><title>__irqentry_text_start (5 samples, 0.03%)</title><rect x="20.6274%" y="613" width="0.0320%" height="15" fill="rgb(229,107,3)" fg:x="3222" fg:w="5"/><text x="20.8417%" y="623.50"></text></g><g><title>__ip_finish_output (2 samples, 0.01%)</title><rect x="20.6850%" y="581" width="0.0128%" height="15" fill="rgb(252,12,27)" fg:x="3231" fg:w="2"/><text x="20.8993%" y="591.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="20.7042%" y="581" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="3234" fg:w="2"/><text x="20.9185%" y="591.50"></text></g><g><title>pfifo_fast_dequeue (2 samples, 0.01%)</title><rect x="20.7490%" y="533" width="0.0128%" height="15" fill="rgb(208,20,32)" fg:x="3241" fg:w="2"/><text x="20.9633%" y="543.50"></text></g><g><title>free_old_xmit_skbs (2 samples, 0.01%)</title><rect x="20.7810%" y="485" width="0.0128%" height="15" fill="rgb(235,178,6)" fg:x="3246" fg:w="2"/><text x="20.9953%" y="495.50"></text></g><g><title>sg_init_table (2 samples, 0.01%)</title><rect x="20.7939%" y="485" width="0.0128%" height="15" fill="rgb(247,5,48)" fg:x="3248" fg:w="2"/><text x="21.0081%" y="495.50"></text></g><g><title>__kmalloc (3 samples, 0.02%)</title><rect x="20.8323%" y="453" width="0.0192%" height="15" fill="rgb(221,108,10)" fg:x="3254" fg:w="3"/><text x="21.0466%" y="463.50"></text></g><g><title>virtqueue_add_outbuf (8 samples, 0.05%)</title><rect x="20.8067%" y="485" width="0.0512%" height="15" fill="rgb(207,208,9)" fg:x="3250" fg:w="8"/><text x="21.0209%" y="495.50"></text></g><g><title>virtqueue_add_split (8 samples, 0.05%)</title><rect x="20.8067%" y="469" width="0.0512%" height="15" fill="rgb(238,41,16)" fg:x="3250" fg:w="8"/><text x="21.0209%" y="479.50"></text></g><g><title>dev_hard_start_xmit (36 samples, 0.23%)</title><rect x="20.7618%" y="517" width="0.2305%" height="15" fill="rgb(251,86,39)" fg:x="3243" fg:w="36"/><text x="20.9761%" y="527.50"></text></g><g><title>start_xmit (35 samples, 0.22%)</title><rect x="20.7682%" y="501" width="0.2241%" height="15" fill="rgb(211,140,13)" fg:x="3244" fg:w="35"/><text x="20.9825%" y="511.50"></text></g><g><title>virtqueue_notify (21 samples, 0.13%)</title><rect x="20.8579%" y="485" width="0.1344%" height="15" fill="rgb(219,119,18)" fg:x="3258" fg:w="21"/><text x="21.0722%" y="495.50"></text></g><g><title>vp_notify (21 samples, 0.13%)</title><rect x="20.8579%" y="469" width="0.1344%" height="15" fill="rgb(230,193,37)" fg:x="3258" fg:w="21"/><text x="21.0722%" y="479.50"></text></g><g><title>iowrite16 (21 samples, 0.13%)</title><rect x="20.8579%" y="453" width="0.1344%" height="15" fill="rgb(218,139,37)" fg:x="3258" fg:w="21"/><text x="21.0722%" y="463.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="21.0115%" y="485" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="3282" fg:w="2"/><text x="21.2258%" y="495.50"></text></g><g><title>validate_xmit_skb (6 samples, 0.04%)</title><rect x="21.0051%" y="501" width="0.0384%" height="15" fill="rgb(240,104,40)" fg:x="3281" fg:w="6"/><text x="21.2194%" y="511.50"></text></g><g><title>netif_skb_features (3 samples, 0.02%)</title><rect x="21.0243%" y="485" width="0.0192%" height="15" fill="rgb(211,31,54)" fg:x="3284" fg:w="3"/><text x="21.2386%" y="495.50"></text></g><g><title>__qdisc_run (48 samples, 0.31%)</title><rect x="20.7426%" y="549" width="0.3073%" height="15" fill="rgb(252,144,25)" fg:x="3240" fg:w="48"/><text x="20.9569%" y="559.50"></text></g><g><title>sch_direct_xmit (45 samples, 0.29%)</title><rect x="20.7618%" y="533" width="0.2881%" height="15" fill="rgb(222,128,44)" fg:x="3243" fg:w="45"/><text x="20.9761%" y="543.50"></text></g><g><title>validate_xmit_skb_list (9 samples, 0.06%)</title><rect x="20.9923%" y="517" width="0.0576%" height="15" fill="rgb(254,174,52)" fg:x="3279" fg:w="9"/><text x="21.2066%" y="527.50"></text></g><g><title>__dev_queue_xmit (51 samples, 0.33%)</title><rect x="20.7362%" y="565" width="0.3265%" height="15" fill="rgb(232,116,37)" fg:x="3239" fg:w="51"/><text x="20.9505%" y="575.50"></text></g><g><title>pfifo_fast_enqueue (2 samples, 0.01%)</title><rect x="21.0499%" y="549" width="0.0128%" height="15" fill="rgb(250,59,0)" fg:x="3288" fg:w="2"/><text x="21.2642%" y="559.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="21.0691%" y="453" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="3291" fg:w="2"/><text x="21.2834%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="21.0691%" y="437" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="3291" fg:w="2"/><text x="21.2834%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="21.0691%" y="421" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="3291" fg:w="2"/><text x="21.2834%" y="431.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="21.0691%" y="405" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="3291" fg:w="2"/><text x="21.2834%" y="415.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="21.0691%" y="389" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="3291" fg:w="2"/><text x="21.2834%" y="399.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="21.0691%" y="373" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="3291" fg:w="2"/><text x="21.2834%" y="383.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="21.0691%" y="357" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="3291" fg:w="2"/><text x="21.2834%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="21.0691%" y="341" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="3291" fg:w="2"/><text x="21.2834%" y="351.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="21.0691%" y="325" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="3291" fg:w="2"/><text x="21.2834%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="21.0691%" y="309" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="3291" fg:w="2"/><text x="21.2834%" y="319.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="21.0691%" y="293" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="3291" fg:w="2"/><text x="21.2834%" y="303.50"></text></g><g><title>tcp_ack (2 samples, 0.01%)</title><rect x="21.0691%" y="277" width="0.0128%" height="15" fill="rgb(213,228,3)" fg:x="3291" fg:w="2"/><text x="21.2834%" y="287.50"></text></g><g><title>virtnet_poll (5 samples, 0.03%)</title><rect x="21.0627%" y="469" width="0.0320%" height="15" fill="rgb(213,187,12)" fg:x="3290" fg:w="5"/><text x="21.2770%" y="479.50"></text></g><g><title>net_rx_action (6 samples, 0.04%)</title><rect x="21.0627%" y="485" width="0.0384%" height="15" fill="rgb(231,11,52)" fg:x="3290" fg:w="6"/><text x="21.2770%" y="495.50"></text></g><g><title>ip_finish_output2 (59 samples, 0.38%)</title><rect x="20.7298%" y="581" width="0.3777%" height="15" fill="rgb(219,227,11)" fg:x="3238" fg:w="59"/><text x="20.9441%" y="591.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.04%)</title><rect x="21.0627%" y="565" width="0.0448%" height="15" fill="rgb(252,29,18)" fg:x="3290" fg:w="7"/><text x="21.2770%" y="575.50"></text></g><g><title>do_softirq (7 samples, 0.04%)</title><rect x="21.0627%" y="549" width="0.0448%" height="15" fill="rgb(239,215,27)" fg:x="3290" fg:w="7"/><text x="21.2770%" y="559.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.04%)</title><rect x="21.0627%" y="533" width="0.0448%" height="15" fill="rgb(223,89,53)" fg:x="3290" fg:w="7"/><text x="21.2770%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (7 samples, 0.04%)</title><rect x="21.0627%" y="517" width="0.0448%" height="15" fill="rgb(208,184,36)" fg:x="3290" fg:w="7"/><text x="21.2770%" y="527.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.04%)</title><rect x="21.0627%" y="501" width="0.0448%" height="15" fill="rgb(249,91,22)" fg:x="3290" fg:w="7"/><text x="21.2770%" y="511.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (4 samples, 0.03%)</title><rect x="21.1076%" y="565" width="0.0256%" height="15" fill="rgb(227,127,27)" fg:x="3297" fg:w="4"/><text x="21.3218%" y="575.50"></text></g><g><title>ip_finish_output (5 samples, 0.03%)</title><rect x="21.1076%" y="581" width="0.0320%" height="15" fill="rgb(215,36,54)" fg:x="3297" fg:w="5"/><text x="21.3218%" y="591.50"></text></g><g><title>__ip_queue_xmit (74 samples, 0.47%)</title><rect x="20.6722%" y="597" width="0.4738%" height="15" fill="rgb(224,11,5)" fg:x="3229" fg:w="74"/><text x="20.8865%" y="607.50"></text></g><g><title>ip_queue_xmit (2 samples, 0.01%)</title><rect x="21.1524%" y="597" width="0.0128%" height="15" fill="rgb(241,58,19)" fg:x="3304" fg:w="2"/><text x="21.3667%" y="607.50"></text></g><g><title>skb_clone (3 samples, 0.02%)</title><rect x="21.1652%" y="597" width="0.0192%" height="15" fill="rgb(253,39,17)" fg:x="3306" fg:w="3"/><text x="21.3795%" y="607.50"></text></g><g><title>__tcp_transmit_skb (84 samples, 0.54%)</title><rect x="20.6594%" y="613" width="0.5378%" height="15" fill="rgb(238,106,36)" fg:x="3227" fg:w="84"/><text x="20.8737%" y="623.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="21.1972%" y="613" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="3311" fg:w="2"/><text x="21.4115%" y="623.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="21.1972%" y="597" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="3311" fg:w="2"/><text x="21.4115%" y="607.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="21.1972%" y="581" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="3311" fg:w="2"/><text x="21.4115%" y="591.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="21.1972%" y="565" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="3311" fg:w="2"/><text x="21.4115%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="21.1972%" y="549" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="3311" fg:w="2"/><text x="21.4115%" y="559.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="21.1972%" y="533" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="3311" fg:w="2"/><text x="21.4115%" y="543.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="21.1972%" y="517" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="3311" fg:w="2"/><text x="21.4115%" y="527.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="21.1972%" y="501" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="3311" fg:w="2"/><text x="21.4115%" y="511.50"></text></g><g><title>ktime_get (24 samples, 0.15%)</title><rect x="21.2164%" y="613" width="0.1536%" height="15" fill="rgb(226,51,13)" fg:x="3314" fg:w="24"/><text x="21.4307%" y="623.50"></text></g><g><title>kvm_clock_get_cycles (13 samples, 0.08%)</title><rect x="21.2868%" y="597" width="0.0832%" height="15" fill="rgb(213,218,37)" fg:x="3325" fg:w="13"/><text x="21.5011%" y="607.50"></text></g><g><title>pvclock_clocksource_read (7 samples, 0.04%)</title><rect x="21.3252%" y="581" width="0.0448%" height="15" fill="rgb(246,59,10)" fg:x="3331" fg:w="7"/><text x="21.5395%" y="591.50"></text></g><g><title>rb_first (8 samples, 0.05%)</title><rect x="21.3700%" y="613" width="0.0512%" height="15" fill="rgb(214,194,51)" fg:x="3338" fg:w="8"/><text x="21.5843%" y="623.50"></text></g><g><title>__slab_alloc (3 samples, 0.02%)</title><rect x="21.4533%" y="565" width="0.0192%" height="15" fill="rgb(229,140,31)" fg:x="3351" fg:w="3"/><text x="21.6676%" y="575.50"></text></g><g><title>___slab_alloc (3 samples, 0.02%)</title><rect x="21.4533%" y="549" width="0.0192%" height="15" fill="rgb(224,215,35)" fg:x="3351" fg:w="3"/><text x="21.6676%" y="559.50"></text></g><g><title>__kmalloc_node_track_caller (11 samples, 0.07%)</title><rect x="21.4405%" y="581" width="0.0704%" height="15" fill="rgb(228,161,44)" fg:x="3349" fg:w="11"/><text x="21.6547%" y="591.50"></text></g><g><title>memset (3 samples, 0.02%)</title><rect x="21.4917%" y="565" width="0.0192%" height="15" fill="rgb(251,9,1)" fg:x="3357" fg:w="3"/><text x="21.7060%" y="575.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="21.4917%" y="549" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="3357" fg:w="3"/><text x="21.7060%" y="559.50"></text></g><g><title>___slab_alloc (4 samples, 0.03%)</title><rect x="21.5173%" y="549" width="0.0256%" height="15" fill="rgb(224,215,35)" fg:x="3361" fg:w="4"/><text x="21.7316%" y="559.50"></text></g><g><title>__slab_alloc (6 samples, 0.04%)</title><rect x="21.5173%" y="565" width="0.0384%" height="15" fill="rgb(229,140,31)" fg:x="3361" fg:w="6"/><text x="21.7316%" y="575.50"></text></g><g><title>kmem_cache_alloc_node (10 samples, 0.06%)</title><rect x="21.5109%" y="581" width="0.0640%" height="15" fill="rgb(227,94,12)" fg:x="3360" fg:w="10"/><text x="21.7252%" y="591.50"></text></g><g><title>memset (2 samples, 0.01%)</title><rect x="21.5621%" y="565" width="0.0128%" height="15" fill="rgb(251,9,1)" fg:x="3368" fg:w="2"/><text x="21.7764%" y="575.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="21.5621%" y="549" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="3368" fg:w="2"/><text x="21.7764%" y="559.50"></text></g><g><title>__alloc_skb (23 samples, 0.15%)</title><rect x="21.4341%" y="597" width="0.1472%" height="15" fill="rgb(237,90,40)" fg:x="3348" fg:w="23"/><text x="21.6483%" y="607.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="21.5813%" y="597" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="3371" fg:w="2"/><text x="21.7956%" y="607.50"></text></g><g><title>sk_stream_alloc_skb (28 samples, 0.18%)</title><rect x="21.4213%" y="613" width="0.1793%" height="15" fill="rgb(225,2,28)" fg:x="3346" fg:w="28"/><text x="21.6355%" y="623.50"></text></g><g><title>tcp_chrono_stop (2 samples, 0.01%)</title><rect x="21.6197%" y="613" width="0.0128%" height="15" fill="rgb(246,102,2)" fg:x="3377" fg:w="2"/><text x="21.8340%" y="623.50"></text></g><g><title>sk_reset_timer (5 samples, 0.03%)</title><rect x="21.6389%" y="597" width="0.0320%" height="15" fill="rgb(220,37,33)" fg:x="3380" fg:w="5"/><text x="21.8532%" y="607.50"></text></g><g><title>__mod_timer (5 samples, 0.03%)</title><rect x="21.6389%" y="581" width="0.0320%" height="15" fill="rgb(232,140,47)" fg:x="3380" fg:w="5"/><text x="21.8532%" y="591.50"></text></g><g><title>lock_timer_base (3 samples, 0.02%)</title><rect x="21.6517%" y="565" width="0.0192%" height="15" fill="rgb(242,24,4)" fg:x="3382" fg:w="3"/><text x="21.8660%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="21.6581%" y="549" width="0.0128%" height="15" fill="rgb(206,213,41)" fg:x="3383" fg:w="2"/><text x="21.8724%" y="559.50"></text></g><g><title>tcp_event_new_data_sent (8 samples, 0.05%)</title><rect x="21.6325%" y="613" width="0.0512%" height="15" fill="rgb(227,19,23)" fg:x="3379" fg:w="8"/><text x="21.8468%" y="623.50"></text></g><g><title>__tcp_push_pending_frames (206 samples, 1.32%)</title><rect x="20.4097%" y="645" width="1.3188%" height="15" fill="rgb(226,88,38)" fg:x="3188" fg:w="206"/><text x="20.6240%" y="655.50"></text></g><g><title>tcp_write_xmit (199 samples, 1.27%)</title><rect x="20.4545%" y="629" width="1.2740%" height="15" fill="rgb(236,72,36)" fg:x="3195" fg:w="199"/><text x="20.6688%" y="639.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (7 samples, 0.04%)</title><rect x="21.6837%" y="613" width="0.0448%" height="15" fill="rgb(213,104,8)" fg:x="3387" fg:w="7"/><text x="21.8980%" y="623.50"></text></g><g><title>sk_reset_timer (5 samples, 0.03%)</title><rect x="21.6965%" y="597" width="0.0320%" height="15" fill="rgb(220,37,33)" fg:x="3389" fg:w="5"/><text x="21.9108%" y="607.50"></text></g><g><title>__mod_timer (4 samples, 0.03%)</title><rect x="21.7029%" y="581" width="0.0256%" height="15" fill="rgb(232,140,47)" fg:x="3390" fg:w="4"/><text x="21.9172%" y="591.50"></text></g><g><title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="21.7157%" y="565" width="0.0128%" height="15" fill="rgb(216,183,20)" fg:x="3392" fg:w="2"/><text x="21.9300%" y="575.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="21.7157%" y="549" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="3392" fg:w="2"/><text x="21.9300%" y="559.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="21.7157%" y="533" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="3392" fg:w="2"/><text x="21.9300%" y="543.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="21.7157%" y="517" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="3392" fg:w="2"/><text x="21.9300%" y="527.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="21.7157%" y="501" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="3392" fg:w="2"/><text x="21.9300%" y="511.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="21.7157%" y="485" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="3392" fg:w="2"/><text x="21.9300%" y="495.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="21.7157%" y="469" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="3392" fg:w="2"/><text x="21.9300%" y="479.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="21.7157%" y="453" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="3392" fg:w="2"/><text x="21.9300%" y="463.50"></text></g><g><title>__x86_return_thunk (7 samples, 0.04%)</title><rect x="21.7286%" y="645" width="0.0448%" height="15" fill="rgb(211,8,20)" fg:x="3394" fg:w="7"/><text x="21.9428%" y="655.50"></text></g><g><title>srso_safe_ret_alias (4 samples, 0.03%)</title><rect x="21.7478%" y="629" width="0.0256%" height="15" fill="rgb(210,87,27)" fg:x="3397" fg:w="4"/><text x="21.9620%" y="639.50"></text></g><g><title>napi_complete_done (5 samples, 0.03%)</title><rect x="21.7798%" y="517" width="0.0320%" height="15" fill="rgb(226,216,13)" fg:x="3402" fg:w="5"/><text x="21.9941%" y="527.50"></text></g><g><title>netif_receive_skb_list_internal (5 samples, 0.03%)</title><rect x="21.7798%" y="501" width="0.0320%" height="15" fill="rgb(216,153,44)" fg:x="3402" fg:w="5"/><text x="21.9941%" y="511.50"></text></g><g><title>__netif_receive_skb_list_core (5 samples, 0.03%)</title><rect x="21.7798%" y="485" width="0.0320%" height="15" fill="rgb(227,176,26)" fg:x="3402" fg:w="5"/><text x="21.9941%" y="495.50"></text></g><g><title>ip_list_rcv (5 samples, 0.03%)</title><rect x="21.7798%" y="469" width="0.0320%" height="15" fill="rgb(215,38,16)" fg:x="3402" fg:w="5"/><text x="21.9941%" y="479.50"></text></g><g><title>ip_sublist_rcv (5 samples, 0.03%)</title><rect x="21.7798%" y="453" width="0.0320%" height="15" fill="rgb(207,166,9)" fg:x="3402" fg:w="5"/><text x="21.9941%" y="463.50"></text></g><g><title>ip_sublist_rcv_finish (5 samples, 0.03%)</title><rect x="21.7798%" y="437" width="0.0320%" height="15" fill="rgb(223,178,14)" fg:x="3402" fg:w="5"/><text x="21.9941%" y="447.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.03%)</title><rect x="21.7798%" y="421" width="0.0320%" height="15" fill="rgb(220,94,29)" fg:x="3402" fg:w="5"/><text x="21.9941%" y="431.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.03%)</title><rect x="21.7798%" y="405" width="0.0320%" height="15" fill="rgb(207,19,13)" fg:x="3402" fg:w="5"/><text x="21.9941%" y="415.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.03%)</title><rect x="21.7798%" y="389" width="0.0320%" height="15" fill="rgb(224,38,0)" fg:x="3402" fg:w="5"/><text x="21.9941%" y="399.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="21.7926%" y="373" width="0.0192%" height="15" fill="rgb(228,220,18)" fg:x="3404" fg:w="3"/><text x="22.0069%" y="383.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.02%)</title><rect x="21.7926%" y="357" width="0.0192%" height="15" fill="rgb(224,50,47)" fg:x="3404" fg:w="3"/><text x="22.0069%" y="367.50"></text></g><g><title>tcp_ack (3 samples, 0.02%)</title><rect x="21.7926%" y="341" width="0.0192%" height="15" fill="rgb(213,228,3)" fg:x="3404" fg:w="3"/><text x="22.0069%" y="351.50"></text></g><g><title>tcp_xmit_retransmit_queue.part.0 (2 samples, 0.01%)</title><rect x="21.7990%" y="325" width="0.0128%" height="15" fill="rgb(214,10,20)" fg:x="3405" fg:w="2"/><text x="22.0133%" y="335.50"></text></g><g><title>virtnet_poll (7 samples, 0.04%)</title><rect x="21.7798%" y="533" width="0.0448%" height="15" fill="rgb(213,187,12)" fg:x="3402" fg:w="7"/><text x="21.9941%" y="543.50"></text></g><g><title>asm_common_interrupt (10 samples, 0.06%)</title><rect x="21.7734%" y="645" width="0.0640%" height="15" fill="rgb(248,227,45)" fg:x="3401" fg:w="10"/><text x="21.9877%" y="655.50"></text></g><g><title>common_interrupt (10 samples, 0.06%)</title><rect x="21.7734%" y="629" width="0.0640%" height="15" fill="rgb(250,67,32)" fg:x="3401" fg:w="10"/><text x="21.9877%" y="639.50"></text></g><g><title>irq_exit_rcu (9 samples, 0.06%)</title><rect x="21.7798%" y="613" width="0.0576%" height="15" fill="rgb(240,18,12)" fg:x="3402" fg:w="9"/><text x="21.9941%" y="623.50"></text></g><g><title>do_softirq_own_stack (9 samples, 0.06%)</title><rect x="21.7798%" y="597" width="0.0576%" height="15" fill="rgb(223,89,53)" fg:x="3402" fg:w="9"/><text x="21.9941%" y="607.50"></text></g><g><title>asm_call_sysvec_on_stack (9 samples, 0.06%)</title><rect x="21.7798%" y="581" width="0.0576%" height="15" fill="rgb(208,184,36)" fg:x="3402" fg:w="9"/><text x="21.9941%" y="591.50"></text></g><g><title>__softirqentry_text_start (9 samples, 0.06%)</title><rect x="21.7798%" y="565" width="0.0576%" height="15" fill="rgb(249,91,22)" fg:x="3402" fg:w="9"/><text x="21.9941%" y="575.50"></text></g><g><title>net_rx_action (9 samples, 0.06%)</title><rect x="21.7798%" y="549" width="0.0576%" height="15" fill="rgb(231,11,52)" fg:x="3402" fg:w="9"/><text x="21.9941%" y="559.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.01%)</title><rect x="21.8246%" y="533" width="0.0128%" height="15" fill="rgb(251,188,47)" fg:x="3409" fg:w="2"/><text x="22.0389%" y="543.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="21.8694%" y="629" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="3416" fg:w="2"/><text x="22.0837%" y="639.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="21.8694%" y="613" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="3416" fg:w="2"/><text x="22.0837%" y="623.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="21.8694%" y="597" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="3416" fg:w="2"/><text x="22.0837%" y="607.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="21.8694%" y="581" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="3416" fg:w="2"/><text x="22.0837%" y="591.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="21.8694%" y="565" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="3416" fg:w="2"/><text x="22.0837%" y="575.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="21.8694%" y="549" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="3416" fg:w="2"/><text x="22.0837%" y="559.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="21.8694%" y="533" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="3416" fg:w="2"/><text x="22.0837%" y="543.50"></text></g><g><title>__inc_numa_state (5 samples, 0.03%)</title><rect x="22.5864%" y="581" width="0.0320%" height="15" fill="rgb(213,57,28)" fg:x="3528" fg:w="5"/><text x="22.8007%" y="591.50"></text></g><g><title>__list_del_entry_valid (22 samples, 0.14%)</title><rect x="22.6184%" y="581" width="0.1408%" height="15" fill="rgb(224,110,12)" fg:x="3533" fg:w="22"/><text x="22.8327%" y="591.50"></text></g><g><title>__mod_zone_page_state (9 samples, 0.06%)</title><rect x="22.7593%" y="581" width="0.0576%" height="15" fill="rgb(241,16,32)" fg:x="3555" fg:w="9"/><text x="22.9736%" y="591.50"></text></g><g><title>__zone_watermark_ok (5 samples, 0.03%)</title><rect x="22.8169%" y="581" width="0.0320%" height="15" fill="rgb(205,141,19)" fg:x="3564" fg:w="5"/><text x="23.0312%" y="591.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="22.8681%" y="293" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="3572" fg:w="2"/><text x="23.0824%" y="303.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="22.8681%" y="453" width="0.0192%" height="15" fill="rgb(226,216,13)" fg:x="3572" fg:w="3"/><text x="23.0824%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="22.8681%" y="437" width="0.0192%" height="15" fill="rgb(216,153,44)" fg:x="3572" fg:w="3"/><text x="23.0824%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="22.8681%" y="421" width="0.0192%" height="15" fill="rgb(227,176,26)" fg:x="3572" fg:w="3"/><text x="23.0824%" y="431.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="22.8681%" y="405" width="0.0192%" height="15" fill="rgb(215,38,16)" fg:x="3572" fg:w="3"/><text x="23.0824%" y="415.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="22.8681%" y="389" width="0.0192%" height="15" fill="rgb(207,166,9)" fg:x="3572" fg:w="3"/><text x="23.0824%" y="399.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="22.8681%" y="373" width="0.0192%" height="15" fill="rgb(223,178,14)" fg:x="3572" fg:w="3"/><text x="23.0824%" y="383.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="22.8681%" y="357" width="0.0192%" height="15" fill="rgb(220,94,29)" fg:x="3572" fg:w="3"/><text x="23.0824%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.02%)</title><rect x="22.8681%" y="341" width="0.0192%" height="15" fill="rgb(207,19,13)" fg:x="3572" fg:w="3"/><text x="23.0824%" y="351.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="22.8681%" y="325" width="0.0192%" height="15" fill="rgb(224,38,0)" fg:x="3572" fg:w="3"/><text x="23.0824%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="22.8681%" y="309" width="0.0192%" height="15" fill="rgb(228,220,18)" fg:x="3572" fg:w="3"/><text x="23.0824%" y="319.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.04%)</title><rect x="22.8553%" y="581" width="0.0384%" height="15" fill="rgb(248,227,45)" fg:x="3570" fg:w="6"/><text x="23.0696%" y="591.50"></text></g><g><title>common_interrupt (6 samples, 0.04%)</title><rect x="22.8553%" y="565" width="0.0384%" height="15" fill="rgb(250,67,32)" fg:x="3570" fg:w="6"/><text x="23.0696%" y="575.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.04%)</title><rect x="22.8553%" y="549" width="0.0384%" height="15" fill="rgb(240,18,12)" fg:x="3570" fg:w="6"/><text x="23.0696%" y="559.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.03%)</title><rect x="22.8617%" y="533" width="0.0320%" height="15" fill="rgb(223,89,53)" fg:x="3571" fg:w="5"/><text x="23.0760%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.03%)</title><rect x="22.8617%" y="517" width="0.0320%" height="15" fill="rgb(208,184,36)" fg:x="3571" fg:w="5"/><text x="23.0760%" y="527.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.03%)</title><rect x="22.8617%" y="501" width="0.0320%" height="15" fill="rgb(249,91,22)" fg:x="3571" fg:w="5"/><text x="23.0760%" y="511.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="22.8681%" y="485" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="3572" fg:w="4"/><text x="23.0824%" y="495.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="22.8681%" y="469" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="3572" fg:w="4"/><text x="23.0824%" y="479.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="23.0538%" y="549" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="3601" fg:w="2"/><text x="23.2681%" y="559.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="23.0730%" y="549" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="3604" fg:w="2"/><text x="23.2873%" y="559.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="23.0730%" y="533" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="3604" fg:w="2"/><text x="23.2873%" y="543.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="23.0730%" y="517" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="3604" fg:w="2"/><text x="23.2873%" y="527.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="23.0730%" y="501" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="3604" fg:w="2"/><text x="23.2873%" y="511.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="23.0730%" y="485" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="3604" fg:w="2"/><text x="23.2873%" y="495.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="23.0730%" y="469" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="3604" fg:w="2"/><text x="23.2873%" y="479.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="23.0730%" y="453" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="3604" fg:w="2"/><text x="23.2873%" y="463.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="23.0730%" y="437" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="3604" fg:w="2"/><text x="23.2873%" y="447.50"></text></g><g><title>receive_buf (2 samples, 0.01%)</title><rect x="23.0730%" y="421" width="0.0128%" height="15" fill="rgb(233,111,44)" fg:x="3604" fg:w="2"/><text x="23.2873%" y="431.50"></text></g><g><title>page_to_skb (2 samples, 0.01%)</title><rect x="23.0730%" y="405" width="0.0128%" height="15" fill="rgb(243,180,22)" fg:x="3604" fg:w="2"/><text x="23.2873%" y="415.50"></text></g><g><title>__irqentry_text_start (38 samples, 0.24%)</title><rect x="28.8028%" y="533" width="0.2433%" height="15" fill="rgb(229,107,3)" fg:x="4499" fg:w="38"/><text x="29.0171%" y="543.50"></text></g><g><title>__handle_irq_event_percpu (3 samples, 0.02%)</title><rect x="29.0653%" y="453" width="0.0192%" height="15" fill="rgb(239,110,26)" fg:x="4540" fg:w="3"/><text x="29.2796%" y="463.50"></text></g><g><title>vring_interrupt (3 samples, 0.02%)</title><rect x="29.0653%" y="437" width="0.0192%" height="15" fill="rgb(206,212,41)" fg:x="4540" fg:w="3"/><text x="29.2796%" y="447.50"></text></g><g><title>__napi_schedule (2 samples, 0.01%)</title><rect x="29.0717%" y="421" width="0.0128%" height="15" fill="rgb(239,13,52)" fg:x="4541" fg:w="2"/><text x="29.2860%" y="431.50"></text></g><g><title>asm_call_sysvec_on_stack (6 samples, 0.04%)</title><rect x="29.0525%" y="501" width="0.0384%" height="15" fill="rgb(208,184,36)" fg:x="4538" fg:w="6"/><text x="29.2668%" y="511.50"></text></g><g><title>handle_edge_irq (6 samples, 0.04%)</title><rect x="29.0525%" y="485" width="0.0384%" height="15" fill="rgb(219,15,9)" fg:x="4538" fg:w="6"/><text x="29.2668%" y="495.50"></text></g><g><title>handle_irq_event (4 samples, 0.03%)</title><rect x="29.0653%" y="469" width="0.0256%" height="15" fill="rgb(209,73,52)" fg:x="4540" fg:w="4"/><text x="29.2796%" y="479.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.02%)</title><rect x="29.1485%" y="293" width="0.0192%" height="15" fill="rgb(219,202,51)" fg:x="4553" fg:w="3"/><text x="29.3628%" y="303.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (5 samples, 0.03%)</title><rect x="29.1421%" y="325" width="0.0320%" height="15" fill="rgb(246,15,53)" fg:x="4552" fg:w="5"/><text x="29.3564%" y="335.50"></text></g><g><title>tcp_v4_early_demux (4 samples, 0.03%)</title><rect x="29.1485%" y="309" width="0.0256%" height="15" fill="rgb(225,190,1)" fg:x="4553" fg:w="4"/><text x="29.3628%" y="319.50"></text></g><g><title>tcp_add_backlog (2 samples, 0.01%)</title><rect x="29.2125%" y="261" width="0.0128%" height="15" fill="rgb(219,215,12)" fg:x="4563" fg:w="2"/><text x="29.4268%" y="271.50"></text></g><g><title>__ip_finish_output (2 samples, 0.01%)</title><rect x="29.2318%" y="165" width="0.0128%" height="15" fill="rgb(252,12,27)" fg:x="4566" fg:w="2"/><text x="29.4460%" y="175.50"></text></g><g><title>virtqueue_add_outbuf (3 samples, 0.02%)</title><rect x="29.2574%" y="69" width="0.0192%" height="15" fill="rgb(207,208,9)" fg:x="4570" fg:w="3"/><text x="29.4716%" y="79.50"></text></g><g><title>virtqueue_add_split (3 samples, 0.02%)</title><rect x="29.2574%" y="53" width="0.0192%" height="15" fill="rgb(238,41,16)" fg:x="4570" fg:w="3"/><text x="29.4716%" y="63.50"></text></g><g><title>dev_hard_start_xmit (7 samples, 0.04%)</title><rect x="29.2446%" y="101" width="0.0448%" height="15" fill="rgb(251,86,39)" fg:x="4568" fg:w="7"/><text x="29.4588%" y="111.50"></text></g><g><title>start_xmit (7 samples, 0.04%)</title><rect x="29.2446%" y="85" width="0.0448%" height="15" fill="rgb(211,140,13)" fg:x="4568" fg:w="7"/><text x="29.4588%" y="95.50"></text></g><g><title>virtqueue_notify (2 samples, 0.01%)</title><rect x="29.2766%" y="69" width="0.0128%" height="15" fill="rgb(219,119,18)" fg:x="4573" fg:w="2"/><text x="29.4909%" y="79.50"></text></g><g><title>vp_notify (2 samples, 0.01%)</title><rect x="29.2766%" y="53" width="0.0128%" height="15" fill="rgb(230,193,37)" fg:x="4573" fg:w="2"/><text x="29.4909%" y="63.50"></text></g><g><title>iowrite16 (2 samples, 0.01%)</title><rect x="29.2766%" y="37" width="0.0128%" height="15" fill="rgb(218,139,37)" fg:x="4573" fg:w="2"/><text x="29.4909%" y="47.50"></text></g><g><title>__ip_queue_xmit (11 samples, 0.07%)</title><rect x="29.2318%" y="181" width="0.0704%" height="15" fill="rgb(224,11,5)" fg:x="4566" fg:w="11"/><text x="29.4460%" y="191.50"></text></g><g><title>ip_finish_output2 (9 samples, 0.06%)</title><rect x="29.2446%" y="165" width="0.0576%" height="15" fill="rgb(219,227,11)" fg:x="4568" fg:w="9"/><text x="29.4588%" y="175.50"></text></g><g><title>__dev_queue_xmit (9 samples, 0.06%)</title><rect x="29.2446%" y="149" width="0.0576%" height="15" fill="rgb(232,116,37)" fg:x="4568" fg:w="9"/><text x="29.4588%" y="159.50"></text></g><g><title>__qdisc_run (9 samples, 0.06%)</title><rect x="29.2446%" y="133" width="0.0576%" height="15" fill="rgb(252,144,25)" fg:x="4568" fg:w="9"/><text x="29.4588%" y="143.50"></text></g><g><title>sch_direct_xmit (9 samples, 0.06%)</title><rect x="29.2446%" y="117" width="0.0576%" height="15" fill="rgb(222,128,44)" fg:x="4568" fg:w="9"/><text x="29.4588%" y="127.50"></text></g><g><title>validate_xmit_skb_list (2 samples, 0.01%)</title><rect x="29.2894%" y="101" width="0.0128%" height="15" fill="rgb(254,174,52)" fg:x="4575" fg:w="2"/><text x="29.5037%" y="111.50"></text></g><g><title>__tcp_transmit_skb (14 samples, 0.09%)</title><rect x="29.2254%" y="197" width="0.0896%" height="15" fill="rgb(238,106,36)" fg:x="4565" fg:w="14"/><text x="29.4396%" y="207.50"></text></g><g><title>skb_clone (2 samples, 0.01%)</title><rect x="29.3022%" y="181" width="0.0128%" height="15" fill="rgb(253,39,17)" fg:x="4577" fg:w="2"/><text x="29.5165%" y="191.50"></text></g><g><title>__tcp_push_pending_frames (18 samples, 0.12%)</title><rect x="29.2254%" y="229" width="0.1152%" height="15" fill="rgb(226,88,38)" fg:x="4565" fg:w="18"/><text x="29.4396%" y="239.50"></text></g><g><title>tcp_write_xmit (18 samples, 0.12%)</title><rect x="29.2254%" y="213" width="0.1152%" height="15" fill="rgb(236,72,36)" fg:x="4565" fg:w="18"/><text x="29.4396%" y="223.50"></text></g><g><title>tcp_event_new_data_sent (2 samples, 0.01%)</title><rect x="29.3278%" y="197" width="0.0128%" height="15" fill="rgb(227,19,23)" fg:x="4581" fg:w="2"/><text x="29.5421%" y="207.50"></text></g><g><title>sk_reset_timer (2 samples, 0.01%)</title><rect x="29.3278%" y="181" width="0.0128%" height="15" fill="rgb(220,37,33)" fg:x="4581" fg:w="2"/><text x="29.5421%" y="191.50"></text></g><g><title>__mod_timer (2 samples, 0.01%)</title><rect x="29.3278%" y="165" width="0.0128%" height="15" fill="rgb(232,140,47)" fg:x="4581" fg:w="2"/><text x="29.5421%" y="175.50"></text></g><g><title>tcp_ack (6 samples, 0.04%)</title><rect x="29.3406%" y="229" width="0.0384%" height="15" fill="rgb(213,228,3)" fg:x="4583" fg:w="6"/><text x="29.5549%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (27 samples, 0.17%)</title><rect x="29.2254%" y="261" width="0.1729%" height="15" fill="rgb(228,220,18)" fg:x="4565" fg:w="27"/><text x="29.4396%" y="271.50"></text></g><g><title>tcp_rcv_established (27 samples, 0.17%)</title><rect x="29.2254%" y="245" width="0.1729%" height="15" fill="rgb(224,50,47)" fg:x="4565" fg:w="27"/><text x="29.4396%" y="255.50"></text></g><g><title>napi_complete_done (43 samples, 0.28%)</title><rect x="29.1293%" y="405" width="0.2753%" height="15" fill="rgb(226,216,13)" fg:x="4550" fg:w="43"/><text x="29.3436%" y="415.50"></text></g><g><title>netif_receive_skb_list_internal (43 samples, 0.28%)</title><rect x="29.1293%" y="389" width="0.2753%" height="15" fill="rgb(216,153,44)" fg:x="4550" fg:w="43"/><text x="29.3436%" y="399.50"></text></g><g><title>__netif_receive_skb_list_core (43 samples, 0.28%)</title><rect x="29.1293%" y="373" width="0.2753%" height="15" fill="rgb(227,176,26)" fg:x="4550" fg:w="43"/><text x="29.3436%" y="383.50"></text></g><g><title>ip_list_rcv (43 samples, 0.28%)</title><rect x="29.1293%" y="357" width="0.2753%" height="15" fill="rgb(215,38,16)" fg:x="4550" fg:w="43"/><text x="29.3436%" y="367.50"></text></g><g><title>ip_sublist_rcv (42 samples, 0.27%)</title><rect x="29.1357%" y="341" width="0.2689%" height="15" fill="rgb(207,166,9)" fg:x="4551" fg:w="42"/><text x="29.3500%" y="351.50"></text></g><g><title>ip_sublist_rcv_finish (36 samples, 0.23%)</title><rect x="29.1741%" y="325" width="0.2305%" height="15" fill="rgb(223,178,14)" fg:x="4557" fg:w="36"/><text x="29.3884%" y="335.50"></text></g><g><title>ip_local_deliver_finish (36 samples, 0.23%)</title><rect x="29.1741%" y="309" width="0.2305%" height="15" fill="rgb(220,94,29)" fg:x="4557" fg:w="36"/><text x="29.3884%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (35 samples, 0.22%)</title><rect x="29.1805%" y="293" width="0.2241%" height="15" fill="rgb(207,19,13)" fg:x="4558" fg:w="35"/><text x="29.3948%" y="303.50"></text></g><g><title>tcp_v4_rcv (34 samples, 0.22%)</title><rect x="29.1869%" y="277" width="0.2177%" height="15" fill="rgb(224,38,0)" fg:x="4559" fg:w="34"/><text x="29.4012%" y="287.50"></text></g><g><title>napi_gro_receive (2 samples, 0.01%)</title><rect x="29.4046%" y="405" width="0.0128%" height="15" fill="rgb(248,45,29)" fg:x="4593" fg:w="2"/><text x="29.6189%" y="415.50"></text></g><g><title>dev_gro_receive (2 samples, 0.01%)</title><rect x="29.4046%" y="389" width="0.0128%" height="15" fill="rgb(219,73,15)" fg:x="4593" fg:w="2"/><text x="29.6189%" y="399.50"></text></g><g><title>inet_gro_receive (2 samples, 0.01%)</title><rect x="29.4046%" y="373" width="0.0128%" height="15" fill="rgb(205,21,43)" fg:x="4593" fg:w="2"/><text x="29.6189%" y="383.50"></text></g><g><title>eth_type_trans (2 samples, 0.01%)</title><rect x="29.4238%" y="389" width="0.0128%" height="15" fill="rgb(233,178,39)" fg:x="4596" fg:w="2"/><text x="29.6381%" y="399.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.02%)</title><rect x="29.4622%" y="341" width="0.0192%" height="15" fill="rgb(228,161,44)" fg:x="4602" fg:w="3"/><text x="29.6765%" y="351.50"></text></g><g><title>receive_buf (13 samples, 0.08%)</title><rect x="29.4174%" y="405" width="0.0832%" height="15" fill="rgb(233,111,44)" fg:x="4595" fg:w="13"/><text x="29.6317%" y="415.50"></text></g><g><title>page_to_skb (10 samples, 0.06%)</title><rect x="29.4366%" y="389" width="0.0640%" height="15" fill="rgb(243,180,22)" fg:x="4598" fg:w="10"/><text x="29.6509%" y="399.50"></text></g><g><title>__napi_alloc_skb (8 samples, 0.05%)</title><rect x="29.4494%" y="373" width="0.0512%" height="15" fill="rgb(236,121,11)" fg:x="4600" fg:w="8"/><text x="29.6637%" y="383.50"></text></g><g><title>__alloc_skb (8 samples, 0.05%)</title><rect x="29.4494%" y="357" width="0.0512%" height="15" fill="rgb(237,90,40)" fg:x="4600" fg:w="8"/><text x="29.6637%" y="367.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.01%)</title><rect x="29.4878%" y="341" width="0.0128%" height="15" fill="rgb(227,94,12)" fg:x="4606" fg:w="2"/><text x="29.7021%" y="351.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.01%)</title><rect x="29.5006%" y="389" width="0.0128%" height="15" fill="rgb(240,178,22)" fg:x="4608" fg:w="2"/><text x="29.7149%" y="399.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="29.5006%" y="373" width="0.0128%" height="15" fill="rgb(245,49,10)" fg:x="4608" fg:w="2"/><text x="29.7149%" y="383.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="29.5006%" y="357" width="0.0128%" height="15" fill="rgb(246,35,53)" fg:x="4608" fg:w="2"/><text x="29.7149%" y="367.50"></text></g><g><title>prep_new_page (2 samples, 0.01%)</title><rect x="29.5006%" y="341" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="4608" fg:w="2"/><text x="29.7149%" y="351.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.01%)</title><rect x="29.5006%" y="325" width="0.0128%" height="15" fill="rgb(253,165,35)" fg:x="4608" fg:w="2"/><text x="29.7149%" y="335.50"></text></g><g><title>clear_page_rep (2 samples, 0.01%)</title><rect x="29.5006%" y="309" width="0.0128%" height="15" fill="rgb(233,188,25)" fg:x="4608" fg:w="2"/><text x="29.7149%" y="319.50"></text></g><g><title>virtnet_poll (63 samples, 0.40%)</title><rect x="29.1165%" y="421" width="0.4033%" height="15" fill="rgb(213,187,12)" fg:x="4548" fg:w="63"/><text x="29.3308%" y="431.50"></text></g><g><title>try_fill_recv (3 samples, 0.02%)</title><rect x="29.5006%" y="405" width="0.0192%" height="15" fill="rgb(209,67,13)" fg:x="4608" fg:w="3"/><text x="29.7149%" y="415.50"></text></g><g><title>free_old_xmit_skbs (3 samples, 0.02%)</title><rect x="29.5198%" y="405" width="0.0192%" height="15" fill="rgb(235,178,6)" fg:x="4611" fg:w="3"/><text x="29.7341%" y="415.50"></text></g><g><title>virtqueue_get_buf_ctx_split (2 samples, 0.01%)</title><rect x="29.5262%" y="389" width="0.0128%" height="15" fill="rgb(235,34,35)" fg:x="4612" fg:w="2"/><text x="29.7405%" y="399.50"></text></g><g><title>net_rx_action (70 samples, 0.45%)</title><rect x="29.0973%" y="437" width="0.4481%" height="15" fill="rgb(231,11,52)" fg:x="4545" fg:w="70"/><text x="29.3116%" y="447.50"></text></g><g><title>virtnet_poll_tx (4 samples, 0.03%)</title><rect x="29.5198%" y="421" width="0.0256%" height="15" fill="rgb(251,188,47)" fg:x="4611" fg:w="4"/><text x="29.7341%" y="431.50"></text></g><g><title>do_softirq_own_stack (71 samples, 0.45%)</title><rect x="29.0973%" y="485" width="0.4545%" height="15" fill="rgb(223,89,53)" fg:x="4545" fg:w="71"/><text x="29.3116%" y="495.50"></text></g><g><title>asm_call_sysvec_on_stack (71 samples, 0.45%)</title><rect x="29.0973%" y="469" width="0.4545%" height="15" fill="rgb(208,184,36)" fg:x="4545" fg:w="71"/><text x="29.3116%" y="479.50"></text></g><g><title>__softirqentry_text_start (71 samples, 0.45%)</title><rect x="29.0973%" y="453" width="0.4545%" height="15" fill="rgb(249,91,22)" fg:x="4545" fg:w="71"/><text x="29.3116%" y="463.50"></text></g><g><title>asm_common_interrupt (80 samples, 0.51%)</title><rect x="29.0461%" y="533" width="0.5122%" height="15" fill="rgb(248,227,45)" fg:x="4537" fg:w="80"/><text x="29.2604%" y="543.50"></text></g><g><title>common_interrupt (80 samples, 0.51%)</title><rect x="29.0461%" y="517" width="0.5122%" height="15" fill="rgb(250,67,32)" fg:x="4537" fg:w="80"/><text x="29.2604%" y="527.50"></text></g><g><title>irq_exit_rcu (73 samples, 0.47%)</title><rect x="29.0909%" y="501" width="0.4673%" height="15" fill="rgb(240,18,12)" fg:x="4544" fg:w="73"/><text x="29.3052%" y="511.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="29.5583%" y="501" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="4617" fg:w="3"/><text x="29.7725%" y="511.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="29.5583%" y="485" width="0.0192%" height="15" fill="rgb(221,147,0)" fg:x="4617" fg:w="3"/><text x="29.7725%" y="495.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.02%)</title><rect x="29.5583%" y="469" width="0.0192%" height="15" fill="rgb(212,109,30)" fg:x="4617" fg:w="3"/><text x="29.7725%" y="479.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.02%)</title><rect x="29.5583%" y="453" width="0.0192%" height="15" fill="rgb(232,211,54)" fg:x="4617" fg:w="3"/><text x="29.7725%" y="463.50"></text></g><g><title>tick_sched_timer (3 samples, 0.02%)</title><rect x="29.5583%" y="437" width="0.0192%" height="15" fill="rgb(237,67,28)" fg:x="4617" fg:w="3"/><text x="29.7725%" y="447.50"></text></g><g><title>tick_sched_handle (3 samples, 0.02%)</title><rect x="29.5583%" y="421" width="0.0192%" height="15" fill="rgb(232,138,39)" fg:x="4617" fg:w="3"/><text x="29.7725%" y="431.50"></text></g><g><title>update_process_times (3 samples, 0.02%)</title><rect x="29.5583%" y="405" width="0.0192%" height="15" fill="rgb(236,132,35)" fg:x="4617" fg:w="3"/><text x="29.7725%" y="415.50"></text></g><g><title>scheduler_tick (2 samples, 0.01%)</title><rect x="29.5647%" y="389" width="0.0128%" height="15" fill="rgb(222,32,52)" fg:x="4618" fg:w="2"/><text x="29.7789%" y="399.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="29.5775%" y="501" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="4620" fg:w="2"/><text x="29.7918%" y="511.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="29.5775%" y="485" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="4620" fg:w="2"/><text x="29.7918%" y="495.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="29.5775%" y="469" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="4620" fg:w="2"/><text x="29.7918%" y="479.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="29.5775%" y="453" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="4620" fg:w="2"/><text x="29.7918%" y="463.50"></text></g><g><title>rcu_core (2 samples, 0.01%)</title><rect x="29.5775%" y="437" width="0.0128%" height="15" fill="rgb(230,26,14)" fg:x="4620" fg:w="2"/><text x="29.7918%" y="447.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 0.04%)</title><rect x="29.5583%" y="533" width="0.0384%" height="15" fill="rgb(209,17,43)" fg:x="4617" fg:w="6"/><text x="29.7725%" y="543.50"></text></g><g><title>sysvec_apic_timer_interrupt (6 samples, 0.04%)</title><rect x="29.5583%" y="517" width="0.0384%" height="15" fill="rgb(218,44,13)" fg:x="4617" fg:w="6"/><text x="29.7725%" y="527.50"></text></g><g><title>kernel_init_free_pages (1,042 samples, 6.67%)</title><rect x="22.9321%" y="565" width="6.6709%" height="15" fill="rgb(253,165,35)" fg:x="3582" fg:w="1042"/><text x="23.1464%" y="575.50">kernel_init..</text></g><g><title>clear_page_rep (1,017 samples, 6.51%)</title><rect x="23.0922%" y="549" width="6.5109%" height="15" fill="rgb(233,188,25)" fg:x="3607" fg:w="1017"/><text x="23.3065%" y="559.50">clear_page..</text></g><g><title>kernel_poison_pages (2 samples, 0.01%)</title><rect x="29.6031%" y="565" width="0.0128%" height="15" fill="rgb(240,82,29)" fg:x="4624" fg:w="2"/><text x="29.8174%" y="575.50"></text></g><g><title>page_poisoning_enabled (3 samples, 0.02%)</title><rect x="29.6159%" y="565" width="0.0192%" height="15" fill="rgb(210,88,43)" fg:x="4626" fg:w="3"/><text x="29.8302%" y="575.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="29.6223%" y="549" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="4627" fg:w="2"/><text x="29.8366%" y="559.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="29.6223%" y="533" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="4627" fg:w="2"/><text x="29.8366%" y="543.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="29.6223%" y="517" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="4627" fg:w="2"/><text x="29.8366%" y="527.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="29.6223%" y="501" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="4627" fg:w="2"/><text x="29.8366%" y="511.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="29.6223%" y="485" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="4627" fg:w="2"/><text x="29.8366%" y="495.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="29.6223%" y="469" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="4627" fg:w="2"/><text x="29.8366%" y="479.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="29.6223%" y="453" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="4627" fg:w="2"/><text x="29.8366%" y="463.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="29.6927%" y="549" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="4638" fg:w="2"/><text x="29.9070%" y="559.50"></text></g><g><title>prep_compound_page (12 samples, 0.08%)</title><rect x="29.6351%" y="565" width="0.0768%" height="15" fill="rgb(247,213,6)" fg:x="4629" fg:w="12"/><text x="29.8494%" y="575.50"></text></g><g><title>prep_new_page (1,066 samples, 6.82%)</title><rect x="22.8937%" y="581" width="6.8246%" height="15" fill="rgb(220,94,29)" fg:x="3576" fg:w="1066"/><text x="23.1080%" y="591.50">prep_new_pa..</text></g><g><title>get_page_from_freelist (1,174 samples, 7.52%)</title><rect x="22.2087%" y="597" width="7.5160%" height="15" fill="rgb(246,35,53)" fg:x="3469" fg:w="1174"/><text x="22.4230%" y="607.50">get_page_fro..</text></g><g><title>__alloc_pages_nodemask (1,196 samples, 7.66%)</title><rect x="22.0807%" y="613" width="7.6569%" height="15" fill="rgb(245,49,10)" fg:x="3449" fg:w="1196"/><text x="22.2950%" y="623.50">__alloc_pages..</text></g><g><title>should_fail_alloc_page (2 samples, 0.01%)</title><rect x="29.7247%" y="597" width="0.0128%" height="15" fill="rgb(218,112,19)" fg:x="4643" fg:w="2"/><text x="29.9390%" y="607.50"></text></g><g><title>alloc_pages_current (39 samples, 0.25%)</title><rect x="29.7439%" y="613" width="0.2497%" height="15" fill="rgb(250,171,52)" fg:x="4646" fg:w="39"/><text x="29.9582%" y="623.50"></text></g><g><title>policy_node (4 samples, 0.03%)</title><rect x="29.9680%" y="597" width="0.0256%" height="15" fill="rgb(205,161,10)" fg:x="4681" fg:w="4"/><text x="30.1823%" y="607.50"></text></g><g><title>sk_page_frag_refill (1,279 samples, 8.19%)</title><rect x="21.8438%" y="645" width="8.1882%" height="15" fill="rgb(244,13,30)" fg:x="3412" fg:w="1279"/><text x="22.0581%" y="655.50">sk_page_frag_r..</text></g><g><title>skb_page_frag_refill (1,273 samples, 8.15%)</title><rect x="21.8822%" y="629" width="8.1498%" height="15" fill="rgb(240,178,22)" fg:x="3418" fg:w="1273"/><text x="22.0965%" y="639.50">skb_page_frag_..</text></g><g><title>get_order (6 samples, 0.04%)</title><rect x="29.9936%" y="613" width="0.0384%" height="15" fill="rgb(250,154,37)" fg:x="4685" fg:w="6"/><text x="30.2079%" y="623.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="30.3649%" y="597" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="4743" fg:w="2"/><text x="30.5792%" y="607.50"></text></g><g><title>__alloc_pages_nodemask (7 samples, 0.04%)</title><rect x="30.5122%" y="549" width="0.0448%" height="15" fill="rgb(245,49,10)" fg:x="4766" fg:w="7"/><text x="30.7264%" y="559.50"></text></g><g><title>get_page_from_freelist (6 samples, 0.04%)</title><rect x="30.5186%" y="533" width="0.0384%" height="15" fill="rgb(246,35,53)" fg:x="4767" fg:w="6"/><text x="30.7329%" y="543.50"></text></g><g><title>prep_new_page (4 samples, 0.03%)</title><rect x="30.5314%" y="517" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="4769" fg:w="4"/><text x="30.7457%" y="527.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.02%)</title><rect x="30.5378%" y="501" width="0.0192%" height="15" fill="rgb(253,165,35)" fg:x="4770" fg:w="3"/><text x="30.7521%" y="511.50"></text></g><g><title>clear_page_rep (3 samples, 0.02%)</title><rect x="30.5378%" y="485" width="0.0192%" height="15" fill="rgb(233,188,25)" fg:x="4770" fg:w="3"/><text x="30.7521%" y="495.50"></text></g><g><title>allocate_slab (10 samples, 0.06%)</title><rect x="30.4994%" y="565" width="0.0640%" height="15" fill="rgb(222,145,35)" fg:x="4764" fg:w="10"/><text x="30.7136%" y="575.50"></text></g><g><title>___slab_alloc (36 samples, 0.23%)</title><rect x="30.3841%" y="581" width="0.2305%" height="15" fill="rgb(224,215,35)" fg:x="4746" fg:w="36"/><text x="30.5984%" y="591.50"></text></g><g><title>get_partial_node.part.0 (8 samples, 0.05%)</title><rect x="30.5634%" y="565" width="0.0512%" height="15" fill="rgb(252,28,23)" fg:x="4774" fg:w="8"/><text x="30.7777%" y="575.50"></text></g><g><title>__list_del_entry_valid (8 samples, 0.05%)</title><rect x="30.5634%" y="549" width="0.0512%" height="15" fill="rgb(224,110,12)" fg:x="4774" fg:w="8"/><text x="30.7777%" y="559.50"></text></g><g><title>__slab_alloc (38 samples, 0.24%)</title><rect x="30.3777%" y="597" width="0.2433%" height="15" fill="rgb(229,140,31)" fg:x="4745" fg:w="38"/><text x="30.5920%" y="607.50"></text></g><g><title>kmalloc_slab (7 samples, 0.04%)</title><rect x="30.6274%" y="597" width="0.0448%" height="15" fill="rgb(219,98,13)" fg:x="4784" fg:w="7"/><text x="30.8417%" y="607.50"></text></g><g><title>memcg_slab_post_alloc_hook (4 samples, 0.03%)</title><rect x="30.6722%" y="597" width="0.0256%" height="15" fill="rgb(242,216,24)" fg:x="4791" fg:w="4"/><text x="30.8865%" y="607.50"></text></g><g><title>memset (18 samples, 0.12%)</title><rect x="30.6978%" y="597" width="0.1152%" height="15" fill="rgb(251,9,1)" fg:x="4795" fg:w="18"/><text x="30.9121%" y="607.50"></text></g><g><title>__kmalloc_node_track_caller (94 samples, 0.60%)</title><rect x="30.2817%" y="613" width="0.6018%" height="15" fill="rgb(228,161,44)" fg:x="4730" fg:w="94"/><text x="30.4960%" y="623.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (11 samples, 0.07%)</title><rect x="30.8131%" y="597" width="0.0704%" height="15" fill="rgb(212,11,50)" fg:x="4813" fg:w="11"/><text x="31.0273%" y="607.50"></text></g><g><title>__ksize (8 samples, 0.05%)</title><rect x="30.8835%" y="613" width="0.0512%" height="15" fill="rgb(238,215,23)" fg:x="4824" fg:w="8"/><text x="31.0978%" y="623.50"></text></g><g><title>__x86_return_thunk (4 samples, 0.03%)</title><rect x="30.9347%" y="613" width="0.0256%" height="15" fill="rgb(211,8,20)" fg:x="4832" fg:w="4"/><text x="31.1490%" y="623.50"></text></g><g><title>srso_safe_ret_alias (4 samples, 0.03%)</title><rect x="30.9347%" y="597" width="0.0256%" height="15" fill="rgb(210,87,27)" fg:x="4832" fg:w="4"/><text x="31.1490%" y="607.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="31.0948%" y="597" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="4857" fg:w="2"/><text x="31.3090%" y="607.50"></text></g><g><title>allocate_slab (11 samples, 0.07%)</title><rect x="31.2804%" y="565" width="0.0704%" height="15" fill="rgb(222,145,35)" fg:x="4886" fg:w="11"/><text x="31.4947%" y="575.50"></text></g><g><title>get_random_u32 (3 samples, 0.02%)</title><rect x="31.3316%" y="549" width="0.0192%" height="15" fill="rgb(232,72,47)" fg:x="4894" fg:w="3"/><text x="31.5459%" y="559.50"></text></g><g><title>___slab_alloc (35 samples, 0.22%)</title><rect x="31.1460%" y="581" width="0.2241%" height="15" fill="rgb(224,215,35)" fg:x="4865" fg:w="35"/><text x="31.3603%" y="591.50"></text></g><g><title>get_partial_node.part.0 (3 samples, 0.02%)</title><rect x="31.3508%" y="565" width="0.0192%" height="15" fill="rgb(252,28,23)" fg:x="4897" fg:w="3"/><text x="31.5651%" y="575.50"></text></g><g><title>__list_del_entry_valid (2 samples, 0.01%)</title><rect x="31.3572%" y="549" width="0.0128%" height="15" fill="rgb(224,110,12)" fg:x="4898" fg:w="2"/><text x="31.5715%" y="559.50"></text></g><g><title>__slab_alloc (44 samples, 0.28%)</title><rect x="31.1076%" y="597" width="0.2817%" height="15" fill="rgb(229,140,31)" fg:x="4859" fg:w="44"/><text x="31.3218%" y="607.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="31.3700%" y="581" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="591.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="31.3700%" y="565" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="575.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="31.3700%" y="549" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="559.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="31.3700%" y="533" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="31.3700%" y="517" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="527.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="31.3700%" y="501" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="511.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="31.3700%" y="485" width="0.0192%" height="15" fill="rgb(231,11,52)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="495.50"></text></g><g><title>virtnet_poll (3 samples, 0.02%)</title><rect x="31.3700%" y="469" width="0.0192%" height="15" fill="rgb(213,187,12)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="479.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="31.3700%" y="453" width="0.0192%" height="15" fill="rgb(226,216,13)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="31.3700%" y="437" width="0.0192%" height="15" fill="rgb(216,153,44)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="31.3700%" y="421" width="0.0192%" height="15" fill="rgb(227,176,26)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="431.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="31.3700%" y="405" width="0.0192%" height="15" fill="rgb(215,38,16)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="415.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="31.3700%" y="389" width="0.0192%" height="15" fill="rgb(207,166,9)" fg:x="4900" fg:w="3"/><text x="31.5843%" y="399.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="31.3764%" y="373" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="4901" fg:w="2"/><text x="31.5907%" y="383.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="31.3764%" y="357" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="4901" fg:w="2"/><text x="31.5907%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="31.3764%" y="341" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="4901" fg:w="2"/><text x="31.5907%" y="351.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="31.3764%" y="325" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="4901" fg:w="2"/><text x="31.5907%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="31.3764%" y="309" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="4901" fg:w="2"/><text x="31.5907%" y="319.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="31.3764%" y="293" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="4901" fg:w="2"/><text x="31.5907%" y="303.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="31.3764%" y="277" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="4901" fg:w="2"/><text x="31.5907%" y="287.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="31.3764%" y="261" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="4901" fg:w="2"/><text x="31.5907%" y="271.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="31.3764%" y="245" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="4901" fg:w="2"/><text x="31.5907%" y="255.50"></text></g><g><title>memcg_slab_post_alloc_hook (6 samples, 0.04%)</title><rect x="31.3956%" y="597" width="0.0384%" height="15" fill="rgb(242,216,24)" fg:x="4904" fg:w="6"/><text x="31.6099%" y="607.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="31.5109%" y="581" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="4922" fg:w="2"/><text x="31.7252%" y="591.50"></text></g><g><title>memset (15 samples, 0.10%)</title><rect x="31.4341%" y="597" width="0.0960%" height="15" fill="rgb(251,9,1)" fg:x="4910" fg:w="15"/><text x="31.6483%" y="607.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="31.5621%" y="581" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="4930" fg:w="2"/><text x="31.7764%" y="591.50"></text></g><g><title>_cond_resched (4 samples, 0.03%)</title><rect x="31.5749%" y="581" width="0.0256%" height="15" fill="rgb(240,228,18)" fg:x="4932" fg:w="4"/><text x="31.7892%" y="591.50"></text></g><g><title>kmem_cache_alloc_node (100 samples, 0.64%)</title><rect x="30.9667%" y="613" width="0.6402%" height="15" fill="rgb(227,94,12)" fg:x="4837" fg:w="100"/><text x="31.1810%" y="623.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (12 samples, 0.08%)</title><rect x="31.5301%" y="597" width="0.0768%" height="15" fill="rgb(212,11,50)" fg:x="4925" fg:w="12"/><text x="31.7444%" y="607.50"></text></g><g><title>__alloc_skb (226 samples, 1.45%)</title><rect x="30.1729%" y="629" width="1.4469%" height="15" fill="rgb(237,90,40)" fg:x="4713" fg:w="226"/><text x="30.3871%" y="639.50"></text></g><g><title>ksize (2 samples, 0.01%)</title><rect x="31.6069%" y="613" width="0.0128%" height="15" fill="rgb(242,54,43)" fg:x="4937" fg:w="2"/><text x="31.8212%" y="623.50"></text></g><g><title>__mod_memcg_state.part.0 (2 samples, 0.01%)</title><rect x="31.6325%" y="581" width="0.0128%" height="15" fill="rgb(252,169,8)" fg:x="4941" fg:w="2"/><text x="31.8468%" y="591.50"></text></g><g><title>mem_cgroup_charge_skmem (4 samples, 0.03%)</title><rect x="31.6325%" y="597" width="0.0256%" height="15" fill="rgb(248,15,41)" fg:x="4941" fg:w="4"/><text x="31.8468%" y="607.50"></text></g><g><title>try_charge (2 samples, 0.01%)</title><rect x="31.6453%" y="581" width="0.0128%" height="15" fill="rgb(208,116,22)" fg:x="4943" fg:w="2"/><text x="31.8596%" y="591.50"></text></g><g><title>__sk_mem_schedule (6 samples, 0.04%)</title><rect x="31.6261%" y="629" width="0.0384%" height="15" fill="rgb(219,50,38)" fg:x="4940" fg:w="6"/><text x="31.8404%" y="639.50"></text></g><g><title>__sk_mem_raise_allocated (6 samples, 0.04%)</title><rect x="31.6261%" y="613" width="0.0384%" height="15" fill="rgb(232,27,1)" fg:x="4940" fg:w="6"/><text x="31.8404%" y="623.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="31.6645%" y="501" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="4946" fg:w="2"/><text x="31.8788%" y="511.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="31.6645%" y="485" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="4946" fg:w="2"/><text x="31.8788%" y="495.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="31.6645%" y="469" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="4946" fg:w="2"/><text x="31.8788%" y="479.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="31.6645%" y="453" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="4946" fg:w="2"/><text x="31.8788%" y="463.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="31.6645%" y="437" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="4946" fg:w="2"/><text x="31.8788%" y="447.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="31.6645%" y="421" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="4946" fg:w="2"/><text x="31.8788%" y="431.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="31.6645%" y="405" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="4946" fg:w="2"/><text x="31.8788%" y="415.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="31.6645%" y="389" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="4946" fg:w="2"/><text x="31.8788%" y="399.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="31.6645%" y="373" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="4946" fg:w="2"/><text x="31.8788%" y="383.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="31.6645%" y="357" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="4946" fg:w="2"/><text x="31.8788%" y="367.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="31.6645%" y="341" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="4946" fg:w="2"/><text x="31.8788%" y="351.50"></text></g><g><title>sk_stream_alloc_skb (258 samples, 1.65%)</title><rect x="30.0320%" y="645" width="1.6517%" height="15" fill="rgb(225,2,28)" fg:x="4691" fg:w="258"/><text x="30.2463%" y="655.50">s..</text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="31.6645%" y="629" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="4946" fg:w="3"/><text x="31.8788%" y="639.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="31.6645%" y="613" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="4946" fg:w="3"/><text x="31.8788%" y="623.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="31.6645%" y="597" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="4946" fg:w="3"/><text x="31.8788%" y="607.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="31.6645%" y="581" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="4946" fg:w="3"/><text x="31.8788%" y="591.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="31.6645%" y="565" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="4946" fg:w="3"/><text x="31.8788%" y="575.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="31.6645%" y="549" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="4946" fg:w="3"/><text x="31.8788%" y="559.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="31.6645%" y="533" width="0.0192%" height="15" fill="rgb(231,11,52)" fg:x="4946" fg:w="3"/><text x="31.8788%" y="543.50"></text></g><g><title>virtnet_poll (3 samples, 0.02%)</title><rect x="31.6645%" y="517" width="0.0192%" height="15" fill="rgb(213,187,12)" fg:x="4946" fg:w="3"/><text x="31.8788%" y="527.50"></text></g><g><title>sk_stream_wait_memory (2 samples, 0.01%)</title><rect x="31.6837%" y="645" width="0.0128%" height="15" fill="rgb(251,185,33)" fg:x="4949" fg:w="2"/><text x="31.8980%" y="655.50"></text></g><g><title>__virt_addr_valid (35 samples, 0.22%)</title><rect x="31.8374%" y="613" width="0.2241%" height="15" fill="rgb(216,204,49)" fg:x="4973" fg:w="35"/><text x="32.0517%" y="623.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.01%)</title><rect x="32.0615%" y="613" width="0.0128%" height="15" fill="rgb(211,8,20)" fg:x="5008" fg:w="2"/><text x="32.2757%" y="623.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.01%)</title><rect x="32.0615%" y="597" width="0.0128%" height="15" fill="rgb(210,87,27)" fg:x="5008" fg:w="2"/><text x="32.2757%" y="607.50"></text></g><g><title>__check_object_size (52 samples, 0.33%)</title><rect x="31.7798%" y="629" width="0.3329%" height="15" fill="rgb(218,1,22)" fg:x="4964" fg:w="52"/><text x="31.9941%" y="639.50"></text></g><g><title>check_stack_object (4 samples, 0.03%)</title><rect x="32.0871%" y="613" width="0.0256%" height="15" fill="rgb(244,30,26)" fg:x="5012" fg:w="4"/><text x="32.3014%" y="623.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="32.1127%" y="629" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="5016" fg:w="2"/><text x="32.3270%" y="639.50"></text></g><g><title>__x86_return_thunk (4 samples, 0.03%)</title><rect x="32.2023%" y="613" width="0.0256%" height="15" fill="rgb(211,8,20)" fg:x="5030" fg:w="4"/><text x="32.4166%" y="623.50"></text></g><g><title>srso_safe_ret_alias (4 samples, 0.03%)</title><rect x="32.2023%" y="597" width="0.0256%" height="15" fill="rgb(210,87,27)" fg:x="5030" fg:w="4"/><text x="32.4166%" y="607.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="32.2279%" y="613" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="623.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="32.2279%" y="597" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="607.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="32.2279%" y="581" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="591.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="32.2279%" y="565" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="32.2279%" y="549" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="559.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="32.2279%" y="533" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="543.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="32.2279%" y="517" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="527.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="32.2279%" y="501" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="511.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="32.2279%" y="485" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="495.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="32.2279%" y="469" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="479.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="32.2279%" y="453" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="463.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="32.2279%" y="437" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="447.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="32.2279%" y="421" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="431.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="32.2279%" y="405" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="415.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="32.2279%" y="389" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="399.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="32.2279%" y="373" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="383.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="32.2279%" y="357" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="5034" fg:w="2"/><text x="32.4422%" y="367.50"></text></g><g><title>__irqentry_text_start (31 samples, 0.20%)</title><rect x="34.7631%" y="597" width="0.1985%" height="15" fill="rgb(229,107,3)" fg:x="5430" fg:w="31"/><text x="34.9774%" y="607.50"></text></g><g><title>virtnet_poll (6 samples, 0.04%)</title><rect x="34.9616%" y="485" width="0.0384%" height="15" fill="rgb(213,187,12)" fg:x="5461" fg:w="6"/><text x="35.1759%" y="495.50"></text></g><g><title>napi_complete_done (5 samples, 0.03%)</title><rect x="34.9680%" y="469" width="0.0320%" height="15" fill="rgb(226,216,13)" fg:x="5462" fg:w="5"/><text x="35.1823%" y="479.50"></text></g><g><title>netif_receive_skb_list_internal (5 samples, 0.03%)</title><rect x="34.9680%" y="453" width="0.0320%" height="15" fill="rgb(216,153,44)" fg:x="5462" fg:w="5"/><text x="35.1823%" y="463.50"></text></g><g><title>__netif_receive_skb_list_core (5 samples, 0.03%)</title><rect x="34.9680%" y="437" width="0.0320%" height="15" fill="rgb(227,176,26)" fg:x="5462" fg:w="5"/><text x="35.1823%" y="447.50"></text></g><g><title>ip_list_rcv (5 samples, 0.03%)</title><rect x="34.9680%" y="421" width="0.0320%" height="15" fill="rgb(215,38,16)" fg:x="5462" fg:w="5"/><text x="35.1823%" y="431.50"></text></g><g><title>ip_sublist_rcv (5 samples, 0.03%)</title><rect x="34.9680%" y="405" width="0.0320%" height="15" fill="rgb(207,166,9)" fg:x="5462" fg:w="5"/><text x="35.1823%" y="415.50"></text></g><g><title>ip_sublist_rcv_finish (4 samples, 0.03%)</title><rect x="34.9744%" y="389" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="5463" fg:w="4"/><text x="35.1887%" y="399.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="34.9744%" y="373" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="5463" fg:w="4"/><text x="35.1887%" y="383.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="34.9744%" y="357" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="5463" fg:w="4"/><text x="35.1887%" y="367.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.03%)</title><rect x="34.9744%" y="341" width="0.0256%" height="15" fill="rgb(224,38,0)" fg:x="5463" fg:w="4"/><text x="35.1887%" y="351.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="34.9808%" y="325" width="0.0192%" height="15" fill="rgb(228,220,18)" fg:x="5464" fg:w="3"/><text x="35.1951%" y="335.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.02%)</title><rect x="34.9808%" y="309" width="0.0192%" height="15" fill="rgb(224,50,47)" fg:x="5464" fg:w="3"/><text x="35.1951%" y="319.50"></text></g><g><title>tcp_ack (2 samples, 0.01%)</title><rect x="34.9872%" y="293" width="0.0128%" height="15" fill="rgb(213,228,3)" fg:x="5465" fg:w="2"/><text x="35.2015%" y="303.50"></text></g><g><title>copy_user_generic_string (432 samples, 2.77%)</title><rect x="32.2407%" y="613" width="2.7657%" height="15" fill="rgb(233,29,30)" fg:x="5036" fg:w="432"/><text x="32.4550%" y="623.50">cop..</text></g><g><title>asm_common_interrupt (7 samples, 0.04%)</title><rect x="34.9616%" y="597" width="0.0448%" height="15" fill="rgb(248,227,45)" fg:x="5461" fg:w="7"/><text x="35.1759%" y="607.50"></text></g><g><title>common_interrupt (7 samples, 0.04%)</title><rect x="34.9616%" y="581" width="0.0448%" height="15" fill="rgb(250,67,32)" fg:x="5461" fg:w="7"/><text x="35.1759%" y="591.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.04%)</title><rect x="34.9616%" y="565" width="0.0448%" height="15" fill="rgb(240,18,12)" fg:x="5461" fg:w="7"/><text x="35.1759%" y="575.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.04%)</title><rect x="34.9616%" y="549" width="0.0448%" height="15" fill="rgb(223,89,53)" fg:x="5461" fg:w="7"/><text x="35.1759%" y="559.50"></text></g><g><title>asm_call_sysvec_on_stack (7 samples, 0.04%)</title><rect x="34.9616%" y="533" width="0.0448%" height="15" fill="rgb(208,184,36)" fg:x="5461" fg:w="7"/><text x="35.1759%" y="543.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.04%)</title><rect x="34.9616%" y="517" width="0.0448%" height="15" fill="rgb(249,91,22)" fg:x="5461" fg:w="7"/><text x="35.1759%" y="527.50"></text></g><g><title>net_rx_action (7 samples, 0.04%)</title><rect x="34.9616%" y="501" width="0.0448%" height="15" fill="rgb(231,11,52)" fg:x="5461" fg:w="7"/><text x="35.1759%" y="511.50"></text></g><g><title>_copy_from_iter_full (469 samples, 3.00%)</title><rect x="32.1255%" y="629" width="3.0026%" height="15" fill="rgb(227,219,53)" fg:x="5018" fg:w="469"/><text x="32.3398%" y="639.50">_co..</text></g><g><title>iov_iter_advance (19 samples, 0.12%)</title><rect x="35.0064%" y="613" width="0.1216%" height="15" fill="rgb(250,37,39)" fg:x="5468" fg:w="19"/><text x="35.2207%" y="623.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="35.1152%" y="597" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="5485" fg:w="2"/><text x="35.3295%" y="607.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="35.1152%" y="581" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="5485" fg:w="2"/><text x="35.3295%" y="591.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="35.1152%" y="565" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="5485" fg:w="2"/><text x="35.3295%" y="575.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="35.1152%" y="549" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="5485" fg:w="2"/><text x="35.3295%" y="559.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="35.1152%" y="533" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="5485" fg:w="2"/><text x="35.3295%" y="543.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="35.1152%" y="517" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="5485" fg:w="2"/><text x="35.3295%" y="527.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="35.1152%" y="501" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="5485" fg:w="2"/><text x="35.3295%" y="511.50"></text></g><g><title>skb_do_copy_data_nocache (537 samples, 3.44%)</title><rect x="31.6965%" y="645" width="3.4379%" height="15" fill="rgb(209,134,15)" fg:x="4951" fg:w="537"/><text x="31.9108%" y="655.50">skb_..</text></g><g><title>skb_entail (14 samples, 0.09%)</title><rect x="35.1344%" y="645" width="0.0896%" height="15" fill="rgb(207,54,39)" fg:x="5488" fg:w="14"/><text x="35.3487%" y="655.50"></text></g><g><title>tcp_push (7 samples, 0.04%)</title><rect x="35.2369%" y="645" width="0.0448%" height="15" fill="rgb(229,201,43)" fg:x="5504" fg:w="7"/><text x="35.4512%" y="655.50"></text></g><g><title>tcp_rate_check_app_limited (7 samples, 0.04%)</title><rect x="35.2817%" y="645" width="0.0448%" height="15" fill="rgb(254,8,23)" fg:x="5511" fg:w="7"/><text x="35.4960%" y="655.50"></text></g><g><title>ipv4_mtu (15 samples, 0.10%)</title><rect x="35.4545%" y="613" width="0.0960%" height="15" fill="rgb(232,85,13)" fg:x="5538" fg:w="15"/><text x="35.6688%" y="623.50"></text></g><g><title>tcp_send_mss (40 samples, 0.26%)</title><rect x="35.3265%" y="645" width="0.2561%" height="15" fill="rgb(220,146,16)" fg:x="5518" fg:w="40"/><text x="35.5408%" y="655.50"></text></g><g><title>tcp_current_mss (33 samples, 0.21%)</title><rect x="35.3713%" y="629" width="0.2113%" height="15" fill="rgb(247,207,19)" fg:x="5525" fg:w="33"/><text x="35.5856%" y="639.50"></text></g><g><title>tcp_established_options (5 samples, 0.03%)</title><rect x="35.5506%" y="613" width="0.0320%" height="15" fill="rgb(239,162,26)" fg:x="5553" fg:w="5"/><text x="35.7649%" y="623.50"></text></g><g><title>tcp_stream_memory_free (6 samples, 0.04%)</title><rect x="35.5826%" y="645" width="0.0384%" height="15" fill="rgb(235,140,9)" fg:x="5558" fg:w="6"/><text x="35.7969%" y="655.50"></text></g><g><title>tcp_tx_timestamp (20 samples, 0.13%)</title><rect x="35.6210%" y="645" width="0.1280%" height="15" fill="rgb(227,26,29)" fg:x="5564" fg:w="20"/><text x="35.8353%" y="655.50"></text></g><g><title>virtqueue_add_outbuf (3 samples, 0.02%)</title><rect x="35.8131%" y="501" width="0.0192%" height="15" fill="rgb(207,208,9)" fg:x="5594" fg:w="3"/><text x="36.0273%" y="511.50"></text></g><g><title>virtqueue_add_split (3 samples, 0.02%)</title><rect x="35.8131%" y="485" width="0.0192%" height="15" fill="rgb(238,41,16)" fg:x="5594" fg:w="3"/><text x="36.0273%" y="495.50"></text></g><g><title>__kmalloc (2 samples, 0.01%)</title><rect x="35.8195%" y="469" width="0.0128%" height="15" fill="rgb(221,108,10)" fg:x="5595" fg:w="2"/><text x="36.0337%" y="479.50"></text></g><g><title>__dev_queue_xmit (15 samples, 0.10%)</title><rect x="35.8003%" y="581" width="0.0960%" height="15" fill="rgb(232,116,37)" fg:x="5592" fg:w="15"/><text x="36.0145%" y="591.50"></text></g><g><title>__qdisc_run (15 samples, 0.10%)</title><rect x="35.8003%" y="565" width="0.0960%" height="15" fill="rgb(252,144,25)" fg:x="5592" fg:w="15"/><text x="36.0145%" y="575.50"></text></g><g><title>sch_direct_xmit (14 samples, 0.09%)</title><rect x="35.8067%" y="549" width="0.0896%" height="15" fill="rgb(222,128,44)" fg:x="5593" fg:w="14"/><text x="36.0209%" y="559.50"></text></g><g><title>dev_hard_start_xmit (14 samples, 0.09%)</title><rect x="35.8067%" y="533" width="0.0896%" height="15" fill="rgb(251,86,39)" fg:x="5593" fg:w="14"/><text x="36.0209%" y="543.50"></text></g><g><title>start_xmit (14 samples, 0.09%)</title><rect x="35.8067%" y="517" width="0.0896%" height="15" fill="rgb(211,140,13)" fg:x="5593" fg:w="14"/><text x="36.0209%" y="527.50"></text></g><g><title>virtqueue_notify (10 samples, 0.06%)</title><rect x="35.8323%" y="501" width="0.0640%" height="15" fill="rgb(219,119,18)" fg:x="5597" fg:w="10"/><text x="36.0466%" y="511.50"></text></g><g><title>vp_notify (10 samples, 0.06%)</title><rect x="35.8323%" y="485" width="0.0640%" height="15" fill="rgb(230,193,37)" fg:x="5597" fg:w="10"/><text x="36.0466%" y="495.50"></text></g><g><title>iowrite16 (10 samples, 0.06%)</title><rect x="35.8323%" y="469" width="0.0640%" height="15" fill="rgb(218,139,37)" fg:x="5597" fg:w="10"/><text x="36.0466%" y="479.50"></text></g><g><title>ip_finish_output2 (19 samples, 0.12%)</title><rect x="35.7875%" y="597" width="0.1216%" height="15" fill="rgb(219,227,11)" fg:x="5590" fg:w="19"/><text x="36.0017%" y="607.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.01%)</title><rect x="35.8963%" y="581" width="0.0128%" height="15" fill="rgb(252,29,18)" fg:x="5607" fg:w="2"/><text x="36.1106%" y="591.50"></text></g><g><title>__ip_queue_xmit (24 samples, 0.15%)</title><rect x="35.7682%" y="613" width="0.1536%" height="15" fill="rgb(224,11,5)" fg:x="5587" fg:w="24"/><text x="35.9825%" y="623.50"></text></g><g><title>ip_finish_output (2 samples, 0.01%)</title><rect x="35.9091%" y="597" width="0.0128%" height="15" fill="rgb(215,36,54)" fg:x="5609" fg:w="2"/><text x="36.1234%" y="607.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.01%)</title><rect x="35.9091%" y="581" width="0.0128%" height="15" fill="rgb(227,127,27)" fg:x="5609" fg:w="2"/><text x="36.1234%" y="591.50"></text></g><g><title>__tcp_transmit_skb (27 samples, 0.17%)</title><rect x="35.7554%" y="629" width="0.1729%" height="15" fill="rgb(238,106,36)" fg:x="5585" fg:w="27"/><text x="35.9697%" y="639.50"></text></g><g><title>__slab_alloc (2 samples, 0.01%)</title><rect x="35.9475%" y="581" width="0.0128%" height="15" fill="rgb(229,140,31)" fg:x="5615" fg:w="2"/><text x="36.1618%" y="591.50"></text></g><g><title>___slab_alloc (2 samples, 0.01%)</title><rect x="35.9475%" y="565" width="0.0128%" height="15" fill="rgb(224,215,35)" fg:x="5615" fg:w="2"/><text x="36.1618%" y="575.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.02%)</title><rect x="35.9475%" y="597" width="0.0192%" height="15" fill="rgb(228,161,44)" fg:x="5615" fg:w="3"/><text x="36.1618%" y="607.50"></text></g><g><title>sk_stream_alloc_skb (9 samples, 0.06%)</title><rect x="35.9347%" y="629" width="0.0576%" height="15" fill="rgb(225,2,28)" fg:x="5613" fg:w="9"/><text x="36.1490%" y="639.50"></text></g><g><title>__alloc_skb (8 samples, 0.05%)</title><rect x="35.9411%" y="613" width="0.0512%" height="15" fill="rgb(237,90,40)" fg:x="5614" fg:w="8"/><text x="36.1554%" y="623.50"></text></g><g><title>kmem_cache_alloc_node (3 samples, 0.02%)</title><rect x="35.9731%" y="597" width="0.0192%" height="15" fill="rgb(227,94,12)" fg:x="5619" fg:w="3"/><text x="36.1874%" y="607.50"></text></g><g><title>tcp_event_new_data_sent (3 samples, 0.02%)</title><rect x="35.9923%" y="629" width="0.0192%" height="15" fill="rgb(227,19,23)" fg:x="5622" fg:w="3"/><text x="36.2066%" y="639.50"></text></g><g><title>sk_reset_timer (3 samples, 0.02%)</title><rect x="35.9923%" y="613" width="0.0192%" height="15" fill="rgb(220,37,33)" fg:x="5622" fg:w="3"/><text x="36.2066%" y="623.50"></text></g><g><title>__mod_timer (3 samples, 0.02%)</title><rect x="35.9923%" y="597" width="0.0192%" height="15" fill="rgb(232,140,47)" fg:x="5622" fg:w="3"/><text x="36.2066%" y="607.50"></text></g><g><title>sock_sendmsg (2,978 samples, 19.07%)</title><rect x="16.9526%" y="693" width="19.0653%" height="15" fill="rgb(253,44,23)" fg:x="2648" fg:w="2978"/><text x="17.1669%" y="703.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (2,825 samples, 18.09%)</title><rect x="17.9321%" y="677" width="18.0858%" height="15" fill="rgb(214,140,26)" fg:x="2801" fg:w="2825"/><text x="18.1464%" y="687.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (2,708 samples, 17.34%)</title><rect x="18.6812%" y="661" width="17.3367%" height="15" fill="rgb(250,191,34)" fg:x="2918" fg:w="2708"/><text x="18.8955%" y="671.50">tcp_sendmsg_locked</text></g><g><title>tcp_write_xmit (42 samples, 0.27%)</title><rect x="35.7490%" y="645" width="0.2689%" height="15" fill="rgb(236,72,36)" fg:x="5584" fg:w="42"/><text x="35.9633%" y="655.50"></text></g><g><title>__fdget (4 samples, 0.03%)</title><rect x="36.0691%" y="677" width="0.0256%" height="15" fill="rgb(239,45,19)" fg:x="5634" fg:w="4"/><text x="36.2834%" y="687.50"></text></g><g><title>__fget_light (7 samples, 0.04%)</title><rect x="36.0948%" y="677" width="0.0448%" height="15" fill="rgb(243,103,32)" fg:x="5638" fg:w="7"/><text x="36.3090%" y="687.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="36.1268%" y="661" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="5643" fg:w="2"/><text x="36.3410%" y="671.50"></text></g><g><title>sockfd_lookup_light (20 samples, 0.13%)</title><rect x="36.0179%" y="693" width="0.1280%" height="15" fill="rgb(234,43,45)" fg:x="5626" fg:w="20"/><text x="36.2322%" y="703.50"></text></g><g><title>__x64_sys_sendto (3,039 samples, 19.46%)</title><rect x="16.6965%" y="725" width="19.4558%" height="15" fill="rgb(244,224,44)" fg:x="2608" fg:w="3039"/><text x="16.9108%" y="735.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (3,024 samples, 19.36%)</title><rect x="16.7926%" y="709" width="19.3598%" height="15" fill="rgb(241,223,3)" fg:x="2623" fg:w="3024"/><text x="17.0069%" y="719.50">__sys_sendto</text></g><g><title>do_syscall_64 (3,058 samples, 19.58%)</title><rect x="16.5941%" y="741" width="19.5775%" height="15" fill="rgb(220,74,14)" fg:x="2592" fg:w="3058"/><text x="16.8084%" y="751.50">do_syscall_64</text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="36.1524%" y="725" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="5647" fg:w="3"/><text x="36.3667%" y="735.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="36.1524%" y="709" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="5647" fg:w="3"/><text x="36.3667%" y="719.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="36.1588%" y="693" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="5648" fg:w="2"/><text x="36.3731%" y="703.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="36.1588%" y="677" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="5648" fg:w="2"/><text x="36.3731%" y="687.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="36.1588%" y="661" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="5648" fg:w="2"/><text x="36.3731%" y="671.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="36.1588%" y="645" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="5648" fg:w="2"/><text x="36.3731%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,074 samples, 19.68%)</title><rect x="16.5365%" y="757" width="19.6799%" height="15" fill="rgb(205,226,15)" fg:x="2583" fg:w="3074"/><text x="16.7508%" y="767.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.04%)</title><rect x="36.1716%" y="741" width="0.0448%" height="15" fill="rgb(215,101,28)" fg:x="5650" fg:w="7"/><text x="36.3859%" y="751.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.02%)</title><rect x="36.1972%" y="725" width="0.0192%" height="15" fill="rgb(240,77,26)" fg:x="5654" fg:w="3"/><text x="36.4115%" y="735.50"></text></g><g><title>syscall_return_via_sysret (5 samples, 0.03%)</title><rect x="36.2228%" y="757" width="0.0320%" height="15" fill="rgb(230,222,6)" fg:x="5658" fg:w="5"/><text x="36.4371%" y="767.50"></text></g><g><title>tcp_stream_memory_free (2 samples, 0.01%)</title><rect x="36.2612%" y="757" width="0.0128%" height="15" fill="rgb(235,140,9)" fg:x="5664" fg:w="2"/><text x="36.4755%" y="767.50"></text></g><g><title>__send (3,147 samples, 20.15%)</title><rect x="16.1396%" y="773" width="20.1472%" height="15" fill="rgb(240,101,39)" fg:x="2521" fg:w="3147"/><text x="16.3539%" y="783.50">__send</text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="36.2996%" y="645" width="0.0192%" height="15" fill="rgb(226,216,13)" fg:x="5670" fg:w="3"/><text x="36.5139%" y="655.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="36.2996%" y="629" width="0.0192%" height="15" fill="rgb(216,153,44)" fg:x="5670" fg:w="3"/><text x="36.5139%" y="639.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="36.2996%" y="613" width="0.0192%" height="15" fill="rgb(227,176,26)" fg:x="5670" fg:w="3"/><text x="36.5139%" y="623.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="36.2996%" y="597" width="0.0192%" height="15" fill="rgb(215,38,16)" fg:x="5670" fg:w="3"/><text x="36.5139%" y="607.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="36.2996%" y="581" width="0.0192%" height="15" fill="rgb(207,166,9)" fg:x="5670" fg:w="3"/><text x="36.5139%" y="591.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="36.2996%" y="565" width="0.0192%" height="15" fill="rgb(223,178,14)" fg:x="5670" fg:w="3"/><text x="36.5139%" y="575.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="36.2996%" y="549" width="0.0192%" height="15" fill="rgb(220,94,29)" fg:x="5670" fg:w="3"/><text x="36.5139%" y="559.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.02%)</title><rect x="36.2996%" y="533" width="0.0192%" height="15" fill="rgb(207,19,13)" fg:x="5670" fg:w="3"/><text x="36.5139%" y="543.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="36.2996%" y="517" width="0.0192%" height="15" fill="rgb(224,38,0)" fg:x="5670" fg:w="3"/><text x="36.5139%" y="527.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="36.2996%" y="501" width="0.0192%" height="15" fill="rgb(228,220,18)" fg:x="5670" fg:w="3"/><text x="36.5139%" y="511.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="36.3060%" y="485" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="5671" fg:w="2"/><text x="36.5203%" y="495.50"></text></g><g><title>net_rx_action (5 samples, 0.03%)</title><rect x="36.2996%" y="677" width="0.0320%" height="15" fill="rgb(231,11,52)" fg:x="5670" fg:w="5"/><text x="36.5139%" y="687.50"></text></g><g><title>virtnet_poll (5 samples, 0.03%)</title><rect x="36.2996%" y="661" width="0.0320%" height="15" fill="rgb(213,187,12)" fg:x="5670" fg:w="5"/><text x="36.5139%" y="671.50"></text></g><g><title>receive_buf (2 samples, 0.01%)</title><rect x="36.3188%" y="645" width="0.0128%" height="15" fill="rgb(233,111,44)" fg:x="5673" fg:w="2"/><text x="36.5331%" y="655.50"></text></g><g><title>asm_common_interrupt (9 samples, 0.06%)</title><rect x="36.2868%" y="773" width="0.0576%" height="15" fill="rgb(248,227,45)" fg:x="5668" fg:w="9"/><text x="36.5011%" y="783.50"></text></g><g><title>common_interrupt (9 samples, 0.06%)</title><rect x="36.2868%" y="757" width="0.0576%" height="15" fill="rgb(250,67,32)" fg:x="5668" fg:w="9"/><text x="36.5011%" y="767.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.04%)</title><rect x="36.2996%" y="741" width="0.0448%" height="15" fill="rgb(240,18,12)" fg:x="5670" fg:w="7"/><text x="36.5139%" y="751.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.04%)</title><rect x="36.2996%" y="725" width="0.0448%" height="15" fill="rgb(223,89,53)" fg:x="5670" fg:w="7"/><text x="36.5139%" y="735.50"></text></g><g><title>asm_call_sysvec_on_stack (7 samples, 0.04%)</title><rect x="36.2996%" y="709" width="0.0448%" height="15" fill="rgb(208,184,36)" fg:x="5670" fg:w="7"/><text x="36.5139%" y="719.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.04%)</title><rect x="36.2996%" y="693" width="0.0448%" height="15" fill="rgb(249,91,22)" fg:x="5670" fg:w="7"/><text x="36.5139%" y="703.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.01%)</title><rect x="36.3316%" y="677" width="0.0128%" height="15" fill="rgb(220,151,48)" fg:x="5675" fg:w="2"/><text x="36.5459%" y="687.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.01%)</title><rect x="36.3316%" y="661" width="0.0128%" height="15" fill="rgb(218,189,37)" fg:x="5675" fg:w="2"/><text x="36.5459%" y="671.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.01%)</title><rect x="36.3316%" y="645" width="0.0128%" height="15" fill="rgb(238,207,14)" fg:x="5675" fg:w="2"/><text x="36.5459%" y="655.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="36.3316%" y="629" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="5675" fg:w="2"/><text x="36.5459%" y="639.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="36.3316%" y="613" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="5675" fg:w="2"/><text x="36.5459%" y="623.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="36.3316%" y="597" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="5675" fg:w="2"/><text x="36.5459%" y="607.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="36.3316%" y="581" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="5675" fg:w="2"/><text x="36.5459%" y="591.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="36.3316%" y="565" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="5675" fg:w="2"/><text x="36.5459%" y="575.50"></text></g><g><title>__qdisc_run (2 samples, 0.01%)</title><rect x="36.3316%" y="549" width="0.0128%" height="15" fill="rgb(252,144,25)" fg:x="5675" fg:w="2"/><text x="36.5459%" y="559.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="36.3316%" y="533" width="0.0128%" height="15" fill="rgb(222,128,44)" fg:x="5675" fg:w="2"/><text x="36.5459%" y="543.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="36.3444%" y="773" width="0.0128%" height="15" fill="rgb(209,17,43)" fg:x="5677" fg:w="2"/><text x="36.5587%" y="783.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="36.3444%" y="757" width="0.0128%" height="15" fill="rgb(218,44,13)" fg:x="5677" fg:w="2"/><text x="36.5587%" y="767.50"></text></g><g><title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (3 samples, 0.02%)</title><rect x="36.3636%" y="773" width="0.0192%" height="15" fill="rgb(216,150,20)" fg:x="5680" fg:w="3"/><text x="36.5779%" y="783.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.12%)</title><rect x="36.4853%" y="709" width="0.1152%" height="15" fill="rgb(247,113,52)" fg:x="5699" fg:w="18"/><text x="36.6996%" y="719.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="36.5877%" y="693" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="5715" fg:w="2"/><text x="36.8020%" y="703.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="36.5877%" y="677" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="5715" fg:w="2"/><text x="36.8020%" y="687.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="36.5877%" y="661" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="5715" fg:w="2"/><text x="36.8020%" y="671.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="36.5877%" y="645" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="5715" fg:w="2"/><text x="36.8020%" y="655.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="36.5877%" y="629" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="5715" fg:w="2"/><text x="36.8020%" y="639.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="36.5877%" y="613" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="5715" fg:w="2"/><text x="36.8020%" y="623.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="36.5877%" y="597" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="5715" fg:w="2"/><text x="36.8020%" y="607.50"></text></g><g><title>_IO_default_finish (2 samples, 0.01%)</title><rect x="36.6005%" y="709" width="0.0128%" height="15" fill="rgb(215,155,19)" fg:x="5717" fg:w="2"/><text x="36.8148%" y="719.50"></text></g><g><title>_IO_file_close (3 samples, 0.02%)</title><rect x="36.6133%" y="693" width="0.0192%" height="15" fill="rgb(247,47,23)" fg:x="5719" fg:w="3"/><text x="36.8276%" y="703.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="36.6133%" y="677" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="5719" fg:w="3"/><text x="36.8276%" y="687.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="36.6133%" y="661" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="5719" fg:w="3"/><text x="36.8276%" y="671.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="36.6197%" y="645" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="655.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="36.6197%" y="629" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="639.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="36.6197%" y="613" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="623.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="36.6197%" y="597" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="607.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="36.6197%" y="581" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="591.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="36.6197%" y="565" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="575.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="36.6197%" y="549" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="559.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="36.6197%" y="533" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="543.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="36.6197%" y="517" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="527.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="36.6197%" y="501" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="511.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="36.6197%" y="485" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="495.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="36.6197%" y="469" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="479.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="36.6197%" y="453" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="463.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="36.6197%" y="437" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="447.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="36.6197%" y="421" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="431.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="36.6197%" y="405" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="415.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="36.6197%" y="389" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="5720" fg:w="2"/><text x="36.8340%" y="399.50"></text></g><g><title>fput_many (4 samples, 0.03%)</title><rect x="36.6645%" y="613" width="0.0256%" height="15" fill="rgb(223,66,3)" fg:x="5727" fg:w="4"/><text x="36.8788%" y="623.50"></text></g><g><title>task_work_add (4 samples, 0.03%)</title><rect x="36.6645%" y="597" width="0.0256%" height="15" fill="rgb(223,98,11)" fg:x="5727" fg:w="4"/><text x="36.8788%" y="607.50"></text></g><g><title>kick_process (4 samples, 0.03%)</title><rect x="36.6645%" y="581" width="0.0256%" height="15" fill="rgb(219,166,2)" fg:x="5727" fg:w="4"/><text x="36.8788%" y="591.50"></text></g><g><title>do_syscall_64 (12 samples, 0.08%)</title><rect x="36.6389%" y="661" width="0.0768%" height="15" fill="rgb(220,74,14)" fg:x="5723" fg:w="12"/><text x="36.8532%" y="671.50"></text></g><g><title>__x64_sys_close (12 samples, 0.08%)</title><rect x="36.6389%" y="645" width="0.0768%" height="15" fill="rgb(207,163,1)" fg:x="5723" fg:w="12"/><text x="36.8532%" y="655.50"></text></g><g><title>filp_close (11 samples, 0.07%)</title><rect x="36.6453%" y="629" width="0.0704%" height="15" fill="rgb(233,173,24)" fg:x="5724" fg:w="11"/><text x="36.8596%" y="639.50"></text></g><g><title>locks_remove_posix (4 samples, 0.03%)</title><rect x="36.6901%" y="613" width="0.0256%" height="15" fill="rgb(231,157,2)" fg:x="5731" fg:w="4"/><text x="36.9044%" y="623.50"></text></g><g><title>blkcg_maybe_throttle_current (6 samples, 0.04%)</title><rect x="36.7222%" y="629" width="0.0384%" height="15" fill="rgb(227,111,33)" fg:x="5736" fg:w="6"/><text x="36.9364%" y="639.50"></text></g><g><title>mem_cgroup_handle_over_high (2 samples, 0.01%)</title><rect x="36.7606%" y="629" width="0.0128%" height="15" fill="rgb(242,184,43)" fg:x="5742" fg:w="2"/><text x="36.9748%" y="639.50"></text></g><g><title>ext4_release_file (2 samples, 0.01%)</title><rect x="36.7926%" y="597" width="0.0128%" height="15" fill="rgb(218,101,52)" fg:x="5747" fg:w="2"/><text x="37.0069%" y="607.50"></text></g><g><title>kmem_cache_free (6 samples, 0.04%)</title><rect x="36.8054%" y="597" width="0.0384%" height="15" fill="rgb(225,137,16)" fg:x="5749" fg:w="6"/><text x="37.0197%" y="607.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (5 samples, 0.03%)</title><rect x="36.8118%" y="581" width="0.0320%" height="15" fill="rgb(208,166,34)" fg:x="5750" fg:w="5"/><text x="37.0261%" y="591.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.01%)</title><rect x="36.8566%" y="597" width="0.0128%" height="15" fill="rgb(219,106,45)" fg:x="5757" fg:w="2"/><text x="37.0709%" y="607.50"></text></g><g><title>__fput (24 samples, 0.15%)</title><rect x="36.7734%" y="613" width="0.1536%" height="15" fill="rgb(210,120,45)" fg:x="5744" fg:w="24"/><text x="36.9877%" y="623.50"></text></g><g><title>security_file_free (9 samples, 0.06%)</title><rect x="36.8694%" y="597" width="0.0576%" height="15" fill="rgb(254,220,0)" fg:x="5759" fg:w="9"/><text x="37.0837%" y="607.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="36.9142%" y="581" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="591.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="36.9142%" y="565" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="575.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="36.9142%" y="549" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="559.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="36.9142%" y="533" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="36.9142%" y="517" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="527.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="36.9142%" y="501" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="511.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="36.9142%" y="485" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="495.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="36.9142%" y="469" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="479.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="36.9142%" y="453" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="36.9142%" y="437" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="36.9142%" y="421" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="431.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="36.9142%" y="405" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="415.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="36.9142%" y="389" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="399.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="36.9142%" y="373" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="383.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="36.9142%" y="357" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="36.9142%" y="341" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="351.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="36.9142%" y="325" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="36.9142%" y="309" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="319.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="36.9142%" y="293" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="5766" fg:w="2"/><text x="37.1285%" y="303.50"></text></g><g><title>__close_nocancel (48 samples, 0.31%)</title><rect x="36.6389%" y="693" width="0.3073%" height="15" fill="rgb(214,210,37)" fg:x="5723" fg:w="48"/><text x="36.8532%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (48 samples, 0.31%)</title><rect x="36.6389%" y="677" width="0.3073%" height="15" fill="rgb(205,226,15)" fg:x="5723" fg:w="48"/><text x="36.8532%" y="687.50"></text></g><g><title>syscall_exit_to_user_mode (36 samples, 0.23%)</title><rect x="36.7157%" y="661" width="0.2305%" height="15" fill="rgb(215,101,28)" fg:x="5735" fg:w="36"/><text x="36.9300%" y="671.50"></text></g><g><title>exit_to_user_mode_prepare (36 samples, 0.23%)</title><rect x="36.7157%" y="645" width="0.2305%" height="15" fill="rgb(240,77,26)" fg:x="5735" fg:w="36"/><text x="36.9300%" y="655.50"></text></g><g><title>task_work_run (27 samples, 0.17%)</title><rect x="36.7734%" y="629" width="0.1729%" height="15" fill="rgb(206,18,50)" fg:x="5744" fg:w="27"/><text x="36.9877%" y="639.50"></text></g><g><title>call_rcu (3 samples, 0.02%)</title><rect x="36.9270%" y="613" width="0.0192%" height="15" fill="rgb(205,15,17)" fg:x="5768" fg:w="3"/><text x="37.1413%" y="623.50"></text></g><g><title>_IO_file_close_it (53 samples, 0.34%)</title><rect x="36.6133%" y="709" width="0.3393%" height="15" fill="rgb(225,62,18)" fg:x="5719" fg:w="53"/><text x="36.8276%" y="719.50"></text></g><g><title>std::__basic_file&lt;char&gt;::close (79 samples, 0.51%)</title><rect x="36.4597%" y="741" width="0.5058%" height="15" fill="rgb(238,94,30)" fg:x="5695" fg:w="79"/><text x="36.6740%" y="751.50"></text></g><g><title>fclose (79 samples, 0.51%)</title><rect x="36.4597%" y="725" width="0.5058%" height="15" fill="rgb(249,229,5)" fg:x="5695" fg:w="79"/><text x="36.6740%" y="735.50"></text></g><g><title>_IO_un_link (2 samples, 0.01%)</title><rect x="36.9526%" y="709" width="0.0128%" height="15" fill="rgb(240,189,28)" fg:x="5772" fg:w="2"/><text x="37.1669%" y="719.50"></text></g><g><title>std::__basic_file&lt;char&gt;::is_open (2 samples, 0.01%)</title><rect x="36.9718%" y="741" width="0.0128%" height="15" fill="rgb(238,58,24)" fg:x="5775" fg:w="2"/><text x="37.1861%" y="751.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="37.0551%" y="709" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="5788" fg:w="2"/><text x="37.2693%" y="719.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.08%)</title><rect x="36.9974%" y="725" width="0.0768%" height="15" fill="rgb(247,113,52)" fg:x="5779" fg:w="12"/><text x="37.2117%" y="735.50"></text></g><g><title>cfree (9 samples, 0.06%)</title><rect x="37.0807%" y="725" width="0.0576%" height="15" fill="rgb(221,14,53)" fg:x="5792" fg:w="9"/><text x="37.2950%" y="735.50"></text></g><g><title>operator delete (2 samples, 0.01%)</title><rect x="37.1447%" y="725" width="0.0128%" height="15" fill="rgb(249,165,17)" fg:x="5802" fg:w="2"/><text x="37.3590%" y="735.50"></text></g><g><title>operator delete@plt (3 samples, 0.02%)</title><rect x="37.1575%" y="725" width="0.0192%" height="15" fill="rgb(249,70,16)" fg:x="5804" fg:w="3"/><text x="37.3718%" y="735.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_destroy_internal_buffer (31 samples, 0.20%)</title><rect x="36.9846%" y="741" width="0.1985%" height="15" fill="rgb(229,92,20)" fg:x="5777" fg:w="31"/><text x="37.1989%" y="751.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (122 samples, 0.78%)</title><rect x="36.4597%" y="757" width="0.7810%" height="15" fill="rgb(209,169,46)" fg:x="5695" fg:w="122"/><text x="36.6740%" y="767.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (9 samples, 0.06%)</title><rect x="37.1831%" y="741" width="0.0576%" height="15" fill="rgb(210,71,1)" fg:x="5808" fg:w="9"/><text x="37.3974%" y="751.50"></text></g><g><title>std::ios_base::~ios_base (6 samples, 0.04%)</title><rect x="37.2407%" y="757" width="0.0384%" height="15" fill="rgb(222,137,36)" fg:x="5817" fg:w="6"/><text x="37.4550%" y="767.50"></text></g><g><title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (143 samples, 0.92%)</title><rect x="36.3828%" y="773" width="0.9155%" height="15" fill="rgb(238,137,47)" fg:x="5683" fg:w="143"/><text x="36.5971%" y="783.50"></text></g><g><title>std::locale::~locale (3 samples, 0.02%)</title><rect x="37.2791%" y="757" width="0.0192%" height="15" fill="rgb(238,227,18)" fg:x="5823" fg:w="3"/><text x="37.4934%" y="767.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::eof (5 samples, 0.03%)</title><rect x="37.2983%" y="773" width="0.0320%" height="15" fill="rgb(228,109,10)" fg:x="5826" fg:w="5"/><text x="37.5126%" y="783.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::fail (7 samples, 0.04%)</title><rect x="37.3303%" y="773" width="0.0448%" height="15" fill="rgb(227,84,25)" fg:x="5831" fg:w="7"/><text x="37.5446%" y="783.50"></text></g><g><title>std::istream::gcount (16 samples, 0.10%)</title><rect x="37.3752%" y="773" width="0.1024%" height="15" fill="rgb(237,177,53)" fg:x="5838" fg:w="16"/><text x="37.5894%" y="783.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="37.7145%" y="757" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="767.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="37.7145%" y="741" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="751.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="37.7145%" y="725" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="735.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="37.7145%" y="709" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="719.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="37.7145%" y="693" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="703.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="37.7145%" y="677" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="687.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="37.7145%" y="661" width="0.0192%" height="15" fill="rgb(231,11,52)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="671.50"></text></g><g><title>virtnet_poll (3 samples, 0.02%)</title><rect x="37.7145%" y="645" width="0.0192%" height="15" fill="rgb(213,187,12)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="655.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="37.7145%" y="629" width="0.0192%" height="15" fill="rgb(226,216,13)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="639.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="37.7145%" y="613" width="0.0192%" height="15" fill="rgb(216,153,44)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="623.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="37.7145%" y="597" width="0.0192%" height="15" fill="rgb(227,176,26)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="607.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="37.7145%" y="581" width="0.0192%" height="15" fill="rgb(215,38,16)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="591.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="37.7145%" y="565" width="0.0192%" height="15" fill="rgb(207,166,9)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="575.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="37.7145%" y="549" width="0.0192%" height="15" fill="rgb(223,178,14)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="559.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="37.7145%" y="533" width="0.0192%" height="15" fill="rgb(220,94,29)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="543.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.02%)</title><rect x="37.7145%" y="517" width="0.0192%" height="15" fill="rgb(207,19,13)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="527.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="37.7145%" y="501" width="0.0192%" height="15" fill="rgb(224,38,0)" fg:x="5891" fg:w="3"/><text x="37.9288%" y="511.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="37.7209%" y="485" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="5892" fg:w="2"/><text x="37.9352%" y="495.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="37.7209%" y="469" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="5892" fg:w="2"/><text x="37.9352%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="37.7209%" y="453" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="5892" fg:w="2"/><text x="37.9352%" y="463.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="37.7209%" y="437" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="5892" fg:w="2"/><text x="37.9352%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.01%)</title><rect x="37.7209%" y="421" width="0.0128%" height="15" fill="rgb(225,2,28)" fg:x="5892" fg:w="2"/><text x="37.9352%" y="431.50"></text></g><g><title>__alloc_skb (2 samples, 0.01%)</title><rect x="37.7209%" y="405" width="0.0128%" height="15" fill="rgb(237,90,40)" fg:x="5892" fg:w="2"/><text x="37.9352%" y="415.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="38.1242%" y="741" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="5955" fg:w="3"/><text x="38.3385%" y="751.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="38.1242%" y="725" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="5955" fg:w="3"/><text x="38.3385%" y="735.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="38.1306%" y="709" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="5956" fg:w="2"/><text x="38.3449%" y="719.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="38.1306%" y="693" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="5956" fg:w="2"/><text x="38.3449%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="38.1306%" y="677" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="5956" fg:w="2"/><text x="38.3449%" y="687.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="38.1306%" y="661" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="5956" fg:w="2"/><text x="38.3449%" y="671.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="38.1306%" y="645" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="5956" fg:w="2"/><text x="38.3449%" y="655.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="38.3995%" y="709" width="0.0256%" height="15" fill="rgb(229,107,3)" fg:x="5998" fg:w="4"/><text x="38.6138%" y="719.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="38.4251%" y="405" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="6002" fg:w="2"/><text x="38.6394%" y="415.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="38.4251%" y="389" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="6002" fg:w="2"/><text x="38.6394%" y="399.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="38.4251%" y="613" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="623.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="38.4251%" y="597" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="607.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="38.4251%" y="581" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="591.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="38.4251%" y="565" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="575.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="38.4251%" y="549" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="559.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="38.4251%" y="533" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="543.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="38.4251%" y="517" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="527.50"></text></g><g><title>ip_sublist_rcv_finish (4 samples, 0.03%)</title><rect x="38.4251%" y="501" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="511.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="38.4251%" y="485" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="495.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="38.4251%" y="469" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="479.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.03%)</title><rect x="38.4251%" y="453" width="0.0256%" height="15" fill="rgb(224,38,0)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="463.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.03%)</title><rect x="38.4251%" y="437" width="0.0256%" height="15" fill="rgb(228,220,18)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="447.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.03%)</title><rect x="38.4251%" y="421" width="0.0256%" height="15" fill="rgb(224,50,47)" fg:x="6002" fg:w="4"/><text x="38.6394%" y="431.50"></text></g><g><title>tcp_ack (2 samples, 0.01%)</title><rect x="38.4379%" y="405" width="0.0128%" height="15" fill="rgb(213,228,3)" fg:x="6004" fg:w="2"/><text x="38.6522%" y="415.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.04%)</title><rect x="38.4251%" y="709" width="0.0384%" height="15" fill="rgb(248,227,45)" fg:x="6002" fg:w="6"/><text x="38.6394%" y="719.50"></text></g><g><title>common_interrupt (6 samples, 0.04%)</title><rect x="38.4251%" y="693" width="0.0384%" height="15" fill="rgb(250,67,32)" fg:x="6002" fg:w="6"/><text x="38.6394%" y="703.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.04%)</title><rect x="38.4251%" y="677" width="0.0384%" height="15" fill="rgb(240,18,12)" fg:x="6002" fg:w="6"/><text x="38.6394%" y="687.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.04%)</title><rect x="38.4251%" y="661" width="0.0384%" height="15" fill="rgb(223,89,53)" fg:x="6002" fg:w="6"/><text x="38.6394%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (6 samples, 0.04%)</title><rect x="38.4251%" y="645" width="0.0384%" height="15" fill="rgb(208,184,36)" fg:x="6002" fg:w="6"/><text x="38.6394%" y="655.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.04%)</title><rect x="38.4251%" y="629" width="0.0384%" height="15" fill="rgb(249,91,22)" fg:x="6002" fg:w="6"/><text x="38.6394%" y="639.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.01%)</title><rect x="38.4507%" y="613" width="0.0128%" height="15" fill="rgb(220,151,48)" fg:x="6006" fg:w="2"/><text x="38.6650%" y="623.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.01%)</title><rect x="38.4507%" y="597" width="0.0128%" height="15" fill="rgb(218,189,37)" fg:x="6006" fg:w="2"/><text x="38.6650%" y="607.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.01%)</title><rect x="38.4507%" y="581" width="0.0128%" height="15" fill="rgb(238,207,14)" fg:x="6006" fg:w="2"/><text x="38.6650%" y="591.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="38.4507%" y="565" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="6006" fg:w="2"/><text x="38.6650%" y="575.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="38.4507%" y="549" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="6006" fg:w="2"/><text x="38.6650%" y="559.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="38.4507%" y="533" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="6006" fg:w="2"/><text x="38.6650%" y="543.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="38.4507%" y="517" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="6006" fg:w="2"/><text x="38.6650%" y="527.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="38.4507%" y="501" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="6006" fg:w="2"/><text x="38.6650%" y="511.50"></text></g><g><title>__qdisc_run (2 samples, 0.01%)</title><rect x="38.4507%" y="485" width="0.0128%" height="15" fill="rgb(252,144,25)" fg:x="6006" fg:w="2"/><text x="38.6650%" y="495.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="38.4507%" y="469" width="0.0128%" height="15" fill="rgb(222,128,44)" fg:x="6006" fg:w="2"/><text x="38.6650%" y="479.50"></text></g><g><title>__x86_return_thunk (6 samples, 0.04%)</title><rect x="38.4827%" y="693" width="0.0384%" height="15" fill="rgb(211,8,20)" fg:x="6011" fg:w="6"/><text x="38.6970%" y="703.50"></text></g><g><title>srso_safe_ret_alias (3 samples, 0.02%)</title><rect x="38.5019%" y="677" width="0.0192%" height="15" fill="rgb(210,87,27)" fg:x="6014" fg:w="3"/><text x="38.7162%" y="687.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="38.7900%" y="565" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="575.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="38.7900%" y="549" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="559.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="38.7900%" y="533" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="543.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="38.7900%" y="517" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="527.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="38.7900%" y="501" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="511.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="38.7900%" y="485" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="495.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="38.7900%" y="469" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="479.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="38.7900%" y="453" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="463.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="38.7900%" y="437" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="447.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="38.7900%" y="421" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="431.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="38.7900%" y="405" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="415.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="38.7900%" y="389" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="399.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="38.7900%" y="373" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="383.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="38.7900%" y="357" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="367.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="38.7900%" y="341" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="6059" fg:w="2"/><text x="39.0043%" y="351.50"></text></g><g><title>__x64_sys_read (14 samples, 0.09%)</title><rect x="38.7196%" y="677" width="0.0896%" height="15" fill="rgb(250,107,45)" fg:x="6048" fg:w="14"/><text x="38.9339%" y="687.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="38.7900%" y="661" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="6059" fg:w="3"/><text x="39.0043%" y="671.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="38.7900%" y="645" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="6059" fg:w="3"/><text x="39.0043%" y="655.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="38.7900%" y="629" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="6059" fg:w="3"/><text x="39.0043%" y="639.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="38.7900%" y="613" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="6059" fg:w="3"/><text x="39.0043%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="38.7900%" y="597" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="6059" fg:w="3"/><text x="39.0043%" y="607.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="38.7900%" y="581" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="6059" fg:w="3"/><text x="39.0043%" y="591.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="39.1421%" y="629" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="6114" fg:w="3"/><text x="39.3564%" y="639.50"></text></g><g><title>__fget_light (19 samples, 0.12%)</title><rect x="39.0525%" y="645" width="0.1216%" height="15" fill="rgb(243,103,32)" fg:x="6100" fg:w="19"/><text x="39.2668%" y="655.50"></text></g><g><title>__fdget_pos (53 samples, 0.34%)</title><rect x="38.8540%" y="661" width="0.3393%" height="15" fill="rgb(205,61,45)" fg:x="6069" fg:w="53"/><text x="39.0683%" y="671.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="39.1741%" y="645" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="6119" fg:w="3"/><text x="39.3884%" y="655.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="39.1741%" y="629" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="6119" fg:w="3"/><text x="39.3884%" y="639.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="39.1741%" y="613" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="6119" fg:w="3"/><text x="39.3884%" y="623.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="39.1741%" y="597" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="6119" fg:w="3"/><text x="39.3884%" y="607.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="39.1741%" y="581" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="6119" fg:w="3"/><text x="39.3884%" y="591.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="39.1741%" y="565" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="6119" fg:w="3"/><text x="39.3884%" y="575.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="39.1741%" y="549" width="0.0192%" height="15" fill="rgb(231,11,52)" fg:x="6119" fg:w="3"/><text x="39.3884%" y="559.50"></text></g><g><title>virtnet_poll (3 samples, 0.02%)</title><rect x="39.1741%" y="533" width="0.0192%" height="15" fill="rgb(213,187,12)" fg:x="6119" fg:w="3"/><text x="39.3884%" y="543.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.01%)</title><rect x="39.1933%" y="661" width="0.0128%" height="15" fill="rgb(211,8,20)" fg:x="6122" fg:w="2"/><text x="39.4076%" y="671.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.01%)</title><rect x="39.1933%" y="645" width="0.0128%" height="15" fill="rgb(210,87,27)" fg:x="6122" fg:w="2"/><text x="39.4076%" y="655.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="39.5198%" y="629" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="6173" fg:w="2"/><text x="39.7341%" y="639.50"></text></g><g><title>__fsnotify_parent (33 samples, 0.21%)</title><rect x="39.3342%" y="645" width="0.2113%" height="15" fill="rgb(232,3,50)" fg:x="6144" fg:w="33"/><text x="39.5485%" y="655.50"></text></g><g><title>ext4_file_read_iter (29 samples, 0.19%)</title><rect x="39.6479%" y="629" width="0.1857%" height="15" fill="rgb(246,166,2)" fg:x="6193" fg:w="29"/><text x="39.8622%" y="639.50"></text></g><g><title>__irqentry_text_start (7 samples, 0.04%)</title><rect x="40.4609%" y="613" width="0.0448%" height="15" fill="rgb(229,107,3)" fg:x="6320" fg:w="7"/><text x="40.6752%" y="623.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.01%)</title><rect x="40.5826%" y="597" width="0.0128%" height="15" fill="rgb(211,8,20)" fg:x="6339" fg:w="2"/><text x="40.7969%" y="607.50"></text></g><g><title>_cond_resched (14 samples, 0.09%)</title><rect x="40.5122%" y="613" width="0.0896%" height="15" fill="rgb(240,228,18)" fg:x="6328" fg:w="14"/><text x="40.7264%" y="623.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="40.6018%" y="485" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="6342" fg:w="2"/><text x="40.8161%" y="495.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="40.6018%" y="469" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="6342" fg:w="2"/><text x="40.8161%" y="479.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="40.6018%" y="453" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="6342" fg:w="2"/><text x="40.8161%" y="463.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="40.6018%" y="437" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="6342" fg:w="2"/><text x="40.8161%" y="447.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="40.6018%" y="421" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="6342" fg:w="2"/><text x="40.8161%" y="431.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="40.6018%" y="405" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="6342" fg:w="2"/><text x="40.8161%" y="415.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="40.6018%" y="389" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="6342" fg:w="2"/><text x="40.8161%" y="399.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="40.6018%" y="373" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="6342" fg:w="2"/><text x="40.8161%" y="383.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="40.6018%" y="357" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="6342" fg:w="2"/><text x="40.8161%" y="367.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="40.6018%" y="341" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="6342" fg:w="2"/><text x="40.8161%" y="351.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="40.6018%" y="325" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="6342" fg:w="2"/><text x="40.8161%" y="335.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.03%)</title><rect x="40.6018%" y="613" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="6342" fg:w="4"/><text x="40.8161%" y="623.50"></text></g><g><title>common_interrupt (4 samples, 0.03%)</title><rect x="40.6018%" y="597" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="6342" fg:w="4"/><text x="40.8161%" y="607.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="40.6018%" y="581" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="6342" fg:w="4"/><text x="40.8161%" y="591.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.03%)</title><rect x="40.6018%" y="565" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="6342" fg:w="4"/><text x="40.8161%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="40.6018%" y="549" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="6342" fg:w="4"/><text x="40.8161%" y="559.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="40.6018%" y="533" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="6342" fg:w="4"/><text x="40.8161%" y="543.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="40.6018%" y="517" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="6342" fg:w="4"/><text x="40.8161%" y="527.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="40.6018%" y="501" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="6342" fg:w="4"/><text x="40.8161%" y="511.50"></text></g><g><title>__irqentry_text_start (7 samples, 0.04%)</title><rect x="41.0627%" y="597" width="0.0448%" height="15" fill="rgb(229,107,3)" fg:x="6414" fg:w="7"/><text x="41.2770%" y="607.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.01%)</title><rect x="41.1076%" y="597" width="0.0128%" height="15" fill="rgb(211,8,20)" fg:x="6421" fg:w="2"/><text x="41.3218%" y="607.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.01%)</title><rect x="41.1076%" y="581" width="0.0128%" height="15" fill="rgb(210,87,27)" fg:x="6421" fg:w="2"/><text x="41.3218%" y="591.50"></text></g><g><title>_cond_resched (21 samples, 0.13%)</title><rect x="41.1204%" y="597" width="0.1344%" height="15" fill="rgb(240,228,18)" fg:x="6423" fg:w="21"/><text x="41.3346%" y="607.50"></text></g><g><title>rcu_all_qs (2 samples, 0.01%)</title><rect x="41.2420%" y="581" width="0.0128%" height="15" fill="rgb(224,119,51)" fg:x="6442" fg:w="2"/><text x="41.4563%" y="591.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="41.2740%" y="293" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="6447" fg:w="2"/><text x="41.4883%" y="303.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="41.2740%" y="277" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="6447" fg:w="2"/><text x="41.4883%" y="287.50"></text></g><g><title>asm_common_interrupt (7 samples, 0.04%)</title><rect x="41.2548%" y="597" width="0.0448%" height="15" fill="rgb(248,227,45)" fg:x="6444" fg:w="7"/><text x="41.4691%" y="607.50"></text></g><g><title>common_interrupt (7 samples, 0.04%)</title><rect x="41.2548%" y="581" width="0.0448%" height="15" fill="rgb(250,67,32)" fg:x="6444" fg:w="7"/><text x="41.4691%" y="591.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.04%)</title><rect x="41.2548%" y="565" width="0.0448%" height="15" fill="rgb(240,18,12)" fg:x="6444" fg:w="7"/><text x="41.4691%" y="575.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.04%)</title><rect x="41.2548%" y="549" width="0.0448%" height="15" fill="rgb(223,89,53)" fg:x="6444" fg:w="7"/><text x="41.4691%" y="559.50"></text></g><g><title>asm_call_sysvec_on_stack (7 samples, 0.04%)</title><rect x="41.2548%" y="533" width="0.0448%" height="15" fill="rgb(208,184,36)" fg:x="6444" fg:w="7"/><text x="41.4691%" y="543.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.04%)</title><rect x="41.2548%" y="517" width="0.0448%" height="15" fill="rgb(249,91,22)" fg:x="6444" fg:w="7"/><text x="41.4691%" y="527.50"></text></g><g><title>net_rx_action (6 samples, 0.04%)</title><rect x="41.2612%" y="501" width="0.0384%" height="15" fill="rgb(231,11,52)" fg:x="6445" fg:w="6"/><text x="41.4755%" y="511.50"></text></g><g><title>virtnet_poll (6 samples, 0.04%)</title><rect x="41.2612%" y="485" width="0.0384%" height="15" fill="rgb(213,187,12)" fg:x="6445" fg:w="6"/><text x="41.4755%" y="495.50"></text></g><g><title>napi_complete_done (6 samples, 0.04%)</title><rect x="41.2612%" y="469" width="0.0384%" height="15" fill="rgb(226,216,13)" fg:x="6445" fg:w="6"/><text x="41.4755%" y="479.50"></text></g><g><title>netif_receive_skb_list_internal (6 samples, 0.04%)</title><rect x="41.2612%" y="453" width="0.0384%" height="15" fill="rgb(216,153,44)" fg:x="6445" fg:w="6"/><text x="41.4755%" y="463.50"></text></g><g><title>__netif_receive_skb_list_core (6 samples, 0.04%)</title><rect x="41.2612%" y="437" width="0.0384%" height="15" fill="rgb(227,176,26)" fg:x="6445" fg:w="6"/><text x="41.4755%" y="447.50"></text></g><g><title>ip_list_rcv (6 samples, 0.04%)</title><rect x="41.2612%" y="421" width="0.0384%" height="15" fill="rgb(215,38,16)" fg:x="6445" fg:w="6"/><text x="41.4755%" y="431.50"></text></g><g><title>ip_sublist_rcv (6 samples, 0.04%)</title><rect x="41.2612%" y="405" width="0.0384%" height="15" fill="rgb(207,166,9)" fg:x="6445" fg:w="6"/><text x="41.4755%" y="415.50"></text></g><g><title>ip_sublist_rcv_finish (5 samples, 0.03%)</title><rect x="41.2676%" y="389" width="0.0320%" height="15" fill="rgb(223,178,14)" fg:x="6446" fg:w="5"/><text x="41.4819%" y="399.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.03%)</title><rect x="41.2676%" y="373" width="0.0320%" height="15" fill="rgb(220,94,29)" fg:x="6446" fg:w="5"/><text x="41.4819%" y="383.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.03%)</title><rect x="41.2676%" y="357" width="0.0320%" height="15" fill="rgb(207,19,13)" fg:x="6446" fg:w="5"/><text x="41.4819%" y="367.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.03%)</title><rect x="41.2676%" y="341" width="0.0320%" height="15" fill="rgb(224,38,0)" fg:x="6446" fg:w="5"/><text x="41.4819%" y="351.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.03%)</title><rect x="41.2740%" y="325" width="0.0256%" height="15" fill="rgb(228,220,18)" fg:x="6447" fg:w="4"/><text x="41.4883%" y="335.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.03%)</title><rect x="41.2740%" y="309" width="0.0256%" height="15" fill="rgb(224,50,47)" fg:x="6447" fg:w="4"/><text x="41.4883%" y="319.50"></text></g><g><title>tcp_ack (2 samples, 0.01%)</title><rect x="41.2868%" y="293" width="0.0128%" height="15" fill="rgb(213,228,3)" fg:x="6449" fg:w="2"/><text x="41.5011%" y="303.50"></text></g><g><title>__irqentry_text_start (61 samples, 0.39%)</title><rect x="48.9052%" y="581" width="0.3905%" height="15" fill="rgb(229,107,3)" fg:x="7639" fg:w="61"/><text x="49.1195%" y="591.50"></text></g><g><title>__handle_irq_event_percpu (5 samples, 0.03%)</title><rect x="49.3150%" y="501" width="0.0320%" height="15" fill="rgb(239,110,26)" fg:x="7703" fg:w="5"/><text x="49.5293%" y="511.50"></text></g><g><title>vring_interrupt (4 samples, 0.03%)</title><rect x="49.3214%" y="485" width="0.0256%" height="15" fill="rgb(206,212,41)" fg:x="7704" fg:w="4"/><text x="49.5357%" y="495.50"></text></g><g><title>skb_recv_done (4 samples, 0.03%)</title><rect x="49.3214%" y="469" width="0.0256%" height="15" fill="rgb(210,109,1)" fg:x="7704" fg:w="4"/><text x="49.5357%" y="479.50"></text></g><g><title>asm_call_sysvec_on_stack (7 samples, 0.04%)</title><rect x="49.3150%" y="549" width="0.0448%" height="15" fill="rgb(208,184,36)" fg:x="7703" fg:w="7"/><text x="49.5293%" y="559.50"></text></g><g><title>handle_edge_irq (7 samples, 0.04%)</title><rect x="49.3150%" y="533" width="0.0448%" height="15" fill="rgb(219,15,9)" fg:x="7703" fg:w="7"/><text x="49.5293%" y="543.50"></text></g><g><title>handle_irq_event (7 samples, 0.04%)</title><rect x="49.3150%" y="517" width="0.0448%" height="15" fill="rgb(209,73,52)" fg:x="7703" fg:w="7"/><text x="49.5293%" y="527.50"></text></g><g><title>add_interrupt_randomness (2 samples, 0.01%)</title><rect x="49.3470%" y="501" width="0.0128%" height="15" fill="rgb(227,186,38)" fg:x="7708" fg:w="2"/><text x="49.5613%" y="511.50"></text></g><g><title>fast_mix (2 samples, 0.01%)</title><rect x="49.3470%" y="485" width="0.0128%" height="15" fill="rgb(216,158,15)" fg:x="7708" fg:w="2"/><text x="49.5613%" y="495.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (3 samples, 0.02%)</title><rect x="49.3726%" y="373" width="0.0192%" height="15" fill="rgb(246,15,53)" fg:x="7712" fg:w="3"/><text x="49.5869%" y="383.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.01%)</title><rect x="49.4046%" y="293" width="0.0128%" height="15" fill="rgb(227,127,27)" fg:x="7717" fg:w="2"/><text x="49.6189%" y="303.50"></text></g><g><title>sk_filter_trim_cap (4 samples, 0.03%)</title><rect x="49.3982%" y="309" width="0.0256%" height="15" fill="rgb(247,83,44)" fg:x="7716" fg:w="4"/><text x="49.6125%" y="319.50"></text></g><g><title>__kmalloc (2 samples, 0.01%)</title><rect x="49.4750%" y="85" width="0.0128%" height="15" fill="rgb(221,108,10)" fg:x="7728" fg:w="2"/><text x="49.6893%" y="95.50"></text></g><g><title>virtqueue_add_outbuf (3 samples, 0.02%)</title><rect x="49.4750%" y="117" width="0.0192%" height="15" fill="rgb(207,208,9)" fg:x="7728" fg:w="3"/><text x="49.6893%" y="127.50"></text></g><g><title>virtqueue_add_split (3 samples, 0.02%)</title><rect x="49.4750%" y="101" width="0.0192%" height="15" fill="rgb(238,41,16)" fg:x="7728" fg:w="3"/><text x="49.6893%" y="111.50"></text></g><g><title>__qdisc_run (11 samples, 0.07%)</title><rect x="49.4686%" y="181" width="0.0704%" height="15" fill="rgb(252,144,25)" fg:x="7727" fg:w="11"/><text x="49.6829%" y="191.50"></text></g><g><title>sch_direct_xmit (11 samples, 0.07%)</title><rect x="49.4686%" y="165" width="0.0704%" height="15" fill="rgb(222,128,44)" fg:x="7727" fg:w="11"/><text x="49.6829%" y="175.50"></text></g><g><title>dev_hard_start_xmit (10 samples, 0.06%)</title><rect x="49.4750%" y="149" width="0.0640%" height="15" fill="rgb(251,86,39)" fg:x="7728" fg:w="10"/><text x="49.6893%" y="159.50"></text></g><g><title>start_xmit (10 samples, 0.06%)</title><rect x="49.4750%" y="133" width="0.0640%" height="15" fill="rgb(211,140,13)" fg:x="7728" fg:w="10"/><text x="49.6893%" y="143.50"></text></g><g><title>virtqueue_notify (7 samples, 0.04%)</title><rect x="49.4942%" y="117" width="0.0448%" height="15" fill="rgb(219,119,18)" fg:x="7731" fg:w="7"/><text x="49.7085%" y="127.50"></text></g><g><title>vp_notify (7 samples, 0.04%)</title><rect x="49.4942%" y="101" width="0.0448%" height="15" fill="rgb(230,193,37)" fg:x="7731" fg:w="7"/><text x="49.7085%" y="111.50"></text></g><g><title>iowrite16 (6 samples, 0.04%)</title><rect x="49.5006%" y="85" width="0.0384%" height="15" fill="rgb(218,139,37)" fg:x="7732" fg:w="6"/><text x="49.7149%" y="95.50"></text></g><g><title>ip_finish_output2 (13 samples, 0.08%)</title><rect x="49.4622%" y="213" width="0.0832%" height="15" fill="rgb(219,227,11)" fg:x="7726" fg:w="13"/><text x="49.6765%" y="223.50"></text></g><g><title>__dev_queue_xmit (12 samples, 0.08%)</title><rect x="49.4686%" y="197" width="0.0768%" height="15" fill="rgb(232,116,37)" fg:x="7727" fg:w="12"/><text x="49.6829%" y="207.50"></text></g><g><title>__tcp_transmit_skb (16 samples, 0.10%)</title><rect x="49.4494%" y="245" width="0.1024%" height="15" fill="rgb(238,106,36)" fg:x="7724" fg:w="16"/><text x="49.6637%" y="255.50"></text></g><g><title>__ip_queue_xmit (16 samples, 0.10%)</title><rect x="49.4494%" y="229" width="0.1024%" height="15" fill="rgb(224,11,5)" fg:x="7724" fg:w="16"/><text x="49.6637%" y="239.50"></text></g><g><title>ktime_get (2 samples, 0.01%)</title><rect x="49.5519%" y="245" width="0.0128%" height="15" fill="rgb(226,51,13)" fg:x="7740" fg:w="2"/><text x="49.7661%" y="255.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.01%)</title><rect x="49.5647%" y="245" width="0.0128%" height="15" fill="rgb(225,2,28)" fg:x="7742" fg:w="2"/><text x="49.7789%" y="255.50"></text></g><g><title>__alloc_skb (2 samples, 0.01%)</title><rect x="49.5647%" y="229" width="0.0128%" height="15" fill="rgb(237,90,40)" fg:x="7742" fg:w="2"/><text x="49.7789%" y="239.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.01%)</title><rect x="49.5647%" y="213" width="0.0128%" height="15" fill="rgb(228,161,44)" fg:x="7742" fg:w="2"/><text x="49.7789%" y="223.50"></text></g><g><title>__slab_alloc (2 samples, 0.01%)</title><rect x="49.5647%" y="197" width="0.0128%" height="15" fill="rgb(229,140,31)" fg:x="7742" fg:w="2"/><text x="49.7789%" y="207.50"></text></g><g><title>___slab_alloc (2 samples, 0.01%)</title><rect x="49.5647%" y="181" width="0.0128%" height="15" fill="rgb(224,215,35)" fg:x="7742" fg:w="2"/><text x="49.7789%" y="191.50"></text></g><g><title>__tcp_push_pending_frames (21 samples, 0.13%)</title><rect x="49.4494%" y="277" width="0.1344%" height="15" fill="rgb(226,88,38)" fg:x="7724" fg:w="21"/><text x="49.6637%" y="287.50"></text></g><g><title>tcp_write_xmit (21 samples, 0.13%)</title><rect x="49.4494%" y="261" width="0.1344%" height="15" fill="rgb(236,72,36)" fg:x="7724" fg:w="21"/><text x="49.6637%" y="271.50"></text></g><g><title>__kfree_skb (2 samples, 0.01%)</title><rect x="49.6031%" y="261" width="0.0128%" height="15" fill="rgb(208,195,26)" fg:x="7748" fg:w="2"/><text x="49.8174%" y="271.50"></text></g><g><title>skb_release_data (2 samples, 0.01%)</title><rect x="49.6031%" y="245" width="0.0128%" height="15" fill="rgb(252,193,18)" fg:x="7748" fg:w="2"/><text x="49.8174%" y="255.50"></text></g><g><title>tcp_current_mss (2 samples, 0.01%)</title><rect x="49.6543%" y="245" width="0.0128%" height="15" fill="rgb(247,207,19)" fg:x="7756" fg:w="2"/><text x="49.8686%" y="255.50"></text></g><g><title>tcp_ack (13 samples, 0.08%)</title><rect x="49.5903%" y="277" width="0.0832%" height="15" fill="rgb(213,228,3)" fg:x="7746" fg:w="13"/><text x="49.8046%" y="287.50"></text></g><g><title>tcp_xmit_retransmit_queue.part.0 (3 samples, 0.02%)</title><rect x="49.6543%" y="261" width="0.0192%" height="15" fill="rgb(214,10,20)" fg:x="7756" fg:w="3"/><text x="49.8686%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (41 samples, 0.26%)</title><rect x="49.4238%" y="309" width="0.2625%" height="15" fill="rgb(228,220,18)" fg:x="7720" fg:w="41"/><text x="49.6381%" y="319.50"></text></g><g><title>tcp_rcv_established (39 samples, 0.25%)</title><rect x="49.4366%" y="293" width="0.2497%" height="15" fill="rgb(224,50,47)" fg:x="7722" fg:w="39"/><text x="49.6509%" y="303.50"></text></g><g><title>napi_complete_done (51 samples, 0.33%)</title><rect x="49.3726%" y="453" width="0.3265%" height="15" fill="rgb(226,216,13)" fg:x="7712" fg:w="51"/><text x="49.5869%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (51 samples, 0.33%)</title><rect x="49.3726%" y="437" width="0.3265%" height="15" fill="rgb(216,153,44)" fg:x="7712" fg:w="51"/><text x="49.5869%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (51 samples, 0.33%)</title><rect x="49.3726%" y="421" width="0.3265%" height="15" fill="rgb(227,176,26)" fg:x="7712" fg:w="51"/><text x="49.5869%" y="431.50"></text></g><g><title>ip_list_rcv (51 samples, 0.33%)</title><rect x="49.3726%" y="405" width="0.3265%" height="15" fill="rgb(215,38,16)" fg:x="7712" fg:w="51"/><text x="49.5869%" y="415.50"></text></g><g><title>ip_sublist_rcv (51 samples, 0.33%)</title><rect x="49.3726%" y="389" width="0.3265%" height="15" fill="rgb(207,166,9)" fg:x="7712" fg:w="51"/><text x="49.5869%" y="399.50"></text></g><g><title>ip_sublist_rcv_finish (48 samples, 0.31%)</title><rect x="49.3918%" y="373" width="0.3073%" height="15" fill="rgb(223,178,14)" fg:x="7715" fg:w="48"/><text x="49.6061%" y="383.50"></text></g><g><title>ip_local_deliver_finish (48 samples, 0.31%)</title><rect x="49.3918%" y="357" width="0.3073%" height="15" fill="rgb(220,94,29)" fg:x="7715" fg:w="48"/><text x="49.6061%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (48 samples, 0.31%)</title><rect x="49.3918%" y="341" width="0.3073%" height="15" fill="rgb(207,19,13)" fg:x="7715" fg:w="48"/><text x="49.6061%" y="351.50"></text></g><g><title>tcp_v4_rcv (48 samples, 0.31%)</title><rect x="49.3918%" y="325" width="0.3073%" height="15" fill="rgb(224,38,0)" fg:x="7715" fg:w="48"/><text x="49.6061%" y="335.50"></text></g><g><title>try_fill_recv (2 samples, 0.01%)</title><rect x="49.7055%" y="453" width="0.0128%" height="15" fill="rgb(209,67,13)" fg:x="7764" fg:w="2"/><text x="49.9198%" y="463.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.01%)</title><rect x="49.7055%" y="437" width="0.0128%" height="15" fill="rgb(240,178,22)" fg:x="7764" fg:w="2"/><text x="49.9198%" y="447.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="49.7055%" y="421" width="0.0128%" height="15" fill="rgb(245,49,10)" fg:x="7764" fg:w="2"/><text x="49.9198%" y="431.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="49.7055%" y="405" width="0.0128%" height="15" fill="rgb(246,35,53)" fg:x="7764" fg:w="2"/><text x="49.9198%" y="415.50"></text></g><g><title>prep_new_page (2 samples, 0.01%)</title><rect x="49.7055%" y="389" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="7764" fg:w="2"/><text x="49.9198%" y="399.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.01%)</title><rect x="49.7055%" y="373" width="0.0128%" height="15" fill="rgb(253,165,35)" fg:x="7764" fg:w="2"/><text x="49.9198%" y="383.50"></text></g><g><title>virtnet_poll (57 samples, 0.36%)</title><rect x="49.3662%" y="469" width="0.3649%" height="15" fill="rgb(213,187,12)" fg:x="7711" fg:w="57"/><text x="49.5805%" y="479.50"></text></g><g><title>virtqueue_get_buf_ctx_split (2 samples, 0.01%)</title><rect x="49.7183%" y="453" width="0.0128%" height="15" fill="rgb(235,34,35)" fg:x="7766" fg:w="2"/><text x="49.9326%" y="463.50"></text></g><g><title>napi_consume_skb (2 samples, 0.01%)</title><rect x="49.7311%" y="437" width="0.0128%" height="15" fill="rgb(244,99,54)" fg:x="7768" fg:w="2"/><text x="49.9454%" y="447.50"></text></g><g><title>free_old_xmit_skbs (6 samples, 0.04%)</title><rect x="49.7311%" y="453" width="0.0384%" height="15" fill="rgb(235,178,6)" fg:x="7768" fg:w="6"/><text x="49.9454%" y="463.50"></text></g><g><title>virtqueue_get_buf_ctx_split (3 samples, 0.02%)</title><rect x="49.7503%" y="437" width="0.0192%" height="15" fill="rgb(235,34,35)" fg:x="7771" fg:w="3"/><text x="49.9646%" y="447.50"></text></g><g><title>detach_buf_split (3 samples, 0.02%)</title><rect x="49.7503%" y="421" width="0.0192%" height="15" fill="rgb(228,101,1)" fg:x="7771" fg:w="3"/><text x="49.9646%" y="431.50"></text></g><g><title>kfree (3 samples, 0.02%)</title><rect x="49.7503%" y="405" width="0.0192%" height="15" fill="rgb(222,6,37)" fg:x="7771" fg:w="3"/><text x="49.9646%" y="415.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (3 samples, 0.02%)</title><rect x="49.7503%" y="389" width="0.0192%" height="15" fill="rgb(208,166,34)" fg:x="7771" fg:w="3"/><text x="49.9646%" y="399.50"></text></g><g><title>net_rx_action (65 samples, 0.42%)</title><rect x="49.3598%" y="485" width="0.4161%" height="15" fill="rgb(231,11,52)" fg:x="7710" fg:w="65"/><text x="49.5741%" y="495.50"></text></g><g><title>virtnet_poll_tx (7 samples, 0.04%)</title><rect x="49.7311%" y="469" width="0.0448%" height="15" fill="rgb(251,188,47)" fg:x="7768" fg:w="7"/><text x="49.9454%" y="479.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.02%)</title><rect x="49.7951%" y="325" width="0.0192%" height="15" fill="rgb(251,86,39)" fg:x="7778" fg:w="3"/><text x="50.0094%" y="335.50"></text></g><g><title>start_xmit (3 samples, 0.02%)</title><rect x="49.7951%" y="309" width="0.0192%" height="15" fill="rgb(211,140,13)" fg:x="7778" fg:w="3"/><text x="50.0094%" y="319.50"></text></g><g><title>virtqueue_notify (2 samples, 0.01%)</title><rect x="49.8015%" y="293" width="0.0128%" height="15" fill="rgb(219,119,18)" fg:x="7779" fg:w="2"/><text x="50.0158%" y="303.50"></text></g><g><title>vp_notify (2 samples, 0.01%)</title><rect x="49.8015%" y="277" width="0.0128%" height="15" fill="rgb(230,193,37)" fg:x="7779" fg:w="2"/><text x="50.0158%" y="287.50"></text></g><g><title>iowrite16 (2 samples, 0.01%)</title><rect x="49.8015%" y="261" width="0.0128%" height="15" fill="rgb(218,139,37)" fg:x="7779" fg:w="2"/><text x="50.0158%" y="271.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.01%)</title><rect x="49.8143%" y="309" width="0.0128%" height="15" fill="rgb(240,104,40)" fg:x="7781" fg:w="2"/><text x="50.0286%" y="319.50"></text></g><g><title>__tcp_transmit_skb (8 samples, 0.05%)</title><rect x="49.7823%" y="421" width="0.0512%" height="15" fill="rgb(238,106,36)" fg:x="7776" fg:w="8"/><text x="49.9966%" y="431.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.05%)</title><rect x="49.7823%" y="405" width="0.0512%" height="15" fill="rgb(224,11,5)" fg:x="7776" fg:w="8"/><text x="49.9966%" y="415.50"></text></g><g><title>ip_finish_output2 (7 samples, 0.04%)</title><rect x="49.7887%" y="389" width="0.0448%" height="15" fill="rgb(219,227,11)" fg:x="7777" fg:w="7"/><text x="50.0030%" y="399.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.04%)</title><rect x="49.7951%" y="373" width="0.0384%" height="15" fill="rgb(232,116,37)" fg:x="7778" fg:w="6"/><text x="50.0094%" y="383.50"></text></g><g><title>__qdisc_run (6 samples, 0.04%)</title><rect x="49.7951%" y="357" width="0.0384%" height="15" fill="rgb(252,144,25)" fg:x="7778" fg:w="6"/><text x="50.0094%" y="367.50"></text></g><g><title>sch_direct_xmit (6 samples, 0.04%)</title><rect x="49.7951%" y="341" width="0.0384%" height="15" fill="rgb(222,128,44)" fg:x="7778" fg:w="6"/><text x="50.0094%" y="351.50"></text></g><g><title>validate_xmit_skb_list (3 samples, 0.02%)</title><rect x="49.8143%" y="325" width="0.0192%" height="15" fill="rgb(254,174,52)" fg:x="7781" fg:w="3"/><text x="50.0286%" y="335.50"></text></g><g><title>asm_common_interrupt (86 samples, 0.55%)</title><rect x="49.2958%" y="581" width="0.5506%" height="15" fill="rgb(248,227,45)" fg:x="7700" fg:w="86"/><text x="49.5101%" y="591.50"></text></g><g><title>common_interrupt (86 samples, 0.55%)</title><rect x="49.2958%" y="565" width="0.5506%" height="15" fill="rgb(250,67,32)" fg:x="7700" fg:w="86"/><text x="49.5101%" y="575.50"></text></g><g><title>irq_exit_rcu (76 samples, 0.49%)</title><rect x="49.3598%" y="549" width="0.4866%" height="15" fill="rgb(240,18,12)" fg:x="7710" fg:w="76"/><text x="49.5741%" y="559.50"></text></g><g><title>do_softirq_own_stack (76 samples, 0.49%)</title><rect x="49.3598%" y="533" width="0.4866%" height="15" fill="rgb(223,89,53)" fg:x="7710" fg:w="76"/><text x="49.5741%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (76 samples, 0.49%)</title><rect x="49.3598%" y="517" width="0.4866%" height="15" fill="rgb(208,184,36)" fg:x="7710" fg:w="76"/><text x="49.5741%" y="527.50"></text></g><g><title>__softirqentry_text_start (76 samples, 0.49%)</title><rect x="49.3598%" y="501" width="0.4866%" height="15" fill="rgb(249,91,22)" fg:x="7710" fg:w="76"/><text x="49.5741%" y="511.50"></text></g><g><title>tasklet_action_common.constprop.0 (11 samples, 0.07%)</title><rect x="49.7759%" y="485" width="0.0704%" height="15" fill="rgb(220,151,48)" fg:x="7775" fg:w="11"/><text x="49.9902%" y="495.50"></text></g><g><title>tcp_tasklet_func (11 samples, 0.07%)</title><rect x="49.7759%" y="469" width="0.0704%" height="15" fill="rgb(218,189,37)" fg:x="7775" fg:w="11"/><text x="49.9902%" y="479.50"></text></g><g><title>tcp_tsq_handler (11 samples, 0.07%)</title><rect x="49.7759%" y="453" width="0.0704%" height="15" fill="rgb(238,207,14)" fg:x="7775" fg:w="11"/><text x="49.9902%" y="463.50"></text></g><g><title>tcp_write_xmit (10 samples, 0.06%)</title><rect x="49.7823%" y="437" width="0.0640%" height="15" fill="rgb(236,72,36)" fg:x="7776" fg:w="10"/><text x="49.9966%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.01%)</title><rect x="49.8335%" y="421" width="0.0128%" height="15" fill="rgb(225,2,28)" fg:x="7784" fg:w="2"/><text x="50.0478%" y="431.50"></text></g><g><title>__alloc_skb (2 samples, 0.01%)</title><rect x="49.8335%" y="405" width="0.0128%" height="15" fill="rgb(237,90,40)" fg:x="7784" fg:w="2"/><text x="50.0478%" y="415.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.02%)</title><rect x="49.8464%" y="581" width="0.0192%" height="15" fill="rgb(208,26,13)" fg:x="7786" fg:w="3"/><text x="50.0606%" y="591.50"></text></g><g><title>exc_page_fault (2 samples, 0.01%)</title><rect x="49.8528%" y="565" width="0.0128%" height="15" fill="rgb(216,51,29)" fg:x="7787" fg:w="2"/><text x="50.0670%" y="575.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.01%)</title><rect x="49.8528%" y="549" width="0.0128%" height="15" fill="rgb(253,37,52)" fg:x="7787" fg:w="2"/><text x="50.0670%" y="559.50"></text></g><g><title>handle_mm_fault (2 samples, 0.01%)</title><rect x="49.8528%" y="533" width="0.0128%" height="15" fill="rgb(247,31,49)" fg:x="7787" fg:w="2"/><text x="50.0670%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="49.8784%" y="549" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="7791" fg:w="2"/><text x="50.0926%" y="559.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="49.8784%" y="533" width="0.0128%" height="15" fill="rgb(221,147,0)" fg:x="7791" fg:w="2"/><text x="50.0926%" y="543.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="49.8784%" y="517" width="0.0128%" height="15" fill="rgb(212,109,30)" fg:x="7791" fg:w="2"/><text x="50.0926%" y="527.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="49.8784%" y="501" width="0.0128%" height="15" fill="rgb(232,211,54)" fg:x="7791" fg:w="2"/><text x="50.0926%" y="511.50"></text></g><g><title>tick_sched_timer (2 samples, 0.01%)</title><rect x="49.8784%" y="485" width="0.0128%" height="15" fill="rgb(237,67,28)" fg:x="7791" fg:w="2"/><text x="50.0926%" y="495.50"></text></g><g><title>tick_sched_handle (2 samples, 0.01%)</title><rect x="49.8784%" y="469" width="0.0128%" height="15" fill="rgb(232,138,39)" fg:x="7791" fg:w="2"/><text x="50.0926%" y="479.50"></text></g><g><title>update_process_times (2 samples, 0.01%)</title><rect x="49.8784%" y="453" width="0.0128%" height="15" fill="rgb(236,132,35)" fg:x="7791" fg:w="2"/><text x="50.0926%" y="463.50"></text></g><g><title>copy_user_generic_string (1,343 samples, 8.60%)</title><rect x="41.2996%" y="597" width="8.5980%" height="15" fill="rgb(233,29,30)" fg:x="6451" fg:w="1343"/><text x="41.5139%" y="607.50">copy_user_gener..</text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="49.8656%" y="581" width="0.0320%" height="15" fill="rgb(209,17,43)" fg:x="7789" fg:w="5"/><text x="50.0798%" y="591.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="49.8784%" y="565" width="0.0192%" height="15" fill="rgb(218,44,13)" fg:x="7791" fg:w="3"/><text x="50.0926%" y="575.50"></text></g><g><title>copy_page_to_iter (1,449 samples, 9.28%)</title><rect x="40.6274%" y="613" width="9.2766%" height="15" fill="rgb(229,55,41)" fg:x="6346" fg:w="1449"/><text x="40.8417%" y="623.50">copy_page_to_iter</text></g><g><title>mark_page_accessed (23 samples, 0.15%)</title><rect x="49.9040%" y="613" width="0.1472%" height="15" fill="rgb(226,84,51)" fg:x="7795" fg:w="23"/><text x="50.1183%" y="623.50"></text></g><g><title>PageHuge (6 samples, 0.04%)</title><rect x="50.2497%" y="597" width="0.0384%" height="15" fill="rgb(240,178,13)" fg:x="7849" fg:w="6"/><text x="50.4640%" y="607.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="50.2881%" y="597" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="7855" fg:w="2"/><text x="50.5024%" y="607.50"></text></g><g><title>__x86_return_thunk (7 samples, 0.04%)</title><rect x="50.3009%" y="597" width="0.0448%" height="15" fill="rgb(211,8,20)" fg:x="7857" fg:w="7"/><text x="50.5152%" y="607.50"></text></g><g><title>srso_safe_ret_alias (5 samples, 0.03%)</title><rect x="50.3137%" y="581" width="0.0320%" height="15" fill="rgb(210,87,27)" fg:x="7859" fg:w="5"/><text x="50.5280%" y="591.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="50.3457%" y="501" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="511.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="50.3457%" y="485" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="495.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="50.3457%" y="469" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="479.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="50.3457%" y="453" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="463.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="50.3457%" y="437" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="447.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="50.3457%" y="421" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="431.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="50.3457%" y="405" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="415.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="50.3457%" y="389" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="399.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="50.3457%" y="373" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="383.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="50.3457%" y="357" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="367.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="50.3457%" y="341" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="351.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="50.3457%" y="325" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="335.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="50.3457%" y="309" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="7864" fg:w="2"/><text x="50.5600%" y="319.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="50.3457%" y="597" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="7864" fg:w="3"/><text x="50.5600%" y="607.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="50.3457%" y="581" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="7864" fg:w="3"/><text x="50.5600%" y="591.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="50.3457%" y="565" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="7864" fg:w="3"/><text x="50.5600%" y="575.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="50.3457%" y="549" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="7864" fg:w="3"/><text x="50.5600%" y="559.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="50.3457%" y="533" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="7864" fg:w="3"/><text x="50.5600%" y="543.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="50.3457%" y="517" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="7864" fg:w="3"/><text x="50.5600%" y="527.50"></text></g><g><title>__irqentry_text_start (8 samples, 0.05%)</title><rect x="51.4469%" y="581" width="0.0512%" height="15" fill="rgb(229,107,3)" fg:x="8036" fg:w="8"/><text x="51.6611%" y="591.50"></text></g><g><title>handle_irq_event (2 samples, 0.01%)</title><rect x="51.4981%" y="517" width="0.0128%" height="15" fill="rgb(209,73,52)" fg:x="8044" fg:w="2"/><text x="51.7124%" y="527.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="51.4981%" y="501" width="0.0128%" height="15" fill="rgb(239,110,26)" fg:x="8044" fg:w="2"/><text x="51.7124%" y="511.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="51.4981%" y="549" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="8044" fg:w="3"/><text x="51.7124%" y="559.50"></text></g><g><title>handle_edge_irq (3 samples, 0.02%)</title><rect x="51.4981%" y="533" width="0.0192%" height="15" fill="rgb(219,15,9)" fg:x="8044" fg:w="3"/><text x="51.7124%" y="543.50"></text></g><g><title>napi_complete_done (9 samples, 0.06%)</title><rect x="51.5237%" y="453" width="0.0576%" height="15" fill="rgb(226,216,13)" fg:x="8048" fg:w="9"/><text x="51.7380%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (9 samples, 0.06%)</title><rect x="51.5237%" y="437" width="0.0576%" height="15" fill="rgb(216,153,44)" fg:x="8048" fg:w="9"/><text x="51.7380%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (9 samples, 0.06%)</title><rect x="51.5237%" y="421" width="0.0576%" height="15" fill="rgb(227,176,26)" fg:x="8048" fg:w="9"/><text x="51.7380%" y="431.50"></text></g><g><title>ip_list_rcv (9 samples, 0.06%)</title><rect x="51.5237%" y="405" width="0.0576%" height="15" fill="rgb(215,38,16)" fg:x="8048" fg:w="9"/><text x="51.7380%" y="415.50"></text></g><g><title>ip_sublist_rcv (8 samples, 0.05%)</title><rect x="51.5301%" y="389" width="0.0512%" height="15" fill="rgb(207,166,9)" fg:x="8049" fg:w="8"/><text x="51.7444%" y="399.50"></text></g><g><title>ip_sublist_rcv_finish (7 samples, 0.04%)</title><rect x="51.5365%" y="373" width="0.0448%" height="15" fill="rgb(223,178,14)" fg:x="8050" fg:w="7"/><text x="51.7508%" y="383.50"></text></g><g><title>ip_local_deliver_finish (6 samples, 0.04%)</title><rect x="51.5429%" y="357" width="0.0384%" height="15" fill="rgb(220,94,29)" fg:x="8051" fg:w="6"/><text x="51.7572%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (6 samples, 0.04%)</title><rect x="51.5429%" y="341" width="0.0384%" height="15" fill="rgb(207,19,13)" fg:x="8051" fg:w="6"/><text x="51.7572%" y="351.50"></text></g><g><title>tcp_v4_rcv (6 samples, 0.04%)</title><rect x="51.5429%" y="325" width="0.0384%" height="15" fill="rgb(224,38,0)" fg:x="8051" fg:w="6"/><text x="51.7572%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (6 samples, 0.04%)</title><rect x="51.5429%" y="309" width="0.0384%" height="15" fill="rgb(228,220,18)" fg:x="8051" fg:w="6"/><text x="51.7572%" y="319.50"></text></g><g><title>tcp_rcv_established (6 samples, 0.04%)</title><rect x="51.5429%" y="293" width="0.0384%" height="15" fill="rgb(224,50,47)" fg:x="8051" fg:w="6"/><text x="51.7572%" y="303.50"></text></g><g><title>tcp_ack (5 samples, 0.03%)</title><rect x="51.5493%" y="277" width="0.0320%" height="15" fill="rgb(213,228,3)" fg:x="8052" fg:w="5"/><text x="51.7636%" y="287.50"></text></g><g><title>receive_buf (4 samples, 0.03%)</title><rect x="51.5813%" y="453" width="0.0256%" height="15" fill="rgb(233,111,44)" fg:x="8057" fg:w="4"/><text x="51.7956%" y="463.50"></text></g><g><title>page_to_skb (3 samples, 0.02%)</title><rect x="51.5877%" y="437" width="0.0192%" height="15" fill="rgb(243,180,22)" fg:x="8058" fg:w="3"/><text x="51.8020%" y="447.50"></text></g><g><title>virtnet_poll (14 samples, 0.09%)</title><rect x="51.5237%" y="469" width="0.0896%" height="15" fill="rgb(213,187,12)" fg:x="8048" fg:w="14"/><text x="51.7380%" y="479.50"></text></g><g><title>net_rx_action (16 samples, 0.10%)</title><rect x="51.5173%" y="485" width="0.1024%" height="15" fill="rgb(231,11,52)" fg:x="8047" fg:w="16"/><text x="51.7316%" y="495.50"></text></g><g><title>asm_common_interrupt (20 samples, 0.13%)</title><rect x="51.4981%" y="581" width="0.1280%" height="15" fill="rgb(248,227,45)" fg:x="8044" fg:w="20"/><text x="51.7124%" y="591.50"></text></g><g><title>common_interrupt (20 samples, 0.13%)</title><rect x="51.4981%" y="565" width="0.1280%" height="15" fill="rgb(250,67,32)" fg:x="8044" fg:w="20"/><text x="51.7124%" y="575.50"></text></g><g><title>irq_exit_rcu (17 samples, 0.11%)</title><rect x="51.5173%" y="549" width="0.1088%" height="15" fill="rgb(240,18,12)" fg:x="8047" fg:w="17"/><text x="51.7316%" y="559.50"></text></g><g><title>do_softirq_own_stack (17 samples, 0.11%)</title><rect x="51.5173%" y="533" width="0.1088%" height="15" fill="rgb(223,89,53)" fg:x="8047" fg:w="17"/><text x="51.7316%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (17 samples, 0.11%)</title><rect x="51.5173%" y="517" width="0.1088%" height="15" fill="rgb(208,184,36)" fg:x="8047" fg:w="17"/><text x="51.7316%" y="527.50"></text></g><g><title>__softirqentry_text_start (17 samples, 0.11%)</title><rect x="51.5173%" y="501" width="0.1088%" height="15" fill="rgb(249,91,22)" fg:x="8047" fg:w="17"/><text x="51.7316%" y="511.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.01%)</title><rect x="51.6325%" y="581" width="0.0128%" height="15" fill="rgb(210,87,27)" fg:x="8065" fg:w="2"/><text x="51.8468%" y="591.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="52.2535%" y="565" width="0.0256%" height="15" fill="rgb(229,107,3)" fg:x="8162" fg:w="4"/><text x="52.4678%" y="575.50"></text></g><g><title>virtnet_poll (3 samples, 0.02%)</title><rect x="52.2791%" y="453" width="0.0192%" height="15" fill="rgb(213,187,12)" fg:x="8166" fg:w="3"/><text x="52.4934%" y="463.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="52.2791%" y="437" width="0.0192%" height="15" fill="rgb(226,216,13)" fg:x="8166" fg:w="3"/><text x="52.4934%" y="447.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="52.2791%" y="421" width="0.0192%" height="15" fill="rgb(216,153,44)" fg:x="8166" fg:w="3"/><text x="52.4934%" y="431.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="52.2791%" y="405" width="0.0192%" height="15" fill="rgb(227,176,26)" fg:x="8166" fg:w="3"/><text x="52.4934%" y="415.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="52.2791%" y="389" width="0.0192%" height="15" fill="rgb(215,38,16)" fg:x="8166" fg:w="3"/><text x="52.4934%" y="399.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="52.2791%" y="373" width="0.0192%" height="15" fill="rgb(207,166,9)" fg:x="8166" fg:w="3"/><text x="52.4934%" y="383.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="52.2855%" y="357" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="367.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="52.2855%" y="341" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="52.2855%" y="325" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="335.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="52.2855%" y="309" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="319.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="52.2855%" y="293" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="303.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="52.2855%" y="277" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="287.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="52.2855%" y="261" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="271.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="52.2855%" y="245" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="255.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="52.2855%" y="229" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="239.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="52.2855%" y="213" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="223.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="52.2855%" y="197" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="207.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="52.2855%" y="181" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="191.50"></text></g><g><title>__qdisc_run (2 samples, 0.01%)</title><rect x="52.2855%" y="165" width="0.0128%" height="15" fill="rgb(252,144,25)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="175.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="52.2855%" y="149" width="0.0128%" height="15" fill="rgb(222,128,44)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="159.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="52.2855%" y="133" width="0.0128%" height="15" fill="rgb(251,86,39)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="143.50"></text></g><g><title>start_xmit (2 samples, 0.01%)</title><rect x="52.2855%" y="117" width="0.0128%" height="15" fill="rgb(211,140,13)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="127.50"></text></g><g><title>virtqueue_notify (2 samples, 0.01%)</title><rect x="52.2855%" y="101" width="0.0128%" height="15" fill="rgb(219,119,18)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="111.50"></text></g><g><title>vp_notify (2 samples, 0.01%)</title><rect x="52.2855%" y="85" width="0.0128%" height="15" fill="rgb(230,193,37)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="95.50"></text></g><g><title>iowrite16 (2 samples, 0.01%)</title><rect x="52.2855%" y="69" width="0.0128%" height="15" fill="rgb(218,139,37)" fg:x="8167" fg:w="2"/><text x="52.4998%" y="79.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="52.2791%" y="469" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="8166" fg:w="4"/><text x="52.4934%" y="479.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="52.3047%" y="405" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="8170" fg:w="2"/><text x="52.5190%" y="415.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="52.3047%" y="389" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="8170" fg:w="2"/><text x="52.5190%" y="399.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="52.3047%" y="373" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="8170" fg:w="2"/><text x="52.5190%" y="383.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="52.3047%" y="357" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="8170" fg:w="2"/><text x="52.5190%" y="367.50"></text></g><g><title>__qdisc_run (2 samples, 0.01%)</title><rect x="52.3047%" y="341" width="0.0128%" height="15" fill="rgb(252,144,25)" fg:x="8170" fg:w="2"/><text x="52.5190%" y="351.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="52.3047%" y="325" width="0.0128%" height="15" fill="rgb(222,128,44)" fg:x="8170" fg:w="2"/><text x="52.5190%" y="335.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="52.3047%" y="309" width="0.0128%" height="15" fill="rgb(251,86,39)" fg:x="8170" fg:w="2"/><text x="52.5190%" y="319.50"></text></g><g><title>start_xmit (2 samples, 0.01%)</title><rect x="52.3047%" y="293" width="0.0128%" height="15" fill="rgb(211,140,13)" fg:x="8170" fg:w="2"/><text x="52.5190%" y="303.50"></text></g><g><title>asm_common_interrupt (7 samples, 0.04%)</title><rect x="52.2791%" y="565" width="0.0448%" height="15" fill="rgb(248,227,45)" fg:x="8166" fg:w="7"/><text x="52.4934%" y="575.50"></text></g><g><title>common_interrupt (7 samples, 0.04%)</title><rect x="52.2791%" y="549" width="0.0448%" height="15" fill="rgb(250,67,32)" fg:x="8166" fg:w="7"/><text x="52.4934%" y="559.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.04%)</title><rect x="52.2791%" y="533" width="0.0448%" height="15" fill="rgb(240,18,12)" fg:x="8166" fg:w="7"/><text x="52.4934%" y="543.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.04%)</title><rect x="52.2791%" y="517" width="0.0448%" height="15" fill="rgb(223,89,53)" fg:x="8166" fg:w="7"/><text x="52.4934%" y="527.50"></text></g><g><title>asm_call_sysvec_on_stack (7 samples, 0.04%)</title><rect x="52.2791%" y="501" width="0.0448%" height="15" fill="rgb(208,184,36)" fg:x="8166" fg:w="7"/><text x="52.4934%" y="511.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.04%)</title><rect x="52.2791%" y="485" width="0.0448%" height="15" fill="rgb(249,91,22)" fg:x="8166" fg:w="7"/><text x="52.4934%" y="495.50"></text></g><g><title>tasklet_action_common.constprop.0 (3 samples, 0.02%)</title><rect x="52.3047%" y="469" width="0.0192%" height="15" fill="rgb(220,151,48)" fg:x="8170" fg:w="3"/><text x="52.5190%" y="479.50"></text></g><g><title>tcp_tasklet_func (3 samples, 0.02%)</title><rect x="52.3047%" y="453" width="0.0192%" height="15" fill="rgb(218,189,37)" fg:x="8170" fg:w="3"/><text x="52.5190%" y="463.50"></text></g><g><title>tcp_tsq_handler (3 samples, 0.02%)</title><rect x="52.3047%" y="437" width="0.0192%" height="15" fill="rgb(238,207,14)" fg:x="8170" fg:w="3"/><text x="52.5190%" y="447.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.02%)</title><rect x="52.3047%" y="421" width="0.0192%" height="15" fill="rgb(236,72,36)" fg:x="8170" fg:w="3"/><text x="52.5190%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="52.5480%" y="245" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="8208" fg:w="2"/><text x="52.7623%" y="255.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="52.5480%" y="229" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="8208" fg:w="2"/><text x="52.7623%" y="239.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="52.5480%" y="213" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="8208" fg:w="2"/><text x="52.7623%" y="223.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="52.5480%" y="197" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="8208" fg:w="2"/><text x="52.7623%" y="207.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="52.5480%" y="181" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="8208" fg:w="2"/><text x="52.7623%" y="191.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="52.5480%" y="165" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="8208" fg:w="2"/><text x="52.7623%" y="175.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="52.5480%" y="437" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="8208" fg:w="4"/><text x="52.7623%" y="447.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="52.5480%" y="421" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="8208" fg:w="4"/><text x="52.7623%" y="431.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="52.5480%" y="405" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="8208" fg:w="4"/><text x="52.7623%" y="415.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="52.5480%" y="389" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="8208" fg:w="4"/><text x="52.7623%" y="399.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="52.5480%" y="373" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="8208" fg:w="4"/><text x="52.7623%" y="383.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="52.5480%" y="357" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="8208" fg:w="4"/><text x="52.7623%" y="367.50"></text></g><g><title>ip_sublist_rcv_finish (4 samples, 0.03%)</title><rect x="52.5480%" y="341" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="8208" fg:w="4"/><text x="52.7623%" y="351.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="52.5480%" y="325" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="8208" fg:w="4"/><text x="52.7623%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="52.5480%" y="309" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="8208" fg:w="4"/><text x="52.7623%" y="319.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.03%)</title><rect x="52.5480%" y="293" width="0.0256%" height="15" fill="rgb(224,38,0)" fg:x="8208" fg:w="4"/><text x="52.7623%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.03%)</title><rect x="52.5480%" y="277" width="0.0256%" height="15" fill="rgb(228,220,18)" fg:x="8208" fg:w="4"/><text x="52.7623%" y="287.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.03%)</title><rect x="52.5480%" y="261" width="0.0256%" height="15" fill="rgb(224,50,47)" fg:x="8208" fg:w="4"/><text x="52.7623%" y="271.50"></text></g><g><title>tcp_ack (2 samples, 0.01%)</title><rect x="52.5608%" y="245" width="0.0128%" height="15" fill="rgb(213,228,3)" fg:x="8210" fg:w="2"/><text x="52.7751%" y="255.50"></text></g><g><title>pagecache_get_page (396 samples, 2.54%)</title><rect x="50.0512%" y="613" width="2.5352%" height="15" fill="rgb(254,146,25)" fg:x="7818" fg:w="396"/><text x="50.2655%" y="623.50">pag..</text></g><g><title>find_get_entry (347 samples, 2.22%)</title><rect x="50.3649%" y="597" width="2.2215%" height="15" fill="rgb(232,175,34)" fg:x="7867" fg:w="347"/><text x="50.5792%" y="607.50">fi..</text></g><g><title>xas_load (147 samples, 0.94%)</title><rect x="51.6453%" y="581" width="0.9411%" height="15" fill="rgb(249,146,47)" fg:x="8067" fg:w="147"/><text x="51.8596%" y="591.50"></text></g><g><title>xas_start (41 samples, 0.26%)</title><rect x="52.3239%" y="565" width="0.2625%" height="15" fill="rgb(249,53,40)" fg:x="8173" fg:w="41"/><text x="52.5382%" y="575.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.04%)</title><rect x="52.5480%" y="549" width="0.0384%" height="15" fill="rgb(248,227,45)" fg:x="8208" fg:w="6"/><text x="52.7623%" y="559.50"></text></g><g><title>common_interrupt (6 samples, 0.04%)</title><rect x="52.5480%" y="533" width="0.0384%" height="15" fill="rgb(250,67,32)" fg:x="8208" fg:w="6"/><text x="52.7623%" y="543.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.04%)</title><rect x="52.5480%" y="517" width="0.0384%" height="15" fill="rgb(240,18,12)" fg:x="8208" fg:w="6"/><text x="52.7623%" y="527.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.04%)</title><rect x="52.5480%" y="501" width="0.0384%" height="15" fill="rgb(223,89,53)" fg:x="8208" fg:w="6"/><text x="52.7623%" y="511.50"></text></g><g><title>asm_call_sysvec_on_stack (6 samples, 0.04%)</title><rect x="52.5480%" y="485" width="0.0384%" height="15" fill="rgb(208,184,36)" fg:x="8208" fg:w="6"/><text x="52.7623%" y="495.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.04%)</title><rect x="52.5480%" y="469" width="0.0384%" height="15" fill="rgb(249,91,22)" fg:x="8208" fg:w="6"/><text x="52.7623%" y="479.50"></text></g><g><title>net_rx_action (6 samples, 0.04%)</title><rect x="52.5480%" y="453" width="0.0384%" height="15" fill="rgb(231,11,52)" fg:x="8208" fg:w="6"/><text x="52.7623%" y="463.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.01%)</title><rect x="52.5736%" y="437" width="0.0128%" height="15" fill="rgb(251,188,47)" fg:x="8212" fg:w="2"/><text x="52.7879%" y="447.50"></text></g><g><title>free_old_xmit_skbs (2 samples, 0.01%)</title><rect x="52.5736%" y="421" width="0.0128%" height="15" fill="rgb(235,178,6)" fg:x="8212" fg:w="2"/><text x="52.7879%" y="431.50"></text></g><g><title>virtqueue_get_buf_ctx_split (2 samples, 0.01%)</title><rect x="52.5736%" y="405" width="0.0128%" height="15" fill="rgb(235,34,35)" fg:x="8212" fg:w="2"/><text x="52.7879%" y="415.50"></text></g><g><title>generic_file_buffered_read (2,048 samples, 13.11%)</title><rect x="39.8335%" y="629" width="13.1114%" height="15" fill="rgb(225,112,16)" fg:x="6222" fg:w="2048"/><text x="40.0478%" y="639.50">generic_file_buffered_r..</text></g><g><title>touch_atime (56 samples, 0.36%)</title><rect x="52.5864%" y="613" width="0.3585%" height="15" fill="rgb(209,24,34)" fg:x="8214" fg:w="56"/><text x="52.8007%" y="623.50"></text></g><g><title>atime_needs_update (39 samples, 0.25%)</title><rect x="52.6953%" y="597" width="0.2497%" height="15" fill="rgb(209,136,34)" fg:x="8231" fg:w="39"/><text x="52.9095%" y="607.50"></text></g><g><title>current_time (12 samples, 0.08%)</title><rect x="52.8681%" y="581" width="0.0768%" height="15" fill="rgb(239,75,43)" fg:x="8258" fg:w="12"/><text x="53.0824%" y="591.50"></text></g><g><title>ktime_get_coarse_real_ts64 (6 samples, 0.04%)</title><rect x="52.9065%" y="565" width="0.0384%" height="15" fill="rgb(228,144,10)" fg:x="8264" fg:w="6"/><text x="53.1208%" y="575.50"></text></g><g><title>generic_file_read_iter (10 samples, 0.06%)</title><rect x="52.9449%" y="629" width="0.0640%" height="15" fill="rgb(221,63,36)" fg:x="8270" fg:w="10"/><text x="53.1592%" y="639.50"></text></g><g><title>new_sync_read (2,106 samples, 13.48%)</title><rect x="39.5583%" y="645" width="13.4827%" height="15" fill="rgb(207,29,15)" fg:x="6179" fg:w="2106"/><text x="39.7725%" y="655.50">new_sync_read</text></g><g><title>iov_iter_init (5 samples, 0.03%)</title><rect x="53.0090%" y="629" width="0.0320%" height="15" fill="rgb(207,34,46)" fg:x="8280" fg:w="5"/><text x="53.2232%" y="639.50"></text></g><g><title>rw_verify_area (15 samples, 0.10%)</title><rect x="53.0410%" y="645" width="0.0960%" height="15" fill="rgb(249,222,17)" fg:x="8285" fg:w="15"/><text x="53.2553%" y="655.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="53.8028%" y="613" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="8404" fg:w="3"/><text x="54.0171%" y="623.50"></text></g><g><title>aa_file_perm (10 samples, 0.06%)</title><rect x="53.8220%" y="613" width="0.0640%" height="15" fill="rgb(208,101,21)" fg:x="8407" fg:w="10"/><text x="54.0363%" y="623.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="53.8732%" y="597" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="8415" fg:w="2"/><text x="54.0875%" y="607.50"></text></g><g><title>apparmor_file_permission (94 samples, 0.60%)</title><rect x="53.2971%" y="629" width="0.6018%" height="15" fill="rgb(223,123,50)" fg:x="8325" fg:w="94"/><text x="53.5113%" y="639.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="53.8860%" y="613" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="623.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="53.8860%" y="597" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="607.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="53.8860%" y="581" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="591.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="53.8860%" y="565" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="53.8860%" y="549" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="559.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="53.8860%" y="533" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="543.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="53.8860%" y="517" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="527.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="53.8860%" y="501" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="511.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="53.8860%" y="485" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="495.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="53.8860%" y="469" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="479.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="53.8860%" y="453" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="463.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="53.8860%" y="437" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="447.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="53.8860%" y="421" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="431.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="53.8860%" y="405" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="415.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="53.8860%" y="389" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="399.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="53.8860%" y="373" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="383.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="53.8860%" y="357" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="367.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="53.8860%" y="341" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="351.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="53.8860%" y="325" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="8417" fg:w="2"/><text x="54.1003%" y="335.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="53.9117%" y="325" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="8421" fg:w="2"/><text x="54.1259%" y="335.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="53.9117%" y="309" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="8421" fg:w="2"/><text x="54.1259%" y="319.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="53.9117%" y="293" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="8421" fg:w="2"/><text x="54.1259%" y="303.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="53.9117%" y="277" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="8421" fg:w="2"/><text x="54.1259%" y="287.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="53.9117%" y="261" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="8421" fg:w="2"/><text x="54.1259%" y="271.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="53.9117%" y="245" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="8421" fg:w="2"/><text x="54.1259%" y="255.50"></text></g><g><title>__qdisc_run (2 samples, 0.01%)</title><rect x="53.9117%" y="229" width="0.0128%" height="15" fill="rgb(252,144,25)" fg:x="8421" fg:w="2"/><text x="54.1259%" y="239.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="53.9117%" y="213" width="0.0128%" height="15" fill="rgb(222,128,44)" fg:x="8421" fg:w="2"/><text x="54.1259%" y="223.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="53.9117%" y="197" width="0.0128%" height="15" fill="rgb(251,86,39)" fg:x="8421" fg:w="2"/><text x="54.1259%" y="207.50"></text></g><g><title>start_xmit (2 samples, 0.01%)</title><rect x="53.9117%" y="181" width="0.0128%" height="15" fill="rgb(211,140,13)" fg:x="8421" fg:w="2"/><text x="54.1259%" y="191.50"></text></g><g><title>asm_common_interrupt (5 samples, 0.03%)</title><rect x="53.8988%" y="629" width="0.0320%" height="15" fill="rgb(248,227,45)" fg:x="8419" fg:w="5"/><text x="54.1131%" y="639.50"></text></g><g><title>common_interrupt (5 samples, 0.03%)</title><rect x="53.8988%" y="613" width="0.0320%" height="15" fill="rgb(250,67,32)" fg:x="8419" fg:w="5"/><text x="54.1131%" y="623.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.03%)</title><rect x="53.8988%" y="597" width="0.0320%" height="15" fill="rgb(240,18,12)" fg:x="8419" fg:w="5"/><text x="54.1131%" y="607.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.03%)</title><rect x="53.9052%" y="581" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="8420" fg:w="4"/><text x="54.1195%" y="591.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="53.9052%" y="565" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="8420" fg:w="4"/><text x="54.1195%" y="575.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="53.9052%" y="549" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="8420" fg:w="4"/><text x="54.1195%" y="559.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="53.9052%" y="533" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="8420" fg:w="4"/><text x="54.1195%" y="543.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="53.9052%" y="517" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="8420" fg:w="4"/><text x="54.1195%" y="527.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="53.9052%" y="501" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="8420" fg:w="4"/><text x="54.1195%" y="511.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="53.9052%" y="485" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="8420" fg:w="4"/><text x="54.1195%" y="495.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="53.9052%" y="469" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="8420" fg:w="4"/><text x="54.1195%" y="479.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="53.9117%" y="453" width="0.0192%" height="15" fill="rgb(215,38,16)" fg:x="8421" fg:w="3"/><text x="54.1259%" y="463.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="53.9117%" y="437" width="0.0192%" height="15" fill="rgb(207,166,9)" fg:x="8421" fg:w="3"/><text x="54.1259%" y="447.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="53.9117%" y="421" width="0.0192%" height="15" fill="rgb(223,178,14)" fg:x="8421" fg:w="3"/><text x="54.1259%" y="431.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="53.9117%" y="405" width="0.0192%" height="15" fill="rgb(220,94,29)" fg:x="8421" fg:w="3"/><text x="54.1259%" y="415.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.02%)</title><rect x="53.9117%" y="389" width="0.0192%" height="15" fill="rgb(207,19,13)" fg:x="8421" fg:w="3"/><text x="54.1259%" y="399.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="53.9117%" y="373" width="0.0192%" height="15" fill="rgb(224,38,0)" fg:x="8421" fg:w="3"/><text x="54.1259%" y="383.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="53.9117%" y="357" width="0.0192%" height="15" fill="rgb(228,220,18)" fg:x="8421" fg:w="3"/><text x="54.1259%" y="367.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.02%)</title><rect x="53.9117%" y="341" width="0.0192%" height="15" fill="rgb(224,50,47)" fg:x="8421" fg:w="3"/><text x="54.1259%" y="351.50"></text></g><g><title>ksys_read (2,363 samples, 15.13%)</title><rect x="38.8092%" y="677" width="15.1280%" height="15" fill="rgb(233,96,2)" fg:x="6062" fg:w="2363"/><text x="39.0235%" y="687.50">ksys_read</text></g><g><title>vfs_read (2,301 samples, 14.73%)</title><rect x="39.2061%" y="661" width="14.7311%" height="15" fill="rgb(232,76,33)" fg:x="6124" fg:w="2301"/><text x="39.4204%" y="671.50">vfs_read</text></g><g><title>security_file_permission (125 samples, 0.80%)</title><rect x="53.1370%" y="645" width="0.8003%" height="15" fill="rgb(224,58,37)" fg:x="8300" fg:w="125"/><text x="53.3513%" y="655.50"></text></g><g><title>do_syscall_64 (2,414 samples, 15.45%)</title><rect x="38.5211%" y="693" width="15.4545%" height="15" fill="rgb(220,74,14)" fg:x="6017" fg:w="2414"/><text x="38.7354%" y="703.50">do_syscall_64</text></g><g><title>syscall_enter_from_user_mode (6 samples, 0.04%)</title><rect x="53.9373%" y="677" width="0.0384%" height="15" fill="rgb(224,163,22)" fg:x="8425" fg:w="6"/><text x="54.1515%" y="687.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="53.9565%" y="661" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="671.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="53.9565%" y="645" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="655.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="53.9565%" y="629" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="639.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="53.9565%" y="613" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="53.9565%" y="597" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="607.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="53.9565%" y="581" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="591.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="53.9565%" y="565" width="0.0192%" height="15" fill="rgb(231,11,52)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="575.50"></text></g><g><title>virtnet_poll (3 samples, 0.02%)</title><rect x="53.9565%" y="549" width="0.0192%" height="15" fill="rgb(213,187,12)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="559.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="53.9565%" y="533" width="0.0192%" height="15" fill="rgb(226,216,13)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="543.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="53.9565%" y="517" width="0.0192%" height="15" fill="rgb(216,153,44)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="527.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="53.9565%" y="501" width="0.0192%" height="15" fill="rgb(227,176,26)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="511.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="53.9565%" y="485" width="0.0192%" height="15" fill="rgb(215,38,16)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="495.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="53.9565%" y="469" width="0.0192%" height="15" fill="rgb(207,166,9)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="479.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="53.9565%" y="453" width="0.0192%" height="15" fill="rgb(223,178,14)" fg:x="8428" fg:w="3"/><text x="54.1708%" y="463.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="53.9629%" y="437" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="8429" fg:w="2"/><text x="54.1772%" y="447.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="53.9629%" y="421" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="8429" fg:w="2"/><text x="54.1772%" y="431.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="53.9629%" y="405" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="8429" fg:w="2"/><text x="54.1772%" y="415.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.01%)</title><rect x="53.9757%" y="693" width="0.0128%" height="15" fill="rgb(210,87,27)" fg:x="8431" fg:w="2"/><text x="54.1900%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,434 samples, 15.58%)</title><rect x="38.4699%" y="709" width="15.5826%" height="15" fill="rgb(205,226,15)" fg:x="6009" fg:w="2434"/><text x="38.6842%" y="719.50">entry_SYSCALL_64_after_hwfra..</text></g><g><title>syscall_exit_to_user_mode (10 samples, 0.06%)</title><rect x="53.9885%" y="693" width="0.0640%" height="15" fill="rgb(215,101,28)" fg:x="8433" fg:w="10"/><text x="54.2028%" y="703.50"></text></g><g><title>exit_to_user_mode_prepare (7 samples, 0.04%)</title><rect x="54.0077%" y="677" width="0.0448%" height="15" fill="rgb(240,77,26)" fg:x="8436" fg:w="7"/><text x="54.2220%" y="687.50"></text></g><g><title>fpregs_assert_state_consistent (3 samples, 0.02%)</title><rect x="54.0333%" y="661" width="0.0192%" height="15" fill="rgb(227,221,38)" fg:x="8440" fg:w="3"/><text x="54.2476%" y="671.50"></text></g><g><title>__read (2,463 samples, 15.77%)</title><rect x="38.3099%" y="725" width="15.7682%" height="15" fill="rgb(238,155,20)" fg:x="5984" fg:w="2463"/><text x="38.5241%" y="735.50">__read</text></g><g><title>syscall_return_via_sysret (4 samples, 0.03%)</title><rect x="54.0525%" y="709" width="0.0256%" height="15" fill="rgb(230,222,6)" fg:x="8443" fg:w="4"/><text x="54.2668%" y="719.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="54.4302%" y="613" width="0.0192%" height="15" fill="rgb(231,11,52)" fg:x="8502" fg:w="3"/><text x="54.6445%" y="623.50"></text></g><g><title>virtnet_poll (3 samples, 0.02%)</title><rect x="54.4302%" y="597" width="0.0192%" height="15" fill="rgb(213,187,12)" fg:x="8502" fg:w="3"/><text x="54.6445%" y="607.50"></text></g><g><title>try_fill_recv (2 samples, 0.01%)</title><rect x="54.4366%" y="581" width="0.0128%" height="15" fill="rgb(209,67,13)" fg:x="8503" fg:w="2"/><text x="54.6509%" y="591.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.01%)</title><rect x="54.4366%" y="565" width="0.0128%" height="15" fill="rgb(240,178,22)" fg:x="8503" fg:w="2"/><text x="54.6509%" y="575.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="54.4366%" y="549" width="0.0128%" height="15" fill="rgb(245,49,10)" fg:x="8503" fg:w="2"/><text x="54.6509%" y="559.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="54.4366%" y="533" width="0.0128%" height="15" fill="rgb(246,35,53)" fg:x="8503" fg:w="2"/><text x="54.6509%" y="543.50"></text></g><g><title>prep_new_page (2 samples, 0.01%)</title><rect x="54.4366%" y="517" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="8503" fg:w="2"/><text x="54.6509%" y="527.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.01%)</title><rect x="54.4366%" y="501" width="0.0128%" height="15" fill="rgb(253,165,35)" fg:x="8503" fg:w="2"/><text x="54.6509%" y="511.50"></text></g><g><title>clear_page_rep (2 samples, 0.01%)</title><rect x="54.4366%" y="485" width="0.0128%" height="15" fill="rgb(233,188,25)" fg:x="8503" fg:w="2"/><text x="54.6509%" y="495.50"></text></g><g><title>common_interrupt (5 samples, 0.03%)</title><rect x="54.4302%" y="693" width="0.0320%" height="15" fill="rgb(250,67,32)" fg:x="8502" fg:w="5"/><text x="54.6445%" y="703.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.03%)</title><rect x="54.4302%" y="677" width="0.0320%" height="15" fill="rgb(240,18,12)" fg:x="8502" fg:w="5"/><text x="54.6445%" y="687.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.03%)</title><rect x="54.4302%" y="661" width="0.0320%" height="15" fill="rgb(223,89,53)" fg:x="8502" fg:w="5"/><text x="54.6445%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.03%)</title><rect x="54.4302%" y="645" width="0.0320%" height="15" fill="rgb(208,184,36)" fg:x="8502" fg:w="5"/><text x="54.6445%" y="655.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.03%)</title><rect x="54.4302%" y="629" width="0.0320%" height="15" fill="rgb(249,91,22)" fg:x="8502" fg:w="5"/><text x="54.6445%" y="639.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.01%)</title><rect x="54.4494%" y="613" width="0.0128%" height="15" fill="rgb(220,151,48)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="623.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.01%)</title><rect x="54.4494%" y="597" width="0.0128%" height="15" fill="rgb(218,189,37)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="607.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.01%)</title><rect x="54.4494%" y="581" width="0.0128%" height="15" fill="rgb(238,207,14)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="591.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="54.4494%" y="565" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="575.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="54.4494%" y="549" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="559.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="54.4494%" y="533" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="543.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="54.4494%" y="517" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="527.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="54.4494%" y="501" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="511.50"></text></g><g><title>__qdisc_run (2 samples, 0.01%)</title><rect x="54.4494%" y="485" width="0.0128%" height="15" fill="rgb(252,144,25)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="495.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="54.4494%" y="469" width="0.0128%" height="15" fill="rgb(222,128,44)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="479.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="54.4494%" y="453" width="0.0128%" height="15" fill="rgb(251,86,39)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="463.50"></text></g><g><title>start_xmit (2 samples, 0.01%)</title><rect x="54.4494%" y="437" width="0.0128%" height="15" fill="rgb(211,140,13)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="447.50"></text></g><g><title>virtqueue_notify (2 samples, 0.01%)</title><rect x="54.4494%" y="421" width="0.0128%" height="15" fill="rgb(219,119,18)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="431.50"></text></g><g><title>vp_notify (2 samples, 0.01%)</title><rect x="54.4494%" y="405" width="0.0128%" height="15" fill="rgb(230,193,37)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="415.50"></text></g><g><title>iowrite16 (2 samples, 0.01%)</title><rect x="54.4494%" y="389" width="0.0128%" height="15" fill="rgb(218,139,37)" fg:x="8505" fg:w="2"/><text x="54.6637%" y="399.50"></text></g><g><title>fileno_unlocked (61 samples, 0.39%)</title><rect x="54.0781%" y="725" width="0.3905%" height="15" fill="rgb(253,80,42)" fg:x="8447" fg:w="61"/><text x="54.2924%" y="735.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.04%)</title><rect x="54.4302%" y="709" width="0.0384%" height="15" fill="rgb(248,227,45)" fg:x="8502" fg:w="6"/><text x="54.6445%" y="719.50"></text></g><g><title>std::__basic_file&lt;char&gt;::xsgetn (2,555 samples, 16.36%)</title><rect x="38.1562%" y="741" width="16.3572%" height="15" fill="rgb(236,174,8)" fg:x="5960" fg:w="2555"/><text x="38.3705%" y="751.50">std::__basic_file&lt;char&gt;::xsgetn</text></g><g><title>std::__basic_file&lt;char&gt;::fd (7 samples, 0.04%)</title><rect x="54.4686%" y="725" width="0.0448%" height="15" fill="rgb(229,110,20)" fg:x="8508" fg:w="7"/><text x="54.6829%" y="735.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (2,660 samples, 17.03%)</title><rect x="37.7337%" y="757" width="17.0294%" height="15" fill="rgb(211,72,33)" fg:x="5894" fg:w="2660"/><text x="37.9480%" y="767.50">std::basic_filebuf&lt;char, std::c..</text></g><g><title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (39 samples, 0.25%)</title><rect x="54.5134%" y="741" width="0.2497%" height="15" fill="rgb(230,95,20)" fg:x="8515" fg:w="39"/><text x="54.7277%" y="751.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="54.7503%" y="725" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="735.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="54.7503%" y="709" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="719.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="54.7503%" y="693" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="703.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="54.7503%" y="677" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="687.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="54.7503%" y="661" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="671.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="54.7503%" y="645" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="655.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="54.7503%" y="629" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="639.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="54.7503%" y="613" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="623.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="54.7503%" y="597" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="607.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="54.7503%" y="581" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="591.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="54.7503%" y="565" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="575.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="54.7503%" y="549" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="559.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="54.7503%" y="533" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="543.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="54.7503%" y="517" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="527.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="54.7503%" y="501" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="511.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="54.7503%" y="485" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="495.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="54.7503%" y="469" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="479.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="54.7503%" y="453" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="463.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="54.7503%" y="437" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="8552" fg:w="2"/><text x="54.9646%" y="447.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (3 samples, 0.02%)</title><rect x="54.7631%" y="757" width="0.0192%" height="15" fill="rgb(206,71,40)" fg:x="8554" fg:w="3"/><text x="54.9774%" y="767.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (2 samples, 0.01%)</title><rect x="54.7823%" y="757" width="0.0128%" height="15" fill="rgb(207,181,27)" fg:x="8557" fg:w="2"/><text x="54.9966%" y="767.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="55.2817%" y="405" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="8635" fg:w="2"/><text x="55.4960%" y="415.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="55.2817%" y="389" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="8635" fg:w="2"/><text x="55.4960%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.02%)</title><rect x="55.2817%" y="437" width="0.0192%" height="15" fill="rgb(226,88,38)" fg:x="8635" fg:w="3"/><text x="55.4960%" y="447.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.02%)</title><rect x="55.2817%" y="421" width="0.0192%" height="15" fill="rgb(236,72,36)" fg:x="8635" fg:w="3"/><text x="55.4960%" y="431.50"></text></g><g><title>napi_complete_done (5 samples, 0.03%)</title><rect x="55.2817%" y="613" width="0.0320%" height="15" fill="rgb(226,216,13)" fg:x="8635" fg:w="5"/><text x="55.4960%" y="623.50"></text></g><g><title>netif_receive_skb_list_internal (5 samples, 0.03%)</title><rect x="55.2817%" y="597" width="0.0320%" height="15" fill="rgb(216,153,44)" fg:x="8635" fg:w="5"/><text x="55.4960%" y="607.50"></text></g><g><title>__netif_receive_skb_list_core (5 samples, 0.03%)</title><rect x="55.2817%" y="581" width="0.0320%" height="15" fill="rgb(227,176,26)" fg:x="8635" fg:w="5"/><text x="55.4960%" y="591.50"></text></g><g><title>ip_list_rcv (5 samples, 0.03%)</title><rect x="55.2817%" y="565" width="0.0320%" height="15" fill="rgb(215,38,16)" fg:x="8635" fg:w="5"/><text x="55.4960%" y="575.50"></text></g><g><title>ip_sublist_rcv (5 samples, 0.03%)</title><rect x="55.2817%" y="549" width="0.0320%" height="15" fill="rgb(207,166,9)" fg:x="8635" fg:w="5"/><text x="55.4960%" y="559.50"></text></g><g><title>ip_sublist_rcv_finish (5 samples, 0.03%)</title><rect x="55.2817%" y="533" width="0.0320%" height="15" fill="rgb(223,178,14)" fg:x="8635" fg:w="5"/><text x="55.4960%" y="543.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.03%)</title><rect x="55.2817%" y="517" width="0.0320%" height="15" fill="rgb(220,94,29)" fg:x="8635" fg:w="5"/><text x="55.4960%" y="527.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.03%)</title><rect x="55.2817%" y="501" width="0.0320%" height="15" fill="rgb(207,19,13)" fg:x="8635" fg:w="5"/><text x="55.4960%" y="511.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.03%)</title><rect x="55.2817%" y="485" width="0.0320%" height="15" fill="rgb(224,38,0)" fg:x="8635" fg:w="5"/><text x="55.4960%" y="495.50"></text></g><g><title>tcp_v4_do_rcv (5 samples, 0.03%)</title><rect x="55.2817%" y="469" width="0.0320%" height="15" fill="rgb(228,220,18)" fg:x="8635" fg:w="5"/><text x="55.4960%" y="479.50"></text></g><g><title>tcp_rcv_established (5 samples, 0.03%)</title><rect x="55.2817%" y="453" width="0.0320%" height="15" fill="rgb(224,50,47)" fg:x="8635" fg:w="5"/><text x="55.4960%" y="463.50"></text></g><g><title>tcp_ack (2 samples, 0.01%)</title><rect x="55.3009%" y="437" width="0.0128%" height="15" fill="rgb(213,228,3)" fg:x="8638" fg:w="2"/><text x="55.5152%" y="447.50"></text></g><g><title>asm_common_interrupt (8 samples, 0.05%)</title><rect x="55.2689%" y="741" width="0.0512%" height="15" fill="rgb(248,227,45)" fg:x="8633" fg:w="8"/><text x="55.4832%" y="751.50"></text></g><g><title>common_interrupt (8 samples, 0.05%)</title><rect x="55.2689%" y="725" width="0.0512%" height="15" fill="rgb(250,67,32)" fg:x="8633" fg:w="8"/><text x="55.4832%" y="735.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.04%)</title><rect x="55.2753%" y="709" width="0.0448%" height="15" fill="rgb(240,18,12)" fg:x="8634" fg:w="7"/><text x="55.4896%" y="719.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.04%)</title><rect x="55.2817%" y="693" width="0.0384%" height="15" fill="rgb(223,89,53)" fg:x="8635" fg:w="6"/><text x="55.4960%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (6 samples, 0.04%)</title><rect x="55.2817%" y="677" width="0.0384%" height="15" fill="rgb(208,184,36)" fg:x="8635" fg:w="6"/><text x="55.4960%" y="687.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.04%)</title><rect x="55.2817%" y="661" width="0.0384%" height="15" fill="rgb(249,91,22)" fg:x="8635" fg:w="6"/><text x="55.4960%" y="671.50"></text></g><g><title>net_rx_action (6 samples, 0.04%)</title><rect x="55.2817%" y="645" width="0.0384%" height="15" fill="rgb(231,11,52)" fg:x="8635" fg:w="6"/><text x="55.4960%" y="655.50"></text></g><g><title>virtnet_poll (6 samples, 0.04%)</title><rect x="55.2817%" y="629" width="0.0384%" height="15" fill="rgb(213,187,12)" fg:x="8635" fg:w="6"/><text x="55.4960%" y="639.50"></text></g><g><title>std::istream::read (2,788 samples, 17.85%)</title><rect x="37.4776%" y="773" width="17.8489%" height="15" fill="rgb(248,197,32)" fg:x="5854" fg:w="2788"/><text x="37.6919%" y="783.50">std::istream::read</text></g><g><title>std::istream::sentry::sentry (83 samples, 0.53%)</title><rect x="54.7951%" y="757" width="0.5314%" height="15" fill="rgb(232,168,44)" fg:x="8559" fg:w="83"/><text x="55.0094%" y="767.50"></text></g><g><title>std::queue&lt;std::istream*, std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt; &gt;::empty (10 samples, 0.06%)</title><rect x="55.3265%" y="773" width="0.0640%" height="15" fill="rgb(215,109,46)" fg:x="8642" fg:w="10"/><text x="55.5408%" y="783.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::empty (8 samples, 0.05%)</title><rect x="55.3393%" y="757" width="0.0512%" height="15" fill="rgb(248,132,21)" fg:x="8644" fg:w="8"/><text x="55.5536%" y="767.50"></text></g><g><title>std::operator== (2 samples, 0.01%)</title><rect x="55.3777%" y="741" width="0.0128%" height="15" fill="rgb(230,67,18)" fg:x="8650" fg:w="2"/><text x="55.5920%" y="751.50"></text></g><g><title>AConnection::onPollOut (6,230 samples, 39.88%)</title><rect x="15.7042%" y="789" width="39.8848%" height="15" fill="rgb(247,1,19)" fg:x="2453" fg:w="6230"/><text x="15.9185%" y="799.50">AConnection::onPollOut</text></g><g><title>std::queue&lt;std::istream*, std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt; &gt;::front (31 samples, 0.20%)</title><rect x="55.3905%" y="773" width="0.1985%" height="15" fill="rgb(228,85,38)" fg:x="8652" fg:w="31"/><text x="55.6048%" y="783.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::front (26 samples, 0.17%)</title><rect x="55.4225%" y="757" width="0.1665%" height="15" fill="rgb(205,23,33)" fg:x="8657" fg:w="26"/><text x="55.6368%" y="767.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::begin (19 samples, 0.12%)</title><rect x="55.4673%" y="741" width="0.1216%" height="15" fill="rgb(244,184,36)" fg:x="8664" fg:w="19"/><text x="55.6816%" y="751.50"></text></g><g><title>std::_Deque_iterator&lt;std::istream*, std::istream*&amp;, std::istream**&gt;::_Deque_iterator (14 samples, 0.09%)</title><rect x="55.4994%" y="725" width="0.0896%" height="15" fill="rgb(229,229,48)" fg:x="8669" fg:w="14"/><text x="55.7136%" y="735.50"></text></g><g><title>[[vdso]] (8 samples, 0.05%)</title><rect x="55.6530%" y="773" width="0.0512%" height="15" fill="rgb(229,169,17)" fg:x="8693" fg:w="8"/><text x="55.8673%" y="783.50"></text></g><g><title>__vdso_gettimeofday (18 samples, 0.12%)</title><rect x="55.5954%" y="789" width="0.1152%" height="15" fill="rgb(246,114,18)" fg:x="8684" fg:w="18"/><text x="55.8097%" y="799.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="55.7234%" y="661" width="0.0192%" height="15" fill="rgb(226,216,13)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="671.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="55.7234%" y="645" width="0.0192%" height="15" fill="rgb(216,153,44)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="655.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="55.7234%" y="629" width="0.0192%" height="15" fill="rgb(227,176,26)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="639.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="55.7234%" y="613" width="0.0192%" height="15" fill="rgb(215,38,16)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="623.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="55.7234%" y="597" width="0.0192%" height="15" fill="rgb(207,166,9)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="607.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="55.7234%" y="581" width="0.0192%" height="15" fill="rgb(223,178,14)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="591.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="55.7234%" y="565" width="0.0192%" height="15" fill="rgb(220,94,29)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="575.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.02%)</title><rect x="55.7234%" y="549" width="0.0192%" height="15" fill="rgb(207,19,13)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="559.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="55.7234%" y="533" width="0.0192%" height="15" fill="rgb(224,38,0)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="543.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="55.7234%" y="517" width="0.0192%" height="15" fill="rgb(228,220,18)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="527.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.02%)</title><rect x="55.7234%" y="501" width="0.0192%" height="15" fill="rgb(224,50,47)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.02%)</title><rect x="55.7234%" y="485" width="0.0192%" height="15" fill="rgb(226,88,38)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="495.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.02%)</title><rect x="55.7234%" y="469" width="0.0192%" height="15" fill="rgb(236,72,36)" fg:x="8704" fg:w="3"/><text x="55.9377%" y="479.50"></text></g><g><title>net_rx_action (5 samples, 0.03%)</title><rect x="55.7234%" y="693" width="0.0320%" height="15" fill="rgb(231,11,52)" fg:x="8704" fg:w="5"/><text x="55.9377%" y="703.50"></text></g><g><title>virtnet_poll (5 samples, 0.03%)</title><rect x="55.7234%" y="677" width="0.0320%" height="15" fill="rgb(213,187,12)" fg:x="8704" fg:w="5"/><text x="55.9377%" y="687.50"></text></g><g><title>try_fill_recv (2 samples, 0.01%)</title><rect x="55.7426%" y="661" width="0.0128%" height="15" fill="rgb(209,67,13)" fg:x="8707" fg:w="2"/><text x="55.9569%" y="671.50"></text></g><g><title>AConnection::onPollEvent (6,909 samples, 44.23%)</title><rect x="11.5301%" y="805" width="44.2318%" height="15" fill="rgb(240,200,10)" fg:x="1801" fg:w="6909"/><text x="11.7444%" y="815.50">AConnection::onPollEvent</text></g><g><title>asm_common_interrupt (8 samples, 0.05%)</title><rect x="55.7106%" y="789" width="0.0512%" height="15" fill="rgb(248,227,45)" fg:x="8702" fg:w="8"/><text x="55.9249%" y="799.50"></text></g><g><title>common_interrupt (8 samples, 0.05%)</title><rect x="55.7106%" y="773" width="0.0512%" height="15" fill="rgb(250,67,32)" fg:x="8702" fg:w="8"/><text x="55.9249%" y="783.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.04%)</title><rect x="55.7234%" y="757" width="0.0384%" height="15" fill="rgb(240,18,12)" fg:x="8704" fg:w="6"/><text x="55.9377%" y="767.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.04%)</title><rect x="55.7234%" y="741" width="0.0384%" height="15" fill="rgb(223,89,53)" fg:x="8704" fg:w="6"/><text x="55.9377%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (6 samples, 0.04%)</title><rect x="55.7234%" y="725" width="0.0384%" height="15" fill="rgb(208,184,36)" fg:x="8704" fg:w="6"/><text x="55.9377%" y="735.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.04%)</title><rect x="55.7234%" y="709" width="0.0384%" height="15" fill="rgb(249,91,22)" fg:x="8704" fg:w="6"/><text x="55.9377%" y="719.50"></text></g><g><title>Address::Address (20 samples, 0.13%)</title><rect x="56.0435%" y="789" width="0.1280%" height="15" fill="rgb(231,26,17)" fg:x="8754" fg:w="20"/><text x="56.2578%" y="799.50"></text></g><g><title>Address::size (3 samples, 0.02%)</title><rect x="56.1780%" y="789" width="0.0192%" height="15" fill="rgb(226,158,7)" fg:x="8775" fg:w="3"/><text x="56.3923%" y="799.50"></text></g><g><title>Address::~Address (12 samples, 0.08%)</title><rect x="56.1972%" y="789" width="0.0768%" height="15" fill="rgb(211,197,29)" fg:x="8778" fg:w="12"/><text x="56.4115%" y="799.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="56.2612%" y="773" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="8788" fg:w="2"/><text x="56.4755%" y="783.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="56.2612%" y="757" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="8788" fg:w="2"/><text x="56.4755%" y="767.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="56.2612%" y="741" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="8788" fg:w="2"/><text x="56.4755%" y="751.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="56.2612%" y="725" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="8788" fg:w="2"/><text x="56.4755%" y="735.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="56.2612%" y="709" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="8788" fg:w="2"/><text x="56.4755%" y="719.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="56.2612%" y="693" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="8788" fg:w="2"/><text x="56.4755%" y="703.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="56.2612%" y="677" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="8788" fg:w="2"/><text x="56.4755%" y="687.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="56.2612%" y="661" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="8788" fg:w="2"/><text x="56.4755%" y="671.50"></text></g><g><title>__vdso_gettimeofday (12 samples, 0.08%)</title><rect x="56.2868%" y="757" width="0.0768%" height="15" fill="rgb(246,114,18)" fg:x="8792" fg:w="12"/><text x="56.5011%" y="767.50"></text></g><g><title>[[vdso]] (4 samples, 0.03%)</title><rect x="56.3380%" y="741" width="0.0256%" height="15" fill="rgb(229,169,17)" fg:x="8800" fg:w="4"/><text x="56.5523%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (8 samples, 0.05%)</title><rect x="56.3636%" y="757" width="0.0512%" height="15" fill="rgb(244,92,22)" fg:x="8804" fg:w="8"/><text x="56.5779%" y="767.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::istream**&gt;, std::istream**&gt;::allocate (8 samples, 0.05%)</title><rect x="56.4469%" y="693" width="0.0512%" height="15" fill="rgb(252,63,4)" fg:x="8817" fg:w="8"/><text x="56.6611%" y="703.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::istream**&gt;::allocate (7 samples, 0.04%)</title><rect x="56.4533%" y="677" width="0.0448%" height="15" fill="rgb(243,119,12)" fg:x="8818" fg:w="7"/><text x="56.6676%" y="687.50"></text></g><g><title>operator new (5 samples, 0.03%)</title><rect x="56.4661%" y="661" width="0.0320%" height="15" fill="rgb(214,91,1)" fg:x="8820" fg:w="5"/><text x="56.6804%" y="671.50"></text></g><g><title>__libc_malloc (5 samples, 0.03%)</title><rect x="56.4661%" y="645" width="0.0320%" height="15" fill="rgb(232,24,50)" fg:x="8820" fg:w="5"/><text x="56.6804%" y="655.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_allocate_map (12 samples, 0.08%)</title><rect x="56.4405%" y="709" width="0.0768%" height="15" fill="rgb(205,38,48)" fg:x="8816" fg:w="12"/><text x="56.6547%" y="719.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_get_map_allocator (3 samples, 0.02%)</title><rect x="56.4981%" y="693" width="0.0192%" height="15" fill="rgb(253,49,30)" fg:x="8825" fg:w="3"/><text x="56.7124%" y="703.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_create_nodes (8 samples, 0.05%)</title><rect x="56.5173%" y="709" width="0.0512%" height="15" fill="rgb(250,9,24)" fg:x="8828" fg:w="8"/><text x="56.7316%" y="719.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_allocate_node (8 samples, 0.05%)</title><rect x="56.5173%" y="693" width="0.0512%" height="15" fill="rgb(219,164,11)" fg:x="8828" fg:w="8"/><text x="56.7316%" y="703.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::istream*&gt;, std::istream*&gt;::allocate (8 samples, 0.05%)</title><rect x="56.5173%" y="677" width="0.0512%" height="15" fill="rgb(207,221,17)" fg:x="8828" fg:w="8"/><text x="56.7316%" y="687.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::istream*&gt;::allocate (8 samples, 0.05%)</title><rect x="56.5173%" y="661" width="0.0512%" height="15" fill="rgb(223,1,8)" fg:x="8828" fg:w="8"/><text x="56.7316%" y="671.50"></text></g><g><title>operator new (8 samples, 0.05%)</title><rect x="56.5173%" y="645" width="0.0512%" height="15" fill="rgb(214,91,1)" fg:x="8828" fg:w="8"/><text x="56.7316%" y="655.50"></text></g><g><title>__libc_malloc (8 samples, 0.05%)</title><rect x="56.5173%" y="629" width="0.0512%" height="15" fill="rgb(232,24,50)" fg:x="8828" fg:w="8"/><text x="56.7316%" y="639.50"></text></g><g><title>std::__deque_buf_size (3 samples, 0.02%)</title><rect x="56.5749%" y="709" width="0.0192%" height="15" fill="rgb(248,162,21)" fg:x="8837" fg:w="3"/><text x="56.7892%" y="719.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::deque (32 samples, 0.20%)</title><rect x="56.4149%" y="757" width="0.2049%" height="15" fill="rgb(214,189,43)" fg:x="8812" fg:w="32"/><text x="56.6291%" y="767.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_Deque_base (32 samples, 0.20%)</title><rect x="56.4149%" y="741" width="0.2049%" height="15" fill="rgb(219,110,47)" fg:x="8812" fg:w="32"/><text x="56.6291%" y="751.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_initialize_map (29 samples, 0.19%)</title><rect x="56.4341%" y="725" width="0.1857%" height="15" fill="rgb(218,34,14)" fg:x="8815" fg:w="29"/><text x="56.6483%" y="735.50"></text></g><g><title>std::max&lt;unsigned long&gt; (4 samples, 0.03%)</title><rect x="56.5941%" y="709" width="0.0256%" height="15" fill="rgb(206,187,54)" fg:x="8840" fg:w="4"/><text x="56.8084%" y="719.50"></text></g><g><title>cfree (2 samples, 0.01%)</title><rect x="56.6261%" y="661" width="0.0128%" height="15" fill="rgb(221,14,53)" fg:x="8845" fg:w="2"/><text x="56.8404%" y="671.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::~deque (7 samples, 0.04%)</title><rect x="56.6197%" y="757" width="0.0448%" height="15" fill="rgb(205,72,24)" fg:x="8844" fg:w="7"/><text x="56.8340%" y="767.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::~_Deque_base (7 samples, 0.04%)</title><rect x="56.6197%" y="741" width="0.0448%" height="15" fill="rgb(206,190,42)" fg:x="8844" fg:w="7"/><text x="56.8340%" y="751.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_destroy_nodes (6 samples, 0.04%)</title><rect x="56.6261%" y="725" width="0.0384%" height="15" fill="rgb(235,186,7)" fg:x="8845" fg:w="6"/><text x="56.8404%" y="735.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_deallocate_node (6 samples, 0.04%)</title><rect x="56.6261%" y="709" width="0.0384%" height="15" fill="rgb(210,125,6)" fg:x="8845" fg:w="6"/><text x="56.8404%" y="719.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::istream*&gt;, std::istream*&gt;::deallocate (6 samples, 0.04%)</title><rect x="56.6261%" y="693" width="0.0384%" height="15" fill="rgb(243,30,27)" fg:x="8845" fg:w="6"/><text x="56.8404%" y="703.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::istream*&gt;::deallocate (6 samples, 0.04%)</title><rect x="56.6261%" y="677" width="0.0384%" height="15" fill="rgb(225,209,3)" fg:x="8845" fg:w="6"/><text x="56.8404%" y="687.50"></text></g><g><title>free@plt (4 samples, 0.03%)</title><rect x="56.6389%" y="661" width="0.0256%" height="15" fill="rgb(250,84,38)" fg:x="8847" fg:w="4"/><text x="56.8532%" y="671.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_Deque_base (5 samples, 0.03%)</title><rect x="56.6645%" y="725" width="0.0320%" height="15" fill="rgb(219,110,47)" fg:x="8851" fg:w="5"/><text x="56.8788%" y="735.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_initialize_map (4 samples, 0.03%)</title><rect x="56.6709%" y="709" width="0.0256%" height="15" fill="rgb(218,34,14)" fg:x="8852" fg:w="4"/><text x="56.8852%" y="719.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::_Deque_iterator&lt;std::istream*, std::istream* const&amp;, std::istream* const*&gt;, std::_Deque_iterator&lt;std::istream*, std::istream*&amp;, std::istream**&gt;, std::istream*&gt; (2 samples, 0.01%)</title><rect x="56.6965%" y="725" width="0.0128%" height="15" fill="rgb(242,106,44)" fg:x="8856" fg:w="2"/><text x="56.9108%" y="735.50"></text></g><g><title>std::uninitialized_copy&lt;std::_Deque_iterator&lt;std::istream*, std::istream* const&amp;, std::istream* const*&gt;, std::_Deque_iterator&lt;std::istream*, std::istream*&amp;, std::istream**&gt; &gt; (2 samples, 0.01%)</title><rect x="56.6965%" y="709" width="0.0128%" height="15" fill="rgb(230,68,7)" fg:x="8856" fg:w="2"/><text x="56.9108%" y="719.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::_Deque_iterator&lt;std::istream*, std::istream* const&amp;, std::istream* const*&gt;, std::_Deque_iterator&lt;std::istream*, std::istream*&amp;, std::istream**&gt; &gt; (2 samples, 0.01%)</title><rect x="56.6965%" y="693" width="0.0128%" height="15" fill="rgb(212,209,5)" fg:x="8856" fg:w="2"/><text x="56.9108%" y="703.50"></text></g><g><title>AConnection::AConnection (71 samples, 0.45%)</title><rect x="56.2804%" y="773" width="0.4545%" height="15" fill="rgb(220,125,44)" fg:x="8791" fg:w="71"/><text x="56.4947%" y="783.50"></text></g><g><title>std::queue&lt;std::istream*, std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt; &gt;::queue (11 samples, 0.07%)</title><rect x="56.6645%" y="757" width="0.0704%" height="15" fill="rgb(210,14,43)" fg:x="8851" fg:w="11"/><text x="56.8788%" y="767.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::deque (11 samples, 0.07%)</title><rect x="56.6645%" y="741" width="0.0704%" height="15" fill="rgb(214,189,43)" fg:x="8851" fg:w="11"/><text x="56.8788%" y="751.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::size (3 samples, 0.02%)</title><rect x="56.7157%" y="725" width="0.0192%" height="15" fill="rgb(240,148,44)" fg:x="8859" fg:w="3"/><text x="56.9300%" y="735.50"></text></g><g><title>Address::operator= (2 samples, 0.01%)</title><rect x="56.7350%" y="773" width="0.0128%" height="15" fill="rgb(210,206,20)" fg:x="8862" fg:w="2"/><text x="56.9492%" y="783.50"></text></g><g><title>File::File (2 samples, 0.01%)</title><rect x="56.7478%" y="773" width="0.0128%" height="15" fill="rgb(248,0,51)" fg:x="8864" fg:w="2"/><text x="56.9620%" y="783.50"></text></g><g><title>__fdget_pos (4 samples, 0.03%)</title><rect x="56.8054%" y="677" width="0.0256%" height="15" fill="rgb(205,61,45)" fg:x="8873" fg:w="4"/><text x="57.0197%" y="687.50"></text></g><g><title>__fget_light (3 samples, 0.02%)</title><rect x="56.8118%" y="661" width="0.0192%" height="15" fill="rgb(243,103,32)" fg:x="8874" fg:w="3"/><text x="57.0261%" y="671.50"></text></g><g><title>ext4_generic_write_checks (3 samples, 0.02%)</title><rect x="56.8694%" y="629" width="0.0192%" height="15" fill="rgb(212,86,33)" fg:x="8883" fg:w="3"/><text x="57.0837%" y="639.50"></text></g><g><title>generic_write_checks (3 samples, 0.02%)</title><rect x="56.8694%" y="613" width="0.0192%" height="15" fill="rgb(220,18,45)" fg:x="8883" fg:w="3"/><text x="57.0837%" y="623.50"></text></g><g><title>file_modified (2 samples, 0.01%)</title><rect x="56.8886%" y="629" width="0.0128%" height="15" fill="rgb(231,34,43)" fg:x="8886" fg:w="2"/><text x="57.1029%" y="639.50"></text></g><g><title>file_remove_privs (2 samples, 0.01%)</title><rect x="56.8886%" y="613" width="0.0128%" height="15" fill="rgb(252,38,21)" fg:x="8886" fg:w="2"/><text x="57.1029%" y="623.50"></text></g><g><title>__mnt_want_write_file (2 samples, 0.01%)</title><rect x="56.9078%" y="613" width="0.0128%" height="15" fill="rgb(239,224,38)" fg:x="8889" fg:w="2"/><text x="57.1221%" y="623.50"></text></g><g><title>kmem_cache_free (2 samples, 0.01%)</title><rect x="56.9590%" y="549" width="0.0128%" height="15" fill="rgb(225,137,16)" fg:x="8897" fg:w="2"/><text x="57.1733%" y="559.50"></text></g><g><title>__ext4_journal_stop (6 samples, 0.04%)</title><rect x="56.9462%" y="581" width="0.0384%" height="15" fill="rgb(225,40,54)" fg:x="8895" fg:w="6"/><text x="57.1605%" y="591.50"></text></g><g><title>jbd2_journal_stop (5 samples, 0.03%)</title><rect x="56.9526%" y="565" width="0.0320%" height="15" fill="rgb(229,91,7)" fg:x="8896" fg:w="5"/><text x="57.1669%" y="575.50"></text></g><g><title>stop_this_handle (2 samples, 0.01%)</title><rect x="56.9718%" y="549" width="0.0128%" height="15" fill="rgb(240,3,51)" fg:x="8899" fg:w="2"/><text x="57.1861%" y="559.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.01%)</title><rect x="56.9718%" y="533" width="0.0128%" height="15" fill="rgb(248,80,4)" fg:x="8899" fg:w="2"/><text x="57.1861%" y="543.50"></text></g><g><title>ext4_journal_check_start (3 samples, 0.02%)</title><rect x="57.0423%" y="549" width="0.0192%" height="15" fill="rgb(220,195,41)" fg:x="8910" fg:w="3"/><text x="57.2565%" y="559.50"></text></g><g><title>kmem_cache_alloc (11 samples, 0.07%)</title><rect x="57.0807%" y="533" width="0.0704%" height="15" fill="rgb(223,51,51)" fg:x="8916" fg:w="11"/><text x="57.2950%" y="543.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (4 samples, 0.03%)</title><rect x="57.1255%" y="517" width="0.0256%" height="15" fill="rgb(212,11,50)" fg:x="8923" fg:w="4"/><text x="57.3398%" y="527.50"></text></g><g><title>__ext4_journal_start_sb (25 samples, 0.16%)</title><rect x="57.0166%" y="565" width="0.1601%" height="15" fill="rgb(251,66,45)" fg:x="8906" fg:w="25"/><text x="57.2309%" y="575.50"></text></g><g><title>jbd2__journal_start (18 samples, 0.12%)</title><rect x="57.0615%" y="549" width="0.1152%" height="15" fill="rgb(212,174,30)" fg:x="8913" fg:w="18"/><text x="57.2757%" y="559.50"></text></g><g><title>start_this_handle (4 samples, 0.03%)</title><rect x="57.1511%" y="533" width="0.0256%" height="15" fill="rgb(247,124,24)" fg:x="8927" fg:w="4"/><text x="57.3654%" y="543.50"></text></g><g><title>add_transaction_credits (4 samples, 0.03%)</title><rect x="57.1511%" y="517" width="0.0256%" height="15" fill="rgb(225,129,44)" fg:x="8927" fg:w="4"/><text x="57.3654%" y="527.50"></text></g><g><title>ext4_fc_track_inode (8 samples, 0.05%)</title><rect x="57.2343%" y="533" width="0.0512%" height="15" fill="rgb(206,21,50)" fg:x="8940" fg:w="8"/><text x="57.4486%" y="543.50"></text></g><g><title>ext4_fc_track_template (3 samples, 0.02%)</title><rect x="57.2663%" y="517" width="0.0192%" height="15" fill="rgb(209,95,52)" fg:x="8945" fg:w="3"/><text x="57.4806%" y="527.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="57.2727%" y="501" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="8946" fg:w="2"/><text x="57.4870%" y="511.50"></text></g><g><title>ext4_mark_iloc_dirty (16 samples, 0.10%)</title><rect x="57.1895%" y="549" width="0.1024%" height="15" fill="rgb(236,133,21)" fg:x="8933" fg:w="16"/><text x="57.4038%" y="559.50"></text></g><g><title>__ext4_journal_get_write_access (6 samples, 0.04%)</title><rect x="57.3047%" y="533" width="0.0384%" height="15" fill="rgb(219,28,3)" fg:x="8951" fg:w="6"/><text x="57.5190%" y="543.50"></text></g><g><title>jbd2_journal_get_write_access (3 samples, 0.02%)</title><rect x="57.3239%" y="517" width="0.0192%" height="15" fill="rgb(238,71,44)" fg:x="8954" fg:w="3"/><text x="57.5382%" y="527.50"></text></g><g><title>jbd2_write_access_granted.part.0 (2 samples, 0.01%)</title><rect x="57.3303%" y="501" width="0.0128%" height="15" fill="rgb(250,139,4)" fg:x="8955" fg:w="2"/><text x="57.5446%" y="511.50"></text></g><g><title>__getblk_gfp (7 samples, 0.04%)</title><rect x="57.3752%" y="501" width="0.0448%" height="15" fill="rgb(223,110,34)" fg:x="8962" fg:w="7"/><text x="57.5894%" y="511.50"></text></g><g><title>__find_get_block (7 samples, 0.04%)</title><rect x="57.3752%" y="485" width="0.0448%" height="15" fill="rgb(254,214,1)" fg:x="8962" fg:w="7"/><text x="57.5894%" y="495.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="57.4200%" y="501" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="8969" fg:w="2"/><text x="57.6343%" y="511.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="57.4200%" y="485" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="8969" fg:w="2"/><text x="57.6343%" y="495.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="57.4200%" y="469" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="8969" fg:w="2"/><text x="57.6343%" y="479.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="57.4200%" y="453" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="8969" fg:w="2"/><text x="57.6343%" y="463.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="57.4200%" y="437" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="8969" fg:w="2"/><text x="57.6343%" y="447.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="57.4200%" y="421" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="8969" fg:w="2"/><text x="57.6343%" y="431.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="57.4200%" y="405" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="8969" fg:w="2"/><text x="57.6343%" y="415.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="57.4200%" y="389" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="8969" fg:w="2"/><text x="57.6343%" y="399.50"></text></g><g><title>ext4_get_group_desc (5 samples, 0.03%)</title><rect x="57.4328%" y="501" width="0.0320%" height="15" fill="rgb(222,172,27)" fg:x="8971" fg:w="5"/><text x="57.6471%" y="511.50"></text></g><g><title>__ext4_mark_inode_dirty (47 samples, 0.30%)</title><rect x="57.1767%" y="565" width="0.3009%" height="15" fill="rgb(250,159,10)" fg:x="8931" fg:w="47"/><text x="57.3910%" y="575.50"></text></g><g><title>ext4_reserve_inode_write (29 samples, 0.19%)</title><rect x="57.2919%" y="549" width="0.1857%" height="15" fill="rgb(232,18,0)" fg:x="8949" fg:w="29"/><text x="57.5062%" y="559.50"></text></g><g><title>ext4_get_inode_loc (20 samples, 0.13%)</title><rect x="57.3496%" y="533" width="0.1280%" height="15" fill="rgb(251,31,11)" fg:x="8958" fg:w="20"/><text x="57.5638%" y="543.50"></text></g><g><title>__ext4_get_inode_loc (19 samples, 0.12%)</title><rect x="57.3560%" y="517" width="0.1216%" height="15" fill="rgb(231,98,31)" fg:x="8959" fg:w="19"/><text x="57.5702%" y="527.50"></text></g><g><title>ext4_inode_table (2 samples, 0.01%)</title><rect x="57.4648%" y="501" width="0.0128%" height="15" fill="rgb(226,189,26)" fg:x="8976" fg:w="2"/><text x="57.6791%" y="511.50"></text></g><g><title>file_update_time (92 samples, 0.59%)</title><rect x="56.9014%" y="629" width="0.5890%" height="15" fill="rgb(237,12,27)" fg:x="8888" fg:w="92"/><text x="57.1157%" y="639.50"></text></g><g><title>generic_update_time (88 samples, 0.56%)</title><rect x="56.9270%" y="613" width="0.5634%" height="15" fill="rgb(212,0,0)" fg:x="8892" fg:w="88"/><text x="57.1413%" y="623.50"></text></g><g><title>__mark_inode_dirty (87 samples, 0.56%)</title><rect x="56.9334%" y="597" width="0.5570%" height="15" fill="rgb(212,91,54)" fg:x="8893" fg:w="87"/><text x="57.1477%" y="607.50"></text></g><g><title>ext4_dirty_inode (78 samples, 0.50%)</title><rect x="56.9910%" y="581" width="0.4994%" height="15" fill="rgb(235,194,15)" fg:x="8902" fg:w="78"/><text x="57.2053%" y="591.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="57.4776%" y="565" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="8978" fg:w="2"/><text x="57.6919%" y="575.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="57.4776%" y="549" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="8978" fg:w="2"/><text x="57.6919%" y="559.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="57.4776%" y="533" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="8978" fg:w="2"/><text x="57.6919%" y="543.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="57.4776%" y="517" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="8978" fg:w="2"/><text x="57.6919%" y="527.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="57.4776%" y="501" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="8978" fg:w="2"/><text x="57.6919%" y="511.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="57.4776%" y="485" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="8978" fg:w="2"/><text x="57.6919%" y="495.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="57.4776%" y="469" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="8978" fg:w="2"/><text x="57.6919%" y="479.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="57.4776%" y="453" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="8978" fg:w="2"/><text x="57.6919%" y="463.50"></text></g><g><title>__radix_tree_lookup (7 samples, 0.04%)</title><rect x="57.5736%" y="597" width="0.0448%" height="15" fill="rgb(250,213,26)" fg:x="8993" fg:w="7"/><text x="57.7879%" y="607.50"></text></g><g><title>balance_dirty_pages_ratelimited (18 samples, 0.12%)</title><rect x="57.5096%" y="613" width="0.1152%" height="15" fill="rgb(221,121,40)" fg:x="8983" fg:w="18"/><text x="57.7239%" y="623.50"></text></g><g><title>kmem_cache_alloc (2 samples, 0.01%)</title><rect x="57.6440%" y="565" width="0.0128%" height="15" fill="rgb(223,51,51)" fg:x="9004" fg:w="2"/><text x="57.8583%" y="575.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.01%)</title><rect x="57.6440%" y="549" width="0.0128%" height="15" fill="rgb(212,11,50)" fg:x="9004" fg:w="2"/><text x="57.8583%" y="559.50"></text></g><g><title>__ext4_journal_start_sb (4 samples, 0.03%)</title><rect x="57.6376%" y="597" width="0.0256%" height="15" fill="rgb(251,66,45)" fg:x="9003" fg:w="4"/><text x="57.8519%" y="607.50"></text></g><g><title>jbd2__journal_start (4 samples, 0.03%)</title><rect x="57.6376%" y="581" width="0.0256%" height="15" fill="rgb(212,174,30)" fg:x="9003" fg:w="4"/><text x="57.8519%" y="591.50"></text></g><g><title>ext4_block_write_begin (4 samples, 0.03%)</title><rect x="57.6697%" y="597" width="0.0256%" height="15" fill="rgb(218,63,41)" fg:x="9008" fg:w="4"/><text x="57.8839%" y="607.50"></text></g><g><title>ext4_nonda_switch (4 samples, 0.03%)</title><rect x="57.6953%" y="597" width="0.0256%" height="15" fill="rgb(254,54,14)" fg:x="9012" fg:w="4"/><text x="57.9095%" y="607.50"></text></g><g><title>pagecache_get_page (15 samples, 0.10%)</title><rect x="57.7273%" y="581" width="0.0960%" height="15" fill="rgb(254,146,25)" fg:x="9017" fg:w="15"/><text x="57.9416%" y="591.50"></text></g><g><title>find_get_entry (12 samples, 0.08%)</title><rect x="57.7465%" y="565" width="0.0768%" height="15" fill="rgb(232,175,34)" fg:x="9020" fg:w="12"/><text x="57.9608%" y="575.50"></text></g><g><title>xas_load (9 samples, 0.06%)</title><rect x="57.7657%" y="549" width="0.0576%" height="15" fill="rgb(249,146,47)" fg:x="9023" fg:w="9"/><text x="57.9800%" y="559.50"></text></g><g><title>xas_start (3 samples, 0.02%)</title><rect x="57.8041%" y="533" width="0.0192%" height="15" fill="rgb(249,53,40)" fg:x="9029" fg:w="3"/><text x="58.0184%" y="543.50"></text></g><g><title>grab_cache_page_write_begin (17 samples, 0.11%)</title><rect x="57.7209%" y="597" width="0.1088%" height="15" fill="rgb(221,143,40)" fg:x="9016" fg:w="17"/><text x="57.9352%" y="607.50"></text></g><g><title>ext4_da_write_begin (34 samples, 0.22%)</title><rect x="57.6248%" y="613" width="0.2177%" height="15" fill="rgb(235,31,43)" fg:x="9001" fg:w="34"/><text x="57.8391%" y="623.50"></text></g><g><title>unlock_page (2 samples, 0.01%)</title><rect x="57.8297%" y="597" width="0.0128%" height="15" fill="rgb(250,162,14)" fg:x="9033" fg:w="2"/><text x="58.0440%" y="607.50"></text></g><g><title>__ext4_journal_stop (3 samples, 0.02%)</title><rect x="57.8425%" y="597" width="0.0192%" height="15" fill="rgb(225,40,54)" fg:x="9035" fg:w="3"/><text x="58.0568%" y="607.50"></text></g><g><title>jbd2_journal_stop (3 samples, 0.02%)</title><rect x="57.8425%" y="581" width="0.0192%" height="15" fill="rgb(229,91,7)" fg:x="9035" fg:w="3"/><text x="58.0568%" y="591.50"></text></g><g><title>stop_this_handle (2 samples, 0.01%)</title><rect x="57.8489%" y="565" width="0.0128%" height="15" fill="rgb(240,3,51)" fg:x="9036" fg:w="2"/><text x="58.0632%" y="575.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (2 samples, 0.01%)</title><rect x="57.8745%" y="581" width="0.0128%" height="15" fill="rgb(249,65,48)" fg:x="9040" fg:w="2"/><text x="58.0888%" y="591.50"></text></g><g><title>ext4_mark_iloc_dirty (3 samples, 0.02%)</title><rect x="57.9065%" y="533" width="0.0192%" height="15" fill="rgb(236,133,21)" fg:x="9045" fg:w="3"/><text x="58.1208%" y="543.50"></text></g><g><title>ext4_da_write_end (15 samples, 0.10%)</title><rect x="57.8425%" y="613" width="0.0960%" height="15" fill="rgb(230,92,14)" fg:x="9035" fg:w="15"/><text x="58.0568%" y="623.50"></text></g><g><title>generic_write_end (12 samples, 0.08%)</title><rect x="57.8617%" y="597" width="0.0768%" height="15" fill="rgb(207,107,21)" fg:x="9038" fg:w="12"/><text x="58.0760%" y="607.50"></text></g><g><title>__mark_inode_dirty (8 samples, 0.05%)</title><rect x="57.8873%" y="581" width="0.0512%" height="15" fill="rgb(212,91,54)" fg:x="9042" fg:w="8"/><text x="58.1016%" y="591.50"></text></g><g><title>ext4_dirty_inode (8 samples, 0.05%)</title><rect x="57.8873%" y="565" width="0.0512%" height="15" fill="rgb(235,194,15)" fg:x="9042" fg:w="8"/><text x="58.1016%" y="575.50"></text></g><g><title>__ext4_mark_inode_dirty (6 samples, 0.04%)</title><rect x="57.9001%" y="549" width="0.0384%" height="15" fill="rgb(250,159,10)" fg:x="9044" fg:w="6"/><text x="58.1144%" y="559.50"></text></g><g><title>ext4_reserve_inode_write (2 samples, 0.01%)</title><rect x="57.9257%" y="533" width="0.0128%" height="15" fill="rgb(232,18,0)" fg:x="9048" fg:w="2"/><text x="58.1400%" y="543.50"></text></g><g><title>iov_iter_advance (2 samples, 0.01%)</title><rect x="57.9385%" y="613" width="0.0128%" height="15" fill="rgb(250,37,39)" fg:x="9050" fg:w="2"/><text x="58.1528%" y="623.50"></text></g><g><title>iov_iter_copy_from_user_atomic (7 samples, 0.04%)</title><rect x="57.9513%" y="613" width="0.0448%" height="15" fill="rgb(233,17,49)" fg:x="9052" fg:w="7"/><text x="58.1656%" y="623.50"></text></g><g><title>copy_user_generic_string (6 samples, 0.04%)</title><rect x="57.9577%" y="597" width="0.0384%" height="15" fill="rgb(233,29,30)" fg:x="9053" fg:w="6"/><text x="58.1720%" y="607.50"></text></g><g><title>ext4_buffered_write_iter (180 samples, 1.15%)</title><rect x="56.8502%" y="645" width="1.1524%" height="15" fill="rgb(214,47,26)" fg:x="8880" fg:w="180"/><text x="57.0645%" y="655.50"></text></g><g><title>generic_perform_write (80 samples, 0.51%)</title><rect x="57.4904%" y="629" width="0.5122%" height="15" fill="rgb(218,161,27)" fg:x="8980" fg:w="80"/><text x="57.7047%" y="639.50"></text></g><g><title>new_sync_write (185 samples, 1.18%)</title><rect x="56.8438%" y="661" width="1.1844%" height="15" fill="rgb(220,167,51)" fg:x="8879" fg:w="185"/><text x="57.0581%" y="671.50"></text></g><g><title>ext4_file_write_iter (4 samples, 0.03%)</title><rect x="58.0026%" y="645" width="0.0256%" height="15" fill="rgb(225,45,24)" fg:x="9060" fg:w="4"/><text x="58.2168%" y="655.50"></text></g><g><title>aa_file_perm (3 samples, 0.02%)</title><rect x="58.0346%" y="629" width="0.0192%" height="15" fill="rgb(208,101,21)" fg:x="9065" fg:w="3"/><text x="58.2489%" y="639.50"></text></g><g><title>ksys_write (198 samples, 1.27%)</title><rect x="56.7926%" y="693" width="1.2676%" height="15" fill="rgb(223,155,43)" fg:x="8871" fg:w="198"/><text x="57.0069%" y="703.50"></text></g><g><title>vfs_write (192 samples, 1.23%)</title><rect x="56.8310%" y="677" width="1.2292%" height="15" fill="rgb(216,184,13)" fg:x="8877" fg:w="192"/><text x="57.0453%" y="687.50"></text></g><g><title>security_file_permission (4 samples, 0.03%)</title><rect x="58.0346%" y="661" width="0.0256%" height="15" fill="rgb(224,58,37)" fg:x="9065" fg:w="4"/><text x="58.2489%" y="671.50"></text></g><g><title>apparmor_file_permission (4 samples, 0.03%)</title><rect x="58.0346%" y="645" width="0.0256%" height="15" fill="rgb(223,123,50)" fg:x="9065" fg:w="4"/><text x="58.2489%" y="655.50"></text></g><g><title>File::write (200 samples, 1.28%)</title><rect x="56.7862%" y="757" width="1.2804%" height="15" fill="rgb(221,56,14)" fg:x="8870" fg:w="200"/><text x="57.0005%" y="767.50"></text></g><g><title>__write (200 samples, 1.28%)</title><rect x="56.7862%" y="741" width="1.2804%" height="15" fill="rgb(227,101,21)" fg:x="8870" fg:w="200"/><text x="57.0005%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (199 samples, 1.27%)</title><rect x="56.7926%" y="725" width="1.2740%" height="15" fill="rgb(205,226,15)" fg:x="8871" fg:w="199"/><text x="57.0069%" y="735.50"></text></g><g><title>do_syscall_64 (199 samples, 1.27%)</title><rect x="56.7926%" y="709" width="1.2740%" height="15" fill="rgb(220,74,14)" fg:x="8871" fg:w="199"/><text x="57.0069%" y="719.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.05%)</title><rect x="58.1114%" y="725" width="0.0512%" height="15" fill="rgb(247,113,52)" fg:x="9077" fg:w="8"/><text x="58.3257%" y="735.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="58.1498%" y="709" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="719.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="58.1498%" y="693" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="703.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="58.1498%" y="677" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="687.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="58.1498%" y="661" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="58.1498%" y="645" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="655.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="58.1498%" y="629" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="639.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="58.1498%" y="613" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="623.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="58.1498%" y="597" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="607.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="58.1498%" y="581" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="591.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="58.1498%" y="565" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="575.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="58.1498%" y="549" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="559.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="58.1498%" y="533" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="543.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="58.1498%" y="517" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="527.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="58.1498%" y="501" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="511.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="58.1498%" y="485" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="495.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="58.1498%" y="469" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="479.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="58.1498%" y="453" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="463.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="58.1498%" y="437" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="447.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="58.1498%" y="421" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="9083" fg:w="2"/><text x="58.3641%" y="431.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.08%)</title><rect x="58.0858%" y="741" width="0.0832%" height="15" fill="rgb(247,113,52)" fg:x="9073" fg:w="13"/><text x="58.3001%" y="751.50"></text></g><g><title>endsWith (7 samples, 0.04%)</title><rect x="58.1818%" y="741" width="0.0448%" height="15" fill="rgb(245,132,52)" fg:x="9088" fg:w="7"/><text x="58.3961%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (6 samples, 0.04%)</title><rect x="58.1882%" y="725" width="0.0384%" height="15" fill="rgb(212,2,49)" fg:x="9089" fg:w="6"/><text x="58.4025%" y="735.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="58.2010%" y="709" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="9091" fg:w="4"/><text x="58.4153%" y="719.50"></text></g><g><title>gmtime (3 samples, 0.02%)</title><rect x="58.2266%" y="741" width="0.0192%" height="15" fill="rgb(211,141,50)" fg:x="9095" fg:w="3"/><text x="58.4409%" y="751.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="58.2971%" y="709" width="0.0320%" height="15" fill="rgb(247,113,52)" fg:x="9106" fg:w="5"/><text x="58.5113%" y="719.50"></text></g><g><title>getTime (43 samples, 0.28%)</title><rect x="58.0666%" y="757" width="0.2753%" height="15" fill="rgb(245,134,19)" fg:x="9070" fg:w="43"/><text x="58.2809%" y="767.50"></text></g><g><title>strftime_l (15 samples, 0.10%)</title><rect x="58.2458%" y="741" width="0.0960%" height="15" fill="rgb(247,36,6)" fg:x="9098" fg:w="15"/><text x="58.4601%" y="751.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.10%)</title><rect x="58.2458%" y="725" width="0.0960%" height="15" fill="rgb(247,113,52)" fg:x="9098" fg:w="15"/><text x="58.4601%" y="735.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="58.3291%" y="709" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="9111" fg:w="2"/><text x="58.5434%" y="719.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="58.3291%" y="693" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="9111" fg:w="2"/><text x="58.5434%" y="703.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="58.3291%" y="677" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="9111" fg:w="2"/><text x="58.5434%" y="687.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="58.3291%" y="661" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="9111" fg:w="2"/><text x="58.5434%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="58.3291%" y="645" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="9111" fg:w="2"/><text x="58.5434%" y="655.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="58.3291%" y="629" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="9111" fg:w="2"/><text x="58.5434%" y="639.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="58.3291%" y="613" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="9111" fg:w="2"/><text x="58.5434%" y="623.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="58.3291%" y="597" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="9111" fg:w="2"/><text x="58.5434%" y="607.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="58.3291%" y="581" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="9111" fg:w="2"/><text x="58.5434%" y="591.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="58.3291%" y="565" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="9111" fg:w="2"/><text x="58.5434%" y="575.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="58.3291%" y="549" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="9111" fg:w="2"/><text x="58.5434%" y="559.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (6 samples, 0.04%)</title><rect x="58.3483%" y="741" width="0.0384%" height="15" fill="rgb(216,50,33)" fg:x="9114" fg:w="6"/><text x="58.5626%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.03%)</title><rect x="58.3611%" y="725" width="0.0256%" height="15" fill="rgb(250,46,35)" fg:x="9116" fg:w="4"/><text x="58.5754%" y="735.50"></text></g><g><title>operator new (3 samples, 0.02%)</title><rect x="58.3675%" y="709" width="0.0192%" height="15" fill="rgb(214,91,1)" fg:x="9117" fg:w="3"/><text x="58.5818%" y="719.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="58.3675%" y="693" width="0.0192%" height="15" fill="rgb(232,24,50)" fg:x="9117" fg:w="3"/><text x="58.5818%" y="703.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.03%)</title><rect x="58.3867%" y="741" width="0.0256%" height="15" fill="rgb(254,182,12)" fg:x="9120" fg:w="4"/><text x="58.6010%" y="751.50"></text></g><g><title>operator new (3 samples, 0.02%)</title><rect x="58.3931%" y="725" width="0.0192%" height="15" fill="rgb(214,91,1)" fg:x="9121" fg:w="3"/><text x="58.6074%" y="735.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="58.3931%" y="709" width="0.0192%" height="15" fill="rgb(232,24,50)" fg:x="9121" fg:w="3"/><text x="58.6074%" y="719.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.02%)</title><rect x="58.4123%" y="741" width="0.0192%" height="15" fill="rgb(244,92,22)" fg:x="9124" fg:w="3"/><text x="58.6266%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="58.4315%" y="741" width="0.0128%" height="15" fill="rgb(211,92,40)" fg:x="9127" fg:w="2"/><text x="58.6458%" y="751.50"></text></g><g><title>Log::write (265 samples, 1.70%)</title><rect x="56.7606%" y="773" width="1.6965%" height="15" fill="rgb(230,27,54)" fg:x="8866" fg:w="265"/><text x="56.9748%" y="783.50">L..</text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (17 samples, 0.11%)</title><rect x="58.3483%" y="757" width="0.1088%" height="15" fill="rgb(226,32,40)" fg:x="9114" fg:w="17"/><text x="58.5626%" y="767.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (2 samples, 0.01%)</title><rect x="58.4443%" y="741" width="0.0128%" height="15" fill="rgb(231,225,8)" fg:x="9129" fg:w="2"/><text x="58.6586%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.02%)</title><rect x="58.5147%" y="741" width="0.0192%" height="15" fill="rgb(240,176,52)" fg:x="9140" fg:w="3"/><text x="58.7290%" y="751.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.04%)</title><rect x="58.5403%" y="725" width="0.0384%" height="15" fill="rgb(247,113,52)" fg:x="9144" fg:w="6"/><text x="58.7546%" y="735.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (8 samples, 0.05%)</title><rect x="58.5339%" y="741" width="0.0512%" height="15" fill="rgb(244,92,22)" fg:x="9143" fg:w="8"/><text x="58.7482%" y="751.50"></text></g><g><title>Uri::Uri (18 samples, 0.12%)</title><rect x="58.4763%" y="757" width="0.1152%" height="15" fill="rgb(239,171,0)" fg:x="9134" fg:w="18"/><text x="58.6906%" y="767.50"></text></g><g><title>std::_Rb_tree_header::_Rb_tree_header (3 samples, 0.02%)</title><rect x="58.6364%" y="709" width="0.0192%" height="15" fill="rgb(228,131,16)" fg:x="9159" fg:w="3"/><text x="58.8506%" y="719.50"></text></g><g><title>Request::Request (34 samples, 0.22%)</title><rect x="58.4571%" y="773" width="0.2177%" height="15" fill="rgb(236,207,40)" fg:x="9131" fg:w="34"/><text x="58.6714%" y="783.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map (13 samples, 0.08%)</title><rect x="58.5915%" y="757" width="0.0832%" height="15" fill="rgb(235,99,43)" fg:x="9152" fg:w="13"/><text x="58.8058%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree (11 samples, 0.07%)</title><rect x="58.6044%" y="741" width="0.0704%" height="15" fill="rgb(232,136,19)" fg:x="9154" fg:w="11"/><text x="58.8186%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;::_Rb_tree_impl (6 samples, 0.04%)</title><rect x="58.6364%" y="725" width="0.0384%" height="15" fill="rgb(249,6,43)" fg:x="9159" fg:w="6"/><text x="58.8506%" y="735.50"></text></g><g><title>std::_Rb_tree_key_compare&lt;std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_key_compare (3 samples, 0.02%)</title><rect x="58.6556%" y="709" width="0.0192%" height="15" fill="rgb(233,84,50)" fg:x="9162" fg:w="3"/><text x="58.8699%" y="719.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="58.6876%" y="773" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="9167" fg:w="2"/><text x="58.9019%" y="783.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="58.6876%" y="757" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="9167" fg:w="2"/><text x="58.9019%" y="767.50"></text></g><g><title>cfree (2 samples, 0.01%)</title><rect x="58.7004%" y="773" width="0.0128%" height="15" fill="rgb(221,14,53)" fg:x="9169" fg:w="2"/><text x="58.9147%" y="783.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.04%)</title><rect x="58.7196%" y="757" width="0.0384%" height="15" fill="rgb(247,113,52)" fg:x="9172" fg:w="6"/><text x="58.9339%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (8 samples, 0.05%)</title><rect x="58.7132%" y="773" width="0.0512%" height="15" fill="rgb(236,91,4)" fg:x="9171" fg:w="8"/><text x="58.9275%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.01%)</title><rect x="58.7644%" y="773" width="0.0128%" height="15" fill="rgb(233,7,30)" fg:x="9179" fg:w="2"/><text x="58.9787%" y="783.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="58.7644%" y="757" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="9179" fg:w="2"/><text x="58.9787%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4 samples, 0.03%)</title><rect x="58.7772%" y="757" width="0.0256%" height="15" fill="rgb(216,50,33)" fg:x="9181" fg:w="4"/><text x="58.9915%" y="767.50"></text></g><g><title>operator new (3 samples, 0.02%)</title><rect x="58.8156%" y="741" width="0.0192%" height="15" fill="rgb(214,91,1)" fg:x="9187" fg:w="3"/><text x="59.0299%" y="751.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="58.8156%" y="725" width="0.0192%" height="15" fill="rgb(232,24,50)" fg:x="9187" fg:w="3"/><text x="59.0299%" y="735.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (8 samples, 0.05%)</title><rect x="58.8028%" y="757" width="0.0512%" height="15" fill="rgb(254,182,12)" fg:x="9185" fg:w="8"/><text x="59.0171%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2 samples, 0.01%)</title><rect x="58.8412%" y="741" width="0.0128%" height="15" fill="rgb(237,198,2)" fg:x="9191" fg:w="2"/><text x="59.0555%" y="751.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (13 samples, 0.08%)</title><rect x="58.7772%" y="773" width="0.0832%" height="15" fill="rgb(226,32,40)" fg:x="9181" fg:w="13"/><text x="58.9915%" y="783.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="58.8988%" y="725" width="0.0192%" height="15" fill="rgb(247,113,52)" fg:x="9200" fg:w="3"/><text x="59.1131%" y="735.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.08%)</title><rect x="59.0717%" y="677" width="0.0832%" height="15" fill="rgb(247,113,52)" fg:x="9227" fg:w="13"/><text x="59.2860%" y="687.50"></text></g><g><title>_IO_default_xsputn (2 samples, 0.01%)</title><rect x="59.1549%" y="677" width="0.0128%" height="15" fill="rgb(222,74,13)" fg:x="9240" fg:w="2"/><text x="59.3692%" y="687.50"></text></g><g><title>inet_ntop (48 samples, 0.31%)</title><rect x="58.8668%" y="741" width="0.3073%" height="15" fill="rgb(221,131,48)" fg:x="9195" fg:w="48"/><text x="59.0811%" y="751.50"></text></g><g><title>sprintf (40 samples, 0.26%)</title><rect x="58.9181%" y="725" width="0.2561%" height="15" fill="rgb(213,81,41)" fg:x="9203" fg:w="40"/><text x="59.1323%" y="735.50"></text></g><g><title>[libc-2.31.so] (36 samples, 0.23%)</title><rect x="58.9437%" y="709" width="0.2305%" height="15" fill="rgb(247,113,52)" fg:x="9207" fg:w="36"/><text x="59.1579%" y="719.50"></text></g><g><title>[libc-2.31.so] (33 samples, 0.21%)</title><rect x="58.9629%" y="693" width="0.2113%" height="15" fill="rgb(247,113,52)" fg:x="9210" fg:w="33"/><text x="59.1772%" y="703.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="59.1933%" y="725" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="9246" fg:w="2"/><text x="59.4076%" y="735.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (4 samples, 0.03%)</title><rect x="59.2318%" y="709" width="0.0256%" height="15" fill="rgb(213,123,36)" fg:x="9252" fg:w="4"/><text x="59.4460%" y="719.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (3 samples, 0.02%)</title><rect x="59.2382%" y="693" width="0.0192%" height="15" fill="rgb(226,199,5)" fg:x="9253" fg:w="3"/><text x="59.4524%" y="703.50"></text></g><g><title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (16 samples, 0.10%)</title><rect x="59.1741%" y="741" width="0.1024%" height="15" fill="rgb(221,154,13)" fg:x="9243" fg:w="16"/><text x="59.3884%" y="751.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (11 samples, 0.07%)</title><rect x="59.2061%" y="725" width="0.0704%" height="15" fill="rgb(222,170,8)" fg:x="9248" fg:w="11"/><text x="59.4204%" y="735.50"></text></g><g><title>std::ostream::sentry::~sentry (2 samples, 0.01%)</title><rect x="59.2638%" y="709" width="0.0128%" height="15" fill="rgb(231,213,43)" fg:x="9257" fg:w="2"/><text x="59.4781%" y="719.50"></text></g><g><title>[libstdc++.so.6.0.28] (3 samples, 0.02%)</title><rect x="59.3342%" y="709" width="0.0192%" height="15" fill="rgb(226,148,0)" fg:x="9268" fg:w="3"/><text x="59.5485%" y="719.50"></text></g><g><title>operator new (3 samples, 0.02%)</title><rect x="59.3726%" y="661" width="0.0192%" height="15" fill="rgb(214,91,1)" fg:x="9274" fg:w="3"/><text x="59.5869%" y="671.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (8 samples, 0.05%)</title><rect x="59.3598%" y="677" width="0.0512%" height="15" fill="rgb(211,92,40)" fg:x="9272" fg:w="8"/><text x="59.5741%" y="687.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (3 samples, 0.02%)</title><rect x="59.3918%" y="661" width="0.0192%" height="15" fill="rgb(211,63,27)" fg:x="9277" fg:w="3"/><text x="59.6061%" y="671.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (2 samples, 0.01%)</title><rect x="59.4110%" y="677" width="0.0128%" height="15" fill="rgb(253,78,32)" fg:x="9280" fg:w="2"/><text x="59.6253%" y="687.50"></text></g><g><title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (17 samples, 0.11%)</title><rect x="59.3214%" y="725" width="0.1088%" height="15" fill="rgb(244,144,25)" fg:x="9266" fg:w="17"/><text x="59.5357%" y="735.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (12 samples, 0.08%)</title><rect x="59.3534%" y="709" width="0.0768%" height="15" fill="rgb(213,123,36)" fg:x="9271" fg:w="12"/><text x="59.5677%" y="719.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (12 samples, 0.08%)</title><rect x="59.3534%" y="693" width="0.0768%" height="15" fill="rgb(226,199,5)" fg:x="9271" fg:w="12"/><text x="59.5677%" y="703.50"></text></g><g><title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (2 samples, 0.01%)</title><rect x="59.4302%" y="725" width="0.0128%" height="15" fill="rgb(243,180,8)" fg:x="9283" fg:w="2"/><text x="59.6445%" y="735.50"></text></g><g><title>operator&lt;&lt; (92 samples, 0.59%)</title><rect x="58.8604%" y="757" width="0.5890%" height="15" fill="rgb(206,204,30)" fg:x="9194" fg:w="92"/><text x="59.0747%" y="767.50"></text></g><g><title>std::ostream::_M_insert&lt;unsigned long&gt; (27 samples, 0.17%)</title><rect x="59.2766%" y="741" width="0.1729%" height="15" fill="rgb(226,22,13)" fg:x="9259" fg:w="27"/><text x="59.4909%" y="751.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="59.6607%" y="661" width="0.0320%" height="15" fill="rgb(247,113,52)" fg:x="9319" fg:w="5"/><text x="59.8750%" y="671.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="59.6799%" y="645" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="9322" fg:w="2"/><text x="59.8942%" y="655.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="59.6799%" y="629" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="9322" fg:w="2"/><text x="59.8942%" y="639.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="59.6799%" y="613" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="9322" fg:w="2"/><text x="59.8942%" y="623.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="59.6799%" y="597" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="9322" fg:w="2"/><text x="59.8942%" y="607.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="59.6799%" y="581" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="9322" fg:w="2"/><text x="59.8942%" y="591.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="59.6799%" y="565" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="9322" fg:w="2"/><text x="59.8942%" y="575.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="59.6799%" y="549" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="9322" fg:w="2"/><text x="59.8942%" y="559.50"></text></g><g><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (12 samples, 0.08%)</title><rect x="59.6223%" y="677" width="0.0768%" height="15" fill="rgb(228,90,48)" fg:x="9313" fg:w="12"/><text x="59.8366%" y="687.50"></text></g><g><title>__dynamic_cast (16 samples, 0.10%)</title><rect x="59.6031%" y="693" width="0.1024%" height="15" fill="rgb(214,65,42)" fg:x="9310" fg:w="16"/><text x="59.8174%" y="703.50"></text></g><g><title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (26 samples, 0.17%)</title><rect x="59.5519%" y="709" width="0.1665%" height="15" fill="rgb(215,60,9)" fg:x="9302" fg:w="26"/><text x="59.7661%" y="719.50"></text></g><g><title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="59.7055%" y="693" width="0.0128%" height="15" fill="rgb(241,7,48)" fg:x="9326" fg:w="2"/><text x="59.9198%" y="703.50"></text></g><g><title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="59.7183%" y="709" width="0.0128%" height="15" fill="rgb(207,140,3)" fg:x="9328" fg:w="2"/><text x="59.9326%" y="719.50"></text></g><g><title>__dynamic_cast (2 samples, 0.01%)</title><rect x="59.7183%" y="693" width="0.0128%" height="15" fill="rgb(214,65,42)" fg:x="9328" fg:w="2"/><text x="59.9326%" y="703.50"></text></g><g><title>__dynamic_cast (7 samples, 0.04%)</title><rect x="59.7375%" y="693" width="0.0448%" height="15" fill="rgb(214,65,42)" fg:x="9331" fg:w="7"/><text x="59.9518%" y="703.50"></text></g><g><title>__cxxabiv1::__si_class_type_info::__do_dyncast (6 samples, 0.04%)</title><rect x="59.7439%" y="677" width="0.0384%" height="15" fill="rgb(253,149,54)" fg:x="9332" fg:w="6"/><text x="59.9582%" y="687.50"></text></g><g><title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (11 samples, 0.07%)</title><rect x="59.7311%" y="709" width="0.0704%" height="15" fill="rgb(243,107,3)" fg:x="9330" fg:w="11"/><text x="59.9454%" y="719.50"></text></g><g><title>std::locale::id::_M_id (3 samples, 0.02%)</title><rect x="59.7823%" y="693" width="0.0192%" height="15" fill="rgb(241,7,48)" fg:x="9338" fg:w="3"/><text x="59.9966%" y="703.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (44 samples, 0.28%)</title><rect x="59.5327%" y="725" width="0.2817%" height="15" fill="rgb(237,227,49)" fg:x="9299" fg:w="44"/><text x="59.7469%" y="735.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (54 samples, 0.35%)</title><rect x="59.5006%" y="741" width="0.3457%" height="15" fill="rgb(223,206,25)" fg:x="9294" fg:w="54"/><text x="59.7149%" y="751.50"></text></g><g><title>std::ios_base::_M_init (5 samples, 0.03%)</title><rect x="59.8143%" y="725" width="0.0320%" height="15" fill="rgb(211,168,7)" fg:x="9343" fg:w="5"/><text x="60.0286%" y="735.50"></text></g><g><title>std::locale::~locale (3 samples, 0.02%)</title><rect x="59.8271%" y="709" width="0.0192%" height="15" fill="rgb(238,227,18)" fg:x="9345" fg:w="3"/><text x="60.0414%" y="719.50"></text></g><g><title>std::ios_base::ios_base (5 samples, 0.03%)</title><rect x="59.8464%" y="741" width="0.0320%" height="15" fill="rgb(227,77,35)" fg:x="9348" fg:w="5"/><text x="60.0606%" y="751.50"></text></g><g><title>[libstdc++.so.6.0.28] (7 samples, 0.04%)</title><rect x="59.8976%" y="725" width="0.0448%" height="15" fill="rgb(226,148,0)" fg:x="9356" fg:w="7"/><text x="60.1119%" y="735.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (78 samples, 0.50%)</title><rect x="59.4494%" y="757" width="0.4994%" height="15" fill="rgb(230,13,26)" fg:x="9286" fg:w="78"/><text x="59.6637%" y="767.50"></text></g><g><title>std::locale::locale (11 samples, 0.07%)</title><rect x="59.8784%" y="741" width="0.0704%" height="15" fill="rgb(240,92,16)" fg:x="9353" fg:w="11"/><text x="60.0926%" y="751.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (7 samples, 0.04%)</title><rect x="59.9488%" y="757" width="0.0448%" height="15" fill="rgb(254,26,48)" fg:x="9364" fg:w="7"/><text x="60.1631%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (7 samples, 0.04%)</title><rect x="59.9488%" y="741" width="0.0448%" height="15" fill="rgb(236,91,4)" fg:x="9364" fg:w="7"/><text x="60.1631%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (7 samples, 0.04%)</title><rect x="59.9488%" y="725" width="0.0448%" height="15" fill="rgb(250,46,35)" fg:x="9364" fg:w="7"/><text x="60.1631%" y="735.50"></text></g><g><title>operator new (3 samples, 0.02%)</title><rect x="59.9744%" y="709" width="0.0192%" height="15" fill="rgb(214,91,1)" fg:x="9368" fg:w="3"/><text x="60.1887%" y="719.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="59.9744%" y="693" width="0.0192%" height="15" fill="rgb(232,24,50)" fg:x="9368" fg:w="3"/><text x="60.1887%" y="703.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (2 samples, 0.01%)</title><rect x="59.9936%" y="757" width="0.0128%" height="15" fill="rgb(221,29,6)" fg:x="9371" fg:w="2"/><text x="60.2079%" y="767.50"></text></g><g><title>std::ios_base::_M_call_callbacks (3 samples, 0.02%)</title><rect x="60.0064%" y="741" width="0.0192%" height="15" fill="rgb(239,219,16)" fg:x="9373" fg:w="3"/><text x="60.2207%" y="751.50"></text></g><g><title>Http::Http (588 samples, 3.76%)</title><rect x="56.2740%" y="789" width="3.7644%" height="15" fill="rgb(216,154,36)" fg:x="8790" fg:w="588"/><text x="56.4883%" y="799.50">Http:..</text></g><g><title>toString&lt;Address&amp;&gt; (184 samples, 1.18%)</title><rect x="58.8604%" y="773" width="1.1780%" height="15" fill="rgb(233,146,38)" fg:x="9194" fg:w="184"/><text x="59.0747%" y="783.50"></text></g><g><title>std::ios_base::~ios_base (5 samples, 0.03%)</title><rect x="60.0064%" y="757" width="0.0320%" height="15" fill="rgb(222,137,36)" fg:x="9373" fg:w="5"/><text x="60.2207%" y="767.50"></text></g><g><title>std::ios_base::_M_dispose_callbacks (2 samples, 0.01%)</title><rect x="60.0256%" y="741" width="0.0128%" height="15" fill="rgb(242,19,30)" fg:x="9376" fg:w="2"/><text x="60.2399%" y="751.50"></text></g><g><title>std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt;::push_back (4 samples, 0.03%)</title><rect x="60.0384%" y="773" width="0.0256%" height="15" fill="rgb(254,127,21)" fg:x="9378" fg:w="4"/><text x="60.2527%" y="783.50"></text></g><g><title>Poll::add (6 samples, 0.04%)</title><rect x="60.0384%" y="789" width="0.0384%" height="15" fill="rgb(234,140,27)" fg:x="9378" fg:w="6"/><text x="60.2527%" y="799.50"></text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::push_back (2 samples, 0.01%)</title><rect x="60.0640%" y="773" width="0.0128%" height="15" fill="rgb(220,30,53)" fg:x="9382" fg:w="2"/><text x="60.2783%" y="783.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;pollfd&gt;, pollfd&gt;::construct&lt;pollfd&gt; (2 samples, 0.01%)</title><rect x="60.0640%" y="757" width="0.0128%" height="15" fill="rgb(205,26,18)" fg:x="9382" fg:w="2"/><text x="60.2783%" y="767.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="60.0768%" y="789" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="9384" fg:w="3"/><text x="60.2911%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.03%)</title><rect x="60.1216%" y="757" width="0.0256%" height="15" fill="rgb(234,224,53)" fg:x="9391" fg:w="4"/><text x="60.3359%" y="767.50"></text></g><g><title>do_fcntl (3 samples, 0.02%)</title><rect x="60.2241%" y="709" width="0.0192%" height="15" fill="rgb(252,30,2)" fg:x="9407" fg:w="3"/><text x="60.4384%" y="719.50"></text></g><g><title>do_syscall_64 (17 samples, 0.11%)</title><rect x="60.1601%" y="741" width="0.1088%" height="15" fill="rgb(220,74,14)" fg:x="9397" fg:w="17"/><text x="60.3743%" y="751.50"></text></g><g><title>__x64_sys_fcntl (16 samples, 0.10%)</title><rect x="60.1665%" y="725" width="0.1024%" height="15" fill="rgb(244,199,51)" fg:x="9398" fg:w="16"/><text x="60.3807%" y="735.50"></text></g><g><title>security_file_fcntl (4 samples, 0.03%)</title><rect x="60.2433%" y="709" width="0.0256%" height="15" fill="rgb(233,47,29)" fg:x="9410" fg:w="4"/><text x="60.4576%" y="719.50"></text></g><g><title>__libc_fcntl64 (28 samples, 0.18%)</title><rect x="60.0960%" y="789" width="0.1793%" height="15" fill="rgb(246,163,4)" fg:x="9387" fg:w="28"/><text x="60.3103%" y="799.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.17%)</title><rect x="60.1024%" y="773" width="0.1729%" height="15" fill="rgb(247,113,52)" fg:x="9388" fg:w="27"/><text x="60.3167%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.13%)</title><rect x="60.1472%" y="757" width="0.1280%" height="15" fill="rgb(205,226,15)" fg:x="9395" fg:w="20"/><text x="60.3615%" y="767.50"></text></g><g><title>__alloc_fd (8 samples, 0.05%)</title><rect x="60.3585%" y="693" width="0.0512%" height="15" fill="rgb(234,27,45)" fg:x="9428" fg:w="8"/><text x="60.5728%" y="703.50"></text></g><g><title>expand_files (4 samples, 0.03%)</title><rect x="60.3841%" y="677" width="0.0256%" height="15" fill="rgb(215,178,19)" fg:x="9432" fg:w="4"/><text x="60.5984%" y="687.50"></text></g><g><title>__get_unused_fd_flags (2 samples, 0.01%)</title><rect x="60.4161%" y="693" width="0.0128%" height="15" fill="rgb(250,221,41)" fg:x="9437" fg:w="2"/><text x="60.6304%" y="703.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.01%)</title><rect x="60.4866%" y="645" width="0.0128%" height="15" fill="rgb(252,29,18)" fg:x="9448" fg:w="2"/><text x="60.7008%" y="655.50"></text></g><g><title>kmem_cache_free (6 samples, 0.04%)</title><rect x="60.4994%" y="645" width="0.0384%" height="15" fill="rgb(225,137,16)" fg:x="9450" fg:w="6"/><text x="60.7136%" y="655.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (3 samples, 0.02%)</title><rect x="60.5186%" y="629" width="0.0192%" height="15" fill="rgb(208,166,34)" fg:x="9453" fg:w="3"/><text x="60.7329%" y="639.50"></text></g><g><title>mem_cgroup_sk_alloc (3 samples, 0.02%)</title><rect x="60.5506%" y="645" width="0.0192%" height="15" fill="rgb(230,84,1)" fg:x="9458" fg:w="3"/><text x="60.7649%" y="655.50"></text></g><g><title>inet_csk_accept (19 samples, 0.12%)</title><rect x="60.4545%" y="661" width="0.1216%" height="15" fill="rgb(209,163,35)" fg:x="9443" fg:w="19"/><text x="60.6688%" y="671.50"></text></g><g><title>inet_accept (22 samples, 0.14%)</title><rect x="60.4417%" y="677" width="0.1408%" height="15" fill="rgb(232,85,41)" fg:x="9441" fg:w="22"/><text x="60.6560%" y="687.50"></text></g><g><title>inet_getname (10 samples, 0.06%)</title><rect x="60.5826%" y="677" width="0.0640%" height="15" fill="rgb(213,10,46)" fg:x="9463" fg:w="10"/><text x="60.7969%" y="687.50"></text></g><g><title>lock_sock_nested (2 samples, 0.01%)</title><rect x="60.6338%" y="661" width="0.0128%" height="15" fill="rgb(207,134,26)" fg:x="9471" fg:w="2"/><text x="60.8481%" y="671.50"></text></g><g><title>move_addr_to_user (3 samples, 0.02%)</title><rect x="60.6466%" y="677" width="0.0192%" height="15" fill="rgb(240,75,31)" fg:x="9473" fg:w="3"/><text x="60.8609%" y="687.50"></text></g><g><title>security_socket_accept (6 samples, 0.04%)</title><rect x="60.6658%" y="677" width="0.0384%" height="15" fill="rgb(248,87,51)" fg:x="9476" fg:w="6"/><text x="60.8801%" y="687.50"></text></g><g><title>inode_init_always (17 samples, 0.11%)</title><rect x="60.8131%" y="629" width="0.1088%" height="15" fill="rgb(206,132,34)" fg:x="9499" fg:w="17"/><text x="61.0273%" y="639.50"></text></g><g><title>security_inode_alloc (7 samples, 0.04%)</title><rect x="60.8771%" y="613" width="0.0448%" height="15" fill="rgb(239,132,7)" fg:x="9509" fg:w="7"/><text x="61.0914%" y="623.50"></text></g><g><title>__slab_alloc (5 samples, 0.03%)</title><rect x="60.9795%" y="597" width="0.0320%" height="15" fill="rgb(229,140,31)" fg:x="9525" fg:w="5"/><text x="61.1938%" y="607.50"></text></g><g><title>___slab_alloc (5 samples, 0.03%)</title><rect x="60.9795%" y="581" width="0.0320%" height="15" fill="rgb(224,215,35)" fg:x="9525" fg:w="5"/><text x="61.1938%" y="591.50"></text></g><g><title>memcg_slab_post_alloc_hook (14 samples, 0.09%)</title><rect x="61.0179%" y="597" width="0.0896%" height="15" fill="rgb(242,216,24)" fg:x="9531" fg:w="14"/><text x="61.2322%" y="607.50"></text></g><g><title>__mod_memcg_lruvec_state (4 samples, 0.03%)</title><rect x="61.0819%" y="581" width="0.0256%" height="15" fill="rgb(247,169,19)" fg:x="9541" fg:w="4"/><text x="61.2962%" y="591.50"></text></g><g><title>__mod_memcg_state.part.0 (4 samples, 0.03%)</title><rect x="61.0819%" y="565" width="0.0256%" height="15" fill="rgb(252,169,8)" fg:x="9541" fg:w="4"/><text x="61.2962%" y="575.50"></text></g><g><title>get_obj_cgroup_from_current (2 samples, 0.01%)</title><rect x="61.1076%" y="581" width="0.0128%" height="15" fill="rgb(224,141,13)" fg:x="9545" fg:w="2"/><text x="61.3218%" y="591.50"></text></g><g><title>sock_alloc (69 samples, 0.44%)</title><rect x="60.7042%" y="677" width="0.4417%" height="15" fill="rgb(231,183,35)" fg:x="9482" fg:w="69"/><text x="60.9185%" y="687.50"></text></g><g><title>new_inode_pseudo (59 samples, 0.38%)</title><rect x="60.7682%" y="661" width="0.3777%" height="15" fill="rgb(250,123,6)" fg:x="9492" fg:w="59"/><text x="60.9825%" y="671.50"></text></g><g><title>alloc_inode (59 samples, 0.38%)</title><rect x="60.7682%" y="645" width="0.3777%" height="15" fill="rgb(232,33,27)" fg:x="9492" fg:w="59"/><text x="60.9825%" y="655.50"></text></g><g><title>sock_alloc_inode (35 samples, 0.22%)</title><rect x="60.9219%" y="629" width="0.2241%" height="15" fill="rgb(214,180,47)" fg:x="9516" fg:w="35"/><text x="61.1362%" y="639.50"></text></g><g><title>kmem_cache_alloc (28 samples, 0.18%)</title><rect x="60.9667%" y="613" width="0.1793%" height="15" fill="rgb(223,51,51)" fg:x="9523" fg:w="28"/><text x="61.1810%" y="623.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (6 samples, 0.04%)</title><rect x="61.1076%" y="597" width="0.0384%" height="15" fill="rgb(212,11,50)" fg:x="9545" fg:w="6"/><text x="61.3218%" y="607.50"></text></g><g><title>obj_cgroup_charge (4 samples, 0.03%)</title><rect x="61.1204%" y="581" width="0.0256%" height="15" fill="rgb(236,185,43)" fg:x="9547" fg:w="4"/><text x="61.3346%" y="591.50"></text></g><g><title>memcg_slab_post_alloc_hook (2 samples, 0.01%)</title><rect x="61.2484%" y="581" width="0.0128%" height="15" fill="rgb(242,216,24)" fg:x="9567" fg:w="2"/><text x="61.4627%" y="591.50"></text></g><g><title>kmem_cache_alloc (7 samples, 0.04%)</title><rect x="61.2228%" y="597" width="0.0448%" height="15" fill="rgb(223,51,51)" fg:x="9563" fg:w="7"/><text x="61.4371%" y="607.50"></text></g><g><title>apparmor_file_alloc_security (5 samples, 0.03%)</title><rect x="61.2740%" y="581" width="0.0320%" height="15" fill="rgb(239,6,47)" fg:x="9571" fg:w="5"/><text x="61.4883%" y="591.50"></text></g><g><title>__alloc_file (23 samples, 0.15%)</title><rect x="61.1908%" y="613" width="0.1472%" height="15" fill="rgb(208,34,24)" fg:x="9558" fg:w="23"/><text x="61.4051%" y="623.50"></text></g><g><title>security_file_alloc (11 samples, 0.07%)</title><rect x="61.2676%" y="597" width="0.0704%" height="15" fill="rgb(251,33,6)" fg:x="9570" fg:w="11"/><text x="61.4819%" y="607.50"></text></g><g><title>kmem_cache_alloc (5 samples, 0.03%)</title><rect x="61.3060%" y="581" width="0.0320%" height="15" fill="rgb(223,51,51)" fg:x="9576" fg:w="5"/><text x="61.5203%" y="591.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.01%)</title><rect x="61.3252%" y="565" width="0.0128%" height="15" fill="rgb(212,11,50)" fg:x="9579" fg:w="2"/><text x="61.5395%" y="575.50"></text></g><g><title>alloc_file (30 samples, 0.19%)</title><rect x="61.1588%" y="645" width="0.1921%" height="15" fill="rgb(237,88,39)" fg:x="9553" fg:w="30"/><text x="61.3731%" y="655.50"></text></g><g><title>alloc_empty_file (30 samples, 0.19%)</title><rect x="61.1588%" y="629" width="0.1921%" height="15" fill="rgb(242,156,16)" fg:x="9553" fg:w="30"/><text x="61.3731%" y="639.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.01%)</title><rect x="61.3380%" y="613" width="0.0128%" height="15" fill="rgb(219,106,45)" fg:x="9581" fg:w="2"/><text x="61.5523%" y="623.50"></text></g><g><title>d_set_d_op (2 samples, 0.01%)</title><rect x="61.3828%" y="613" width="0.0128%" height="15" fill="rgb(240,161,43)" fg:x="9588" fg:w="2"/><text x="61.5971%" y="623.50"></text></g><g><title>d_alloc_pseudo (22 samples, 0.14%)</title><rect x="61.3508%" y="645" width="0.1408%" height="15" fill="rgb(214,193,13)" fg:x="9583" fg:w="22"/><text x="61.5651%" y="655.50"></text></g><g><title>__d_alloc (21 samples, 0.13%)</title><rect x="61.3572%" y="629" width="0.1344%" height="15" fill="rgb(233,104,16)" fg:x="9584" fg:w="21"/><text x="61.5715%" y="639.50"></text></g><g><title>kmem_cache_alloc (15 samples, 0.10%)</title><rect x="61.3956%" y="613" width="0.0960%" height="15" fill="rgb(223,51,51)" fg:x="9590" fg:w="15"/><text x="61.6099%" y="623.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (4 samples, 0.03%)</title><rect x="61.4661%" y="597" width="0.0256%" height="15" fill="rgb(212,11,50)" fg:x="9601" fg:w="4"/><text x="61.6804%" y="607.50"></text></g><g><title>__d_instantiate (5 samples, 0.03%)</title><rect x="61.4981%" y="629" width="0.0320%" height="15" fill="rgb(250,117,39)" fg:x="9606" fg:w="5"/><text x="61.7124%" y="639.50"></text></g><g><title>d_flags_for_inode (2 samples, 0.01%)</title><rect x="61.5173%" y="613" width="0.0128%" height="15" fill="rgb(228,75,0)" fg:x="9609" fg:w="2"/><text x="61.7316%" y="623.50"></text></g><g><title>d_instantiate (8 samples, 0.05%)</title><rect x="61.4917%" y="645" width="0.0512%" height="15" fill="rgb(244,51,15)" fg:x="9605" fg:w="8"/><text x="61.7060%" y="655.50"></text></g><g><title>security_d_instantiate (2 samples, 0.01%)</title><rect x="61.5301%" y="629" width="0.0128%" height="15" fill="rgb(249,49,41)" fg:x="9611" fg:w="2"/><text x="61.7444%" y="639.50"></text></g><g><title>alloc_file_pseudo (65 samples, 0.42%)</title><rect x="61.1524%" y="661" width="0.4161%" height="15" fill="rgb(226,92,4)" fg:x="9552" fg:w="65"/><text x="61.3667%" y="671.50"></text></g><g><title>strlen (4 samples, 0.03%)</title><rect x="61.5429%" y="645" width="0.0256%" height="15" fill="rgb(247,126,53)" fg:x="9613" fg:w="4"/><text x="61.7572%" y="655.50"></text></g><g><title>__sys_accept4 (195 samples, 1.25%)</title><rect x="60.3265%" y="725" width="1.2484%" height="15" fill="rgb(249,193,36)" fg:x="9423" fg:w="195"/><text x="60.5408%" y="735.50"></text></g><g><title>__sys_accept4_file (192 samples, 1.23%)</title><rect x="60.3457%" y="709" width="1.2292%" height="15" fill="rgb(233,91,17)" fg:x="9426" fg:w="192"/><text x="60.5600%" y="719.50"></text></g><g><title>do_accept (179 samples, 1.15%)</title><rect x="60.4289%" y="693" width="1.1460%" height="15" fill="rgb(242,186,42)" fg:x="9439" fg:w="179"/><text x="60.6432%" y="703.50"></text></g><g><title>sock_alloc_file (67 samples, 0.43%)</title><rect x="61.1460%" y="677" width="0.4289%" height="15" fill="rgb(209,183,4)" fg:x="9551" fg:w="67"/><text x="61.3603%" y="687.50"></text></g><g><title>do_syscall_64 (199 samples, 1.27%)</title><rect x="60.3073%" y="757" width="1.2740%" height="15" fill="rgb(220,74,14)" fg:x="9420" fg:w="199"/><text x="60.5216%" y="767.50"></text></g><g><title>__x64_sys_accept (197 samples, 1.26%)</title><rect x="60.3201%" y="741" width="1.2612%" height="15" fill="rgb(239,196,49)" fg:x="9422" fg:w="197"/><text x="60.5344%" y="751.50"></text></g><g><title>accept (207 samples, 1.33%)</title><rect x="60.2753%" y="789" width="1.3252%" height="15" fill="rgb(244,113,2)" fg:x="9415" fg:w="207"/><text x="60.4896%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (203 samples, 1.30%)</title><rect x="60.3009%" y="773" width="1.2996%" height="15" fill="rgb(205,226,15)" fg:x="9419" fg:w="203"/><text x="60.5152%" y="783.50"></text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.02%)</title><rect x="61.5813%" y="757" width="0.0192%" height="15" fill="rgb(215,101,28)" fg:x="9619" fg:w="3"/><text x="61.7956%" y="767.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.02%)</title><rect x="61.5813%" y="741" width="0.0192%" height="15" fill="rgb(240,77,26)" fg:x="9619" fg:w="3"/><text x="61.7956%" y="751.50"></text></g><g><title>virtnet_poll (3 samples, 0.02%)</title><rect x="61.6069%" y="677" width="0.0192%" height="15" fill="rgb(213,187,12)" fg:x="9623" fg:w="3"/><text x="61.8212%" y="687.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="61.6069%" y="661" width="0.0192%" height="15" fill="rgb(226,216,13)" fg:x="9623" fg:w="3"/><text x="61.8212%" y="671.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="61.6069%" y="645" width="0.0192%" height="15" fill="rgb(216,153,44)" fg:x="9623" fg:w="3"/><text x="61.8212%" y="655.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="61.6069%" y="629" width="0.0192%" height="15" fill="rgb(227,176,26)" fg:x="9623" fg:w="3"/><text x="61.8212%" y="639.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="61.6069%" y="613" width="0.0192%" height="15" fill="rgb(215,38,16)" fg:x="9623" fg:w="3"/><text x="61.8212%" y="623.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="61.6069%" y="597" width="0.0192%" height="15" fill="rgb(207,166,9)" fg:x="9623" fg:w="3"/><text x="61.8212%" y="607.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="61.6069%" y="581" width="0.0192%" height="15" fill="rgb(223,178,14)" fg:x="9623" fg:w="3"/><text x="61.8212%" y="591.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="61.6069%" y="565" width="0.0192%" height="15" fill="rgb(220,94,29)" fg:x="9623" fg:w="3"/><text x="61.8212%" y="575.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.02%)</title><rect x="61.6069%" y="549" width="0.0192%" height="15" fill="rgb(207,19,13)" fg:x="9623" fg:w="3"/><text x="61.8212%" y="559.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="61.6069%" y="533" width="0.0192%" height="15" fill="rgb(224,38,0)" fg:x="9623" fg:w="3"/><text x="61.8212%" y="543.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="61.6069%" y="517" width="0.0192%" height="15" fill="rgb(228,220,18)" fg:x="9623" fg:w="3"/><text x="61.8212%" y="527.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.02%)</title><rect x="61.6069%" y="501" width="0.0192%" height="15" fill="rgb(224,50,47)" fg:x="9623" fg:w="3"/><text x="61.8212%" y="511.50"></text></g><g><title>tcp_ack (2 samples, 0.01%)</title><rect x="61.6133%" y="485" width="0.0128%" height="15" fill="rgb(213,228,3)" fg:x="9624" fg:w="2"/><text x="61.8276%" y="495.50"></text></g><g><title>asm_common_interrupt (5 samples, 0.03%)</title><rect x="61.6005%" y="789" width="0.0320%" height="15" fill="rgb(248,227,45)" fg:x="9622" fg:w="5"/><text x="61.8148%" y="799.50"></text></g><g><title>common_interrupt (5 samples, 0.03%)</title><rect x="61.6005%" y="773" width="0.0320%" height="15" fill="rgb(250,67,32)" fg:x="9622" fg:w="5"/><text x="61.8148%" y="783.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="61.6069%" y="757" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="9623" fg:w="4"/><text x="61.8212%" y="767.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.03%)</title><rect x="61.6069%" y="741" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="9623" fg:w="4"/><text x="61.8212%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="61.6069%" y="725" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="9623" fg:w="4"/><text x="61.8212%" y="735.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="61.6069%" y="709" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="9623" fg:w="4"/><text x="61.8212%" y="719.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="61.6069%" y="693" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="9623" fg:w="4"/><text x="61.8212%" y="703.50"></text></g><g><title>__irqentry_text_start (15 samples, 0.10%)</title><rect x="61.6581%" y="773" width="0.0960%" height="15" fill="rgb(229,107,3)" fg:x="9631" fg:w="15"/><text x="61.8724%" y="783.50"></text></g><g><title>__put_user_nocheck_4 (3 samples, 0.02%)</title><rect x="61.7542%" y="693" width="0.0192%" height="15" fill="rgb(221,27,16)" fg:x="9646" fg:w="3"/><text x="61.9684%" y="703.50"></text></g><g><title>move_addr_to_user (4 samples, 0.03%)</title><rect x="61.7542%" y="709" width="0.0256%" height="15" fill="rgb(240,75,31)" fg:x="9646" fg:w="4"/><text x="61.9684%" y="719.50"></text></g><g><title>do_syscall_64 (5 samples, 0.03%)</title><rect x="61.7542%" y="757" width="0.0320%" height="15" fill="rgb(220,74,14)" fg:x="9646" fg:w="5"/><text x="61.9684%" y="767.50"></text></g><g><title>__x64_sys_getsockname (5 samples, 0.03%)</title><rect x="61.7542%" y="741" width="0.0320%" height="15" fill="rgb(250,34,31)" fg:x="9646" fg:w="5"/><text x="61.9684%" y="751.50"></text></g><g><title>__sys_getsockname (5 samples, 0.03%)</title><rect x="61.7542%" y="725" width="0.0320%" height="15" fill="rgb(221,110,22)" fg:x="9646" fg:w="5"/><text x="61.9684%" y="735.50"></text></g><g><title>getsockname (25 samples, 0.16%)</title><rect x="61.6325%" y="789" width="0.1601%" height="15" fill="rgb(243,188,17)" fg:x="9627" fg:w="25"/><text x="61.8468%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="61.7542%" y="773" width="0.0384%" height="15" fill="rgb(205,226,15)" fg:x="9646" fg:w="6"/><text x="61.9684%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="61.9718%" y="677" width="0.0128%" height="15" fill="rgb(205,226,15)" fg:x="9680" fg:w="2"/><text x="62.1861%" y="687.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="61.9718%" y="661" width="0.0128%" height="15" fill="rgb(220,74,14)" fg:x="9680" fg:w="2"/><text x="62.1861%" y="671.50"></text></g><g><title>__do_sys_brk (2 samples, 0.01%)</title><rect x="61.9718%" y="645" width="0.0128%" height="15" fill="rgb(251,218,4)" fg:x="9680" fg:w="2"/><text x="62.1861%" y="655.50"></text></g><g><title>__default_morecore (4 samples, 0.03%)</title><rect x="61.9654%" y="725" width="0.0256%" height="15" fill="rgb(232,82,47)" fg:x="9679" fg:w="4"/><text x="62.1797%" y="735.50"></text></g><g><title>__sbrk (4 samples, 0.03%)</title><rect x="61.9654%" y="709" width="0.0256%" height="15" fill="rgb(243,78,47)" fg:x="9679" fg:w="4"/><text x="62.1797%" y="719.50"></text></g><g><title>brk (4 samples, 0.03%)</title><rect x="61.9654%" y="693" width="0.0256%" height="15" fill="rgb(207,0,13)" fg:x="9679" fg:w="4"/><text x="62.1797%" y="703.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.04%)</title><rect x="61.9590%" y="741" width="0.0448%" height="15" fill="rgb(247,113,52)" fg:x="9678" fg:w="7"/><text x="62.1733%" y="751.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="62.0038%" y="645" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="655.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="62.0038%" y="629" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="639.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="62.0038%" y="613" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="623.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="62.0038%" y="597" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="607.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="62.0038%" y="581" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="591.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="62.0038%" y="565" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="575.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="62.0038%" y="549" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="559.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="62.0038%" y="533" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="543.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="62.0038%" y="517" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="527.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="62.0038%" y="501" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="511.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="62.0038%" y="485" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="495.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="62.0038%" y="469" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="479.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="62.0038%" y="453" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="62.0038%" y="437" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="447.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="62.0038%" y="421" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="9685" fg:w="2"/><text x="62.2181%" y="431.50"></text></g><g><title>[libc-2.31.so] (26 samples, 0.17%)</title><rect x="61.8566%" y="757" width="0.1665%" height="15" fill="rgb(247,113,52)" fg:x="9662" fg:w="26"/><text x="62.0709%" y="767.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="62.0038%" y="741" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="9685" fg:w="3"/><text x="62.2181%" y="751.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="62.0038%" y="725" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="9685" fg:w="3"/><text x="62.2181%" y="735.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="62.0038%" y="709" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="9685" fg:w="3"/><text x="62.2181%" y="719.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="62.0038%" y="693" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="9685" fg:w="3"/><text x="62.2181%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="62.0038%" y="677" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="9685" fg:w="3"/><text x="62.2181%" y="687.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="62.0038%" y="661" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="9685" fg:w="3"/><text x="62.2181%" y="671.50"></text></g><g><title>ListenSocket::onPollEvent (979 samples, 6.27%)</title><rect x="55.7618%" y="805" width="6.2676%" height="15" fill="rgb(234,106,36)" fg:x="8710" fg:w="979"/><text x="55.9761%" y="815.50">ListenSock..</text></g><g><title>operator new (37 samples, 0.24%)</title><rect x="61.7926%" y="789" width="0.2369%" height="15" fill="rgb(214,91,1)" fg:x="9652" fg:w="37"/><text x="62.0069%" y="799.50"></text></g><g><title>__libc_malloc (33 samples, 0.21%)</title><rect x="61.8182%" y="773" width="0.2113%" height="15" fill="rgb(232,24,50)" fg:x="9656" fg:w="33"/><text x="62.0325%" y="783.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_Deque_impl::~_Deque_impl (4 samples, 0.03%)</title><rect x="62.1191%" y="693" width="0.0256%" height="15" fill="rgb(217,211,52)" fg:x="9703" fg:w="4"/><text x="62.3334%" y="703.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::istream**&gt;, std::istream**&gt;::deallocate (2 samples, 0.01%)</title><rect x="62.1639%" y="677" width="0.0128%" height="15" fill="rgb(231,145,7)" fg:x="9710" fg:w="2"/><text x="62.3782%" y="687.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::istream**&gt;::deallocate (2 samples, 0.01%)</title><rect x="62.1639%" y="661" width="0.0128%" height="15" fill="rgb(222,57,18)" fg:x="9710" fg:w="2"/><text x="62.3782%" y="671.50"></text></g><g><title>cfree (2 samples, 0.01%)</title><rect x="62.1639%" y="645" width="0.0128%" height="15" fill="rgb(221,14,53)" fg:x="9710" fg:w="2"/><text x="62.3782%" y="655.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_get_Tp_allocator (2 samples, 0.01%)</title><rect x="62.1895%" y="661" width="0.0128%" height="15" fill="rgb(208,125,48)" fg:x="9714" fg:w="2"/><text x="62.4038%" y="671.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_deallocate_map (10 samples, 0.06%)</title><rect x="62.1447%" y="693" width="0.0640%" height="15" fill="rgb(223,184,23)" fg:x="9707" fg:w="10"/><text x="62.3590%" y="703.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_get_map_allocator (5 samples, 0.03%)</title><rect x="62.1767%" y="677" width="0.0320%" height="15" fill="rgb(253,49,30)" fg:x="9712" fg:w="5"/><text x="62.3910%" y="687.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::~_Deque_base (17 samples, 0.11%)</title><rect x="62.1191%" y="709" width="0.1088%" height="15" fill="rgb(206,190,42)" fg:x="9703" fg:w="17"/><text x="62.3334%" y="719.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_destroy_nodes (3 samples, 0.02%)</title><rect x="62.2087%" y="693" width="0.0192%" height="15" fill="rgb(235,186,7)" fg:x="9717" fg:w="3"/><text x="62.4230%" y="703.50"></text></g><g><title>AConnection::~AConnection (20 samples, 0.13%)</title><rect x="62.1063%" y="757" width="0.1280%" height="15" fill="rgb(218,45,33)" fg:x="9701" fg:w="20"/><text x="62.3206%" y="767.50"></text></g><g><title>std::queue&lt;std::istream*, std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt; &gt;::~queue (18 samples, 0.12%)</title><rect x="62.1191%" y="741" width="0.1152%" height="15" fill="rgb(223,40,52)" fg:x="9703" fg:w="18"/><text x="62.3334%" y="751.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::~deque (18 samples, 0.12%)</title><rect x="62.1191%" y="725" width="0.1152%" height="15" fill="rgb(205,72,24)" fg:x="9703" fg:w="18"/><text x="62.3334%" y="735.50"></text></g><g><title>File::isOpen (3 samples, 0.02%)</title><rect x="62.2599%" y="741" width="0.0192%" height="15" fill="rgb(222,123,46)" fg:x="9725" fg:w="3"/><text x="62.4742%" y="751.50"></text></g><g><title>__fget_light (6 samples, 0.04%)</title><rect x="62.3496%" y="645" width="0.0384%" height="15" fill="rgb(243,103,32)" fg:x="9739" fg:w="6"/><text x="62.5638%" y="655.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="62.3752%" y="629" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="639.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="62.3752%" y="613" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="623.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="62.3752%" y="597" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="607.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="62.3752%" y="581" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="591.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="62.3752%" y="565" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="575.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="62.3752%" y="549" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="559.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="62.3752%" y="533" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="543.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="62.3752%" y="517" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="527.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="62.3752%" y="501" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="511.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="62.3752%" y="485" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="495.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="62.3752%" y="469" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="479.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="62.3752%" y="453" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="463.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="62.3752%" y="437" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="447.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="62.3752%" y="421" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="431.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="62.3752%" y="405" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="415.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="62.3752%" y="389" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="399.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="62.3752%" y="373" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="9743" fg:w="2"/><text x="62.5894%" y="383.50"></text></g><g><title>__fdget_pos (10 samples, 0.06%)</title><rect x="62.3303%" y="661" width="0.0640%" height="15" fill="rgb(205,61,45)" fg:x="9736" fg:w="10"/><text x="62.5446%" y="671.50"></text></g><g><title>ext4_generic_write_checks (6 samples, 0.04%)</title><rect x="62.4136%" y="613" width="0.0384%" height="15" fill="rgb(212,86,33)" fg:x="9749" fg:w="6"/><text x="62.6279%" y="623.50"></text></g><g><title>generic_write_checks (4 samples, 0.03%)</title><rect x="62.4264%" y="597" width="0.0256%" height="15" fill="rgb(220,18,45)" fg:x="9751" fg:w="4"/><text x="62.6407%" y="607.50"></text></g><g><title>generic_write_check_limits (4 samples, 0.03%)</title><rect x="62.4264%" y="581" width="0.0256%" height="15" fill="rgb(237,191,43)" fg:x="9751" fg:w="4"/><text x="62.6407%" y="591.50"></text></g><g><title>file_modified (4 samples, 0.03%)</title><rect x="62.4520%" y="613" width="0.0256%" height="15" fill="rgb(231,34,43)" fg:x="9755" fg:w="4"/><text x="62.6663%" y="623.50"></text></g><g><title>file_remove_privs (4 samples, 0.03%)</title><rect x="62.4520%" y="597" width="0.0256%" height="15" fill="rgb(252,38,21)" fg:x="9755" fg:w="4"/><text x="62.6663%" y="607.50"></text></g><g><title>__mnt_want_write_file (2 samples, 0.01%)</title><rect x="62.4968%" y="597" width="0.0128%" height="15" fill="rgb(239,224,38)" fg:x="9762" fg:w="2"/><text x="62.7111%" y="607.50"></text></g><g><title>current_time (2 samples, 0.01%)</title><rect x="62.5096%" y="597" width="0.0128%" height="15" fill="rgb(239,75,43)" fg:x="9764" fg:w="2"/><text x="62.7239%" y="607.50"></text></g><g><title>ktime_get_coarse_real_ts64 (2 samples, 0.01%)</title><rect x="62.5096%" y="581" width="0.0128%" height="15" fill="rgb(228,144,10)" fg:x="9764" fg:w="2"/><text x="62.7239%" y="591.50"></text></g><g><title>jbd2_log_start_commit (3 samples, 0.02%)</title><rect x="62.5800%" y="533" width="0.0192%" height="15" fill="rgb(251,46,24)" fg:x="9775" fg:w="3"/><text x="62.7943%" y="543.50"></text></g><g><title>__jbd2_log_start_commit (3 samples, 0.02%)</title><rect x="62.5800%" y="517" width="0.0192%" height="15" fill="rgb(226,44,29)" fg:x="9775" fg:w="3"/><text x="62.7943%" y="527.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.02%)</title><rect x="62.5800%" y="501" width="0.0192%" height="15" fill="rgb(248,80,4)" fg:x="9775" fg:w="3"/><text x="62.7943%" y="511.50"></text></g><g><title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="62.5864%" y="485" width="0.0128%" height="15" fill="rgb(216,183,20)" fg:x="9776" fg:w="2"/><text x="62.8007%" y="495.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="62.5864%" y="469" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="9776" fg:w="2"/><text x="62.8007%" y="479.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="62.5864%" y="453" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="9776" fg:w="2"/><text x="62.8007%" y="463.50"></text></g><g><title>kmem_cache_free (2 samples, 0.01%)</title><rect x="62.5992%" y="533" width="0.0128%" height="15" fill="rgb(225,137,16)" fg:x="9778" fg:w="2"/><text x="62.8135%" y="543.50"></text></g><g><title>__ext4_journal_stop (9 samples, 0.06%)</title><rect x="62.5608%" y="565" width="0.0576%" height="15" fill="rgb(225,40,54)" fg:x="9772" fg:w="9"/><text x="62.7751%" y="575.50"></text></g><g><title>jbd2_journal_stop (9 samples, 0.06%)</title><rect x="62.5608%" y="549" width="0.0576%" height="15" fill="rgb(229,91,7)" fg:x="9772" fg:w="9"/><text x="62.7751%" y="559.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="62.6633%" y="533" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="543.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="62.6633%" y="517" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="527.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="62.6633%" y="501" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="511.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="62.6633%" y="485" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="495.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="62.6633%" y="469" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="479.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="62.6633%" y="453" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="463.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="62.6633%" y="437" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="447.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="62.6633%" y="421" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="431.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="62.6633%" y="405" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="415.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="62.6633%" y="389" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="399.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="62.6633%" y="373" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="383.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="62.6633%" y="357" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="367.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="62.6633%" y="341" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="351.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="62.6633%" y="325" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="335.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="62.6633%" y="309" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="62.6633%" y="293" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="303.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="62.6633%" y="277" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="62.6633%" y="261" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="271.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="62.6633%" y="245" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="9788" fg:w="2"/><text x="62.8775%" y="255.50"></text></g><g><title>ext4_journal_check_start (3 samples, 0.02%)</title><rect x="62.6761%" y="533" width="0.0192%" height="15" fill="rgb(220,195,41)" fg:x="9790" fg:w="3"/><text x="62.8903%" y="543.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="62.7529%" y="501" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="9802" fg:w="2"/><text x="62.9672%" y="511.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="62.7529%" y="485" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="9802" fg:w="2"/><text x="62.9672%" y="495.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="62.7529%" y="469" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="9802" fg:w="2"/><text x="62.9672%" y="479.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="62.7529%" y="453" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="9802" fg:w="2"/><text x="62.9672%" y="463.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="62.7529%" y="437" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="9802" fg:w="2"/><text x="62.9672%" y="447.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="62.7529%" y="421" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="9802" fg:w="2"/><text x="62.9672%" y="431.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="62.7529%" y="405" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="9802" fg:w="2"/><text x="62.9672%" y="415.50"></text></g><g><title>kmem_cache_alloc (6 samples, 0.04%)</title><rect x="62.7337%" y="517" width="0.0384%" height="15" fill="rgb(223,51,51)" fg:x="9799" fg:w="6"/><text x="62.9480%" y="527.50"></text></g><g><title>__ext4_journal_start_sb (22 samples, 0.14%)</title><rect x="62.6440%" y="549" width="0.1408%" height="15" fill="rgb(251,66,45)" fg:x="9785" fg:w="22"/><text x="62.8583%" y="559.50"></text></g><g><title>jbd2__journal_start (14 samples, 0.09%)</title><rect x="62.6953%" y="533" width="0.0896%" height="15" fill="rgb(212,174,30)" fg:x="9793" fg:w="14"/><text x="62.9095%" y="543.50"></text></g><g><title>start_this_handle (2 samples, 0.01%)</title><rect x="62.7721%" y="517" width="0.0128%" height="15" fill="rgb(247,124,24)" fg:x="9805" fg:w="2"/><text x="62.9864%" y="527.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.03%)</title><rect x="62.8489%" y="517" width="0.0256%" height="15" fill="rgb(225,195,37)" fg:x="9817" fg:w="4"/><text x="63.0632%" y="527.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="62.8745%" y="517" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="9821" fg:w="2"/><text x="63.0888%" y="527.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="62.8745%" y="501" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="9821" fg:w="2"/><text x="63.0888%" y="511.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="62.8745%" y="485" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="9821" fg:w="2"/><text x="63.0888%" y="495.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="62.8745%" y="469" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="9821" fg:w="2"/><text x="63.0888%" y="479.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="62.8745%" y="453" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="9821" fg:w="2"/><text x="63.0888%" y="463.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="62.8745%" y="437" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="9821" fg:w="2"/><text x="63.0888%" y="447.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="62.8745%" y="421" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="9821" fg:w="2"/><text x="63.0888%" y="431.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="62.8745%" y="405" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="9821" fg:w="2"/><text x="63.0888%" y="415.50"></text></g><g><title>ext4_fc_track_inode (3 samples, 0.02%)</title><rect x="62.8873%" y="517" width="0.0192%" height="15" fill="rgb(206,21,50)" fg:x="9823" fg:w="3"/><text x="63.1016%" y="527.50"></text></g><g><title>ext4_mark_iloc_dirty (18 samples, 0.12%)</title><rect x="62.7977%" y="533" width="0.1152%" height="15" fill="rgb(236,133,21)" fg:x="9809" fg:w="18"/><text x="63.0120%" y="543.50"></text></g><g><title>__ext4_journal_get_write_access (8 samples, 0.05%)</title><rect x="62.9193%" y="517" width="0.0512%" height="15" fill="rgb(219,28,3)" fg:x="9828" fg:w="8"/><text x="63.1336%" y="527.50"></text></g><g><title>__find_get_block (3 samples, 0.02%)</title><rect x="63.0090%" y="469" width="0.0192%" height="15" fill="rgb(254,214,1)" fg:x="9842" fg:w="3"/><text x="63.2232%" y="479.50"></text></g><g><title>__getblk_gfp (4 samples, 0.03%)</title><rect x="63.0090%" y="485" width="0.0256%" height="15" fill="rgb(223,110,34)" fg:x="9842" fg:w="4"/><text x="63.2232%" y="495.50"></text></g><g><title>__ext4_get_inode_loc (13 samples, 0.08%)</title><rect x="62.9898%" y="501" width="0.0832%" height="15" fill="rgb(231,98,31)" fg:x="9839" fg:w="13"/><text x="63.2040%" y="511.50"></text></g><g><title>ext4_get_group_desc (6 samples, 0.04%)</title><rect x="63.0346%" y="485" width="0.0384%" height="15" fill="rgb(222,172,27)" fg:x="9846" fg:w="6"/><text x="63.2489%" y="495.50"></text></g><g><title>file_update_time (94 samples, 0.60%)</title><rect x="62.4776%" y="613" width="0.6018%" height="15" fill="rgb(237,12,27)" fg:x="9759" fg:w="94"/><text x="62.6919%" y="623.50"></text></g><g><title>generic_update_time (87 samples, 0.56%)</title><rect x="62.5224%" y="597" width="0.5570%" height="15" fill="rgb(212,0,0)" fg:x="9766" fg:w="87"/><text x="62.7367%" y="607.50"></text></g><g><title>__mark_inode_dirty (86 samples, 0.55%)</title><rect x="62.5288%" y="581" width="0.5506%" height="15" fill="rgb(212,91,54)" fg:x="9767" fg:w="86"/><text x="62.7431%" y="591.50"></text></g><g><title>ext4_dirty_inode (72 samples, 0.46%)</title><rect x="62.6184%" y="565" width="0.4609%" height="15" fill="rgb(235,194,15)" fg:x="9781" fg:w="72"/><text x="62.8327%" y="575.50"></text></g><g><title>__ext4_mark_inode_dirty (46 samples, 0.29%)</title><rect x="62.7849%" y="549" width="0.2945%" height="15" fill="rgb(250,159,10)" fg:x="9807" fg:w="46"/><text x="62.9992%" y="559.50"></text></g><g><title>ext4_reserve_inode_write (26 samples, 0.17%)</title><rect x="62.9129%" y="533" width="0.1665%" height="15" fill="rgb(232,18,0)" fg:x="9827" fg:w="26"/><text x="63.1272%" y="543.50"></text></g><g><title>ext4_get_inode_loc (16 samples, 0.10%)</title><rect x="62.9770%" y="517" width="0.1024%" height="15" fill="rgb(251,31,11)" fg:x="9837" fg:w="16"/><text x="63.1912%" y="527.50"></text></g><g><title>__radix_tree_lookup (10 samples, 0.06%)</title><rect x="63.1178%" y="581" width="0.0640%" height="15" fill="rgb(250,213,26)" fg:x="9859" fg:w="10"/><text x="63.3321%" y="591.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="63.1690%" y="565" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="9867" fg:w="2"/><text x="63.3833%" y="575.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="63.1690%" y="549" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="9867" fg:w="2"/><text x="63.3833%" y="559.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="63.1818%" y="581" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="591.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="63.1818%" y="565" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="575.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="63.1818%" y="549" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="559.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="63.1818%" y="533" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="63.1818%" y="517" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="527.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="63.1818%" y="501" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="511.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="63.1818%" y="485" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="495.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="63.1818%" y="469" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="479.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="63.1818%" y="453" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="63.1818%" y="437" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="63.1818%" y="421" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="431.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="63.1818%" y="405" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="415.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="63.1818%" y="389" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="399.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="63.1818%" y="373" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="383.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="63.1818%" y="357" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="63.1818%" y="341" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="351.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="63.1818%" y="325" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="63.1818%" y="309" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="319.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="63.1818%" y="293" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="303.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="63.1818%" y="277" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="287.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="63.1818%" y="261" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="9869" fg:w="2"/><text x="63.3961%" y="271.50"></text></g><g><title>balance_dirty_pages_ratelimited (18 samples, 0.12%)</title><rect x="63.0858%" y="597" width="0.1152%" height="15" fill="rgb(221,121,40)" fg:x="9854" fg:w="18"/><text x="63.3001%" y="607.50"></text></g><g><title>__ext4_journal_start_sb (2 samples, 0.01%)</title><rect x="63.2202%" y="581" width="0.0128%" height="15" fill="rgb(251,66,45)" fg:x="9875" fg:w="2"/><text x="63.4345%" y="591.50"></text></g><g><title>ext4_block_write_begin (3 samples, 0.02%)</title><rect x="63.2394%" y="581" width="0.0192%" height="15" fill="rgb(218,63,41)" fg:x="9878" fg:w="3"/><text x="63.4537%" y="591.50"></text></g><g><title>ext4_nonda_switch (5 samples, 0.03%)</title><rect x="63.2586%" y="581" width="0.0320%" height="15" fill="rgb(254,54,14)" fg:x="9881" fg:w="5"/><text x="63.4729%" y="591.50"></text></g><g><title>grab_cache_page_write_begin (19 samples, 0.12%)</title><rect x="63.2907%" y="581" width="0.1216%" height="15" fill="rgb(221,143,40)" fg:x="9886" fg:w="19"/><text x="63.5049%" y="591.50"></text></g><g><title>pagecache_get_page (19 samples, 0.12%)</title><rect x="63.2907%" y="565" width="0.1216%" height="15" fill="rgb(254,146,25)" fg:x="9886" fg:w="19"/><text x="63.5049%" y="575.50"></text></g><g><title>find_get_entry (16 samples, 0.10%)</title><rect x="63.3099%" y="549" width="0.1024%" height="15" fill="rgb(232,175,34)" fg:x="9889" fg:w="16"/><text x="63.5241%" y="559.50"></text></g><g><title>xas_load (12 samples, 0.08%)</title><rect x="63.3355%" y="533" width="0.0768%" height="15" fill="rgb(249,146,47)" fg:x="9893" fg:w="12"/><text x="63.5498%" y="543.50"></text></g><g><title>xas_start (5 samples, 0.03%)</title><rect x="63.3803%" y="517" width="0.0320%" height="15" fill="rgb(249,53,40)" fg:x="9900" fg:w="5"/><text x="63.5946%" y="527.50"></text></g><g><title>ext4_da_write_begin (35 samples, 0.22%)</title><rect x="63.2010%" y="597" width="0.2241%" height="15" fill="rgb(235,31,43)" fg:x="9872" fg:w="35"/><text x="63.4153%" y="607.50"></text></g><g><title>unlock_page (2 samples, 0.01%)</title><rect x="63.4123%" y="581" width="0.0128%" height="15" fill="rgb(250,162,14)" fg:x="9905" fg:w="2"/><text x="63.6266%" y="591.50"></text></g><g><title>__ext4_journal_stop (2 samples, 0.01%)</title><rect x="63.4251%" y="581" width="0.0128%" height="15" fill="rgb(225,40,54)" fg:x="9907" fg:w="2"/><text x="63.6394%" y="591.50"></text></g><g><title>jbd2_journal_stop (2 samples, 0.01%)</title><rect x="63.4251%" y="565" width="0.0128%" height="15" fill="rgb(229,91,7)" fg:x="9907" fg:w="2"/><text x="63.6394%" y="575.50"></text></g><g><title>__set_page_dirty (2 samples, 0.01%)</title><rect x="63.4443%" y="533" width="0.0128%" height="15" fill="rgb(221,172,50)" fg:x="9910" fg:w="2"/><text x="63.6586%" y="543.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (4 samples, 0.03%)</title><rect x="63.4379%" y="565" width="0.0256%" height="15" fill="rgb(249,65,48)" fg:x="9909" fg:w="4"/><text x="63.6522%" y="575.50"></text></g><g><title>mark_buffer_dirty (3 samples, 0.02%)</title><rect x="63.4443%" y="549" width="0.0192%" height="15" fill="rgb(238,162,48)" fg:x="9910" fg:w="3"/><text x="63.6586%" y="559.50"></text></g><g><title>__ext4_journal_start_sb (2 samples, 0.01%)</title><rect x="63.4699%" y="533" width="0.0128%" height="15" fill="rgb(251,66,45)" fg:x="9914" fg:w="2"/><text x="63.6842%" y="543.50"></text></g><g><title>ext4_journal_check_start (2 samples, 0.01%)</title><rect x="63.4699%" y="517" width="0.0128%" height="15" fill="rgb(220,195,41)" fg:x="9914" fg:w="2"/><text x="63.6842%" y="527.50"></text></g><g><title>__ext4_handle_dirty_metadata (2 samples, 0.01%)</title><rect x="63.5083%" y="501" width="0.0128%" height="15" fill="rgb(236,9,12)" fg:x="9920" fg:w="2"/><text x="63.7226%" y="511.50"></text></g><g><title>jbd2_journal_dirty_metadata (2 samples, 0.01%)</title><rect x="63.5083%" y="485" width="0.0128%" height="15" fill="rgb(224,217,46)" fg:x="9920" fg:w="2"/><text x="63.7226%" y="495.50"></text></g><g><title>ext4_mark_iloc_dirty (7 samples, 0.04%)</title><rect x="63.4827%" y="517" width="0.0448%" height="15" fill="rgb(236,133,21)" fg:x="9916" fg:w="7"/><text x="63.6970%" y="527.50"></text></g><g><title>__ext4_journal_get_write_access (2 samples, 0.01%)</title><rect x="63.5275%" y="501" width="0.0128%" height="15" fill="rgb(219,28,3)" fg:x="9923" fg:w="2"/><text x="63.7418%" y="511.50"></text></g><g><title>__getblk_gfp (3 samples, 0.02%)</title><rect x="63.5403%" y="469" width="0.0192%" height="15" fill="rgb(223,110,34)" fg:x="9925" fg:w="3"/><text x="63.7546%" y="479.50"></text></g><g><title>__find_get_block (2 samples, 0.01%)</title><rect x="63.5467%" y="453" width="0.0128%" height="15" fill="rgb(254,214,1)" fg:x="9926" fg:w="2"/><text x="63.7610%" y="463.50"></text></g><g><title>ext4_da_write_end (22 samples, 0.14%)</title><rect x="63.4251%" y="597" width="0.1408%" height="15" fill="rgb(230,92,14)" fg:x="9907" fg:w="22"/><text x="63.6394%" y="607.50"></text></g><g><title>generic_write_end (20 samples, 0.13%)</title><rect x="63.4379%" y="581" width="0.1280%" height="15" fill="rgb(207,107,21)" fg:x="9909" fg:w="20"/><text x="63.6522%" y="591.50"></text></g><g><title>__mark_inode_dirty (16 samples, 0.10%)</title><rect x="63.4635%" y="565" width="0.1024%" height="15" fill="rgb(212,91,54)" fg:x="9913" fg:w="16"/><text x="63.6778%" y="575.50"></text></g><g><title>ext4_dirty_inode (15 samples, 0.10%)</title><rect x="63.4699%" y="549" width="0.0960%" height="15" fill="rgb(235,194,15)" fg:x="9914" fg:w="15"/><text x="63.6842%" y="559.50"></text></g><g><title>__ext4_mark_inode_dirty (13 samples, 0.08%)</title><rect x="63.4827%" y="533" width="0.0832%" height="15" fill="rgb(250,159,10)" fg:x="9916" fg:w="13"/><text x="63.6970%" y="543.50"></text></g><g><title>ext4_reserve_inode_write (6 samples, 0.04%)</title><rect x="63.5275%" y="517" width="0.0384%" height="15" fill="rgb(232,18,0)" fg:x="9923" fg:w="6"/><text x="63.7418%" y="527.50"></text></g><g><title>ext4_get_inode_loc (4 samples, 0.03%)</title><rect x="63.5403%" y="501" width="0.0256%" height="15" fill="rgb(251,31,11)" fg:x="9925" fg:w="4"/><text x="63.7546%" y="511.50"></text></g><g><title>__ext4_get_inode_loc (4 samples, 0.03%)</title><rect x="63.5403%" y="485" width="0.0256%" height="15" fill="rgb(231,98,31)" fg:x="9925" fg:w="4"/><text x="63.7546%" y="495.50"></text></g><g><title>iov_iter_copy_from_user_atomic (6 samples, 0.04%)</title><rect x="63.5723%" y="597" width="0.0384%" height="15" fill="rgb(233,17,49)" fg:x="9930" fg:w="6"/><text x="63.7866%" y="607.50"></text></g><g><title>copy_user_generic_string (5 samples, 0.03%)</title><rect x="63.5787%" y="581" width="0.0320%" height="15" fill="rgb(233,29,30)" fg:x="9931" fg:w="5"/><text x="63.7930%" y="591.50"></text></g><g><title>__get_user_nocheck_1 (3 samples, 0.02%)</title><rect x="63.6172%" y="581" width="0.0192%" height="15" fill="rgb(245,112,5)" fg:x="9937" fg:w="3"/><text x="63.8314%" y="591.50"></text></g><g><title>iov_iter_fault_in_readable (5 samples, 0.03%)</title><rect x="63.6108%" y="597" width="0.0320%" height="15" fill="rgb(223,182,1)" fg:x="9936" fg:w="5"/><text x="63.8250%" y="607.50"></text></g><g><title>generic_perform_write (89 samples, 0.57%)</title><rect x="63.0794%" y="613" width="0.5698%" height="15" fill="rgb(218,161,27)" fg:x="9853" fg:w="89"/><text x="63.2937%" y="623.50"></text></g><g><title>new_sync_write (195 samples, 1.25%)</title><rect x="62.4072%" y="645" width="1.2484%" height="15" fill="rgb(220,167,51)" fg:x="9748" fg:w="195"/><text x="62.6215%" y="655.50"></text></g><g><title>ext4_buffered_write_iter (195 samples, 1.25%)</title><rect x="62.4072%" y="629" width="1.2484%" height="15" fill="rgb(214,47,26)" fg:x="9748" fg:w="195"/><text x="62.6215%" y="639.50"></text></g><g><title>aa_file_perm (4 samples, 0.03%)</title><rect x="63.6620%" y="613" width="0.0256%" height="15" fill="rgb(208,101,21)" fg:x="9944" fg:w="4"/><text x="63.8763%" y="623.50"></text></g><g><title>do_syscall_64 (214 samples, 1.37%)</title><rect x="62.3239%" y="693" width="1.3700%" height="15" fill="rgb(220,74,14)" fg:x="9735" fg:w="214"/><text x="62.5382%" y="703.50"></text></g><g><title>ksys_write (214 samples, 1.37%)</title><rect x="62.3239%" y="677" width="1.3700%" height="15" fill="rgb(223,155,43)" fg:x="9735" fg:w="214"/><text x="62.5382%" y="687.50"></text></g><g><title>vfs_write (202 samples, 1.29%)</title><rect x="62.4008%" y="661" width="1.2932%" height="15" fill="rgb(216,184,13)" fg:x="9747" fg:w="202"/><text x="62.6151%" y="671.50"></text></g><g><title>security_file_permission (6 samples, 0.04%)</title><rect x="63.6556%" y="645" width="0.0384%" height="15" fill="rgb(224,58,37)" fg:x="9943" fg:w="6"/><text x="63.8699%" y="655.50"></text></g><g><title>apparmor_file_permission (5 samples, 0.03%)</title><rect x="63.6620%" y="629" width="0.0320%" height="15" fill="rgb(223,123,50)" fg:x="9944" fg:w="5"/><text x="63.8763%" y="639.50"></text></g><g><title>File::write (222 samples, 1.42%)</title><rect x="62.2791%" y="741" width="1.4213%" height="15" fill="rgb(221,56,14)" fg:x="9728" fg:w="222"/><text x="62.4934%" y="751.50"></text></g><g><title>__write (217 samples, 1.39%)</title><rect x="62.3111%" y="725" width="1.3892%" height="15" fill="rgb(227,101,21)" fg:x="9733" fg:w="217"/><text x="62.5254%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (216 samples, 1.38%)</title><rect x="62.3175%" y="709" width="1.3828%" height="15" fill="rgb(205,226,15)" fg:x="9734" fg:w="216"/><text x="62.5318%" y="719.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.05%)</title><rect x="63.7132%" y="725" width="0.0512%" height="15" fill="rgb(247,113,52)" fg:x="9952" fg:w="8"/><text x="63.9275%" y="735.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.04%)</title><rect x="63.7260%" y="709" width="0.0384%" height="15" fill="rgb(247,113,52)" fg:x="9954" fg:w="6"/><text x="63.9403%" y="719.50"></text></g><g><title>endsWith (11 samples, 0.07%)</title><rect x="63.7644%" y="725" width="0.0704%" height="15" fill="rgb(245,132,52)" fg:x="9960" fg:w="11"/><text x="63.9787%" y="735.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (7 samples, 0.04%)</title><rect x="63.7900%" y="709" width="0.0448%" height="15" fill="rgb(212,2,49)" fg:x="9964" fg:w="7"/><text x="64.0043%" y="719.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="63.8028%" y="693" width="0.0320%" height="15" fill="rgb(247,113,52)" fg:x="9966" fg:w="5"/><text x="64.0171%" y="703.50"></text></g><g><title>gmtime (3 samples, 0.02%)</title><rect x="63.8348%" y="725" width="0.0192%" height="15" fill="rgb(211,141,50)" fg:x="9971" fg:w="3"/><text x="64.0491%" y="735.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.01%)</title><rect x="63.8540%" y="725" width="0.0128%" height="15" fill="rgb(240,176,52)" fg:x="9974" fg:w="2"/><text x="64.0683%" y="735.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="63.9373%" y="693" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="9987" fg:w="4"/><text x="64.1515%" y="703.50"></text></g><g><title>getTime (43 samples, 0.28%)</title><rect x="63.7004%" y="741" width="0.2753%" height="15" fill="rgb(245,134,19)" fg:x="9950" fg:w="43"/><text x="63.9147%" y="751.50"></text></g><g><title>strftime_l (16 samples, 0.10%)</title><rect x="63.8732%" y="725" width="0.1024%" height="15" fill="rgb(247,36,6)" fg:x="9977" fg:w="16"/><text x="64.0875%" y="735.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.10%)</title><rect x="63.8732%" y="709" width="0.1024%" height="15" fill="rgb(247,113,52)" fg:x="9977" fg:w="16"/><text x="64.0875%" y="719.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="63.9629%" y="693" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="9991" fg:w="2"/><text x="64.1772%" y="703.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="63.9629%" y="677" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="9991" fg:w="2"/><text x="64.1772%" y="687.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="63.9629%" y="661" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="9991" fg:w="2"/><text x="64.1772%" y="671.50"></text></g><g><title>operator new (4 samples, 0.03%)</title><rect x="64.0013%" y="693" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="9997" fg:w="4"/><text x="64.2156%" y="703.50"></text></g><g><title>__libc_malloc (4 samples, 0.03%)</title><rect x="64.0013%" y="677" width="0.0256%" height="15" fill="rgb(232,24,50)" fg:x="9997" fg:w="4"/><text x="64.2156%" y="687.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8 samples, 0.05%)</title><rect x="63.9821%" y="725" width="0.0512%" height="15" fill="rgb(216,50,33)" fg:x="9994" fg:w="8"/><text x="64.1964%" y="735.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (7 samples, 0.04%)</title><rect x="63.9885%" y="709" width="0.0448%" height="15" fill="rgb(250,46,35)" fg:x="9995" fg:w="7"/><text x="64.2028%" y="719.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.04%)</title><rect x="64.0333%" y="725" width="0.0448%" height="15" fill="rgb(254,182,12)" fg:x="10002" fg:w="7"/><text x="64.2476%" y="735.50"></text></g><g><title>operator new (6 samples, 0.04%)</title><rect x="64.0397%" y="709" width="0.0384%" height="15" fill="rgb(214,91,1)" fg:x="10003" fg:w="6"/><text x="64.2540%" y="719.50"></text></g><g><title>__libc_malloc (5 samples, 0.03%)</title><rect x="64.0461%" y="693" width="0.0320%" height="15" fill="rgb(232,24,50)" fg:x="10004" fg:w="5"/><text x="64.2604%" y="703.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="64.0653%" y="677" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="10007" fg:w="2"/><text x="64.2796%" y="687.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="64.0781%" y="725" width="0.0128%" height="15" fill="rgb(211,92,40)" fg:x="10009" fg:w="2"/><text x="64.2924%" y="735.50"></text></g><g><title>operator new (2 samples, 0.01%)</title><rect x="64.0781%" y="709" width="0.0128%" height="15" fill="rgb(214,91,1)" fg:x="10009" fg:w="2"/><text x="64.2924%" y="719.50"></text></g><g><title>__libc_malloc (2 samples, 0.01%)</title><rect x="64.0781%" y="693" width="0.0128%" height="15" fill="rgb(232,24,50)" fg:x="10009" fg:w="2"/><text x="64.2924%" y="703.50"></text></g><g><title>Log::write (291 samples, 1.86%)</title><rect x="62.2407%" y="757" width="1.8630%" height="15" fill="rgb(230,27,54)" fg:x="9722" fg:w="291"/><text x="62.4550%" y="767.50">L..</text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (20 samples, 0.13%)</title><rect x="63.9757%" y="741" width="0.1280%" height="15" fill="rgb(226,32,40)" fg:x="9993" fg:w="20"/><text x="64.1900%" y="751.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (2 samples, 0.01%)</title><rect x="64.0909%" y="725" width="0.0128%" height="15" fill="rgb(231,225,8)" fg:x="10011" fg:w="2"/><text x="64.3052%" y="735.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (4 samples, 0.03%)</title><rect x="64.1293%" y="693" width="0.0256%" height="15" fill="rgb(232,77,52)" fg:x="10017" fg:w="4"/><text x="64.3436%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_put_node (4 samples, 0.03%)</title><rect x="64.1293%" y="677" width="0.0256%" height="15" fill="rgb(252,2,36)" fg:x="10017" fg:w="4"/><text x="64.3436%" y="687.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (4 samples, 0.03%)</title><rect x="64.1293%" y="661" width="0.0256%" height="15" fill="rgb(225,137,2)" fg:x="10017" fg:w="4"/><text x="64.3436%" y="671.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (4 samples, 0.03%)</title><rect x="64.1293%" y="645" width="0.0256%" height="15" fill="rgb(230,25,20)" fg:x="10017" fg:w="4"/><text x="64.3436%" y="655.50"></text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="64.1293%" y="629" width="0.0256%" height="15" fill="rgb(221,14,53)" fg:x="10017" fg:w="4"/><text x="64.3436%" y="639.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (4 samples, 0.03%)</title><rect x="64.1549%" y="661" width="0.0256%" height="15" fill="rgb(219,87,14)" fg:x="10021" fg:w="4"/><text x="64.3692%" y="671.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy (4 samples, 0.03%)</title><rect x="64.1549%" y="645" width="0.0256%" height="15" fill="rgb(242,155,54)" fg:x="10021" fg:w="4"/><text x="64.3692%" y="655.50"></text></g><g><title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (4 samples, 0.03%)</title><rect x="64.1549%" y="629" width="0.0256%" height="15" fill="rgb(253,223,45)" fg:x="10021" fg:w="4"/><text x="64.3692%" y="639.50"></text></g><g><title>cfree (3 samples, 0.02%)</title><rect x="64.1613%" y="613" width="0.0192%" height="15" fill="rgb(221,14,53)" fg:x="10022" fg:w="3"/><text x="64.3756%" y="623.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (5 samples, 0.03%)</title><rect x="64.1549%" y="693" width="0.0320%" height="15" fill="rgb(253,113,26)" fg:x="10021" fg:w="5"/><text x="64.3692%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (5 samples, 0.03%)</title><rect x="64.1549%" y="677" width="0.0320%" height="15" fill="rgb(232,77,52)" fg:x="10021" fg:w="5"/><text x="64.3692%" y="687.50"></text></g><g><title>Request::~Request (14 samples, 0.09%)</title><rect x="64.1037%" y="757" width="0.0896%" height="15" fill="rgb(228,65,47)" fg:x="10013" fg:w="14"/><text x="64.3180%" y="767.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~map (10 samples, 0.06%)</title><rect x="64.1293%" y="741" width="0.0640%" height="15" fill="rgb(212,16,20)" fg:x="10017" fg:w="10"/><text x="64.3436%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (10 samples, 0.06%)</title><rect x="64.1293%" y="725" width="0.0640%" height="15" fill="rgb(248,132,45)" fg:x="10017" fg:w="10"/><text x="64.3436%" y="735.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (10 samples, 0.06%)</title><rect x="64.1293%" y="709" width="0.0640%" height="15" fill="rgb(253,113,26)" fg:x="10017" fg:w="10"/><text x="64.3436%" y="719.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (3 samples, 0.02%)</title><rect x="64.2125%" y="677" width="0.0192%" height="15" fill="rgb(219,87,14)" fg:x="10030" fg:w="3"/><text x="64.4268%" y="687.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (5 samples, 0.03%)</title><rect x="64.2125%" y="693" width="0.0320%" height="15" fill="rgb(232,77,52)" fg:x="10030" fg:w="5"/><text x="64.4268%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_put_node (2 samples, 0.01%)</title><rect x="64.2318%" y="677" width="0.0128%" height="15" fill="rgb(252,2,36)" fg:x="10033" fg:w="2"/><text x="64.4460%" y="687.50"></text></g><g><title>cfree (5 samples, 0.03%)</title><rect x="64.2446%" y="613" width="0.0320%" height="15" fill="rgb(221,14,53)" fg:x="10035" fg:w="5"/><text x="64.4588%" y="623.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (6 samples, 0.04%)</title><rect x="64.2446%" y="677" width="0.0384%" height="15" fill="rgb(232,77,52)" fg:x="10035" fg:w="6"/><text x="64.4588%" y="687.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (6 samples, 0.04%)</title><rect x="64.2446%" y="661" width="0.0384%" height="15" fill="rgb(219,87,14)" fg:x="10035" fg:w="6"/><text x="64.4588%" y="671.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy (6 samples, 0.04%)</title><rect x="64.2446%" y="645" width="0.0384%" height="15" fill="rgb(242,155,54)" fg:x="10035" fg:w="6"/><text x="64.4588%" y="655.50"></text></g><g><title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (6 samples, 0.04%)</title><rect x="64.2446%" y="629" width="0.0384%" height="15" fill="rgb(253,223,45)" fg:x="10035" fg:w="6"/><text x="64.4588%" y="639.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (3 samples, 0.02%)</title><rect x="64.2830%" y="645" width="0.0192%" height="15" fill="rgb(219,87,14)" fg:x="10041" fg:w="3"/><text x="64.4973%" y="655.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (6 samples, 0.04%)</title><rect x="64.2830%" y="661" width="0.0384%" height="15" fill="rgb(232,77,52)" fg:x="10041" fg:w="6"/><text x="64.4973%" y="671.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_put_node (3 samples, 0.02%)</title><rect x="64.3022%" y="645" width="0.0192%" height="15" fill="rgb(252,2,36)" fg:x="10044" fg:w="3"/><text x="64.5165%" y="655.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (3 samples, 0.02%)</title><rect x="64.3022%" y="629" width="0.0192%" height="15" fill="rgb(225,137,2)" fg:x="10044" fg:w="3"/><text x="64.5165%" y="639.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (3 samples, 0.02%)</title><rect x="64.3022%" y="613" width="0.0192%" height="15" fill="rgb(230,25,20)" fg:x="10044" fg:w="3"/><text x="64.5165%" y="623.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (9 samples, 0.06%)</title><rect x="64.2830%" y="677" width="0.0576%" height="15" fill="rgb(253,113,26)" fg:x="10041" fg:w="9"/><text x="64.4973%" y="687.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (3 samples, 0.02%)</title><rect x="64.3214%" y="661" width="0.0192%" height="15" fill="rgb(214,45,37)" fg:x="10047" fg:w="3"/><text x="64.5357%" y="671.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (18 samples, 0.12%)</title><rect x="64.2446%" y="693" width="0.1152%" height="15" fill="rgb(253,113,26)" fg:x="10035" fg:w="18"/><text x="64.4588%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (3 samples, 0.02%)</title><rect x="64.3406%" y="677" width="0.0192%" height="15" fill="rgb(214,45,37)" fg:x="10050" fg:w="3"/><text x="64.5549%" y="687.50"></text></g><g><title>Response::~Response (32 samples, 0.20%)</title><rect x="64.1933%" y="757" width="0.2049%" height="15" fill="rgb(251,130,18)" fg:x="10027" fg:w="32"/><text x="64.4076%" y="767.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~map (32 samples, 0.20%)</title><rect x="64.1933%" y="741" width="0.2049%" height="15" fill="rgb(212,16,20)" fg:x="10027" fg:w="32"/><text x="64.4076%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (30 samples, 0.19%)</title><rect x="64.2061%" y="725" width="0.1921%" height="15" fill="rgb(248,132,45)" fg:x="10029" fg:w="30"/><text x="64.4204%" y="735.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (29 samples, 0.19%)</title><rect x="64.2125%" y="709" width="0.1857%" height="15" fill="rgb(253,113,26)" fg:x="10030" fg:w="29"/><text x="64.4268%" y="719.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (6 samples, 0.04%)</title><rect x="64.3598%" y="693" width="0.0384%" height="15" fill="rgb(214,45,37)" fg:x="10053" fg:w="6"/><text x="64.5741%" y="703.50"></text></g><g><title>cfree (2 samples, 0.01%)</title><rect x="64.4046%" y="757" width="0.0128%" height="15" fill="rgb(221,14,53)" fg:x="10060" fg:w="2"/><text x="64.6189%" y="767.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="64.4174%" y="741" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="10062" fg:w="2"/><text x="64.6317%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.02%)</title><rect x="64.4174%" y="757" width="0.0192%" height="15" fill="rgb(244,92,22)" fg:x="10062" fg:w="3"/><text x="64.6317%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.03%)</title><rect x="64.4366%" y="757" width="0.0256%" height="15" fill="rgb(216,41,4)" fg:x="10065" fg:w="4"/><text x="64.6509%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (3 samples, 0.02%)</title><rect x="64.4878%" y="741" width="0.0192%" height="15" fill="rgb(216,50,33)" fg:x="10073" fg:w="3"/><text x="64.7021%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (3 samples, 0.02%)</title><rect x="64.4878%" y="725" width="0.0192%" height="15" fill="rgb(250,46,35)" fg:x="10073" fg:w="3"/><text x="64.7021%" y="735.50"></text></g><g><title>operator new (2 samples, 0.01%)</title><rect x="64.4942%" y="709" width="0.0128%" height="15" fill="rgb(214,91,1)" fg:x="10074" fg:w="2"/><text x="64.7085%" y="719.50"></text></g><g><title>operator new (2 samples, 0.01%)</title><rect x="64.5262%" y="725" width="0.0128%" height="15" fill="rgb(214,91,1)" fg:x="10079" fg:w="2"/><text x="64.7405%" y="735.50"></text></g><g><title>__libc_malloc (2 samples, 0.01%)</title><rect x="64.5262%" y="709" width="0.0128%" height="15" fill="rgb(232,24,50)" fg:x="10079" fg:w="2"/><text x="64.7405%" y="719.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.04%)</title><rect x="64.5070%" y="741" width="0.0448%" height="15" fill="rgb(254,182,12)" fg:x="10076" fg:w="7"/><text x="64.7213%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (2 samples, 0.01%)</title><rect x="64.5519%" y="741" width="0.0128%" height="15" fill="rgb(209,28,51)" fg:x="10083" fg:w="2"/><text x="64.7661%" y="751.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (20 samples, 0.13%)</title><rect x="64.4622%" y="757" width="0.1280%" height="15" fill="rgb(226,32,40)" fg:x="10069" fg:w="20"/><text x="64.6765%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.03%)</title><rect x="64.5647%" y="741" width="0.0256%" height="15" fill="rgb(244,92,22)" fg:x="10085" fg:w="4"/><text x="64.7789%" y="751.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="64.6607%" y="709" width="0.0192%" height="15" fill="rgb(247,113,52)" fg:x="10100" fg:w="3"/><text x="64.8750%" y="719.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.13%)</title><rect x="64.8848%" y="661" width="0.1280%" height="15" fill="rgb(247,113,52)" fg:x="10135" fg:w="20"/><text x="65.0990%" y="671.50"></text></g><g><title>_IO_default_xsputn (5 samples, 0.03%)</title><rect x="65.0128%" y="661" width="0.0320%" height="15" fill="rgb(222,74,13)" fg:x="10155" fg:w="5"/><text x="65.2271%" y="671.50"></text></g><g><title>inet_ntop (70 samples, 0.45%)</title><rect x="64.6159%" y="725" width="0.4481%" height="15" fill="rgb(221,131,48)" fg:x="10093" fg:w="70"/><text x="64.8302%" y="735.50"></text></g><g><title>sprintf (59 samples, 0.38%)</title><rect x="64.6863%" y="709" width="0.3777%" height="15" fill="rgb(213,81,41)" fg:x="10104" fg:w="59"/><text x="64.9006%" y="719.50"></text></g><g><title>[libc-2.31.so] (58 samples, 0.37%)</title><rect x="64.6927%" y="693" width="0.3713%" height="15" fill="rgb(247,113,52)" fg:x="10105" fg:w="58"/><text x="64.9070%" y="703.50"></text></g><g><title>[libc-2.31.so] (53 samples, 0.34%)</title><rect x="64.7247%" y="677" width="0.3393%" height="15" fill="rgb(247,113,52)" fg:x="10110" fg:w="53"/><text x="64.9390%" y="687.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="65.0768%" y="709" width="0.0320%" height="15" fill="rgb(247,113,52)" fg:x="10165" fg:w="5"/><text x="65.2911%" y="719.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (9 samples, 0.06%)</title><rect x="65.1216%" y="693" width="0.0576%" height="15" fill="rgb(213,123,36)" fg:x="10172" fg:w="9"/><text x="65.3359%" y="703.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (5 samples, 0.03%)</title><rect x="65.1472%" y="677" width="0.0320%" height="15" fill="rgb(226,199,5)" fg:x="10176" fg:w="5"/><text x="65.3615%" y="687.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (3 samples, 0.02%)</title><rect x="65.1601%" y="661" width="0.0192%" height="15" fill="rgb(230,189,45)" fg:x="10178" fg:w="3"/><text x="65.3743%" y="671.50"></text></g><g><title>std::ostream::sentry::sentry (3 samples, 0.02%)</title><rect x="65.1793%" y="693" width="0.0192%" height="15" fill="rgb(253,23,14)" fg:x="10181" fg:w="3"/><text x="65.3935%" y="703.50"></text></g><g><title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (23 samples, 0.15%)</title><rect x="65.0640%" y="725" width="0.1472%" height="15" fill="rgb(221,154,13)" fg:x="10163" fg:w="23"/><text x="65.2783%" y="735.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (16 samples, 0.10%)</title><rect x="65.1088%" y="709" width="0.1024%" height="15" fill="rgb(222,170,8)" fg:x="10170" fg:w="16"/><text x="65.3231%" y="719.50"></text></g><g><title>std::ostream::sentry::~sentry (2 samples, 0.01%)</title><rect x="65.1985%" y="693" width="0.0128%" height="15" fill="rgb(231,213,43)" fg:x="10184" fg:w="2"/><text x="65.4127%" y="703.50"></text></g><g><title>[libstdc++.so.6.0.28] (4 samples, 0.03%)</title><rect x="65.2433%" y="693" width="0.0256%" height="15" fill="rgb(226,148,0)" fg:x="10191" fg:w="4"/><text x="65.4576%" y="703.50"></text></g><g><title>operator new (11 samples, 0.07%)</title><rect x="65.3009%" y="645" width="0.0704%" height="15" fill="rgb(214,91,1)" fg:x="10200" fg:w="11"/><text x="65.5152%" y="655.50"></text></g><g><title>__libc_malloc (10 samples, 0.06%)</title><rect x="65.3073%" y="629" width="0.0640%" height="15" fill="rgb(232,24,50)" fg:x="10201" fg:w="10"/><text x="65.5216%" y="639.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (16 samples, 0.10%)</title><rect x="65.2817%" y="661" width="0.1024%" height="15" fill="rgb(211,92,40)" fg:x="10197" fg:w="16"/><text x="65.4960%" y="671.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.01%)</title><rect x="65.3713%" y="645" width="0.0128%" height="15" fill="rgb(211,63,27)" fg:x="10211" fg:w="2"/><text x="65.5856%" y="655.50"></text></g><g><title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (27 samples, 0.17%)</title><rect x="65.2369%" y="709" width="0.1729%" height="15" fill="rgb(244,144,25)" fg:x="10190" fg:w="27"/><text x="65.4512%" y="719.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (21 samples, 0.13%)</title><rect x="65.2753%" y="693" width="0.1344%" height="15" fill="rgb(213,123,36)" fg:x="10196" fg:w="21"/><text x="65.4896%" y="703.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (21 samples, 0.13%)</title><rect x="65.2753%" y="677" width="0.1344%" height="15" fill="rgb(226,199,5)" fg:x="10196" fg:w="21"/><text x="65.4896%" y="687.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (3 samples, 0.02%)</title><rect x="65.3905%" y="661" width="0.0192%" height="15" fill="rgb(219,58,21)" fg:x="10214" fg:w="3"/><text x="65.6048%" y="671.50"></text></g><g><title>operator&lt;&lt; (131 samples, 0.84%)</title><rect x="64.5903%" y="741" width="0.8387%" height="15" fill="rgb(206,204,30)" fg:x="10089" fg:w="131"/><text x="64.8046%" y="751.50"></text></g><g><title>std::ostream::_M_insert&lt;unsigned long&gt; (34 samples, 0.22%)</title><rect x="65.2113%" y="725" width="0.2177%" height="15" fill="rgb(226,22,13)" fg:x="10186" fg:w="34"/><text x="65.4256%" y="735.50"></text></g><g><title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (3 samples, 0.02%)</title><rect x="65.4097%" y="709" width="0.0192%" height="15" fill="rgb(243,180,8)" fg:x="10217" fg:w="3"/><text x="65.6240%" y="719.50"></text></g><g><title>__dynamic_cast (29 samples, 0.19%)</title><rect x="65.6082%" y="677" width="0.1857%" height="15" fill="rgb(214,65,42)" fg:x="10248" fg:w="29"/><text x="65.8225%" y="687.50"></text></g><g><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (21 samples, 0.13%)</title><rect x="65.6594%" y="661" width="0.1344%" height="15" fill="rgb(228,90,48)" fg:x="10256" fg:w="21"/><text x="65.8737%" y="671.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.06%)</title><rect x="65.7298%" y="645" width="0.0640%" height="15" fill="rgb(247,113,52)" fg:x="10267" fg:w="10"/><text x="65.9441%" y="655.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="65.7810%" y="629" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="10275" fg:w="2"/><text x="65.9953%" y="639.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="65.7810%" y="613" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="10275" fg:w="2"/><text x="65.9953%" y="623.50"></text></g><g><title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (44 samples, 0.28%)</title><rect x="65.5314%" y="693" width="0.2817%" height="15" fill="rgb(215,60,9)" fg:x="10236" fg:w="44"/><text x="65.7457%" y="703.50"></text></g><g><title>std::locale::id::_M_id (3 samples, 0.02%)</title><rect x="65.7939%" y="677" width="0.0192%" height="15" fill="rgb(241,7,48)" fg:x="10277" fg:w="3"/><text x="66.0081%" y="687.50"></text></g><g><title>__dynamic_cast (2 samples, 0.01%)</title><rect x="65.8323%" y="677" width="0.0128%" height="15" fill="rgb(214,65,42)" fg:x="10283" fg:w="2"/><text x="66.0466%" y="687.50"></text></g><g><title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (6 samples, 0.04%)</title><rect x="65.8131%" y="693" width="0.0384%" height="15" fill="rgb(207,140,3)" fg:x="10280" fg:w="6"/><text x="66.0273%" y="703.50"></text></g><g><title>__cxxabiv1::__si_class_type_info::__do_dyncast (3 samples, 0.02%)</title><rect x="65.8707%" y="661" width="0.0192%" height="15" fill="rgb(253,149,54)" fg:x="10289" fg:w="3"/><text x="66.0850%" y="671.50"></text></g><g><title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (7 samples, 0.04%)</title><rect x="65.8515%" y="693" width="0.0448%" height="15" fill="rgb(243,107,3)" fg:x="10286" fg:w="7"/><text x="66.0658%" y="703.50"></text></g><g><title>__dynamic_cast (6 samples, 0.04%)</title><rect x="65.8579%" y="677" width="0.0384%" height="15" fill="rgb(214,65,42)" fg:x="10287" fg:w="6"/><text x="66.0722%" y="687.50"></text></g><g><title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="65.8963%" y="693" width="0.0192%" height="15" fill="rgb(214,68,44)" fg:x="10293" fg:w="3"/><text x="66.1106%" y="703.50"></text></g><g><title>__dynamic_cast (2 samples, 0.01%)</title><rect x="65.9027%" y="677" width="0.0128%" height="15" fill="rgb(214,65,42)" fg:x="10294" fg:w="2"/><text x="66.1170%" y="687.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (64 samples, 0.41%)</title><rect x="65.5314%" y="709" width="0.4097%" height="15" fill="rgb(237,227,49)" fg:x="10236" fg:w="64"/><text x="65.7457%" y="719.50"></text></g><g><title>std::use_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (3 samples, 0.02%)</title><rect x="65.9219%" y="693" width="0.0192%" height="15" fill="rgb(227,16,42)" fg:x="10297" fg:w="3"/><text x="66.1362%" y="703.50"></text></g><g><title>__dynamic_cast (2 samples, 0.01%)</title><rect x="65.9283%" y="677" width="0.0128%" height="15" fill="rgb(214,65,42)" fg:x="10298" fg:w="2"/><text x="66.1426%" y="687.50"></text></g><g><title>std::locale::operator= (3 samples, 0.02%)</title><rect x="65.9411%" y="693" width="0.0192%" height="15" fill="rgb(243,143,9)" fg:x="10300" fg:w="3"/><text x="66.1554%" y="703.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (80 samples, 0.51%)</title><rect x="65.4738%" y="725" width="0.5122%" height="15" fill="rgb(223,206,25)" fg:x="10227" fg:w="80"/><text x="65.6880%" y="735.50"></text></g><g><title>std::ios_base::_M_init (7 samples, 0.04%)</title><rect x="65.9411%" y="709" width="0.0448%" height="15" fill="rgb(211,168,7)" fg:x="10300" fg:w="7"/><text x="66.1554%" y="719.50"></text></g><g><title>std::locale::~locale (4 samples, 0.03%)</title><rect x="65.9603%" y="693" width="0.0256%" height="15" fill="rgb(238,227,18)" fg:x="10303" fg:w="4"/><text x="66.1746%" y="703.50"></text></g><g><title>std::ios_base::ios_base (4 samples, 0.03%)</title><rect x="65.9859%" y="725" width="0.0256%" height="15" fill="rgb(227,77,35)" fg:x="10307" fg:w="4"/><text x="66.2002%" y="735.50"></text></g><g><title>[libstdc++.so.6.0.28] (4 samples, 0.03%)</title><rect x="66.0307%" y="709" width="0.0256%" height="15" fill="rgb(226,148,0)" fg:x="10314" fg:w="4"/><text x="66.2450%" y="719.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (99 samples, 0.63%)</title><rect x="65.4289%" y="741" width="0.6338%" height="15" fill="rgb(230,13,26)" fg:x="10220" fg:w="99"/><text x="65.6432%" y="751.50"></text></g><g><title>std::locale::locale (8 samples, 0.05%)</title><rect x="66.0115%" y="725" width="0.0512%" height="15" fill="rgb(240,92,16)" fg:x="10311" fg:w="8"/><text x="66.2258%" y="735.50"></text></g><g><title>operator new (4 samples, 0.03%)</title><rect x="66.0755%" y="693" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="10321" fg:w="4"/><text x="66.2898%" y="703.50"></text></g><g><title>__libc_malloc (4 samples, 0.03%)</title><rect x="66.0755%" y="677" width="0.0256%" height="15" fill="rgb(232,24,50)" fg:x="10321" fg:w="4"/><text x="66.2898%" y="687.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (7 samples, 0.04%)</title><rect x="66.0627%" y="741" width="0.0448%" height="15" fill="rgb(254,26,48)" fg:x="10319" fg:w="7"/><text x="66.2770%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (7 samples, 0.04%)</title><rect x="66.0627%" y="725" width="0.0448%" height="15" fill="rgb(236,91,4)" fg:x="10319" fg:w="7"/><text x="66.2770%" y="735.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (7 samples, 0.04%)</title><rect x="66.0627%" y="709" width="0.0448%" height="15" fill="rgb(250,46,35)" fg:x="10319" fg:w="7"/><text x="66.2770%" y="719.50"></text></g><g><title>cfree (2 samples, 0.01%)</title><rect x="66.1268%" y="725" width="0.0128%" height="15" fill="rgb(221,14,53)" fg:x="10329" fg:w="2"/><text x="66.3410%" y="735.50"></text></g><g><title>Http::~Http (636 samples, 4.07%)</title><rect x="62.0743%" y="773" width="4.0717%" height="15" fill="rgb(211,174,25)" fg:x="9696" fg:w="636"/><text x="62.2885%" y="783.50">Http::..</text></g><g><title>toString&lt;Address&amp;&gt; (243 samples, 1.56%)</title><rect x="64.5903%" y="757" width="1.5557%" height="15" fill="rgb(233,146,38)" fg:x="10089" fg:w="243"/><text x="64.8046%" y="767.50">t..</text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (6 samples, 0.04%)</title><rect x="66.1076%" y="741" width="0.0384%" height="15" fill="rgb(221,29,6)" fg:x="10326" fg:w="6"/><text x="66.3218%" y="751.50"></text></g><g><title>__split_vma (3 samples, 0.02%)</title><rect x="66.2036%" y="629" width="0.0192%" height="15" fill="rgb(231,148,17)" fg:x="10341" fg:w="3"/><text x="66.4179%" y="639.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.08%)</title><rect x="66.1460%" y="773" width="0.0832%" height="15" fill="rgb(247,113,52)" fg:x="10332" fg:w="13"/><text x="66.3603%" y="783.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.06%)</title><rect x="66.1716%" y="757" width="0.0576%" height="15" fill="rgb(247,113,52)" fg:x="10336" fg:w="9"/><text x="66.3859%" y="767.50"></text></g><g><title>__default_morecore (5 samples, 0.03%)</title><rect x="66.1972%" y="741" width="0.0320%" height="15" fill="rgb(232,82,47)" fg:x="10340" fg:w="5"/><text x="66.4115%" y="751.50"></text></g><g><title>__sbrk (4 samples, 0.03%)</title><rect x="66.2036%" y="725" width="0.0256%" height="15" fill="rgb(243,78,47)" fg:x="10341" fg:w="4"/><text x="66.4179%" y="735.50"></text></g><g><title>brk (4 samples, 0.03%)</title><rect x="66.2036%" y="709" width="0.0256%" height="15" fill="rgb(207,0,13)" fg:x="10341" fg:w="4"/><text x="66.4179%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="66.2036%" y="693" width="0.0256%" height="15" fill="rgb(205,226,15)" fg:x="10341" fg:w="4"/><text x="66.4179%" y="703.50"></text></g><g><title>do_syscall_64 (4 samples, 0.03%)</title><rect x="66.2036%" y="677" width="0.0256%" height="15" fill="rgb(220,74,14)" fg:x="10341" fg:w="4"/><text x="66.4179%" y="687.50"></text></g><g><title>__do_sys_brk (4 samples, 0.03%)</title><rect x="66.2036%" y="661" width="0.0256%" height="15" fill="rgb(251,218,4)" fg:x="10341" fg:w="4"/><text x="66.4179%" y="671.50"></text></g><g><title>__do_munmap (4 samples, 0.03%)</title><rect x="66.2036%" y="645" width="0.0256%" height="15" fill="rgb(225,34,24)" fg:x="10341" fg:w="4"/><text x="66.4179%" y="655.50"></text></g><g><title>Http::~Http (651 samples, 4.17%)</title><rect x="62.0679%" y="789" width="4.1677%" height="15" fill="rgb(211,174,25)" fg:x="9695" fg:w="651"/><text x="62.2821%" y="799.50">Http::..</text></g><g><title>__irqentry_text_start (9 samples, 0.06%)</title><rect x="66.2484%" y="773" width="0.0576%" height="15" fill="rgb(229,107,3)" fg:x="10348" fg:w="9"/><text x="66.4627%" y="783.50"></text></g><g><title>dnotify_flush (3 samples, 0.02%)</title><rect x="66.3572%" y="709" width="0.0192%" height="15" fill="rgb(230,207,42)" fg:x="10365" fg:w="3"/><text x="66.5715%" y="719.50"></text></g><g><title>fput_many (2 samples, 0.01%)</title><rect x="66.3764%" y="709" width="0.0128%" height="15" fill="rgb(223,66,3)" fg:x="10368" fg:w="2"/><text x="66.5907%" y="719.50"></text></g><g><title>task_work_add (2 samples, 0.01%)</title><rect x="66.3764%" y="693" width="0.0128%" height="15" fill="rgb(223,98,11)" fg:x="10368" fg:w="2"/><text x="66.5907%" y="703.50"></text></g><g><title>do_syscall_64 (15 samples, 0.10%)</title><rect x="66.3060%" y="757" width="0.0960%" height="15" fill="rgb(220,74,14)" fg:x="10357" fg:w="15"/><text x="66.5203%" y="767.50"></text></g><g><title>__x64_sys_close (13 samples, 0.08%)</title><rect x="66.3188%" y="741" width="0.0832%" height="15" fill="rgb(207,163,1)" fg:x="10359" fg:w="13"/><text x="66.5331%" y="751.50"></text></g><g><title>filp_close (10 samples, 0.06%)</title><rect x="66.3380%" y="725" width="0.0640%" height="15" fill="rgb(233,173,24)" fg:x="10362" fg:w="10"/><text x="66.5523%" y="735.50"></text></g><g><title>locks_remove_posix (2 samples, 0.01%)</title><rect x="66.3892%" y="709" width="0.0128%" height="15" fill="rgb(231,157,2)" fg:x="10370" fg:w="2"/><text x="66.6035%" y="719.50"></text></g><g><title>blkcg_maybe_throttle_current (3 samples, 0.02%)</title><rect x="66.4085%" y="725" width="0.0192%" height="15" fill="rgb(227,111,33)" fg:x="10373" fg:w="3"/><text x="66.6227%" y="735.50"></text></g><g><title>fpregs_assert_state_consistent (2 samples, 0.01%)</title><rect x="66.4277%" y="725" width="0.0128%" height="15" fill="rgb(227,221,38)" fg:x="10376" fg:w="2"/><text x="66.6419%" y="735.50"></text></g><g><title>mem_cgroup_handle_over_high (2 samples, 0.01%)</title><rect x="66.4405%" y="725" width="0.0128%" height="15" fill="rgb(242,184,43)" fg:x="10378" fg:w="2"/><text x="66.6547%" y="735.50"></text></g><g><title>call_rcu (3 samples, 0.02%)</title><rect x="66.4981%" y="677" width="0.0192%" height="15" fill="rgb(205,15,17)" fg:x="10387" fg:w="3"/><text x="66.7124%" y="687.50"></text></g><g><title>dentry_free (2 samples, 0.01%)</title><rect x="66.5173%" y="677" width="0.0128%" height="15" fill="rgb(235,93,14)" fg:x="10390" fg:w="2"/><text x="66.7316%" y="687.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="66.5173%" y="661" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="10390" fg:w="2"/><text x="66.7316%" y="671.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="66.5365%" y="629" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="10393" fg:w="2"/><text x="66.7508%" y="639.50"></text></g><g><title>fsnotify_destroy_marks (3 samples, 0.02%)</title><rect x="66.5365%" y="645" width="0.0192%" height="15" fill="rgb(205,128,45)" fg:x="10393" fg:w="3"/><text x="66.7508%" y="655.50"></text></g><g><title>destroy_inode (8 samples, 0.05%)</title><rect x="66.5301%" y="677" width="0.0512%" height="15" fill="rgb(239,121,48)" fg:x="10392" fg:w="8"/><text x="66.7444%" y="687.50"></text></g><g><title>__destroy_inode (8 samples, 0.05%)</title><rect x="66.5301%" y="661" width="0.0512%" height="15" fill="rgb(222,17,30)" fg:x="10392" fg:w="8"/><text x="66.7444%" y="671.50"></text></g><g><title>security_inode_free (3 samples, 0.02%)</title><rect x="66.5621%" y="645" width="0.0192%" height="15" fill="rgb(251,18,44)" fg:x="10397" fg:w="3"/><text x="66.7764%" y="655.50"></text></g><g><title>clear_inode (4 samples, 0.03%)</title><rect x="66.5941%" y="661" width="0.0256%" height="15" fill="rgb(217,206,5)" fg:x="10402" fg:w="4"/><text x="66.8084%" y="671.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="66.6005%" y="645" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="10403" fg:w="3"/><text x="66.8148%" y="655.50"></text></g><g><title>truncate_inode_pages_final (3 samples, 0.02%)</title><rect x="66.6261%" y="661" width="0.0192%" height="15" fill="rgb(211,153,33)" fg:x="10407" fg:w="3"/><text x="66.8404%" y="671.50"></text></g><g><title>truncate_inode_pages_range (2 samples, 0.01%)</title><rect x="66.6453%" y="661" width="0.0128%" height="15" fill="rgb(228,2,6)" fg:x="10410" fg:w="2"/><text x="66.8596%" y="671.50"></text></g><g><title>evict (17 samples, 0.11%)</title><rect x="66.5813%" y="677" width="0.1088%" height="15" fill="rgb(232,48,28)" fg:x="10400" fg:w="17"/><text x="66.7956%" y="687.50"></text></g><g><title>wake_up_bit (5 samples, 0.03%)</title><rect x="66.6581%" y="661" width="0.0320%" height="15" fill="rgb(249,46,35)" fg:x="10412" fg:w="5"/><text x="66.8724%" y="671.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="66.6645%" y="645" width="0.0256%" height="15" fill="rgb(229,107,3)" fg:x="10413" fg:w="4"/><text x="66.8788%" y="655.50"></text></g><g><title>iput.part.0 (4 samples, 0.03%)</title><rect x="66.6965%" y="677" width="0.0256%" height="15" fill="rgb(241,46,35)" fg:x="10418" fg:w="4"/><text x="66.9108%" y="687.50"></text></g><g><title>__irqentry_text_start (5 samples, 0.03%)</title><rect x="66.7670%" y="661" width="0.0320%" height="15" fill="rgb(229,107,3)" fg:x="10429" fg:w="5"/><text x="66.9813%" y="671.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="66.8118%" y="549" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="10436" fg:w="4"/><text x="67.0261%" y="559.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.04%)</title><rect x="66.8054%" y="661" width="0.0384%" height="15" fill="rgb(248,227,45)" fg:x="10435" fg:w="6"/><text x="67.0197%" y="671.50"></text></g><g><title>common_interrupt (6 samples, 0.04%)</title><rect x="66.8054%" y="645" width="0.0384%" height="15" fill="rgb(250,67,32)" fg:x="10435" fg:w="6"/><text x="67.0197%" y="655.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.03%)</title><rect x="66.8118%" y="629" width="0.0320%" height="15" fill="rgb(240,18,12)" fg:x="10436" fg:w="5"/><text x="67.0261%" y="639.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.03%)</title><rect x="66.8118%" y="613" width="0.0320%" height="15" fill="rgb(223,89,53)" fg:x="10436" fg:w="5"/><text x="67.0261%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.03%)</title><rect x="66.8118%" y="597" width="0.0320%" height="15" fill="rgb(208,184,36)" fg:x="10436" fg:w="5"/><text x="67.0261%" y="607.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.03%)</title><rect x="66.8118%" y="581" width="0.0320%" height="15" fill="rgb(249,91,22)" fg:x="10436" fg:w="5"/><text x="67.0261%" y="591.50"></text></g><g><title>net_rx_action (5 samples, 0.03%)</title><rect x="66.8118%" y="565" width="0.0320%" height="15" fill="rgb(231,11,52)" fg:x="10436" fg:w="5"/><text x="67.0261%" y="575.50"></text></g><g><title>refill_obj_stock (2 samples, 0.01%)</title><rect x="66.8438%" y="661" width="0.0128%" height="15" fill="rgb(238,145,38)" fg:x="10441" fg:w="2"/><text x="67.0581%" y="671.50"></text></g><g><title>__dentry_kill (60 samples, 0.38%)</title><rect x="66.4789%" y="693" width="0.3841%" height="15" fill="rgb(216,135,0)" fg:x="10384" fg:w="60"/><text x="66.6932%" y="703.50"></text></g><g><title>kmem_cache_free (22 samples, 0.14%)</title><rect x="66.7222%" y="677" width="0.1408%" height="15" fill="rgb(225,137,16)" fg:x="10422" fg:w="22"/><text x="66.9364%" y="687.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="66.8630%" y="693" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="10444" fg:w="3"/><text x="67.0773%" y="703.50"></text></g><g><title>dput (5 samples, 0.03%)</title><rect x="66.8886%" y="693" width="0.0320%" height="15" fill="rgb(252,3,5)" fg:x="10448" fg:w="5"/><text x="67.1029%" y="703.50"></text></g><g><title>fsnotify (7 samples, 0.04%)</title><rect x="66.9206%" y="693" width="0.0448%" height="15" fill="rgb(208,7,33)" fg:x="10453" fg:w="7"/><text x="67.1349%" y="703.50"></text></g><g><title>kmem_cache_free (2 samples, 0.01%)</title><rect x="66.9654%" y="693" width="0.0128%" height="15" fill="rgb(225,137,16)" fg:x="10460" fg:w="2"/><text x="67.1797%" y="703.50"></text></g><g><title>mntput_no_expire (2 samples, 0.01%)</title><rect x="66.9846%" y="693" width="0.0128%" height="15" fill="rgb(231,188,50)" fg:x="10463" fg:w="2"/><text x="67.1989%" y="703.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="67.0102%" y="677" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="10467" fg:w="2"/><text x="67.2245%" y="687.50"></text></g><g><title>percpu_counter_add_batch (5 samples, 0.03%)</title><rect x="66.9974%" y="693" width="0.0320%" height="15" fill="rgb(219,106,45)" fg:x="10465" fg:w="5"/><text x="67.2117%" y="703.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="67.0487%" y="661" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="10473" fg:w="2"/><text x="67.2629%" y="671.50"></text></g><g><title>security_file_free (6 samples, 0.04%)</title><rect x="67.0294%" y="693" width="0.0384%" height="15" fill="rgb(254,220,0)" fg:x="10470" fg:w="6"/><text x="67.2437%" y="703.50"></text></g><g><title>apparmor_file_free_security (4 samples, 0.03%)</title><rect x="67.0423%" y="677" width="0.0256%" height="15" fill="rgb(218,46,36)" fg:x="10472" fg:w="4"/><text x="67.2565%" y="687.50"></text></g><g><title>__cgroup_bpf_run_filter_sk (3 samples, 0.02%)</title><rect x="67.0935%" y="645" width="0.0192%" height="15" fill="rgb(230,162,30)" fg:x="10480" fg:w="3"/><text x="67.3078%" y="655.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.03%)</title><rect x="67.1319%" y="629" width="0.0320%" height="15" fill="rgb(252,29,18)" fg:x="10486" fg:w="5"/><text x="67.3462%" y="639.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="67.1895%" y="613" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="10495" fg:w="3"/><text x="67.4038%" y="623.50"></text></g><g><title>mem_cgroup_uncharge_skmem (2 samples, 0.01%)</title><rect x="67.2279%" y="597" width="0.0128%" height="15" fill="rgb(212,152,53)" fg:x="10501" fg:w="2"/><text x="67.4422%" y="607.50"></text></g><g><title>__mod_memcg_state.part.0 (2 samples, 0.01%)</title><rect x="67.2279%" y="581" width="0.0128%" height="15" fill="rgb(252,169,8)" fg:x="10501" fg:w="2"/><text x="67.4422%" y="591.50"></text></g><g><title>__sk_mem_reduce_allocated (7 samples, 0.04%)</title><rect x="67.2151%" y="613" width="0.0448%" height="15" fill="rgb(252,220,0)" fg:x="10499" fg:w="7"/><text x="67.4294%" y="623.50"></text></g><g><title>refill_stock (3 samples, 0.02%)</title><rect x="67.2407%" y="597" width="0.0192%" height="15" fill="rgb(214,139,20)" fg:x="10503" fg:w="3"/><text x="67.4550%" y="607.50"></text></g><g><title>dev_hard_start_xmit (9 samples, 0.06%)</title><rect x="67.3560%" y="485" width="0.0576%" height="15" fill="rgb(251,86,39)" fg:x="10521" fg:w="9"/><text x="67.5702%" y="495.50"></text></g><g><title>start_xmit (9 samples, 0.06%)</title><rect x="67.3560%" y="469" width="0.0576%" height="15" fill="rgb(211,140,13)" fg:x="10521" fg:w="9"/><text x="67.5702%" y="479.50"></text></g><g><title>virtqueue_notify (7 samples, 0.04%)</title><rect x="67.3688%" y="453" width="0.0448%" height="15" fill="rgb(219,119,18)" fg:x="10523" fg:w="7"/><text x="67.5830%" y="463.50"></text></g><g><title>vp_notify (6 samples, 0.04%)</title><rect x="67.3752%" y="437" width="0.0384%" height="15" fill="rgb(230,193,37)" fg:x="10524" fg:w="6"/><text x="67.5894%" y="447.50"></text></g><g><title>iowrite16 (6 samples, 0.04%)</title><rect x="67.3752%" y="421" width="0.0384%" height="15" fill="rgb(218,139,37)" fg:x="10524" fg:w="6"/><text x="67.5894%" y="431.50"></text></g><g><title>__qdisc_run (14 samples, 0.09%)</title><rect x="67.3431%" y="517" width="0.0896%" height="15" fill="rgb(252,144,25)" fg:x="10519" fg:w="14"/><text x="67.5574%" y="527.50"></text></g><g><title>sch_direct_xmit (14 samples, 0.09%)</title><rect x="67.3431%" y="501" width="0.0896%" height="15" fill="rgb(222,128,44)" fg:x="10519" fg:w="14"/><text x="67.5574%" y="511.50"></text></g><g><title>validate_xmit_skb_list (3 samples, 0.02%)</title><rect x="67.4136%" y="485" width="0.0192%" height="15" fill="rgb(254,174,52)" fg:x="10530" fg:w="3"/><text x="67.6279%" y="495.50"></text></g><g><title>validate_xmit_skb (3 samples, 0.02%)</title><rect x="67.4136%" y="469" width="0.0192%" height="15" fill="rgb(240,104,40)" fg:x="10530" fg:w="3"/><text x="67.6279%" y="479.50"></text></g><g><title>netif_skb_features (3 samples, 0.02%)</title><rect x="67.4136%" y="453" width="0.0192%" height="15" fill="rgb(211,31,54)" fg:x="10530" fg:w="3"/><text x="67.6279%" y="463.50"></text></g><g><title>__dev_queue_xmit (17 samples, 0.11%)</title><rect x="67.3367%" y="533" width="0.1088%" height="15" fill="rgb(232,116,37)" fg:x="10518" fg:w="17"/><text x="67.5510%" y="543.50"></text></g><g><title>pfifo_fast_enqueue (2 samples, 0.01%)</title><rect x="67.4328%" y="517" width="0.0128%" height="15" fill="rgb(250,59,0)" fg:x="10533" fg:w="2"/><text x="67.6471%" y="527.50"></text></g><g><title>ip_finish_output2 (18 samples, 0.12%)</title><rect x="67.3367%" y="549" width="0.1152%" height="15" fill="rgb(219,227,11)" fg:x="10518" fg:w="18"/><text x="67.5510%" y="559.50"></text></g><g><title>__ip_queue_xmit (26 samples, 0.17%)</title><rect x="67.2919%" y="565" width="0.1665%" height="15" fill="rgb(224,11,5)" fg:x="10511" fg:w="26"/><text x="67.5062%" y="575.50"></text></g><g><title>__tcp_transmit_skb (30 samples, 0.19%)</title><rect x="67.2791%" y="581" width="0.1921%" height="15" fill="rgb(238,106,36)" fg:x="10509" fg:w="30"/><text x="67.4934%" y="591.50"></text></g><g><title>ktime_get (7 samples, 0.04%)</title><rect x="67.4712%" y="581" width="0.0448%" height="15" fill="rgb(226,51,13)" fg:x="10539" fg:w="7"/><text x="67.6855%" y="591.50"></text></g><g><title>kvm_clock_get_cycles (5 samples, 0.03%)</title><rect x="67.4840%" y="565" width="0.0320%" height="15" fill="rgb(213,218,37)" fg:x="10541" fg:w="5"/><text x="67.6983%" y="575.50"></text></g><g><title>pvclock_clocksource_read (2 samples, 0.01%)</title><rect x="67.5032%" y="549" width="0.0128%" height="15" fill="rgb(246,59,10)" fg:x="10544" fg:w="2"/><text x="67.7175%" y="559.50"></text></g><g><title>__mod_timer (3 samples, 0.02%)</title><rect x="67.5160%" y="549" width="0.0192%" height="15" fill="rgb(232,140,47)" fg:x="10546" fg:w="3"/><text x="67.7303%" y="559.50"></text></g><g><title>sk_reset_timer (4 samples, 0.03%)</title><rect x="67.5160%" y="565" width="0.0256%" height="15" fill="rgb(220,37,33)" fg:x="10546" fg:w="4"/><text x="67.7303%" y="575.50"></text></g><g><title>tcp_event_new_data_sent (5 samples, 0.03%)</title><rect x="67.5160%" y="581" width="0.0320%" height="15" fill="rgb(227,19,23)" fg:x="10546" fg:w="5"/><text x="67.7303%" y="591.50"></text></g><g><title>__tcp_push_pending_frames (48 samples, 0.31%)</title><rect x="67.2599%" y="613" width="0.3073%" height="15" fill="rgb(226,88,38)" fg:x="10506" fg:w="48"/><text x="67.4742%" y="623.50"></text></g><g><title>tcp_write_xmit (48 samples, 0.31%)</title><rect x="67.2599%" y="597" width="0.3073%" height="15" fill="rgb(236,72,36)" fg:x="10506" fg:w="48"/><text x="67.4742%" y="607.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (3 samples, 0.02%)</title><rect x="67.5480%" y="581" width="0.0192%" height="15" fill="rgb(213,104,8)" fg:x="10551" fg:w="3"/><text x="67.7623%" y="591.50"></text></g><g><title>sk_reset_timer (2 samples, 0.01%)</title><rect x="67.5544%" y="565" width="0.0128%" height="15" fill="rgb(220,37,33)" fg:x="10552" fg:w="2"/><text x="67.7687%" y="575.50"></text></g><g><title>__mod_timer (2 samples, 0.01%)</title><rect x="67.5544%" y="549" width="0.0128%" height="15" fill="rgb(232,140,47)" fg:x="10552" fg:w="2"/><text x="67.7687%" y="559.50"></text></g><g><title>sk_stream_wait_close (2 samples, 0.01%)</title><rect x="67.5672%" y="613" width="0.0128%" height="15" fill="rgb(222,195,8)" fg:x="10554" fg:w="2"/><text x="67.7815%" y="623.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.02%)</title><rect x="67.6056%" y="581" width="0.0192%" height="15" fill="rgb(228,161,44)" fg:x="10560" fg:w="3"/><text x="67.8199%" y="591.50"></text></g><g><title>kmem_cache_alloc_node (3 samples, 0.02%)</title><rect x="67.6312%" y="581" width="0.0192%" height="15" fill="rgb(227,94,12)" fg:x="10564" fg:w="3"/><text x="67.8455%" y="591.50"></text></g><g><title>__alloc_skb (11 samples, 0.07%)</title><rect x="67.5864%" y="597" width="0.0704%" height="15" fill="rgb(237,90,40)" fg:x="10557" fg:w="11"/><text x="67.8007%" y="607.50"></text></g><g><title>mem_cgroup_charge_skmem (2 samples, 0.01%)</title><rect x="67.6569%" y="597" width="0.0128%" height="15" fill="rgb(248,15,41)" fg:x="10568" fg:w="2"/><text x="67.8711%" y="607.50"></text></g><g><title>__tcp_close (81 samples, 0.52%)</title><rect x="67.1639%" y="629" width="0.5186%" height="15" fill="rgb(218,198,27)" fg:x="10491" fg:w="81"/><text x="67.3782%" y="639.50"></text></g><g><title>tcp_send_fin (16 samples, 0.10%)</title><rect x="67.5800%" y="613" width="0.1024%" height="15" fill="rgb(236,214,50)" fg:x="10556" fg:w="16"/><text x="67.7943%" y="623.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.02%)</title><rect x="67.6889%" y="613" width="0.0192%" height="15" fill="rgb(217,35,53)" fg:x="10573" fg:w="3"/><text x="67.9031%" y="623.50"></text></g><g><title>inet_release (97 samples, 0.62%)</title><rect x="67.0935%" y="661" width="0.6210%" height="15" fill="rgb(252,100,5)" fg:x="10480" fg:w="97"/><text x="67.3078%" y="671.50"></text></g><g><title>tcp_close (93 samples, 0.60%)</title><rect x="67.1191%" y="645" width="0.5954%" height="15" fill="rgb(213,64,51)" fg:x="10484" fg:w="93"/><text x="67.3334%" y="655.50"></text></g><g><title>lock_sock_nested (5 samples, 0.03%)</title><rect x="67.6825%" y="629" width="0.0320%" height="15" fill="rgb(207,134,26)" fg:x="10572" fg:w="5"/><text x="67.8967%" y="639.50"></text></g><g><title>sock_close (104 samples, 0.67%)</title><rect x="67.0679%" y="693" width="0.6658%" height="15" fill="rgb(234,128,25)" fg:x="10476" fg:w="104"/><text x="67.2821%" y="703.50"></text></g><g><title>__sock_release (104 samples, 0.67%)</title><rect x="67.0679%" y="677" width="0.6658%" height="15" fill="rgb(231,37,52)" fg:x="10476" fg:w="104"/><text x="67.2821%" y="687.50"></text></g><g><title>up_write (2 samples, 0.01%)</title><rect x="67.7209%" y="661" width="0.0128%" height="15" fill="rgb(251,57,11)" fg:x="10578" fg:w="2"/><text x="67.9352%" y="671.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="67.7209%" y="645" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="10578" fg:w="2"/><text x="67.9352%" y="655.50"></text></g><g><title>__fput (201 samples, 1.29%)</title><rect x="66.4533%" y="709" width="1.2868%" height="15" fill="rgb(210,120,45)" fg:x="10380" fg:w="201"/><text x="66.6676%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (225 samples, 1.44%)</title><rect x="66.3060%" y="773" width="1.4405%" height="15" fill="rgb(205,226,15)" fg:x="10357" fg:w="225"/><text x="66.5203%" y="783.50"></text></g><g><title>syscall_exit_to_user_mode (210 samples, 1.34%)</title><rect x="66.4020%" y="757" width="1.3444%" height="15" fill="rgb(215,101,28)" fg:x="10372" fg:w="210"/><text x="66.6163%" y="767.50"></text></g><g><title>exit_to_user_mode_prepare (210 samples, 1.34%)</title><rect x="66.4020%" y="741" width="1.3444%" height="15" fill="rgb(240,77,26)" fg:x="10372" fg:w="210"/><text x="66.6163%" y="751.50"></text></g><g><title>task_work_run (202 samples, 1.29%)</title><rect x="66.4533%" y="725" width="1.2932%" height="15" fill="rgb(206,18,50)" fg:x="10380" fg:w="202"/><text x="66.6676%" y="735.50"></text></g><g><title>close (236 samples, 1.51%)</title><rect x="66.2420%" y="789" width="1.5109%" height="15" fill="rgb(227,142,28)" fg:x="10347" fg:w="236"/><text x="66.4563%" y="799.50"></text></g><g><title>std::__copy_move_a1&lt;false, IFileDescriptor**, IFileDescriptor**&gt; (3 samples, 0.02%)</title><rect x="67.7785%" y="725" width="0.0192%" height="15" fill="rgb(216,209,36)" fg:x="10587" fg:w="3"/><text x="67.9928%" y="735.50"></text></g><g><title>std::__copy_move_a2&lt;false, IFileDescriptor**, IFileDescriptor**&gt; (2 samples, 0.01%)</title><rect x="67.7849%" y="709" width="0.0128%" height="15" fill="rgb(254,148,49)" fg:x="10588" fg:w="2"/><text x="67.9992%" y="719.50"></text></g><g><title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;IFileDescriptor*&gt; (2 samples, 0.01%)</title><rect x="67.7849%" y="693" width="0.0128%" height="15" fill="rgb(218,218,51)" fg:x="10588" fg:w="2"/><text x="67.9992%" y="703.50"></text></g><g><title>std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt;::erase (8 samples, 0.05%)</title><rect x="67.7593%" y="789" width="0.0512%" height="15" fill="rgb(243,182,4)" fg:x="10584" fg:w="8"/><text x="67.9736%" y="799.50"></text></g><g><title>std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt;::_M_erase (8 samples, 0.05%)</title><rect x="67.7593%" y="773" width="0.0512%" height="15" fill="rgb(242,22,52)" fg:x="10584" fg:w="8"/><text x="67.9736%" y="783.50"></text></g><g><title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;IFileDescriptor**, std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;IFileDescriptor**, std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt; &gt; &gt; (5 samples, 0.03%)</title><rect x="67.7785%" y="757" width="0.0320%" height="15" fill="rgb(226,113,32)" fg:x="10587" fg:w="5"/><text x="67.9928%" y="767.50"></text></g><g><title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;IFileDescriptor**, std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;IFileDescriptor**, std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt; &gt; &gt; (5 samples, 0.03%)</title><rect x="67.7785%" y="741" width="0.0320%" height="15" fill="rgb(253,74,35)" fg:x="10587" fg:w="5"/><text x="67.9928%" y="751.50"></text></g><g><title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;IFileDescriptor**, std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt; &gt;, IFileDescriptor**&gt; (2 samples, 0.01%)</title><rect x="67.7977%" y="725" width="0.0128%" height="15" fill="rgb(242,33,20)" fg:x="10590" fg:w="2"/><text x="68.0120%" y="735.50"></text></g><g><title>__gnu_cxx::operator!=&lt;pollfd*, std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="67.8105%" y="757" width="0.0128%" height="15" fill="rgb(214,131,30)" fg:x="10592" fg:w="2"/><text x="68.0248%" y="767.50"></text></g><g><title>__gnu_cxx::__normal_iterator&lt;pollfd*, std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="67.8105%" y="741" width="0.0128%" height="15" fill="rgb(234,55,53)" fg:x="10592" fg:w="2"/><text x="68.0248%" y="751.50"></text></g><g><title>Poll::remove (907 samples, 5.81%)</title><rect x="62.0294%" y="805" width="5.8067%" height="15" fill="rgb(253,87,47)" fg:x="9689" fg:w="907"/><text x="62.2437%" y="815.50">Poll::rem..</text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::erase (4 samples, 0.03%)</title><rect x="67.8105%" y="789" width="0.0256%" height="15" fill="rgb(225,146,23)" fg:x="10592" fg:w="4"/><text x="68.0248%" y="799.50"></text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::_M_erase (4 samples, 0.03%)</title><rect x="67.8105%" y="773" width="0.0256%" height="15" fill="rgb(239,228,38)" fg:x="10592" fg:w="4"/><text x="68.0248%" y="783.50"></text></g><g><title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;pollfd*, std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;pollfd*, std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="67.8233%" y="757" width="0.0128%" height="15" fill="rgb(233,116,24)" fg:x="10594" fg:w="2"/><text x="68.0376%" y="767.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="67.8361%" y="805" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="10596" fg:w="2"/><text x="68.0504%" y="815.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="67.8745%" y="469" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="10602" fg:w="2"/><text x="68.0888%" y="479.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="67.8745%" y="453" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="10602" fg:w="2"/><text x="68.0888%" y="463.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="67.8745%" y="437" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="10602" fg:w="2"/><text x="68.0888%" y="447.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="67.8745%" y="421" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="10602" fg:w="2"/><text x="68.0888%" y="431.50"></text></g><g><title>__qdisc_run (2 samples, 0.01%)</title><rect x="67.8745%" y="405" width="0.0128%" height="15" fill="rgb(252,144,25)" fg:x="10602" fg:w="2"/><text x="68.0888%" y="415.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="67.8745%" y="389" width="0.0128%" height="15" fill="rgb(222,128,44)" fg:x="10602" fg:w="2"/><text x="68.0888%" y="399.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="67.8745%" y="373" width="0.0128%" height="15" fill="rgb(251,86,39)" fg:x="10602" fg:w="2"/><text x="68.0888%" y="383.50"></text></g><g><title>start_xmit (2 samples, 0.01%)</title><rect x="67.8745%" y="357" width="0.0128%" height="15" fill="rgb(211,140,13)" fg:x="10602" fg:w="2"/><text x="68.0888%" y="367.50"></text></g><g><title>virtqueue_notify (2 samples, 0.01%)</title><rect x="67.8745%" y="341" width="0.0128%" height="15" fill="rgb(219,119,18)" fg:x="10602" fg:w="2"/><text x="68.0888%" y="351.50"></text></g><g><title>vp_notify (2 samples, 0.01%)</title><rect x="67.8745%" y="325" width="0.0128%" height="15" fill="rgb(230,193,37)" fg:x="10602" fg:w="2"/><text x="68.0888%" y="335.50"></text></g><g><title>iowrite16 (2 samples, 0.01%)</title><rect x="67.8745%" y="309" width="0.0128%" height="15" fill="rgb(218,139,37)" fg:x="10602" fg:w="2"/><text x="68.0888%" y="319.50"></text></g><g><title>__tcp_push_pending_frames (4 samples, 0.03%)</title><rect x="67.8681%" y="501" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="10601" fg:w="4"/><text x="68.0824%" y="511.50"></text></g><g><title>tcp_write_xmit (4 samples, 0.03%)</title><rect x="67.8681%" y="485" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="10601" fg:w="4"/><text x="68.0824%" y="495.50"></text></g><g><title>napi_complete_done (8 samples, 0.05%)</title><rect x="67.8617%" y="677" width="0.0512%" height="15" fill="rgb(226,216,13)" fg:x="10600" fg:w="8"/><text x="68.0760%" y="687.50"></text></g><g><title>netif_receive_skb_list_internal (8 samples, 0.05%)</title><rect x="67.8617%" y="661" width="0.0512%" height="15" fill="rgb(216,153,44)" fg:x="10600" fg:w="8"/><text x="68.0760%" y="671.50"></text></g><g><title>__netif_receive_skb_list_core (8 samples, 0.05%)</title><rect x="67.8617%" y="645" width="0.0512%" height="15" fill="rgb(227,176,26)" fg:x="10600" fg:w="8"/><text x="68.0760%" y="655.50"></text></g><g><title>ip_list_rcv (8 samples, 0.05%)</title><rect x="67.8617%" y="629" width="0.0512%" height="15" fill="rgb(215,38,16)" fg:x="10600" fg:w="8"/><text x="68.0760%" y="639.50"></text></g><g><title>ip_sublist_rcv (8 samples, 0.05%)</title><rect x="67.8617%" y="613" width="0.0512%" height="15" fill="rgb(207,166,9)" fg:x="10600" fg:w="8"/><text x="68.0760%" y="623.50"></text></g><g><title>ip_sublist_rcv_finish (8 samples, 0.05%)</title><rect x="67.8617%" y="597" width="0.0512%" height="15" fill="rgb(223,178,14)" fg:x="10600" fg:w="8"/><text x="68.0760%" y="607.50"></text></g><g><title>ip_local_deliver_finish (8 samples, 0.05%)</title><rect x="67.8617%" y="581" width="0.0512%" height="15" fill="rgb(220,94,29)" fg:x="10600" fg:w="8"/><text x="68.0760%" y="591.50"></text></g><g><title>ip_protocol_deliver_rcu (8 samples, 0.05%)</title><rect x="67.8617%" y="565" width="0.0512%" height="15" fill="rgb(207,19,13)" fg:x="10600" fg:w="8"/><text x="68.0760%" y="575.50"></text></g><g><title>tcp_v4_rcv (8 samples, 0.05%)</title><rect x="67.8617%" y="549" width="0.0512%" height="15" fill="rgb(224,38,0)" fg:x="10600" fg:w="8"/><text x="68.0760%" y="559.50"></text></g><g><title>tcp_v4_do_rcv (7 samples, 0.04%)</title><rect x="67.8681%" y="533" width="0.0448%" height="15" fill="rgb(228,220,18)" fg:x="10601" fg:w="7"/><text x="68.0824%" y="543.50"></text></g><g><title>tcp_rcv_established (7 samples, 0.04%)</title><rect x="67.8681%" y="517" width="0.0448%" height="15" fill="rgb(224,50,47)" fg:x="10601" fg:w="7"/><text x="68.0824%" y="527.50"></text></g><g><title>tcp_ack (3 samples, 0.02%)</title><rect x="67.8937%" y="501" width="0.0192%" height="15" fill="rgb(213,228,3)" fg:x="10605" fg:w="3"/><text x="68.1080%" y="511.50"></text></g><g><title>virtnet_poll (10 samples, 0.06%)</title><rect x="67.8617%" y="693" width="0.0640%" height="15" fill="rgb(213,187,12)" fg:x="10600" fg:w="10"/><text x="68.0760%" y="703.50"></text></g><g><title>receive_buf (2 samples, 0.01%)</title><rect x="67.9129%" y="677" width="0.0128%" height="15" fill="rgb(233,111,44)" fg:x="10608" fg:w="2"/><text x="68.1272%" y="687.50"></text></g><g><title>common_interrupt (15 samples, 0.10%)</title><rect x="67.8489%" y="789" width="0.0960%" height="15" fill="rgb(250,67,32)" fg:x="10598" fg:w="15"/><text x="68.0632%" y="799.50"></text></g><g><title>irq_exit_rcu (14 samples, 0.09%)</title><rect x="67.8553%" y="773" width="0.0896%" height="15" fill="rgb(240,18,12)" fg:x="10599" fg:w="14"/><text x="68.0696%" y="783.50"></text></g><g><title>do_softirq_own_stack (13 samples, 0.08%)</title><rect x="67.8617%" y="757" width="0.0832%" height="15" fill="rgb(223,89,53)" fg:x="10600" fg:w="13"/><text x="68.0760%" y="767.50"></text></g><g><title>asm_call_sysvec_on_stack (13 samples, 0.08%)</title><rect x="67.8617%" y="741" width="0.0832%" height="15" fill="rgb(208,184,36)" fg:x="10600" fg:w="13"/><text x="68.0760%" y="751.50"></text></g><g><title>__softirqentry_text_start (13 samples, 0.08%)</title><rect x="67.8617%" y="725" width="0.0832%" height="15" fill="rgb(249,91,22)" fg:x="10600" fg:w="13"/><text x="68.0760%" y="735.50"></text></g><g><title>net_rx_action (13 samples, 0.08%)</title><rect x="67.8617%" y="709" width="0.0832%" height="15" fill="rgb(231,11,52)" fg:x="10600" fg:w="13"/><text x="68.0760%" y="719.50"></text></g><g><title>virtnet_poll_tx (3 samples, 0.02%)</title><rect x="67.9257%" y="693" width="0.0192%" height="15" fill="rgb(251,188,47)" fg:x="10610" fg:w="3"/><text x="68.1400%" y="703.50"></text></g><g><title>free_old_xmit_skbs (3 samples, 0.02%)</title><rect x="67.9257%" y="677" width="0.0192%" height="15" fill="rgb(235,178,6)" fg:x="10610" fg:w="3"/><text x="68.1400%" y="687.50"></text></g><g><title>virtqueue_get_buf_ctx_split (2 samples, 0.01%)</title><rect x="67.9321%" y="661" width="0.0128%" height="15" fill="rgb(235,34,35)" fg:x="10611" fg:w="2"/><text x="68.1464%" y="671.50"></text></g><g><title>asm_common_interrupt (16 samples, 0.10%)</title><rect x="67.8489%" y="805" width="0.1024%" height="15" fill="rgb(248,227,45)" fg:x="10598" fg:w="16"/><text x="68.0632%" y="815.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="67.9513%" y="805" width="0.0128%" height="15" fill="rgb(209,17,43)" fg:x="10614" fg:w="2"/><text x="68.1656%" y="815.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="67.9513%" y="789" width="0.0128%" height="15" fill="rgb(218,44,13)" fg:x="10614" fg:w="2"/><text x="68.1656%" y="799.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="67.9513%" y="773" width="0.0128%" height="15" fill="rgb(221,147,0)" fg:x="10614" fg:w="2"/><text x="68.1656%" y="783.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="67.9513%" y="757" width="0.0128%" height="15" fill="rgb(212,109,30)" fg:x="10614" fg:w="2"/><text x="68.1656%" y="767.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="67.9513%" y="741" width="0.0128%" height="15" fill="rgb(232,211,54)" fg:x="10614" fg:w="2"/><text x="68.1656%" y="751.50"></text></g><g><title>tick_sched_timer (2 samples, 0.01%)</title><rect x="67.9513%" y="725" width="0.0128%" height="15" fill="rgb(237,67,28)" fg:x="10614" fg:w="2"/><text x="68.1656%" y="735.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="68.0858%" y="789" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="799.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="68.0858%" y="773" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="783.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="68.0858%" y="757" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="767.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="68.0858%" y="741" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="68.0858%" y="725" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="735.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="68.0858%" y="709" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="719.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="68.0858%" y="693" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="703.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="68.0858%" y="677" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="687.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="68.0858%" y="661" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="671.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="68.0858%" y="645" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="655.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="68.0858%" y="629" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="639.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="68.0858%" y="613" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="623.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="68.0858%" y="597" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="607.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="68.0858%" y="581" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="591.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="68.0858%" y="565" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="575.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="68.0858%" y="549" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="559.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="68.0858%" y="533" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="543.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="68.0858%" y="517" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="527.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="68.0858%" y="501" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="10635" fg:w="2"/><text x="68.3001%" y="511.50"></text></g><g><title>std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt;::operator[] (22 samples, 0.14%)</title><rect x="67.9641%" y="805" width="0.1408%" height="15" fill="rgb(253,115,3)" fg:x="10616" fg:w="22"/><text x="68.1784%" y="815.50"></text></g><g><title>std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt;::size (13 samples, 0.08%)</title><rect x="68.1050%" y="805" width="0.0832%" height="15" fill="rgb(229,159,38)" fg:x="10638" fg:w="13"/><text x="68.3193%" y="815.50"></text></g><g><title>Poll::iterate (9,104 samples, 58.28%)</title><rect x="9.9744%" y="821" width="58.2843%" height="15" fill="rgb(241,227,18)" fg:x="1558" fg:w="9104"/><text x="10.1887%" y="831.50">Poll::iterate</text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::operator[] (11 samples, 0.07%)</title><rect x="68.1882%" y="805" width="0.0704%" height="15" fill="rgb(219,78,45)" fg:x="10651" fg:w="11"/><text x="68.4025%" y="815.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="68.2458%" y="789" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="10660" fg:w="2"/><text x="68.4601%" y="799.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="68.2458%" y="773" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="10660" fg:w="2"/><text x="68.4601%" y="783.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="68.2458%" y="757" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="10660" fg:w="2"/><text x="68.4601%" y="767.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="68.2458%" y="741" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="10660" fg:w="2"/><text x="68.4601%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="68.2458%" y="725" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="10660" fg:w="2"/><text x="68.4601%" y="735.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="68.2458%" y="709" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="10660" fg:w="2"/><text x="68.4601%" y="719.50"></text></g><g><title>__irqentry_text_start (74 samples, 0.47%)</title><rect x="68.5787%" y="805" width="0.4738%" height="15" fill="rgb(229,107,3)" fg:x="10712" fg:w="74"/><text x="68.7930%" y="815.50"></text></g><g><title>__pollwait (2 samples, 0.01%)</title><rect x="69.0525%" y="805" width="0.0128%" height="15" fill="rgb(248,41,12)" fg:x="10786" fg:w="2"/><text x="69.2668%" y="815.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.01%)</title><rect x="69.0525%" y="789" width="0.0128%" height="15" fill="rgb(211,8,20)" fg:x="10786" fg:w="2"/><text x="69.2668%" y="799.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.01%)</title><rect x="69.0525%" y="773" width="0.0128%" height="15" fill="rgb(210,87,27)" fg:x="10786" fg:w="2"/><text x="69.2668%" y="783.50"></text></g><g><title>__x86_indirect_thunk_rax (2 samples, 0.01%)</title><rect x="69.0653%" y="805" width="0.0128%" height="15" fill="rgb(231,153,3)" fg:x="10788" fg:w="2"/><text x="69.2796%" y="815.50"></text></g><g><title>_raw_spin_lock_irqsave (17 samples, 0.11%)</title><rect x="69.0845%" y="805" width="0.1088%" height="15" fill="rgb(206,213,41)" fg:x="10791" fg:w="17"/><text x="69.2988%" y="815.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="69.1805%" y="789" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="10806" fg:w="2"/><text x="69.3948%" y="799.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="69.1805%" y="773" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="10806" fg:w="2"/><text x="69.3948%" y="783.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="69.1805%" y="757" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="10806" fg:w="2"/><text x="69.3948%" y="767.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="69.2125%" y="501" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="10811" fg:w="2"/><text x="69.4268%" y="511.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="69.2125%" y="485" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="10811" fg:w="2"/><text x="69.4268%" y="495.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="69.2125%" y="469" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="10811" fg:w="2"/><text x="69.4268%" y="479.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="69.2125%" y="453" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="10811" fg:w="2"/><text x="69.4268%" y="463.50"></text></g><g><title>tcp_ack (2 samples, 0.01%)</title><rect x="69.2254%" y="501" width="0.0128%" height="15" fill="rgb(213,228,3)" fg:x="10813" fg:w="2"/><text x="69.4396%" y="511.50"></text></g><g><title>napi_complete_done (5 samples, 0.03%)</title><rect x="69.2125%" y="677" width="0.0320%" height="15" fill="rgb(226,216,13)" fg:x="10811" fg:w="5"/><text x="69.4268%" y="687.50"></text></g><g><title>netif_receive_skb_list_internal (5 samples, 0.03%)</title><rect x="69.2125%" y="661" width="0.0320%" height="15" fill="rgb(216,153,44)" fg:x="10811" fg:w="5"/><text x="69.4268%" y="671.50"></text></g><g><title>__netif_receive_skb_list_core (5 samples, 0.03%)</title><rect x="69.2125%" y="645" width="0.0320%" height="15" fill="rgb(227,176,26)" fg:x="10811" fg:w="5"/><text x="69.4268%" y="655.50"></text></g><g><title>ip_list_rcv (5 samples, 0.03%)</title><rect x="69.2125%" y="629" width="0.0320%" height="15" fill="rgb(215,38,16)" fg:x="10811" fg:w="5"/><text x="69.4268%" y="639.50"></text></g><g><title>ip_sublist_rcv (5 samples, 0.03%)</title><rect x="69.2125%" y="613" width="0.0320%" height="15" fill="rgb(207,166,9)" fg:x="10811" fg:w="5"/><text x="69.4268%" y="623.50"></text></g><g><title>ip_sublist_rcv_finish (5 samples, 0.03%)</title><rect x="69.2125%" y="597" width="0.0320%" height="15" fill="rgb(223,178,14)" fg:x="10811" fg:w="5"/><text x="69.4268%" y="607.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.03%)</title><rect x="69.2125%" y="581" width="0.0320%" height="15" fill="rgb(220,94,29)" fg:x="10811" fg:w="5"/><text x="69.4268%" y="591.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.03%)</title><rect x="69.2125%" y="565" width="0.0320%" height="15" fill="rgb(207,19,13)" fg:x="10811" fg:w="5"/><text x="69.4268%" y="575.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.03%)</title><rect x="69.2125%" y="549" width="0.0320%" height="15" fill="rgb(224,38,0)" fg:x="10811" fg:w="5"/><text x="69.4268%" y="559.50"></text></g><g><title>tcp_v4_do_rcv (5 samples, 0.03%)</title><rect x="69.2125%" y="533" width="0.0320%" height="15" fill="rgb(228,220,18)" fg:x="10811" fg:w="5"/><text x="69.4268%" y="543.50"></text></g><g><title>tcp_rcv_established (5 samples, 0.03%)</title><rect x="69.2125%" y="517" width="0.0320%" height="15" fill="rgb(224,50,47)" fg:x="10811" fg:w="5"/><text x="69.4268%" y="527.50"></text></g><g><title>virtnet_poll (8 samples, 0.05%)</title><rect x="69.2125%" y="693" width="0.0512%" height="15" fill="rgb(213,187,12)" fg:x="10811" fg:w="8"/><text x="69.4268%" y="703.50"></text></g><g><title>napi_gro_receive (3 samples, 0.02%)</title><rect x="69.2446%" y="677" width="0.0192%" height="15" fill="rgb(248,45,29)" fg:x="10816" fg:w="3"/><text x="69.4588%" y="687.50"></text></g><g><title>gro_normal_one (2 samples, 0.01%)</title><rect x="69.2510%" y="661" width="0.0128%" height="15" fill="rgb(253,74,4)" fg:x="10817" fg:w="2"/><text x="69.4652%" y="671.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="69.2510%" y="645" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="10817" fg:w="2"/><text x="69.4652%" y="655.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="69.2510%" y="629" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="10817" fg:w="2"/><text x="69.4652%" y="639.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="69.2510%" y="613" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="10817" fg:w="2"/><text x="69.4652%" y="623.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="69.2510%" y="597" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="10817" fg:w="2"/><text x="69.4652%" y="607.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="69.2510%" y="581" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="10817" fg:w="2"/><text x="69.4652%" y="591.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="69.2510%" y="565" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="10817" fg:w="2"/><text x="69.4652%" y="575.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="69.2510%" y="549" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="10817" fg:w="2"/><text x="69.4652%" y="559.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="69.2510%" y="533" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="10817" fg:w="2"/><text x="69.4652%" y="543.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="69.2510%" y="517" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="10817" fg:w="2"/><text x="69.4652%" y="527.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="69.2510%" y="501" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="10817" fg:w="2"/><text x="69.4652%" y="511.50"></text></g><g><title>net_rx_action (10 samples, 0.06%)</title><rect x="69.2061%" y="709" width="0.0640%" height="15" fill="rgb(231,11,52)" fg:x="10810" fg:w="10"/><text x="69.4204%" y="719.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.02%)</title><rect x="69.2702%" y="645" width="0.0192%" height="15" fill="rgb(238,106,36)" fg:x="10820" fg:w="3"/><text x="69.4845%" y="655.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.02%)</title><rect x="69.2702%" y="629" width="0.0192%" height="15" fill="rgb(224,11,5)" fg:x="10820" fg:w="3"/><text x="69.4845%" y="639.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.02%)</title><rect x="69.2702%" y="613" width="0.0192%" height="15" fill="rgb(219,227,11)" fg:x="10820" fg:w="3"/><text x="69.4845%" y="623.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.02%)</title><rect x="69.2702%" y="597" width="0.0192%" height="15" fill="rgb(232,116,37)" fg:x="10820" fg:w="3"/><text x="69.4845%" y="607.50"></text></g><g><title>__qdisc_run (3 samples, 0.02%)</title><rect x="69.2702%" y="581" width="0.0192%" height="15" fill="rgb(252,144,25)" fg:x="10820" fg:w="3"/><text x="69.4845%" y="591.50"></text></g><g><title>sch_direct_xmit (3 samples, 0.02%)</title><rect x="69.2702%" y="565" width="0.0192%" height="15" fill="rgb(222,128,44)" fg:x="10820" fg:w="3"/><text x="69.4845%" y="575.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="69.2766%" y="549" width="0.0128%" height="15" fill="rgb(251,86,39)" fg:x="10821" fg:w="2"/><text x="69.4909%" y="559.50"></text></g><g><title>start_xmit (2 samples, 0.01%)</title><rect x="69.2766%" y="533" width="0.0128%" height="15" fill="rgb(211,140,13)" fg:x="10821" fg:w="2"/><text x="69.4909%" y="543.50"></text></g><g><title>virtqueue_notify (2 samples, 0.01%)</title><rect x="69.2766%" y="517" width="0.0128%" height="15" fill="rgb(219,119,18)" fg:x="10821" fg:w="2"/><text x="69.4909%" y="527.50"></text></g><g><title>vp_notify (2 samples, 0.01%)</title><rect x="69.2766%" y="501" width="0.0128%" height="15" fill="rgb(230,193,37)" fg:x="10821" fg:w="2"/><text x="69.4909%" y="511.50"></text></g><g><title>iowrite16 (2 samples, 0.01%)</title><rect x="69.2766%" y="485" width="0.0128%" height="15" fill="rgb(218,139,37)" fg:x="10821" fg:w="2"/><text x="69.4909%" y="495.50"></text></g><g><title>common_interrupt (16 samples, 0.10%)</title><rect x="69.1933%" y="789" width="0.1024%" height="15" fill="rgb(250,67,32)" fg:x="10808" fg:w="16"/><text x="69.4076%" y="799.50"></text></g><g><title>irq_exit_rcu (15 samples, 0.10%)</title><rect x="69.1997%" y="773" width="0.0960%" height="15" fill="rgb(240,18,12)" fg:x="10809" fg:w="15"/><text x="69.4140%" y="783.50"></text></g><g><title>do_softirq_own_stack (15 samples, 0.10%)</title><rect x="69.1997%" y="757" width="0.0960%" height="15" fill="rgb(223,89,53)" fg:x="10809" fg:w="15"/><text x="69.4140%" y="767.50"></text></g><g><title>asm_call_sysvec_on_stack (15 samples, 0.10%)</title><rect x="69.1997%" y="741" width="0.0960%" height="15" fill="rgb(208,184,36)" fg:x="10809" fg:w="15"/><text x="69.4140%" y="751.50"></text></g><g><title>__softirqentry_text_start (15 samples, 0.10%)</title><rect x="69.1997%" y="725" width="0.0960%" height="15" fill="rgb(249,91,22)" fg:x="10809" fg:w="15"/><text x="69.4140%" y="735.50"></text></g><g><title>tasklet_action_common.constprop.0 (4 samples, 0.03%)</title><rect x="69.2702%" y="709" width="0.0256%" height="15" fill="rgb(220,151,48)" fg:x="10820" fg:w="4"/><text x="69.4845%" y="719.50"></text></g><g><title>tcp_tasklet_func (4 samples, 0.03%)</title><rect x="69.2702%" y="693" width="0.0256%" height="15" fill="rgb(218,189,37)" fg:x="10820" fg:w="4"/><text x="69.4845%" y="703.50"></text></g><g><title>tcp_tsq_handler (4 samples, 0.03%)</title><rect x="69.2702%" y="677" width="0.0256%" height="15" fill="rgb(238,207,14)" fg:x="10820" fg:w="4"/><text x="69.4845%" y="687.50"></text></g><g><title>tcp_write_xmit (4 samples, 0.03%)</title><rect x="69.2702%" y="661" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="10820" fg:w="4"/><text x="69.4845%" y="671.50"></text></g><g><title>asm_common_interrupt (17 samples, 0.11%)</title><rect x="69.1933%" y="805" width="0.1088%" height="15" fill="rgb(248,227,45)" fg:x="10808" fg:w="17"/><text x="69.4076%" y="815.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="69.3022%" y="805" width="0.0320%" height="15" fill="rgb(209,17,43)" fg:x="10825" fg:w="5"/><text x="69.5165%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.06%)</title><rect x="69.3342%" y="805" width="0.0640%" height="15" fill="rgb(234,224,53)" fg:x="10830" fg:w="10"/><text x="69.5485%" y="815.50"></text></g><g><title>__x86_return_thunk (3 samples, 0.02%)</title><rect x="69.4366%" y="789" width="0.0192%" height="15" fill="rgb(211,8,20)" fg:x="10846" fg:w="3"/><text x="69.6509%" y="799.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.01%)</title><rect x="69.4430%" y="773" width="0.0128%" height="15" fill="rgb(210,87,27)" fg:x="10847" fg:w="2"/><text x="69.6573%" y="783.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="69.7759%" y="757" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="10899" fg:w="2"/><text x="69.9902%" y="767.50"></text></g><g><title>__check_object_size (3 samples, 0.02%)</title><rect x="71.5941%" y="741" width="0.0192%" height="15" fill="rgb(218,1,22)" fg:x="11183" fg:w="3"/><text x="71.8084%" y="751.50"></text></g><g><title>__fdget (20 samples, 0.13%)</title><rect x="71.6133%" y="741" width="0.1280%" height="15" fill="rgb(239,45,19)" fg:x="11186" fg:w="20"/><text x="71.8276%" y="751.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="71.7286%" y="725" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="735.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="71.7286%" y="709" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="719.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="71.7286%" y="693" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="703.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="71.7286%" y="677" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="687.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="71.7286%" y="661" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="671.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="71.7286%" y="645" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="655.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="71.7286%" y="629" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="639.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="71.7286%" y="613" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="623.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="71.7286%" y="597" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="607.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="71.7286%" y="581" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="591.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="71.7286%" y="565" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="575.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="71.7286%" y="549" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="559.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="71.7286%" y="533" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="543.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="71.7286%" y="517" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="527.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="71.7286%" y="501" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="511.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="71.7286%" y="485" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="495.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="71.7286%" y="469" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="479.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="71.7286%" y="453" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="463.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="71.7286%" y="437" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="71.7286%" y="421" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="431.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="71.7286%" y="405" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="415.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="71.7286%" y="389" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="399.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="71.7286%" y="373" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="11204" fg:w="2"/><text x="71.9428%" y="383.50"></text></g><g><title>__irqentry_text_start (55 samples, 0.35%)</title><rect x="74.3662%" y="725" width="0.3521%" height="15" fill="rgb(229,107,3)" fg:x="11616" fg:w="55"/><text x="74.5805%" y="735.50"></text></g><g><title>handle_irq_event (2 samples, 0.01%)</title><rect x="74.7183%" y="661" width="0.0128%" height="15" fill="rgb(209,73,52)" fg:x="11671" fg:w="2"/><text x="74.9326%" y="671.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="74.7183%" y="645" width="0.0128%" height="15" fill="rgb(239,110,26)" fg:x="11671" fg:w="2"/><text x="74.9326%" y="655.50"></text></g><g><title>vring_interrupt (2 samples, 0.01%)</title><rect x="74.7183%" y="629" width="0.0128%" height="15" fill="rgb(206,212,41)" fg:x="11671" fg:w="2"/><text x="74.9326%" y="639.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="74.7183%" y="693" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="11671" fg:w="4"/><text x="74.9326%" y="703.50"></text></g><g><title>handle_edge_irq (4 samples, 0.03%)</title><rect x="74.7183%" y="677" width="0.0256%" height="15" fill="rgb(219,15,9)" fg:x="11671" fg:w="4"/><text x="74.9326%" y="687.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (4 samples, 0.03%)</title><rect x="74.7631%" y="517" width="0.0256%" height="15" fill="rgb(246,15,53)" fg:x="11678" fg:w="4"/><text x="74.9774%" y="527.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.02%)</title><rect x="74.8015%" y="389" width="0.0192%" height="15" fill="rgb(238,106,36)" fg:x="11684" fg:w="3"/><text x="75.0158%" y="399.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.02%)</title><rect x="74.8015%" y="373" width="0.0192%" height="15" fill="rgb(224,11,5)" fg:x="11684" fg:w="3"/><text x="75.0158%" y="383.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="74.8079%" y="357" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="11685" fg:w="2"/><text x="75.0222%" y="367.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="74.8079%" y="341" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="11685" fg:w="2"/><text x="75.0222%" y="351.50"></text></g><g><title>__qdisc_run (2 samples, 0.01%)</title><rect x="74.8079%" y="325" width="0.0128%" height="15" fill="rgb(252,144,25)" fg:x="11685" fg:w="2"/><text x="75.0222%" y="335.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="74.8079%" y="309" width="0.0128%" height="15" fill="rgb(222,128,44)" fg:x="11685" fg:w="2"/><text x="75.0222%" y="319.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="74.8079%" y="293" width="0.0128%" height="15" fill="rgb(251,86,39)" fg:x="11685" fg:w="2"/><text x="75.0222%" y="303.50"></text></g><g><title>__tcp_push_pending_frames (4 samples, 0.03%)</title><rect x="74.8015%" y="421" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="11684" fg:w="4"/><text x="75.0158%" y="431.50"></text></g><g><title>tcp_write_xmit (4 samples, 0.03%)</title><rect x="74.8015%" y="405" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="11684" fg:w="4"/><text x="75.0158%" y="415.50"></text></g><g><title>napi_complete_done (14 samples, 0.09%)</title><rect x="74.7567%" y="597" width="0.0896%" height="15" fill="rgb(226,216,13)" fg:x="11677" fg:w="14"/><text x="74.9710%" y="607.50"></text></g><g><title>netif_receive_skb_list_internal (14 samples, 0.09%)</title><rect x="74.7567%" y="581" width="0.0896%" height="15" fill="rgb(216,153,44)" fg:x="11677" fg:w="14"/><text x="74.9710%" y="591.50"></text></g><g><title>__netif_receive_skb_list_core (14 samples, 0.09%)</title><rect x="74.7567%" y="565" width="0.0896%" height="15" fill="rgb(227,176,26)" fg:x="11677" fg:w="14"/><text x="74.9710%" y="575.50"></text></g><g><title>ip_list_rcv (14 samples, 0.09%)</title><rect x="74.7567%" y="549" width="0.0896%" height="15" fill="rgb(215,38,16)" fg:x="11677" fg:w="14"/><text x="74.9710%" y="559.50"></text></g><g><title>ip_sublist_rcv (14 samples, 0.09%)</title><rect x="74.7567%" y="533" width="0.0896%" height="15" fill="rgb(207,166,9)" fg:x="11677" fg:w="14"/><text x="74.9710%" y="543.50"></text></g><g><title>ip_sublist_rcv_finish (9 samples, 0.06%)</title><rect x="74.7887%" y="517" width="0.0576%" height="15" fill="rgb(223,178,14)" fg:x="11682" fg:w="9"/><text x="75.0030%" y="527.50"></text></g><g><title>ip_local_deliver_finish (9 samples, 0.06%)</title><rect x="74.7887%" y="501" width="0.0576%" height="15" fill="rgb(220,94,29)" fg:x="11682" fg:w="9"/><text x="75.0030%" y="511.50"></text></g><g><title>ip_protocol_deliver_rcu (9 samples, 0.06%)</title><rect x="74.7887%" y="485" width="0.0576%" height="15" fill="rgb(207,19,13)" fg:x="11682" fg:w="9"/><text x="75.0030%" y="495.50"></text></g><g><title>tcp_v4_rcv (9 samples, 0.06%)</title><rect x="74.7887%" y="469" width="0.0576%" height="15" fill="rgb(224,38,0)" fg:x="11682" fg:w="9"/><text x="75.0030%" y="479.50"></text></g><g><title>tcp_v4_do_rcv (8 samples, 0.05%)</title><rect x="74.7951%" y="453" width="0.0512%" height="15" fill="rgb(228,220,18)" fg:x="11683" fg:w="8"/><text x="75.0094%" y="463.50"></text></g><g><title>tcp_rcv_established (7 samples, 0.04%)</title><rect x="74.8015%" y="437" width="0.0448%" height="15" fill="rgb(224,50,47)" fg:x="11684" fg:w="7"/><text x="75.0158%" y="447.50"></text></g><g><title>tcp_ack (3 samples, 0.02%)</title><rect x="74.8271%" y="421" width="0.0192%" height="15" fill="rgb(213,228,3)" fg:x="11688" fg:w="3"/><text x="75.0414%" y="431.50"></text></g><g><title>receive_buf (2 samples, 0.01%)</title><rect x="74.8528%" y="597" width="0.0128%" height="15" fill="rgb(233,111,44)" fg:x="11692" fg:w="2"/><text x="75.0670%" y="607.50"></text></g><g><title>page_to_skb (2 samples, 0.01%)</title><rect x="74.8528%" y="581" width="0.0128%" height="15" fill="rgb(243,180,22)" fg:x="11692" fg:w="2"/><text x="75.0670%" y="591.50"></text></g><g><title>virtnet_poll (18 samples, 0.12%)</title><rect x="74.7567%" y="613" width="0.1152%" height="15" fill="rgb(213,187,12)" fg:x="11677" fg:w="18"/><text x="74.9710%" y="623.50"></text></g><g><title>net_rx_action (25 samples, 0.16%)</title><rect x="74.7503%" y="629" width="0.1601%" height="15" fill="rgb(231,11,52)" fg:x="11676" fg:w="25"/><text x="74.9646%" y="639.50"></text></g><g><title>virtnet_poll_tx (6 samples, 0.04%)</title><rect x="74.8720%" y="613" width="0.0384%" height="15" fill="rgb(251,188,47)" fg:x="11695" fg:w="6"/><text x="75.0862%" y="623.50"></text></g><g><title>free_old_xmit_skbs (5 samples, 0.03%)</title><rect x="74.8784%" y="597" width="0.0320%" height="15" fill="rgb(235,178,6)" fg:x="11696" fg:w="5"/><text x="75.0926%" y="607.50"></text></g><g><title>virtqueue_get_buf_ctx_split (3 samples, 0.02%)</title><rect x="74.8912%" y="581" width="0.0192%" height="15" fill="rgb(235,34,35)" fg:x="11698" fg:w="3"/><text x="75.1055%" y="591.50"></text></g><g><title>__qdisc_run (4 samples, 0.03%)</title><rect x="74.9232%" y="501" width="0.0256%" height="15" fill="rgb(252,144,25)" fg:x="11703" fg:w="4"/><text x="75.1375%" y="511.50"></text></g><g><title>sch_direct_xmit (3 samples, 0.02%)</title><rect x="74.9296%" y="485" width="0.0192%" height="15" fill="rgb(222,128,44)" fg:x="11704" fg:w="3"/><text x="75.1439%" y="495.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.02%)</title><rect x="74.9296%" y="469" width="0.0192%" height="15" fill="rgb(251,86,39)" fg:x="11704" fg:w="3"/><text x="75.1439%" y="479.50"></text></g><g><title>start_xmit (3 samples, 0.02%)</title><rect x="74.9296%" y="453" width="0.0192%" height="15" fill="rgb(211,140,13)" fg:x="11704" fg:w="3"/><text x="75.1439%" y="463.50"></text></g><g><title>__ip_queue_xmit (5 samples, 0.03%)</title><rect x="74.9232%" y="549" width="0.0320%" height="15" fill="rgb(224,11,5)" fg:x="11703" fg:w="5"/><text x="75.1375%" y="559.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.03%)</title><rect x="74.9232%" y="533" width="0.0320%" height="15" fill="rgb(219,227,11)" fg:x="11703" fg:w="5"/><text x="75.1375%" y="543.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="74.9232%" y="517" width="0.0320%" height="15" fill="rgb(232,116,37)" fg:x="11703" fg:w="5"/><text x="75.1375%" y="527.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.04%)</title><rect x="74.9232%" y="565" width="0.0384%" height="15" fill="rgb(238,106,36)" fg:x="11703" fg:w="6"/><text x="75.1375%" y="575.50"></text></g><g><title>do_softirq_own_stack (37 samples, 0.24%)</title><rect x="74.7439%" y="677" width="0.2369%" height="15" fill="rgb(223,89,53)" fg:x="11675" fg:w="37"/><text x="74.9582%" y="687.50"></text></g><g><title>asm_call_sysvec_on_stack (37 samples, 0.24%)</title><rect x="74.7439%" y="661" width="0.2369%" height="15" fill="rgb(208,184,36)" fg:x="11675" fg:w="37"/><text x="74.9582%" y="671.50"></text></g><g><title>__softirqentry_text_start (37 samples, 0.24%)</title><rect x="74.7439%" y="645" width="0.2369%" height="15" fill="rgb(249,91,22)" fg:x="11675" fg:w="37"/><text x="74.9582%" y="655.50"></text></g><g><title>tasklet_action_common.constprop.0 (11 samples, 0.07%)</title><rect x="74.9104%" y="629" width="0.0704%" height="15" fill="rgb(220,151,48)" fg:x="11701" fg:w="11"/><text x="75.1247%" y="639.50"></text></g><g><title>tcp_tasklet_func (11 samples, 0.07%)</title><rect x="74.9104%" y="613" width="0.0704%" height="15" fill="rgb(218,189,37)" fg:x="11701" fg:w="11"/><text x="75.1247%" y="623.50"></text></g><g><title>tcp_tsq_handler (10 samples, 0.06%)</title><rect x="74.9168%" y="597" width="0.0640%" height="15" fill="rgb(238,207,14)" fg:x="11702" fg:w="10"/><text x="75.1311%" y="607.50"></text></g><g><title>tcp_write_xmit (9 samples, 0.06%)</title><rect x="74.9232%" y="581" width="0.0576%" height="15" fill="rgb(236,72,36)" fg:x="11703" fg:w="9"/><text x="75.1375%" y="591.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.02%)</title><rect x="74.9616%" y="565" width="0.0192%" height="15" fill="rgb(225,2,28)" fg:x="11709" fg:w="3"/><text x="75.1759%" y="575.50"></text></g><g><title>__alloc_skb (3 samples, 0.02%)</title><rect x="74.9616%" y="549" width="0.0192%" height="15" fill="rgb(237,90,40)" fg:x="11709" fg:w="3"/><text x="75.1759%" y="559.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.02%)</title><rect x="74.9616%" y="533" width="0.0192%" height="15" fill="rgb(228,161,44)" fg:x="11709" fg:w="3"/><text x="75.1759%" y="543.50"></text></g><g><title>__slab_alloc (2 samples, 0.01%)</title><rect x="74.9680%" y="517" width="0.0128%" height="15" fill="rgb(229,140,31)" fg:x="11710" fg:w="2"/><text x="75.1823%" y="527.50"></text></g><g><title>___slab_alloc (2 samples, 0.01%)</title><rect x="74.9680%" y="501" width="0.0128%" height="15" fill="rgb(224,215,35)" fg:x="11710" fg:w="2"/><text x="75.1823%" y="511.50"></text></g><g><title>allocate_slab (2 samples, 0.01%)</title><rect x="74.9680%" y="485" width="0.0128%" height="15" fill="rgb(222,145,35)" fg:x="11710" fg:w="2"/><text x="75.1823%" y="495.50"></text></g><g><title>asm_common_interrupt (42 samples, 0.27%)</title><rect x="74.7183%" y="725" width="0.2689%" height="15" fill="rgb(248,227,45)" fg:x="11671" fg:w="42"/><text x="74.9326%" y="735.50"></text></g><g><title>common_interrupt (42 samples, 0.27%)</title><rect x="74.7183%" y="709" width="0.2689%" height="15" fill="rgb(250,67,32)" fg:x="11671" fg:w="42"/><text x="74.9326%" y="719.50"></text></g><g><title>irq_exit_rcu (38 samples, 0.24%)</title><rect x="74.7439%" y="693" width="0.2433%" height="15" fill="rgb(240,18,12)" fg:x="11675" fg:w="38"/><text x="74.9582%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="74.9936%" y="693" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="11714" fg:w="2"/><text x="75.2079%" y="703.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="74.9936%" y="677" width="0.0128%" height="15" fill="rgb(221,147,0)" fg:x="11714" fg:w="2"/><text x="75.2079%" y="687.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="74.9936%" y="661" width="0.0128%" height="15" fill="rgb(212,109,30)" fg:x="11714" fg:w="2"/><text x="75.2079%" y="671.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="74.9936%" y="645" width="0.0128%" height="15" fill="rgb(232,211,54)" fg:x="11714" fg:w="2"/><text x="75.2079%" y="655.50"></text></g><g><title>__fget_light (512 samples, 3.28%)</title><rect x="71.7414%" y="741" width="3.2778%" height="15" fill="rgb(243,103,32)" fg:x="11206" fg:w="512"/><text x="71.9556%" y="751.50">__fg..</text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="74.9872%" y="725" width="0.0320%" height="15" fill="rgb(209,17,43)" fg:x="11713" fg:w="5"/><text x="75.2015%" y="735.50"></text></g><g><title>sysvec_apic_timer_interrupt (4 samples, 0.03%)</title><rect x="74.9936%" y="709" width="0.0256%" height="15" fill="rgb(218,44,13)" fg:x="11714" fg:w="4"/><text x="75.2079%" y="719.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="75.0064%" y="693" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="11716" fg:w="2"/><text x="75.2207%" y="703.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="75.0064%" y="677" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="11716" fg:w="2"/><text x="75.2207%" y="687.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="75.0064%" y="661" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="11716" fg:w="2"/><text x="75.2207%" y="671.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="75.0064%" y="645" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="11716" fg:w="2"/><text x="75.2207%" y="655.50"></text></g><g><title>__irqentry_text_start (26 samples, 0.17%)</title><rect x="75.0192%" y="741" width="0.1665%" height="15" fill="rgb(229,107,3)" fg:x="11718" fg:w="26"/><text x="75.2335%" y="751.50"></text></g><g><title>__x86_return_thunk (4 samples, 0.03%)</title><rect x="75.1857%" y="741" width="0.0256%" height="15" fill="rgb(211,8,20)" fg:x="11744" fg:w="4"/><text x="75.3999%" y="751.50"></text></g><g><title>srso_safe_ret_alias (4 samples, 0.03%)</title><rect x="75.1857%" y="725" width="0.0256%" height="15" fill="rgb(210,87,27)" fg:x="11744" fg:w="4"/><text x="75.3999%" y="735.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="75.3393%" y="709" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="11768" fg:w="2"/><text x="75.5536%" y="719.50"></text></g><g><title>_copy_from_user (24 samples, 0.15%)</title><rect x="75.2113%" y="741" width="0.1536%" height="15" fill="rgb(224,68,34)" fg:x="11748" fg:w="24"/><text x="75.4256%" y="751.50"></text></g><g><title>copy_user_generic_string (15 samples, 0.10%)</title><rect x="75.2689%" y="725" width="0.0960%" height="15" fill="rgb(233,29,30)" fg:x="11757" fg:w="15"/><text x="75.4832%" y="735.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.01%)</title><rect x="75.3649%" y="533" width="0.0128%" height="15" fill="rgb(246,15,53)" fg:x="11772" fg:w="2"/><text x="75.5792%" y="543.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.02%)</title><rect x="75.3777%" y="405" width="0.0192%" height="15" fill="rgb(238,106,36)" fg:x="11774" fg:w="3"/><text x="75.5920%" y="415.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.02%)</title><rect x="75.3777%" y="389" width="0.0192%" height="15" fill="rgb(224,11,5)" fg:x="11774" fg:w="3"/><text x="75.5920%" y="399.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="75.3841%" y="373" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="11775" fg:w="2"/><text x="75.5984%" y="383.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="75.3841%" y="357" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="11775" fg:w="2"/><text x="75.5984%" y="367.50"></text></g><g><title>__tcp_push_pending_frames (4 samples, 0.03%)</title><rect x="75.3777%" y="437" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="11774" fg:w="4"/><text x="75.5920%" y="447.50"></text></g><g><title>tcp_write_xmit (4 samples, 0.03%)</title><rect x="75.3777%" y="421" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="11774" fg:w="4"/><text x="75.5920%" y="431.50"></text></g><g><title>napi_complete_done (10 samples, 0.06%)</title><rect x="75.3649%" y="613" width="0.0640%" height="15" fill="rgb(226,216,13)" fg:x="11772" fg:w="10"/><text x="75.5792%" y="623.50"></text></g><g><title>netif_receive_skb_list_internal (10 samples, 0.06%)</title><rect x="75.3649%" y="597" width="0.0640%" height="15" fill="rgb(216,153,44)" fg:x="11772" fg:w="10"/><text x="75.5792%" y="607.50"></text></g><g><title>__netif_receive_skb_list_core (10 samples, 0.06%)</title><rect x="75.3649%" y="581" width="0.0640%" height="15" fill="rgb(227,176,26)" fg:x="11772" fg:w="10"/><text x="75.5792%" y="591.50"></text></g><g><title>ip_list_rcv (10 samples, 0.06%)</title><rect x="75.3649%" y="565" width="0.0640%" height="15" fill="rgb(215,38,16)" fg:x="11772" fg:w="10"/><text x="75.5792%" y="575.50"></text></g><g><title>ip_sublist_rcv (10 samples, 0.06%)</title><rect x="75.3649%" y="549" width="0.0640%" height="15" fill="rgb(207,166,9)" fg:x="11772" fg:w="10"/><text x="75.5792%" y="559.50"></text></g><g><title>ip_sublist_rcv_finish (8 samples, 0.05%)</title><rect x="75.3777%" y="533" width="0.0512%" height="15" fill="rgb(223,178,14)" fg:x="11774" fg:w="8"/><text x="75.5920%" y="543.50"></text></g><g><title>ip_local_deliver_finish (8 samples, 0.05%)</title><rect x="75.3777%" y="517" width="0.0512%" height="15" fill="rgb(220,94,29)" fg:x="11774" fg:w="8"/><text x="75.5920%" y="527.50"></text></g><g><title>ip_protocol_deliver_rcu (8 samples, 0.05%)</title><rect x="75.3777%" y="501" width="0.0512%" height="15" fill="rgb(207,19,13)" fg:x="11774" fg:w="8"/><text x="75.5920%" y="511.50"></text></g><g><title>tcp_v4_rcv (8 samples, 0.05%)</title><rect x="75.3777%" y="485" width="0.0512%" height="15" fill="rgb(224,38,0)" fg:x="11774" fg:w="8"/><text x="75.5920%" y="495.50"></text></g><g><title>tcp_v4_do_rcv (8 samples, 0.05%)</title><rect x="75.3777%" y="469" width="0.0512%" height="15" fill="rgb(228,220,18)" fg:x="11774" fg:w="8"/><text x="75.5920%" y="479.50"></text></g><g><title>tcp_rcv_established (8 samples, 0.05%)</title><rect x="75.3777%" y="453" width="0.0512%" height="15" fill="rgb(224,50,47)" fg:x="11774" fg:w="8"/><text x="75.5920%" y="463.50"></text></g><g><title>tcp_ack (4 samples, 0.03%)</title><rect x="75.4033%" y="437" width="0.0256%" height="15" fill="rgb(213,228,3)" fg:x="11778" fg:w="4"/><text x="75.6176%" y="447.50"></text></g><g><title>tcp_sacktag_write_queue (2 samples, 0.01%)</title><rect x="75.4161%" y="421" width="0.0128%" height="15" fill="rgb(251,92,9)" fg:x="11780" fg:w="2"/><text x="75.6304%" y="431.50"></text></g><g><title>tcp_sacktag_walk (2 samples, 0.01%)</title><rect x="75.4161%" y="405" width="0.0128%" height="15" fill="rgb(235,55,24)" fg:x="11780" fg:w="2"/><text x="75.6304%" y="415.50"></text></g><g><title>virtnet_poll (11 samples, 0.07%)</title><rect x="75.3649%" y="629" width="0.0704%" height="15" fill="rgb(213,187,12)" fg:x="11772" fg:w="11"/><text x="75.5792%" y="639.50"></text></g><g><title>net_rx_action (13 samples, 0.08%)</title><rect x="75.3649%" y="645" width="0.0832%" height="15" fill="rgb(231,11,52)" fg:x="11772" fg:w="13"/><text x="75.5792%" y="655.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.01%)</title><rect x="75.4353%" y="629" width="0.0128%" height="15" fill="rgb(251,188,47)" fg:x="11783" fg:w="2"/><text x="75.6496%" y="639.50"></text></g><g><title>free_old_xmit_skbs (2 samples, 0.01%)</title><rect x="75.4353%" y="613" width="0.0128%" height="15" fill="rgb(235,178,6)" fg:x="11783" fg:w="2"/><text x="75.6496%" y="623.50"></text></g><g><title>do_softirq_own_stack (17 samples, 0.11%)</title><rect x="75.3649%" y="693" width="0.1088%" height="15" fill="rgb(223,89,53)" fg:x="11772" fg:w="17"/><text x="75.5792%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (17 samples, 0.11%)</title><rect x="75.3649%" y="677" width="0.1088%" height="15" fill="rgb(208,184,36)" fg:x="11772" fg:w="17"/><text x="75.5792%" y="687.50"></text></g><g><title>__softirqentry_text_start (17 samples, 0.11%)</title><rect x="75.3649%" y="661" width="0.1088%" height="15" fill="rgb(249,91,22)" fg:x="11772" fg:w="17"/><text x="75.5792%" y="671.50"></text></g><g><title>tasklet_action_common.constprop.0 (4 samples, 0.03%)</title><rect x="75.4481%" y="645" width="0.0256%" height="15" fill="rgb(220,151,48)" fg:x="11785" fg:w="4"/><text x="75.6624%" y="655.50"></text></g><g><title>tcp_tasklet_func (4 samples, 0.03%)</title><rect x="75.4481%" y="629" width="0.0256%" height="15" fill="rgb(218,189,37)" fg:x="11785" fg:w="4"/><text x="75.6624%" y="639.50"></text></g><g><title>tcp_tsq_handler (3 samples, 0.02%)</title><rect x="75.4545%" y="613" width="0.0192%" height="15" fill="rgb(238,207,14)" fg:x="11786" fg:w="3"/><text x="75.6688%" y="623.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.02%)</title><rect x="75.4545%" y="597" width="0.0192%" height="15" fill="rgb(236,72,36)" fg:x="11786" fg:w="3"/><text x="75.6688%" y="607.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.01%)</title><rect x="75.4609%" y="581" width="0.0128%" height="15" fill="rgb(225,2,28)" fg:x="11787" fg:w="2"/><text x="75.6752%" y="591.50"></text></g><g><title>__alloc_skb (2 samples, 0.01%)</title><rect x="75.4609%" y="565" width="0.0128%" height="15" fill="rgb(237,90,40)" fg:x="11787" fg:w="2"/><text x="75.6752%" y="575.50"></text></g><g><title>asm_common_interrupt (18 samples, 0.12%)</title><rect x="75.3649%" y="741" width="0.1152%" height="15" fill="rgb(248,227,45)" fg:x="11772" fg:w="18"/><text x="75.5792%" y="751.50"></text></g><g><title>common_interrupt (18 samples, 0.12%)</title><rect x="75.3649%" y="725" width="0.1152%" height="15" fill="rgb(250,67,32)" fg:x="11772" fg:w="18"/><text x="75.5792%" y="735.50"></text></g><g><title>irq_exit_rcu (18 samples, 0.12%)</title><rect x="75.3649%" y="709" width="0.1152%" height="15" fill="rgb(240,18,12)" fg:x="11772" fg:w="18"/><text x="75.5792%" y="719.50"></text></g><g><title>__free_pages (19 samples, 0.12%)</title><rect x="76.0115%" y="725" width="0.1216%" height="15" fill="rgb(234,191,18)" fg:x="11873" fg:w="19"/><text x="76.2258%" y="735.50"></text></g><g><title>__irqentry_text_start (9 samples, 0.06%)</title><rect x="76.1332%" y="725" width="0.0576%" height="15" fill="rgb(229,107,3)" fg:x="11892" fg:w="9"/><text x="76.3474%" y="735.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="76.4661%" y="277" width="0.0128%" height="15" fill="rgb(251,86,39)" fg:x="11944" fg:w="2"/><text x="76.6804%" y="287.50"></text></g><g><title>start_xmit (2 samples, 0.01%)</title><rect x="76.4661%" y="261" width="0.0128%" height="15" fill="rgb(211,140,13)" fg:x="11944" fg:w="2"/><text x="76.6804%" y="271.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.02%)</title><rect x="76.4661%" y="357" width="0.0192%" height="15" fill="rgb(224,11,5)" fg:x="11944" fg:w="3"/><text x="76.6804%" y="367.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.02%)</title><rect x="76.4661%" y="341" width="0.0192%" height="15" fill="rgb(219,227,11)" fg:x="11944" fg:w="3"/><text x="76.6804%" y="351.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.02%)</title><rect x="76.4661%" y="325" width="0.0192%" height="15" fill="rgb(232,116,37)" fg:x="11944" fg:w="3"/><text x="76.6804%" y="335.50"></text></g><g><title>__qdisc_run (3 samples, 0.02%)</title><rect x="76.4661%" y="309" width="0.0192%" height="15" fill="rgb(252,144,25)" fg:x="11944" fg:w="3"/><text x="76.6804%" y="319.50"></text></g><g><title>sch_direct_xmit (3 samples, 0.02%)</title><rect x="76.4661%" y="293" width="0.0192%" height="15" fill="rgb(222,128,44)" fg:x="11944" fg:w="3"/><text x="76.6804%" y="303.50"></text></g><g><title>__tcp_push_pending_frames (4 samples, 0.03%)</title><rect x="76.4661%" y="405" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="11944" fg:w="4"/><text x="76.6804%" y="415.50"></text></g><g><title>tcp_write_xmit (4 samples, 0.03%)</title><rect x="76.4661%" y="389" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="11944" fg:w="4"/><text x="76.6804%" y="399.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.03%)</title><rect x="76.4661%" y="373" width="0.0256%" height="15" fill="rgb(238,106,36)" fg:x="11944" fg:w="4"/><text x="76.6804%" y="383.50"></text></g><g><title>napi_complete_done (6 samples, 0.04%)</title><rect x="76.4661%" y="581" width="0.0384%" height="15" fill="rgb(226,216,13)" fg:x="11944" fg:w="6"/><text x="76.6804%" y="591.50"></text></g><g><title>netif_receive_skb_list_internal (6 samples, 0.04%)</title><rect x="76.4661%" y="565" width="0.0384%" height="15" fill="rgb(216,153,44)" fg:x="11944" fg:w="6"/><text x="76.6804%" y="575.50"></text></g><g><title>__netif_receive_skb_list_core (6 samples, 0.04%)</title><rect x="76.4661%" y="549" width="0.0384%" height="15" fill="rgb(227,176,26)" fg:x="11944" fg:w="6"/><text x="76.6804%" y="559.50"></text></g><g><title>ip_list_rcv (6 samples, 0.04%)</title><rect x="76.4661%" y="533" width="0.0384%" height="15" fill="rgb(215,38,16)" fg:x="11944" fg:w="6"/><text x="76.6804%" y="543.50"></text></g><g><title>ip_sublist_rcv (6 samples, 0.04%)</title><rect x="76.4661%" y="517" width="0.0384%" height="15" fill="rgb(207,166,9)" fg:x="11944" fg:w="6"/><text x="76.6804%" y="527.50"></text></g><g><title>ip_sublist_rcv_finish (6 samples, 0.04%)</title><rect x="76.4661%" y="501" width="0.0384%" height="15" fill="rgb(223,178,14)" fg:x="11944" fg:w="6"/><text x="76.6804%" y="511.50"></text></g><g><title>ip_local_deliver_finish (6 samples, 0.04%)</title><rect x="76.4661%" y="485" width="0.0384%" height="15" fill="rgb(220,94,29)" fg:x="11944" fg:w="6"/><text x="76.6804%" y="495.50"></text></g><g><title>ip_protocol_deliver_rcu (6 samples, 0.04%)</title><rect x="76.4661%" y="469" width="0.0384%" height="15" fill="rgb(207,19,13)" fg:x="11944" fg:w="6"/><text x="76.6804%" y="479.50"></text></g><g><title>tcp_v4_rcv (6 samples, 0.04%)</title><rect x="76.4661%" y="453" width="0.0384%" height="15" fill="rgb(224,38,0)" fg:x="11944" fg:w="6"/><text x="76.6804%" y="463.50"></text></g><g><title>tcp_v4_do_rcv (6 samples, 0.04%)</title><rect x="76.4661%" y="437" width="0.0384%" height="15" fill="rgb(228,220,18)" fg:x="11944" fg:w="6"/><text x="76.6804%" y="447.50"></text></g><g><title>tcp_rcv_established (6 samples, 0.04%)</title><rect x="76.4661%" y="421" width="0.0384%" height="15" fill="rgb(224,50,47)" fg:x="11944" fg:w="6"/><text x="76.6804%" y="431.50"></text></g><g><title>napi_gro_receive (2 samples, 0.01%)</title><rect x="76.5045%" y="581" width="0.0128%" height="15" fill="rgb(248,45,29)" fg:x="11950" fg:w="2"/><text x="76.7188%" y="591.50"></text></g><g><title>virtnet_poll (10 samples, 0.06%)</title><rect x="76.4597%" y="597" width="0.0640%" height="15" fill="rgb(213,187,12)" fg:x="11943" fg:w="10"/><text x="76.6740%" y="607.50"></text></g><g><title>net_rx_action (13 samples, 0.08%)</title><rect x="76.4533%" y="613" width="0.0832%" height="15" fill="rgb(231,11,52)" fg:x="11942" fg:w="13"/><text x="76.6676%" y="623.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.01%)</title><rect x="76.5237%" y="597" width="0.0128%" height="15" fill="rgb(251,188,47)" fg:x="11953" fg:w="2"/><text x="76.7380%" y="607.50"></text></g><g><title>_raw_spin_unlock_irqrestore (56 samples, 0.36%)</title><rect x="76.1908%" y="725" width="0.3585%" height="15" fill="rgb(216,183,20)" fg:x="11901" fg:w="56"/><text x="76.4051%" y="735.50"></text></g><g><title>asm_common_interrupt (17 samples, 0.11%)</title><rect x="76.4405%" y="709" width="0.1088%" height="15" fill="rgb(248,227,45)" fg:x="11940" fg:w="17"/><text x="76.6547%" y="719.50"></text></g><g><title>common_interrupt (17 samples, 0.11%)</title><rect x="76.4405%" y="693" width="0.1088%" height="15" fill="rgb(250,67,32)" fg:x="11940" fg:w="17"/><text x="76.6547%" y="703.50"></text></g><g><title>irq_exit_rcu (16 samples, 0.10%)</title><rect x="76.4469%" y="677" width="0.1024%" height="15" fill="rgb(240,18,12)" fg:x="11941" fg:w="16"/><text x="76.6611%" y="687.50"></text></g><g><title>do_softirq_own_stack (16 samples, 0.10%)</title><rect x="76.4469%" y="661" width="0.1024%" height="15" fill="rgb(223,89,53)" fg:x="11941" fg:w="16"/><text x="76.6611%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (16 samples, 0.10%)</title><rect x="76.4469%" y="645" width="0.1024%" height="15" fill="rgb(208,184,36)" fg:x="11941" fg:w="16"/><text x="76.6611%" y="655.50"></text></g><g><title>__softirqentry_text_start (16 samples, 0.10%)</title><rect x="76.4469%" y="629" width="0.1024%" height="15" fill="rgb(249,91,22)" fg:x="11941" fg:w="16"/><text x="76.6611%" y="639.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.01%)</title><rect x="76.5365%" y="613" width="0.0128%" height="15" fill="rgb(220,151,48)" fg:x="11955" fg:w="2"/><text x="76.7508%" y="623.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.01%)</title><rect x="76.5365%" y="597" width="0.0128%" height="15" fill="rgb(218,189,37)" fg:x="11955" fg:w="2"/><text x="76.7508%" y="607.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.01%)</title><rect x="76.5365%" y="581" width="0.0128%" height="15" fill="rgb(238,207,14)" fg:x="11955" fg:w="2"/><text x="76.7508%" y="591.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="76.5365%" y="565" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="11955" fg:w="2"/><text x="76.7508%" y="575.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="76.5493%" y="613" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="11957" fg:w="2"/><text x="76.7636%" y="623.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="76.5493%" y="629" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="11957" fg:w="4"/><text x="76.7636%" y="639.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.01%)</title><rect x="76.5621%" y="613" width="0.0128%" height="15" fill="rgb(251,188,47)" fg:x="11959" fg:w="2"/><text x="76.7764%" y="623.50"></text></g><g><title>free_old_xmit_skbs (2 samples, 0.01%)</title><rect x="76.5621%" y="597" width="0.0128%" height="15" fill="rgb(235,178,6)" fg:x="11959" fg:w="2"/><text x="76.7764%" y="607.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.03%)</title><rect x="76.5493%" y="677" width="0.0320%" height="15" fill="rgb(223,89,53)" fg:x="11957" fg:w="5"/><text x="76.7636%" y="687.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.03%)</title><rect x="76.5493%" y="661" width="0.0320%" height="15" fill="rgb(208,184,36)" fg:x="11957" fg:w="5"/><text x="76.7636%" y="671.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.03%)</title><rect x="76.5493%" y="645" width="0.0320%" height="15" fill="rgb(249,91,22)" fg:x="11957" fg:w="5"/><text x="76.7636%" y="655.50"></text></g><g><title>asm_common_interrupt (7 samples, 0.04%)</title><rect x="76.5493%" y="725" width="0.0448%" height="15" fill="rgb(248,227,45)" fg:x="11957" fg:w="7"/><text x="76.7636%" y="735.50"></text></g><g><title>common_interrupt (7 samples, 0.04%)</title><rect x="76.5493%" y="709" width="0.0448%" height="15" fill="rgb(250,67,32)" fg:x="11957" fg:w="7"/><text x="76.7636%" y="719.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.04%)</title><rect x="76.5493%" y="693" width="0.0448%" height="15" fill="rgb(240,18,12)" fg:x="11957" fg:w="7"/><text x="76.7636%" y="703.50"></text></g><g><title>idle_cpu (2 samples, 0.01%)</title><rect x="76.5813%" y="677" width="0.0128%" height="15" fill="rgb(248,184,26)" fg:x="11962" fg:w="2"/><text x="76.7956%" y="687.50"></text></g><g><title>fput (15 samples, 0.10%)</title><rect x="76.6005%" y="725" width="0.0960%" height="15" fill="rgb(248,98,6)" fg:x="11965" fg:w="15"/><text x="76.8148%" y="735.50"></text></g><g><title>fput_many (30 samples, 0.19%)</title><rect x="76.6965%" y="725" width="0.1921%" height="15" fill="rgb(223,66,3)" fg:x="11980" fg:w="30"/><text x="76.9108%" y="735.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="76.8758%" y="709" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="719.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="76.8758%" y="693" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="703.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="76.8758%" y="677" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="687.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="76.8758%" y="661" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="76.8758%" y="645" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="655.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="76.8758%" y="629" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="639.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="76.8758%" y="613" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="623.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="76.8758%" y="597" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="607.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="76.8758%" y="581" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="591.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="76.8758%" y="565" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="575.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="76.8758%" y="549" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="559.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="76.8758%" y="533" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="543.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="76.8758%" y="517" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="527.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="76.8758%" y="501" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="511.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="76.8758%" y="485" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="495.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="76.8758%" y="469" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="12008" fg:w="2"/><text x="77.0901%" y="479.50"></text></g><g><title>free_pages (11 samples, 0.07%)</title><rect x="76.8886%" y="725" width="0.0704%" height="15" fill="rgb(221,114,6)" fg:x="12010" fg:w="11"/><text x="77.1029%" y="735.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="77.1639%" y="709" width="0.0256%" height="15" fill="rgb(229,107,3)" fg:x="12053" fg:w="4"/><text x="77.3782%" y="719.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="77.1895%" y="581" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="12057" fg:w="2"/><text x="77.4038%" y="591.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="77.1895%" y="565" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="12057" fg:w="2"/><text x="77.4038%" y="575.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="77.1895%" y="549" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="12057" fg:w="2"/><text x="77.4038%" y="559.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="77.1895%" y="533" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="12057" fg:w="2"/><text x="77.4038%" y="543.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="77.1895%" y="517" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="12057" fg:w="2"/><text x="77.4038%" y="527.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="77.1895%" y="501" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="12057" fg:w="2"/><text x="77.4038%" y="511.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="77.1895%" y="485" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="12057" fg:w="2"/><text x="77.4038%" y="495.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="77.1895%" y="469" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="12057" fg:w="2"/><text x="77.4038%" y="479.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="77.1895%" y="453" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="12057" fg:w="2"/><text x="77.4038%" y="463.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.01%)</title><rect x="77.1895%" y="437" width="0.0128%" height="15" fill="rgb(228,220,18)" fg:x="12057" fg:w="2"/><text x="77.4038%" y="447.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.01%)</title><rect x="77.1895%" y="421" width="0.0128%" height="15" fill="rgb(224,50,47)" fg:x="12057" fg:w="2"/><text x="77.4038%" y="431.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="77.1895%" y="597" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="12057" fg:w="4"/><text x="77.4038%" y="607.50"></text></g><g><title>receive_buf (2 samples, 0.01%)</title><rect x="77.2023%" y="581" width="0.0128%" height="15" fill="rgb(233,111,44)" fg:x="12059" fg:w="2"/><text x="77.4166%" y="591.50"></text></g><g><title>page_to_skb (2 samples, 0.01%)</title><rect x="77.2023%" y="565" width="0.0128%" height="15" fill="rgb(243,180,22)" fg:x="12059" fg:w="2"/><text x="77.4166%" y="575.50"></text></g><g><title>__napi_alloc_skb (2 samples, 0.01%)</title><rect x="77.2023%" y="549" width="0.0128%" height="15" fill="rgb(236,121,11)" fg:x="12059" fg:w="2"/><text x="77.4166%" y="559.50"></text></g><g><title>__alloc_skb (2 samples, 0.01%)</title><rect x="77.2023%" y="533" width="0.0128%" height="15" fill="rgb(237,90,40)" fg:x="12059" fg:w="2"/><text x="77.4166%" y="543.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.01%)</title><rect x="77.2023%" y="517" width="0.0128%" height="15" fill="rgb(227,94,12)" fg:x="12059" fg:w="2"/><text x="77.4166%" y="527.50"></text></g><g><title>asm_common_interrupt (5 samples, 0.03%)</title><rect x="77.1895%" y="709" width="0.0320%" height="15" fill="rgb(248,227,45)" fg:x="12057" fg:w="5"/><text x="77.4038%" y="719.50"></text></g><g><title>common_interrupt (5 samples, 0.03%)</title><rect x="77.1895%" y="693" width="0.0320%" height="15" fill="rgb(250,67,32)" fg:x="12057" fg:w="5"/><text x="77.4038%" y="703.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.03%)</title><rect x="77.1895%" y="677" width="0.0320%" height="15" fill="rgb(240,18,12)" fg:x="12057" fg:w="5"/><text x="77.4038%" y="687.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.03%)</title><rect x="77.1895%" y="661" width="0.0320%" height="15" fill="rgb(223,89,53)" fg:x="12057" fg:w="5"/><text x="77.4038%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.03%)</title><rect x="77.1895%" y="645" width="0.0320%" height="15" fill="rgb(208,184,36)" fg:x="12057" fg:w="5"/><text x="77.4038%" y="655.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.03%)</title><rect x="77.1895%" y="629" width="0.0320%" height="15" fill="rgb(249,91,22)" fg:x="12057" fg:w="5"/><text x="77.4038%" y="639.50"></text></g><g><title>net_rx_action (5 samples, 0.03%)</title><rect x="77.1895%" y="613" width="0.0320%" height="15" fill="rgb(231,11,52)" fg:x="12057" fg:w="5"/><text x="77.4038%" y="623.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="77.2919%" y="693" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="12073" fg:w="3"/><text x="77.5062%" y="703.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.01%)</title><rect x="77.3111%" y="693" width="0.0128%" height="15" fill="rgb(211,8,20)" fg:x="12076" fg:w="2"/><text x="77.5254%" y="703.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.01%)</title><rect x="77.3111%" y="677" width="0.0128%" height="15" fill="rgb(210,87,27)" fg:x="12076" fg:w="2"/><text x="77.5254%" y="687.50"></text></g><g><title>kernel_poison_pages (2 samples, 0.01%)</title><rect x="77.3239%" y="693" width="0.0128%" height="15" fill="rgb(240,82,29)" fg:x="12078" fg:w="2"/><text x="77.5382%" y="703.50"></text></g><g><title>free_pcp_prepare (21 samples, 0.13%)</title><rect x="77.2215%" y="709" width="0.1344%" height="15" fill="rgb(223,51,41)" fg:x="12062" fg:w="21"/><text x="77.4358%" y="719.50"></text></g><g><title>srso_safe_ret_alias (3 samples, 0.02%)</title><rect x="77.3367%" y="693" width="0.0192%" height="15" fill="rgb(210,87,27)" fg:x="12080" fg:w="3"/><text x="77.5510%" y="703.50"></text></g><g><title>free_unref_page (83 samples, 0.53%)</title><rect x="76.9590%" y="725" width="0.5314%" height="15" fill="rgb(212,90,28)" fg:x="12021" fg:w="83"/><text x="77.1733%" y="735.50"></text></g><g><title>free_unref_page_commit (21 samples, 0.13%)</title><rect x="77.3560%" y="709" width="0.1344%" height="15" fill="rgb(214,32,27)" fg:x="12083" fg:w="21"/><text x="77.5702%" y="719.50"></text></g><g><title>__list_add_valid (11 samples, 0.07%)</title><rect x="77.4200%" y="693" width="0.0704%" height="15" fill="rgb(206,79,8)" fg:x="12093" fg:w="11"/><text x="77.6343%" y="703.50"></text></g><g><title>__list_del_entry_valid (32 samples, 0.20%)</title><rect x="77.7913%" y="709" width="0.2049%" height="15" fill="rgb(224,110,12)" fg:x="12151" fg:w="32"/><text x="78.0056%" y="719.50"></text></g><g><title>_raw_spin_lock_irqsave (119 samples, 0.76%)</title><rect x="77.9962%" y="709" width="0.7618%" height="15" fill="rgb(206,213,41)" fg:x="12183" fg:w="119"/><text x="78.2104%" y="719.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="78.7452%" y="693" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="12300" fg:w="2"/><text x="78.9595%" y="703.50"></text></g><g><title>poll_freewait (514 samples, 3.29%)</title><rect x="75.4866%" y="741" width="3.2907%" height="15" fill="rgb(240,0,18)" fg:x="11791" fg:w="514"/><text x="75.7008%" y="751.50">poll..</text></g><g><title>remove_wait_queue (201 samples, 1.29%)</title><rect x="77.4904%" y="725" width="1.2868%" height="15" fill="rgb(247,210,21)" fg:x="12104" fg:w="201"/><text x="77.7047%" y="735.50"></text></g><g><title>srso_safe_ret_alias (3 samples, 0.02%)</title><rect x="78.7580%" y="709" width="0.0192%" height="15" fill="rgb(210,87,27)" fg:x="12302" fg:w="3"/><text x="78.9723%" y="719.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="78.8924%" y="405" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="12323" fg:w="2"/><text x="79.1067%" y="415.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="78.8924%" y="389" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="12323" fg:w="2"/><text x="79.1067%" y="399.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="78.8924%" y="373" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="12323" fg:w="2"/><text x="79.1067%" y="383.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="78.8924%" y="581" width="0.0192%" height="15" fill="rgb(226,216,13)" fg:x="12323" fg:w="3"/><text x="79.1067%" y="591.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="78.8924%" y="565" width="0.0192%" height="15" fill="rgb(216,153,44)" fg:x="12323" fg:w="3"/><text x="79.1067%" y="575.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="78.8924%" y="549" width="0.0192%" height="15" fill="rgb(227,176,26)" fg:x="12323" fg:w="3"/><text x="79.1067%" y="559.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="78.8924%" y="533" width="0.0192%" height="15" fill="rgb(215,38,16)" fg:x="12323" fg:w="3"/><text x="79.1067%" y="543.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="78.8924%" y="517" width="0.0192%" height="15" fill="rgb(207,166,9)" fg:x="12323" fg:w="3"/><text x="79.1067%" y="527.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="78.8924%" y="501" width="0.0192%" height="15" fill="rgb(223,178,14)" fg:x="12323" fg:w="3"/><text x="79.1067%" y="511.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="78.8924%" y="485" width="0.0192%" height="15" fill="rgb(220,94,29)" fg:x="12323" fg:w="3"/><text x="79.1067%" y="495.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.02%)</title><rect x="78.8924%" y="469" width="0.0192%" height="15" fill="rgb(207,19,13)" fg:x="12323" fg:w="3"/><text x="79.1067%" y="479.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="78.8924%" y="453" width="0.0192%" height="15" fill="rgb(224,38,0)" fg:x="12323" fg:w="3"/><text x="79.1067%" y="463.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="78.8924%" y="437" width="0.0192%" height="15" fill="rgb(228,220,18)" fg:x="12323" fg:w="3"/><text x="79.1067%" y="447.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.02%)</title><rect x="78.8924%" y="421" width="0.0192%" height="15" fill="rgb(224,50,47)" fg:x="12323" fg:w="3"/><text x="79.1067%" y="431.50"></text></g><g><title>_raw_spin_unlock_irqrestore (4 samples, 0.03%)</title><rect x="78.8924%" y="725" width="0.0256%" height="15" fill="rgb(216,183,20)" fg:x="12323" fg:w="4"/><text x="79.1067%" y="735.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.03%)</title><rect x="78.8924%" y="709" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="12323" fg:w="4"/><text x="79.1067%" y="719.50"></text></g><g><title>common_interrupt (4 samples, 0.03%)</title><rect x="78.8924%" y="693" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="12323" fg:w="4"/><text x="79.1067%" y="703.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="78.8924%" y="677" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="12323" fg:w="4"/><text x="79.1067%" y="687.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.03%)</title><rect x="78.8924%" y="661" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="12323" fg:w="4"/><text x="79.1067%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="78.8924%" y="645" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="12323" fg:w="4"/><text x="79.1067%" y="655.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="78.8924%" y="629" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="12323" fg:w="4"/><text x="79.1067%" y="639.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="78.8924%" y="613" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="12323" fg:w="4"/><text x="79.1067%" y="623.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="78.8924%" y="597" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="12323" fg:w="4"/><text x="79.1067%" y="607.50"></text></g><g><title>hrtimer_active (7 samples, 0.04%)</title><rect x="78.9181%" y="725" width="0.0448%" height="15" fill="rgb(208,227,6)" fg:x="12327" fg:w="7"/><text x="79.1323%" y="735.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="79.0781%" y="693" width="0.0256%" height="15" fill="rgb(229,107,3)" fg:x="12352" fg:w="4"/><text x="79.2924%" y="703.50"></text></g><g><title>hrtimer_init_sleeper (23 samples, 0.15%)</title><rect x="78.9629%" y="725" width="0.1472%" height="15" fill="rgb(224,203,45)" fg:x="12334" fg:w="23"/><text x="79.1772%" y="735.50"></text></g><g><title>__hrtimer_init (22 samples, 0.14%)</title><rect x="78.9693%" y="709" width="0.1408%" height="15" fill="rgb(231,81,13)" fg:x="12335" fg:w="22"/><text x="79.1836%" y="719.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="79.1933%" y="709" width="0.0128%" height="15" fill="rgb(206,213,41)" fg:x="12370" fg:w="2"/><text x="79.4076%" y="719.50"></text></g><g><title>enqueue_hrtimer (47 samples, 0.30%)</title><rect x="79.2190%" y="709" width="0.3009%" height="15" fill="rgb(218,84,40)" fg:x="12374" fg:w="47"/><text x="79.4332%" y="719.50"></text></g><g><title>timerqueue_add (46 samples, 0.29%)</title><rect x="79.2254%" y="693" width="0.2945%" height="15" fill="rgb(235,22,27)" fg:x="12375" fg:w="46"/><text x="79.4396%" y="703.50"></text></g><g><title>hrtimer_start_range_ns (70 samples, 0.45%)</title><rect x="79.1101%" y="725" width="0.4481%" height="15" fill="rgb(231,227,51)" fg:x="12357" fg:w="70"/><text x="79.3244%" y="735.50"></text></g><g><title>get_nohz_timer_target (6 samples, 0.04%)</title><rect x="79.5198%" y="709" width="0.0384%" height="15" fill="rgb(247,59,26)" fg:x="12421" fg:w="6"/><text x="79.7341%" y="719.50"></text></g><g><title>__remove_hrtimer (29 samples, 0.19%)</title><rect x="79.5775%" y="709" width="0.1857%" height="15" fill="rgb(212,161,30)" fg:x="12430" fg:w="29"/><text x="79.7918%" y="719.50"></text></g><g><title>timerqueue_del (27 samples, 0.17%)</title><rect x="79.5903%" y="693" width="0.1729%" height="15" fill="rgb(218,213,22)" fg:x="12432" fg:w="27"/><text x="79.8046%" y="703.50"></text></g><g><title>rb_erase (23 samples, 0.15%)</title><rect x="79.6159%" y="677" width="0.1472%" height="15" fill="rgb(234,120,13)" fg:x="12436" fg:w="23"/><text x="79.8302%" y="687.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="79.7695%" y="693" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="12460" fg:w="2"/><text x="79.9838%" y="703.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (37 samples, 0.24%)</title><rect x="79.5583%" y="725" width="0.2369%" height="15" fill="rgb(221,182,24)" fg:x="12427" fg:w="37"/><text x="79.7725%" y="735.50"></text></g><g><title>_raw_spin_unlock_irqrestore (4 samples, 0.03%)</title><rect x="79.7695%" y="709" width="0.0256%" height="15" fill="rgb(216,183,20)" fg:x="12460" fg:w="4"/><text x="79.9838%" y="719.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="79.7823%" y="693" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="12462" fg:w="2"/><text x="79.9966%" y="703.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="79.7823%" y="677" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="12462" fg:w="2"/><text x="79.9966%" y="687.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="79.7823%" y="661" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="12462" fg:w="2"/><text x="79.9966%" y="671.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="79.7823%" y="645" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="12462" fg:w="2"/><text x="79.9966%" y="655.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="79.7823%" y="629" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="12462" fg:w="2"/><text x="79.9966%" y="639.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="79.7823%" y="613" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="12462" fg:w="2"/><text x="79.9966%" y="623.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.01%)</title><rect x="79.7823%" y="597" width="0.0128%" height="15" fill="rgb(220,151,48)" fg:x="12462" fg:w="2"/><text x="79.9966%" y="607.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.01%)</title><rect x="80.2369%" y="645" width="0.0128%" height="15" fill="rgb(211,8,20)" fg:x="12533" fg:w="2"/><text x="80.4512%" y="655.50"></text></g><g><title>amd_pmu_addr_offset (3 samples, 0.02%)</title><rect x="80.2497%" y="645" width="0.0192%" height="15" fill="rgb(205,215,49)" fg:x="12535" fg:w="3"/><text x="80.4640%" y="655.50"></text></g><g><title>native_read_msr (136 samples, 0.87%)</title><rect x="80.2689%" y="645" width="0.8707%" height="15" fill="rgb(218,43,9)" fg:x="12538" fg:w="136"/><text x="80.4832%" y="655.50"></text></g><g><title>amd_pmu_disable_all (175 samples, 1.12%)</title><rect x="80.2177%" y="677" width="1.1204%" height="15" fill="rgb(224,0,7)" fg:x="12530" fg:w="175"/><text x="80.4320%" y="687.50"></text></g><g><title>x86_pmu_disable_all (174 samples, 1.11%)</title><rect x="80.2241%" y="661" width="1.1140%" height="15" fill="rgb(235,111,43)" fg:x="12531" fg:w="174"/><text x="80.4384%" y="671.50"></text></g><g><title>native_write_msr (31 samples, 0.20%)</title><rect x="81.1396%" y="645" width="0.1985%" height="15" fill="rgb(220,53,36)" fg:x="12674" fg:w="31"/><text x="81.3539%" y="655.50"></text></g><g><title>__perf_event_task_sched_out (194 samples, 1.24%)</title><rect x="80.1280%" y="693" width="1.2420%" height="15" fill="rgb(206,30,45)" fg:x="12516" fg:w="194"/><text x="80.3423%" y="703.50"></text></g><g><title>x86_pmu_disable (5 samples, 0.03%)</title><rect x="81.3380%" y="677" width="0.0320%" height="15" fill="rgb(240,6,49)" fg:x="12705" fg:w="5"/><text x="81.5523%" y="687.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="81.3764%" y="693" width="0.0128%" height="15" fill="rgb(225,195,37)" fg:x="12711" fg:w="2"/><text x="81.5907%" y="703.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.01%)</title><rect x="81.6133%" y="661" width="0.0128%" height="15" fill="rgb(211,8,20)" fg:x="12748" fg:w="2"/><text x="81.8276%" y="671.50"></text></g><g><title>__cgroup_account_cputime (25 samples, 0.16%)</title><rect x="81.7862%" y="645" width="0.1601%" height="15" fill="rgb(222,47,19)" fg:x="12775" fg:w="25"/><text x="82.0005%" y="655.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.01%)</title><rect x="81.9462%" y="645" width="0.0128%" height="15" fill="rgb(211,8,20)" fg:x="12800" fg:w="2"/><text x="82.1605%" y="655.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.01%)</title><rect x="81.9462%" y="629" width="0.0128%" height="15" fill="rgb(210,87,27)" fg:x="12800" fg:w="2"/><text x="82.1605%" y="639.50"></text></g><g><title>cpuacct_charge (16 samples, 0.10%)</title><rect x="81.9590%" y="645" width="0.1024%" height="15" fill="rgb(217,144,43)" fg:x="12802" fg:w="16"/><text x="82.1733%" y="655.50"></text></g><g><title>rcu_read_unlock_strict (2 samples, 0.01%)</title><rect x="82.0615%" y="645" width="0.0128%" height="15" fill="rgb(251,95,14)" fg:x="12818" fg:w="2"/><text x="82.2757%" y="655.50"></text></g><g><title>update_curr (72 samples, 0.46%)</title><rect x="81.6261%" y="661" width="0.4609%" height="15" fill="rgb(242,65,24)" fg:x="12750" fg:w="72"/><text x="81.8404%" y="671.50"></text></g><g><title>update_min_vruntime (2 samples, 0.01%)</title><rect x="82.0743%" y="645" width="0.0128%" height="15" fill="rgb(235,225,54)" fg:x="12820" fg:w="2"/><text x="82.2885%" y="655.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.01%)</title><rect x="82.1127%" y="645" width="0.0128%" height="15" fill="rgb(206,162,20)" fg:x="12826" fg:w="2"/><text x="82.3270%" y="655.50"></text></g><g><title>dequeue_task_fair (117 samples, 0.75%)</title><rect x="81.3892%" y="693" width="0.7490%" height="15" fill="rgb(221,4,41)" fg:x="12713" fg:w="117"/><text x="81.6035%" y="703.50"></text></g><g><title>dequeue_entity (98 samples, 0.63%)</title><rect x="81.5109%" y="677" width="0.6274%" height="15" fill="rgb(217,209,51)" fg:x="12732" fg:w="98"/><text x="81.7252%" y="687.50"></text></g><g><title>update_load_avg (8 samples, 0.05%)</title><rect x="82.0871%" y="661" width="0.0512%" height="15" fill="rgb(222,111,24)" fg:x="12822" fg:w="8"/><text x="82.3014%" y="671.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.01%)</title><rect x="82.1255%" y="645" width="0.0128%" height="15" fill="rgb(209,63,2)" fg:x="12828" fg:w="2"/><text x="82.3398%" y="655.50"></text></g><g><title>__irqentry_text_start (23 samples, 0.15%)</title><rect x="82.2599%" y="677" width="0.1472%" height="15" fill="rgb(229,107,3)" fg:x="12849" fg:w="23"/><text x="82.4742%" y="687.50"></text></g><g><title>__handle_irq_event_percpu (6 samples, 0.04%)</title><rect x="82.4392%" y="597" width="0.0384%" height="15" fill="rgb(239,110,26)" fg:x="12877" fg:w="6"/><text x="82.6535%" y="607.50"></text></g><g><title>vring_interrupt (3 samples, 0.02%)</title><rect x="82.4584%" y="581" width="0.0192%" height="15" fill="rgb(206,212,41)" fg:x="12880" fg:w="3"/><text x="82.6727%" y="591.50"></text></g><g><title>skb_xmit_done (2 samples, 0.01%)</title><rect x="82.4648%" y="565" width="0.0128%" height="15" fill="rgb(238,39,45)" fg:x="12881" fg:w="2"/><text x="82.6791%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (14 samples, 0.09%)</title><rect x="82.4136%" y="645" width="0.0896%" height="15" fill="rgb(208,184,36)" fg:x="12873" fg:w="14"/><text x="82.6279%" y="655.50"></text></g><g><title>handle_edge_irq (14 samples, 0.09%)</title><rect x="82.4136%" y="629" width="0.0896%" height="15" fill="rgb(219,15,9)" fg:x="12873" fg:w="14"/><text x="82.6279%" y="639.50"></text></g><g><title>handle_irq_event (14 samples, 0.09%)</title><rect x="82.4136%" y="613" width="0.0896%" height="15" fill="rgb(209,73,52)" fg:x="12873" fg:w="14"/><text x="82.6279%" y="623.50"></text></g><g><title>add_interrupt_randomness (3 samples, 0.02%)</title><rect x="82.4840%" y="597" width="0.0192%" height="15" fill="rgb(227,186,38)" fg:x="12884" fg:w="3"/><text x="82.6983%" y="607.50"></text></g><g><title>__kfree_skb_flush (5 samples, 0.03%)</title><rect x="82.7017%" y="565" width="0.0320%" height="15" fill="rgb(245,1,6)" fg:x="12918" fg:w="5"/><text x="82.9160%" y="575.50"></text></g><g><title>kmem_cache_free_bulk (2 samples, 0.01%)</title><rect x="82.7209%" y="549" width="0.0128%" height="15" fill="rgb(249,162,6)" fg:x="12921" fg:w="2"/><text x="82.9352%" y="559.50"></text></g><g><title>ip_route_use_hint (4 samples, 0.03%)</title><rect x="82.7913%" y="453" width="0.0256%" height="15" fill="rgb(253,15,43)" fg:x="12932" fg:w="4"/><text x="83.0056%" y="463.50"></text></g><g><title>fib_validate_source (3 samples, 0.02%)</title><rect x="82.7977%" y="437" width="0.0192%" height="15" fill="rgb(219,198,12)" fg:x="12933" fg:w="3"/><text x="83.0120%" y="447.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (8 samples, 0.05%)</title><rect x="82.7721%" y="469" width="0.0512%" height="15" fill="rgb(246,15,53)" fg:x="12929" fg:w="8"/><text x="82.9864%" y="479.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.01%)</title><rect x="82.8361%" y="405" width="0.0128%" height="15" fill="rgb(247,83,44)" fg:x="12939" fg:w="2"/><text x="83.0504%" y="415.50"></text></g><g><title>pfifo_fast_dequeue (3 samples, 0.02%)</title><rect x="82.9129%" y="261" width="0.0192%" height="15" fill="rgb(208,20,32)" fg:x="12951" fg:w="3"/><text x="83.1272%" y="271.50"></text></g><g><title>dev_hard_start_xmit (12 samples, 0.08%)</title><rect x="82.9449%" y="245" width="0.0768%" height="15" fill="rgb(251,86,39)" fg:x="12956" fg:w="12"/><text x="83.1592%" y="255.50"></text></g><g><title>start_xmit (12 samples, 0.08%)</title><rect x="82.9449%" y="229" width="0.0768%" height="15" fill="rgb(211,140,13)" fg:x="12956" fg:w="12"/><text x="83.1592%" y="239.50"></text></g><g><title>virtqueue_notify (10 samples, 0.06%)</title><rect x="82.9577%" y="213" width="0.0640%" height="15" fill="rgb(219,119,18)" fg:x="12958" fg:w="10"/><text x="83.1720%" y="223.50"></text></g><g><title>vp_notify (10 samples, 0.06%)</title><rect x="82.9577%" y="197" width="0.0640%" height="15" fill="rgb(230,193,37)" fg:x="12958" fg:w="10"/><text x="83.1720%" y="207.50"></text></g><g><title>iowrite16 (10 samples, 0.06%)</title><rect x="82.9577%" y="181" width="0.0640%" height="15" fill="rgb(218,139,37)" fg:x="12958" fg:w="10"/><text x="83.1720%" y="191.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.01%)</title><rect x="83.0218%" y="229" width="0.0128%" height="15" fill="rgb(240,104,40)" fg:x="12968" fg:w="2"/><text x="83.2361%" y="239.50"></text></g><g><title>netif_skb_features (2 samples, 0.01%)</title><rect x="83.0218%" y="213" width="0.0128%" height="15" fill="rgb(211,31,54)" fg:x="12968" fg:w="2"/><text x="83.2361%" y="223.50"></text></g><g><title>ip_finish_output2 (20 samples, 0.13%)</title><rect x="82.9129%" y="309" width="0.1280%" height="15" fill="rgb(219,227,11)" fg:x="12951" fg:w="20"/><text x="83.1272%" y="319.50"></text></g><g><title>__dev_queue_xmit (20 samples, 0.13%)</title><rect x="82.9129%" y="293" width="0.1280%" height="15" fill="rgb(232,116,37)" fg:x="12951" fg:w="20"/><text x="83.1272%" y="303.50"></text></g><g><title>__qdisc_run (20 samples, 0.13%)</title><rect x="82.9129%" y="277" width="0.1280%" height="15" fill="rgb(252,144,25)" fg:x="12951" fg:w="20"/><text x="83.1272%" y="287.50"></text></g><g><title>sch_direct_xmit (17 samples, 0.11%)</title><rect x="82.9321%" y="261" width="0.1088%" height="15" fill="rgb(222,128,44)" fg:x="12954" fg:w="17"/><text x="83.1464%" y="271.50"></text></g><g><title>validate_xmit_skb_list (3 samples, 0.02%)</title><rect x="83.0218%" y="245" width="0.0192%" height="15" fill="rgb(254,174,52)" fg:x="12968" fg:w="3"/><text x="83.2361%" y="255.50"></text></g><g><title>__ip_queue_xmit (26 samples, 0.17%)</title><rect x="82.8937%" y="325" width="0.1665%" height="15" fill="rgb(224,11,5)" fg:x="12948" fg:w="26"/><text x="83.1080%" y="335.50"></text></g><g><title>ip_output (3 samples, 0.02%)</title><rect x="83.0410%" y="309" width="0.0192%" height="15" fill="rgb(213,11,33)" fg:x="12971" fg:w="3"/><text x="83.2553%" y="319.50"></text></g><g><title>__tcp_transmit_skb (29 samples, 0.19%)</title><rect x="82.8809%" y="341" width="0.1857%" height="15" fill="rgb(238,106,36)" fg:x="12946" fg:w="29"/><text x="83.0952%" y="351.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.01%)</title><rect x="83.0730%" y="309" width="0.0128%" height="15" fill="rgb(228,161,44)" fg:x="12976" fg:w="2"/><text x="83.2873%" y="319.50"></text></g><g><title>__slab_alloc (2 samples, 0.01%)</title><rect x="83.0730%" y="293" width="0.0128%" height="15" fill="rgb(229,140,31)" fg:x="12976" fg:w="2"/><text x="83.2873%" y="303.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.03%)</title><rect x="83.0666%" y="341" width="0.0320%" height="15" fill="rgb(225,2,28)" fg:x="12975" fg:w="5"/><text x="83.2809%" y="351.50"></text></g><g><title>__alloc_skb (5 samples, 0.03%)</title><rect x="83.0666%" y="325" width="0.0320%" height="15" fill="rgb(237,90,40)" fg:x="12975" fg:w="5"/><text x="83.2809%" y="335.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.01%)</title><rect x="83.0858%" y="309" width="0.0128%" height="15" fill="rgb(227,94,12)" fg:x="12978" fg:w="2"/><text x="83.3001%" y="319.50"></text></g><g><title>__slab_alloc (2 samples, 0.01%)</title><rect x="83.0858%" y="293" width="0.0128%" height="15" fill="rgb(229,140,31)" fg:x="12978" fg:w="2"/><text x="83.3001%" y="303.50"></text></g><g><title>___slab_alloc (2 samples, 0.01%)</title><rect x="83.0858%" y="277" width="0.0128%" height="15" fill="rgb(224,215,35)" fg:x="12978" fg:w="2"/><text x="83.3001%" y="287.50"></text></g><g><title>skb_split (3 samples, 0.02%)</title><rect x="83.0986%" y="341" width="0.0192%" height="15" fill="rgb(252,127,50)" fg:x="12980" fg:w="3"/><text x="83.3129%" y="351.50"></text></g><g><title>__tcp_push_pending_frames (43 samples, 0.28%)</title><rect x="82.8617%" y="373" width="0.2753%" height="15" fill="rgb(226,88,38)" fg:x="12943" fg:w="43"/><text x="83.0760%" y="383.50"></text></g><g><title>tcp_write_xmit (43 samples, 0.28%)</title><rect x="82.8617%" y="357" width="0.2753%" height="15" fill="rgb(236,72,36)" fg:x="12943" fg:w="43"/><text x="83.0760%" y="367.50"></text></g><g><title>tcp_event_new_data_sent (3 samples, 0.02%)</title><rect x="83.1178%" y="341" width="0.0192%" height="15" fill="rgb(227,19,23)" fg:x="12983" fg:w="3"/><text x="83.3321%" y="351.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="83.1626%" y="357" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="12990" fg:w="2"/><text x="83.3769%" y="367.50"></text></g><g><title>kfree (5 samples, 0.03%)</title><rect x="83.1754%" y="341" width="0.0320%" height="15" fill="rgb(222,6,37)" fg:x="12992" fg:w="5"/><text x="83.3897%" y="351.50"></text></g><g><title>__kfree_skb (9 samples, 0.06%)</title><rect x="83.1754%" y="357" width="0.0576%" height="15" fill="rgb(208,195,26)" fg:x="12992" fg:w="9"/><text x="83.3897%" y="367.50"></text></g><g><title>skb_release_data (4 samples, 0.03%)</title><rect x="83.2074%" y="341" width="0.0256%" height="15" fill="rgb(252,193,18)" fg:x="12997" fg:w="4"/><text x="83.4217%" y="351.50"></text></g><g><title>kmem_cache_free (2 samples, 0.01%)</title><rect x="83.2522%" y="357" width="0.0128%" height="15" fill="rgb(225,137,16)" fg:x="13004" fg:w="2"/><text x="83.4665%" y="367.50"></text></g><g><title>tcp_sacktag_write_queue (3 samples, 0.02%)</title><rect x="83.2714%" y="357" width="0.0192%" height="15" fill="rgb(251,92,9)" fg:x="13007" fg:w="3"/><text x="83.4857%" y="367.50"></text></g><g><title>tcp_sacktag_walk (3 samples, 0.02%)</title><rect x="83.2714%" y="341" width="0.0192%" height="15" fill="rgb(235,55,24)" fg:x="13007" fg:w="3"/><text x="83.4857%" y="351.50"></text></g><g><title>tcp_trim_head (2 samples, 0.01%)</title><rect x="83.2971%" y="357" width="0.0128%" height="15" fill="rgb(230,179,8)" fg:x="13011" fg:w="2"/><text x="83.5113%" y="367.50"></text></g><g><title>tcp_ack (30 samples, 0.19%)</title><rect x="83.1370%" y="373" width="0.1921%" height="15" fill="rgb(213,228,3)" fg:x="12986" fg:w="30"/><text x="83.3513%" y="383.50"></text></g><g><title>tcp_xmit_retransmit_queue.part.0 (2 samples, 0.01%)</title><rect x="83.3163%" y="357" width="0.0128%" height="15" fill="rgb(214,10,20)" fg:x="13014" fg:w="2"/><text x="83.5305%" y="367.50"></text></g><g><title>napi_complete_done (94 samples, 0.60%)</title><rect x="82.7529%" y="549" width="0.6018%" height="15" fill="rgb(226,216,13)" fg:x="12926" fg:w="94"/><text x="82.9672%" y="559.50"></text></g><g><title>netif_receive_skb_list_internal (93 samples, 0.60%)</title><rect x="82.7593%" y="533" width="0.5954%" height="15" fill="rgb(216,153,44)" fg:x="12927" fg:w="93"/><text x="82.9736%" y="543.50"></text></g><g><title>__netif_receive_skb_list_core (93 samples, 0.60%)</title><rect x="82.7593%" y="517" width="0.5954%" height="15" fill="rgb(227,176,26)" fg:x="12927" fg:w="93"/><text x="82.9736%" y="527.50"></text></g><g><title>ip_list_rcv (93 samples, 0.60%)</title><rect x="82.7593%" y="501" width="0.5954%" height="15" fill="rgb(215,38,16)" fg:x="12927" fg:w="93"/><text x="82.9736%" y="511.50"></text></g><g><title>ip_sublist_rcv (92 samples, 0.59%)</title><rect x="82.7657%" y="485" width="0.5890%" height="15" fill="rgb(207,166,9)" fg:x="12928" fg:w="92"/><text x="82.9800%" y="495.50"></text></g><g><title>ip_sublist_rcv_finish (83 samples, 0.53%)</title><rect x="82.8233%" y="469" width="0.5314%" height="15" fill="rgb(223,178,14)" fg:x="12937" fg:w="83"/><text x="83.0376%" y="479.50"></text></g><g><title>ip_local_deliver_finish (83 samples, 0.53%)</title><rect x="82.8233%" y="453" width="0.5314%" height="15" fill="rgb(220,94,29)" fg:x="12937" fg:w="83"/><text x="83.0376%" y="463.50"></text></g><g><title>ip_protocol_deliver_rcu (83 samples, 0.53%)</title><rect x="82.8233%" y="437" width="0.5314%" height="15" fill="rgb(207,19,13)" fg:x="12937" fg:w="83"/><text x="83.0376%" y="447.50"></text></g><g><title>tcp_v4_rcv (82 samples, 0.52%)</title><rect x="82.8297%" y="421" width="0.5250%" height="15" fill="rgb(224,38,0)" fg:x="12938" fg:w="82"/><text x="83.0440%" y="431.50"></text></g><g><title>tcp_v4_do_rcv (79 samples, 0.51%)</title><rect x="82.8489%" y="405" width="0.5058%" height="15" fill="rgb(228,220,18)" fg:x="12941" fg:w="79"/><text x="83.0632%" y="415.50"></text></g><g><title>tcp_rcv_established (78 samples, 0.50%)</title><rect x="82.8553%" y="389" width="0.4994%" height="15" fill="rgb(224,50,47)" fg:x="12942" fg:w="78"/><text x="83.0696%" y="399.50"></text></g><g><title>dev_gro_receive (2 samples, 0.01%)</title><rect x="83.3547%" y="533" width="0.0128%" height="15" fill="rgb(219,73,15)" fg:x="13020" fg:w="2"/><text x="83.5690%" y="543.50"></text></g><g><title>napi_gro_receive (3 samples, 0.02%)</title><rect x="83.3547%" y="549" width="0.0192%" height="15" fill="rgb(248,45,29)" fg:x="13020" fg:w="3"/><text x="83.5690%" y="559.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.01%)</title><rect x="83.3995%" y="485" width="0.0128%" height="15" fill="rgb(228,161,44)" fg:x="13027" fg:w="2"/><text x="83.6138%" y="495.50"></text></g><g><title>kmalloc_slab (2 samples, 0.01%)</title><rect x="83.3995%" y="469" width="0.0128%" height="15" fill="rgb(219,98,13)" fg:x="13027" fg:w="2"/><text x="83.6138%" y="479.50"></text></g><g><title>receive_buf (8 samples, 0.05%)</title><rect x="83.3739%" y="549" width="0.0512%" height="15" fill="rgb(233,111,44)" fg:x="13023" fg:w="8"/><text x="83.5882%" y="559.50"></text></g><g><title>page_to_skb (7 samples, 0.04%)</title><rect x="83.3803%" y="533" width="0.0448%" height="15" fill="rgb(243,180,22)" fg:x="13024" fg:w="7"/><text x="83.5946%" y="543.50"></text></g><g><title>__napi_alloc_skb (6 samples, 0.04%)</title><rect x="83.3867%" y="517" width="0.0384%" height="15" fill="rgb(236,121,11)" fg:x="13025" fg:w="6"/><text x="83.6010%" y="527.50"></text></g><g><title>__alloc_skb (6 samples, 0.04%)</title><rect x="83.3867%" y="501" width="0.0384%" height="15" fill="rgb(237,90,40)" fg:x="13025" fg:w="6"/><text x="83.6010%" y="511.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.01%)</title><rect x="83.4123%" y="485" width="0.0128%" height="15" fill="rgb(227,94,12)" fg:x="13029" fg:w="2"/><text x="83.6266%" y="495.50"></text></g><g><title>try_fill_recv (2 samples, 0.01%)</title><rect x="83.4251%" y="549" width="0.0128%" height="15" fill="rgb(209,67,13)" fg:x="13031" fg:w="2"/><text x="83.6394%" y="559.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.01%)</title><rect x="83.4251%" y="533" width="0.0128%" height="15" fill="rgb(240,178,22)" fg:x="13031" fg:w="2"/><text x="83.6394%" y="543.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="83.4251%" y="517" width="0.0128%" height="15" fill="rgb(245,49,10)" fg:x="13031" fg:w="2"/><text x="83.6394%" y="527.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="83.4251%" y="501" width="0.0128%" height="15" fill="rgb(246,35,53)" fg:x="13031" fg:w="2"/><text x="83.6394%" y="511.50"></text></g><g><title>prep_new_page (2 samples, 0.01%)</title><rect x="83.4251%" y="485" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="13031" fg:w="2"/><text x="83.6394%" y="495.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.01%)</title><rect x="83.4251%" y="469" width="0.0128%" height="15" fill="rgb(253,165,35)" fg:x="13031" fg:w="2"/><text x="83.6394%" y="479.50"></text></g><g><title>clear_page_rep (2 samples, 0.01%)</title><rect x="83.4251%" y="453" width="0.0128%" height="15" fill="rgb(233,188,25)" fg:x="13031" fg:w="2"/><text x="83.6394%" y="463.50"></text></g><g><title>virtnet_poll (112 samples, 0.72%)</title><rect x="82.7401%" y="565" width="0.7170%" height="15" fill="rgb(213,187,12)" fg:x="12924" fg:w="112"/><text x="82.9544%" y="575.50"></text></g><g><title>virtqueue_get_buf_ctx_split (3 samples, 0.02%)</title><rect x="83.4379%" y="549" width="0.0192%" height="15" fill="rgb(235,34,35)" fg:x="13033" fg:w="3"/><text x="83.6522%" y="559.50"></text></g><g><title>kfree (2 samples, 0.01%)</title><rect x="83.5467%" y="517" width="0.0128%" height="15" fill="rgb(222,6,37)" fg:x="13050" fg:w="2"/><text x="83.7610%" y="527.50"></text></g><g><title>skb_release_data (4 samples, 0.03%)</title><rect x="83.5595%" y="517" width="0.0256%" height="15" fill="rgb(252,193,18)" fg:x="13052" fg:w="4"/><text x="83.7738%" y="527.50"></text></g><g><title>napi_consume_skb (16 samples, 0.10%)</title><rect x="83.5339%" y="533" width="0.1024%" height="15" fill="rgb(244,99,54)" fg:x="13048" fg:w="16"/><text x="83.7482%" y="543.50"></text></g><g><title>skb_release_head_state (8 samples, 0.05%)</title><rect x="83.5851%" y="517" width="0.0512%" height="15" fill="rgb(221,1,22)" fg:x="13056" fg:w="8"/><text x="83.7994%" y="527.50"></text></g><g><title>tcp_wfree (5 samples, 0.03%)</title><rect x="83.6044%" y="501" width="0.0320%" height="15" fill="rgb(250,102,28)" fg:x="13059" fg:w="5"/><text x="83.8186%" y="511.50"></text></g><g><title>free_old_xmit_skbs (52 samples, 0.33%)</title><rect x="83.5019%" y="549" width="0.3329%" height="15" fill="rgb(235,178,6)" fg:x="13043" fg:w="52"/><text x="83.7162%" y="559.50"></text></g><g><title>virtqueue_get_buf_ctx_split (31 samples, 0.20%)</title><rect x="83.6364%" y="533" width="0.1985%" height="15" fill="rgb(235,34,35)" fg:x="13064" fg:w="31"/><text x="83.8506%" y="543.50"></text></g><g><title>detach_buf_split (22 samples, 0.14%)</title><rect x="83.6940%" y="517" width="0.1408%" height="15" fill="rgb(228,101,1)" fg:x="13073" fg:w="22"/><text x="83.9083%" y="527.50"></text></g><g><title>kfree (12 samples, 0.08%)</title><rect x="83.7580%" y="501" width="0.0768%" height="15" fill="rgb(222,6,37)" fg:x="13083" fg:w="12"/><text x="83.9723%" y="511.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (10 samples, 0.06%)</title><rect x="83.7708%" y="485" width="0.0640%" height="15" fill="rgb(208,166,34)" fg:x="13085" fg:w="10"/><text x="83.9851%" y="495.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="83.8348%" y="549" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="13095" fg:w="4"/><text x="84.0491%" y="559.50"></text></g><g><title>net_rx_action (194 samples, 1.24%)</title><rect x="82.6312%" y="581" width="1.2420%" height="15" fill="rgb(231,11,52)" fg:x="12907" fg:w="194"/><text x="82.8455%" y="591.50"></text></g><g><title>virtnet_poll_tx (65 samples, 0.42%)</title><rect x="83.4571%" y="565" width="0.4161%" height="15" fill="rgb(251,188,47)" fg:x="13036" fg:w="65"/><text x="83.6714%" y="575.50"></text></g><g><title>__ip_finish_output (2 samples, 0.01%)</title><rect x="83.9181%" y="485" width="0.0128%" height="15" fill="rgb(252,12,27)" fg:x="13108" fg:w="2"/><text x="84.1323%" y="495.50"></text></g><g><title>__ip_local_out (2 samples, 0.01%)</title><rect x="83.9309%" y="485" width="0.0128%" height="15" fill="rgb(211,146,35)" fg:x="13110" fg:w="2"/><text x="84.1451%" y="495.50"></text></g><g><title>skb_to_sgvec (2 samples, 0.01%)</title><rect x="84.0077%" y="389" width="0.0128%" height="15" fill="rgb(206,221,54)" fg:x="13122" fg:w="2"/><text x="84.2220%" y="399.50"></text></g><g><title>__skb_to_sgvec (2 samples, 0.01%)</title><rect x="84.0077%" y="373" width="0.0128%" height="15" fill="rgb(214,123,25)" fg:x="13122" fg:w="2"/><text x="84.2220%" y="383.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="84.0397%" y="357" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="13127" fg:w="2"/><text x="84.2540%" y="367.50"></text></g><g><title>virtqueue_add_outbuf (8 samples, 0.05%)</title><rect x="84.0205%" y="389" width="0.0512%" height="15" fill="rgb(207,208,9)" fg:x="13124" fg:w="8"/><text x="84.2348%" y="399.50"></text></g><g><title>virtqueue_add_split (8 samples, 0.05%)</title><rect x="84.0205%" y="373" width="0.0512%" height="15" fill="rgb(238,41,16)" fg:x="13124" fg:w="8"/><text x="84.2348%" y="383.50"></text></g><g><title>__kmalloc (3 samples, 0.02%)</title><rect x="84.0525%" y="357" width="0.0192%" height="15" fill="rgb(221,108,10)" fg:x="13129" fg:w="3"/><text x="84.2668%" y="367.50"></text></g><g><title>dev_hard_start_xmit (34 samples, 0.22%)</title><rect x="83.9693%" y="421" width="0.2177%" height="15" fill="rgb(251,86,39)" fg:x="13116" fg:w="34"/><text x="84.1836%" y="431.50"></text></g><g><title>start_xmit (34 samples, 0.22%)</title><rect x="83.9693%" y="405" width="0.2177%" height="15" fill="rgb(211,140,13)" fg:x="13116" fg:w="34"/><text x="84.1836%" y="415.50"></text></g><g><title>virtqueue_notify (17 samples, 0.11%)</title><rect x="84.0781%" y="389" width="0.1088%" height="15" fill="rgb(219,119,18)" fg:x="13133" fg:w="17"/><text x="84.2924%" y="399.50"></text></g><g><title>vp_notify (17 samples, 0.11%)</title><rect x="84.0781%" y="373" width="0.1088%" height="15" fill="rgb(230,193,37)" fg:x="13133" fg:w="17"/><text x="84.2924%" y="383.50"></text></g><g><title>iowrite16 (17 samples, 0.11%)</title><rect x="84.0781%" y="357" width="0.1088%" height="15" fill="rgb(218,139,37)" fg:x="13133" fg:w="17"/><text x="84.2924%" y="367.50"></text></g><g><title>validate_xmit_skb (5 samples, 0.03%)</title><rect x="84.1869%" y="405" width="0.0320%" height="15" fill="rgb(240,104,40)" fg:x="13150" fg:w="5"/><text x="84.4012%" y="415.50"></text></g><g><title>netif_skb_features (4 samples, 0.03%)</title><rect x="84.1933%" y="389" width="0.0256%" height="15" fill="rgb(211,31,54)" fg:x="13151" fg:w="4"/><text x="84.4076%" y="399.50"></text></g><g><title>__qdisc_run (42 samples, 0.27%)</title><rect x="83.9629%" y="453" width="0.2689%" height="15" fill="rgb(252,144,25)" fg:x="13115" fg:w="42"/><text x="84.1772%" y="463.50"></text></g><g><title>sch_direct_xmit (41 samples, 0.26%)</title><rect x="83.9693%" y="437" width="0.2625%" height="15" fill="rgb(222,128,44)" fg:x="13116" fg:w="41"/><text x="84.1836%" y="447.50"></text></g><g><title>validate_xmit_skb_list (7 samples, 0.04%)</title><rect x="84.1869%" y="421" width="0.0448%" height="15" fill="rgb(254,174,52)" fg:x="13150" fg:w="7"/><text x="84.4012%" y="431.50"></text></g><g><title>validate_xmit_xfrm (2 samples, 0.01%)</title><rect x="84.2190%" y="405" width="0.0128%" height="15" fill="rgb(221,177,54)" fg:x="13155" fg:w="2"/><text x="84.4332%" y="415.50"></text></g><g><title>__dev_queue_xmit (48 samples, 0.31%)</title><rect x="83.9565%" y="469" width="0.3073%" height="15" fill="rgb(232,116,37)" fg:x="13114" fg:w="48"/><text x="84.1708%" y="479.50"></text></g><g><title>pfifo_fast_enqueue (4 samples, 0.03%)</title><rect x="84.2382%" y="453" width="0.0256%" height="15" fill="rgb(250,59,0)" fg:x="13158" fg:w="4"/><text x="84.4524%" y="463.50"></text></g><g><title>ip_finish_output2 (51 samples, 0.33%)</title><rect x="83.9501%" y="485" width="0.3265%" height="15" fill="rgb(219,227,11)" fg:x="13113" fg:w="51"/><text x="84.1643%" y="495.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="84.2638%" y="469" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="13162" fg:w="2"/><text x="84.4781%" y="479.50"></text></g><g><title>ip_output (3 samples, 0.02%)</title><rect x="84.2830%" y="485" width="0.0192%" height="15" fill="rgb(213,11,33)" fg:x="13165" fg:w="3"/><text x="84.4973%" y="495.50"></text></g><g><title>__ip_queue_xmit (62 samples, 0.40%)</title><rect x="83.9117%" y="501" width="0.3969%" height="15" fill="rgb(224,11,5)" fg:x="13107" fg:w="62"/><text x="84.1259%" y="511.50"></text></g><g><title>__tcp_select_window (2 samples, 0.01%)</title><rect x="84.3150%" y="501" width="0.0128%" height="15" fill="rgb(220,57,18)" fg:x="13170" fg:w="2"/><text x="84.5293%" y="511.50"></text></g><g><title>skb_clone (3 samples, 0.02%)</title><rect x="84.3278%" y="501" width="0.0192%" height="15" fill="rgb(253,39,17)" fg:x="13172" fg:w="3"/><text x="84.5421%" y="511.50"></text></g><g><title>__tcp_transmit_skb (70 samples, 0.45%)</title><rect x="83.9052%" y="517" width="0.4481%" height="15" fill="rgb(238,106,36)" fg:x="13106" fg:w="70"/><text x="84.1195%" y="527.50"></text></g><g><title>__slab_alloc (2 samples, 0.01%)</title><rect x="84.3598%" y="469" width="0.0128%" height="15" fill="rgb(229,140,31)" fg:x="13177" fg:w="2"/><text x="84.5741%" y="479.50"></text></g><g><title>___slab_alloc (2 samples, 0.01%)</title><rect x="84.3598%" y="453" width="0.0128%" height="15" fill="rgb(224,215,35)" fg:x="13177" fg:w="2"/><text x="84.5741%" y="463.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.02%)</title><rect x="84.3598%" y="485" width="0.0192%" height="15" fill="rgb(228,161,44)" fg:x="13177" fg:w="3"/><text x="84.5741%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (6 samples, 0.04%)</title><rect x="84.3598%" y="517" width="0.0384%" height="15" fill="rgb(225,2,28)" fg:x="13177" fg:w="6"/><text x="84.5741%" y="527.50"></text></g><g><title>__alloc_skb (6 samples, 0.04%)</title><rect x="84.3598%" y="501" width="0.0384%" height="15" fill="rgb(237,90,40)" fg:x="13177" fg:w="6"/><text x="84.5741%" y="511.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.01%)</title><rect x="84.3854%" y="485" width="0.0128%" height="15" fill="rgb(227,94,12)" fg:x="13181" fg:w="2"/><text x="84.5997%" y="495.50"></text></g><g><title>tasklet_action_common.constprop.0 (83 samples, 0.53%)</title><rect x="83.8732%" y="581" width="0.5314%" height="15" fill="rgb(220,151,48)" fg:x="13101" fg:w="83"/><text x="84.0875%" y="591.50"></text></g><g><title>tcp_tasklet_func (82 samples, 0.52%)</title><rect x="83.8796%" y="565" width="0.5250%" height="15" fill="rgb(218,189,37)" fg:x="13102" fg:w="82"/><text x="84.0939%" y="575.50"></text></g><g><title>tcp_tsq_handler (81 samples, 0.52%)</title><rect x="83.8860%" y="549" width="0.5186%" height="15" fill="rgb(238,207,14)" fg:x="13103" fg:w="81"/><text x="84.1003%" y="559.50"></text></g><g><title>tcp_write_xmit (80 samples, 0.51%)</title><rect x="83.8924%" y="533" width="0.5122%" height="15" fill="rgb(236,72,36)" fg:x="13104" fg:w="80"/><text x="84.1067%" y="543.50"></text></g><g><title>do_softirq_own_stack (294 samples, 1.88%)</title><rect x="82.5288%" y="629" width="1.8822%" height="15" fill="rgb(223,89,53)" fg:x="12891" fg:w="294"/><text x="82.7431%" y="639.50">d..</text></g><g><title>asm_call_sysvec_on_stack (292 samples, 1.87%)</title><rect x="82.5416%" y="613" width="1.8694%" height="15" fill="rgb(208,184,36)" fg:x="12893" fg:w="292"/><text x="82.7559%" y="623.50">a..</text></g><g><title>__softirqentry_text_start (291 samples, 1.86%)</title><rect x="82.5480%" y="597" width="1.8630%" height="15" fill="rgb(249,91,22)" fg:x="12894" fg:w="291"/><text x="82.7623%" y="607.50">_..</text></g><g><title>idle_cpu (4 samples, 0.03%)</title><rect x="84.4110%" y="629" width="0.0256%" height="15" fill="rgb(248,184,26)" fg:x="13185" fg:w="4"/><text x="84.6253%" y="639.50"></text></g><g><title>asm_common_interrupt (318 samples, 2.04%)</title><rect x="82.4072%" y="677" width="2.0359%" height="15" fill="rgb(248,227,45)" fg:x="12872" fg:w="318"/><text x="82.6215%" y="687.50">as..</text></g><g><title>common_interrupt (318 samples, 2.04%)</title><rect x="82.4072%" y="661" width="2.0359%" height="15" fill="rgb(250,67,32)" fg:x="12872" fg:w="318"/><text x="82.6215%" y="671.50">co..</text></g><g><title>irq_exit_rcu (303 samples, 1.94%)</title><rect x="82.5032%" y="645" width="1.9398%" height="15" fill="rgb(240,18,12)" fg:x="12887" fg:w="303"/><text x="82.7175%" y="655.50">i..</text></g><g><title>perf_event_task_tick (2 samples, 0.01%)</title><rect x="84.4622%" y="517" width="0.0128%" height="15" fill="rgb(243,211,17)" fg:x="13193" fg:w="2"/><text x="84.6765%" y="527.50"></text></g><g><title>amd_pmu_disable_all (2 samples, 0.01%)</title><rect x="84.4622%" y="501" width="0.0128%" height="15" fill="rgb(224,0,7)" fg:x="13193" fg:w="2"/><text x="84.6765%" y="511.50"></text></g><g><title>x86_pmu_disable_all (2 samples, 0.01%)</title><rect x="84.4622%" y="485" width="0.0128%" height="15" fill="rgb(235,111,43)" fg:x="13193" fg:w="2"/><text x="84.6765%" y="495.50"></text></g><g><title>tick_sched_handle (7 samples, 0.04%)</title><rect x="84.4430%" y="565" width="0.0448%" height="15" fill="rgb(232,138,39)" fg:x="13190" fg:w="7"/><text x="84.6573%" y="575.50"></text></g><g><title>update_process_times (7 samples, 0.04%)</title><rect x="84.4430%" y="549" width="0.0448%" height="15" fill="rgb(236,132,35)" fg:x="13190" fg:w="7"/><text x="84.6573%" y="559.50"></text></g><g><title>scheduler_tick (5 samples, 0.03%)</title><rect x="84.4558%" y="533" width="0.0320%" height="15" fill="rgb(222,32,52)" fg:x="13192" fg:w="5"/><text x="84.6701%" y="543.50"></text></g><g><title>task_tick_fair (2 samples, 0.01%)</title><rect x="84.4750%" y="517" width="0.0128%" height="15" fill="rgb(206,173,54)" fg:x="13195" fg:w="2"/><text x="84.6893%" y="527.50"></text></g><g><title>__hrtimer_run_queues (8 samples, 0.05%)</title><rect x="84.4430%" y="597" width="0.0512%" height="15" fill="rgb(232,211,54)" fg:x="13190" fg:w="8"/><text x="84.6573%" y="607.50"></text></g><g><title>tick_sched_timer (8 samples, 0.05%)</title><rect x="84.4430%" y="581" width="0.0512%" height="15" fill="rgb(237,67,28)" fg:x="13190" fg:w="8"/><text x="84.6573%" y="591.50"></text></g><g><title>asm_call_sysvec_on_stack (10 samples, 0.06%)</title><rect x="84.4430%" y="645" width="0.0640%" height="15" fill="rgb(208,184,36)" fg:x="13190" fg:w="10"/><text x="84.6573%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (10 samples, 0.06%)</title><rect x="84.4430%" y="629" width="0.0640%" height="15" fill="rgb(221,147,0)" fg:x="13190" fg:w="10"/><text x="84.6573%" y="639.50"></text></g><g><title>hrtimer_interrupt (10 samples, 0.06%)</title><rect x="84.4430%" y="613" width="0.0640%" height="15" fill="rgb(212,109,30)" fg:x="13190" fg:w="10"/><text x="84.6573%" y="623.50"></text></g><g><title>clockevents_program_event (2 samples, 0.01%)</title><rect x="84.4942%" y="597" width="0.0128%" height="15" fill="rgb(248,76,23)" fg:x="13198" fg:w="2"/><text x="84.7085%" y="607.50"></text></g><g><title>finish_task_switch (372 samples, 2.38%)</title><rect x="82.1383%" y="693" width="2.3816%" height="15" fill="rgb(214,214,33)" fg:x="12830" fg:w="372"/><text x="82.3526%" y="703.50">fi..</text></g><g><title>asm_sysvec_apic_timer_interrupt (12 samples, 0.08%)</title><rect x="84.4430%" y="677" width="0.0768%" height="15" fill="rgb(209,17,43)" fg:x="13190" fg:w="12"/><text x="84.6573%" y="687.50"></text></g><g><title>sysvec_apic_timer_interrupt (12 samples, 0.08%)</title><rect x="84.4430%" y="661" width="0.0768%" height="15" fill="rgb(218,44,13)" fg:x="13190" fg:w="12"/><text x="84.6573%" y="671.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="84.5070%" y="645" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="13200" fg:w="2"/><text x="84.7213%" y="655.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="84.5070%" y="629" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="13200" fg:w="2"/><text x="84.7213%" y="639.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="84.5070%" y="613" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="13200" fg:w="2"/><text x="84.7213%" y="623.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="84.5070%" y="597" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="13200" fg:w="2"/><text x="84.7213%" y="607.50"></text></g><g><title>hrtick_update (3 samples, 0.02%)</title><rect x="84.5198%" y="693" width="0.0192%" height="15" fill="rgb(247,64,54)" fg:x="13202" fg:w="3"/><text x="84.7341%" y="703.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.01%)</title><rect x="84.7823%" y="661" width="0.0128%" height="15" fill="rgb(211,8,20)" fg:x="13243" fg:w="2"/><text x="84.9966%" y="671.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.01%)</title><rect x="84.7823%" y="645" width="0.0128%" height="15" fill="rgb(210,87,27)" fg:x="13243" fg:w="2"/><text x="84.9966%" y="655.50"></text></g><g><title>__update_load_avg_cfs_rq (3 samples, 0.02%)</title><rect x="85.0064%" y="645" width="0.0192%" height="15" fill="rgb(206,162,20)" fg:x="13278" fg:w="3"/><text x="85.2207%" y="655.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="85.0256%" y="645" width="0.0128%" height="15" fill="rgb(206,213,41)" fg:x="13281" fg:w="2"/><text x="85.2399%" y="655.50"></text></g><g><title>update_dl_rq_load_avg (11 samples, 0.07%)</title><rect x="85.0384%" y="645" width="0.0704%" height="15" fill="rgb(250,180,35)" fg:x="13283" fg:w="11"/><text x="85.2527%" y="655.50"></text></g><g><title>update_rq_clock (8 samples, 0.05%)</title><rect x="85.1088%" y="645" width="0.0512%" height="15" fill="rgb(248,207,48)" fg:x="13294" fg:w="8"/><text x="85.3231%" y="655.50"></text></g><g><title>sched_clock_cpu (8 samples, 0.05%)</title><rect x="85.1088%" y="629" width="0.0512%" height="15" fill="rgb(217,142,15)" fg:x="13294" fg:w="8"/><text x="85.3231%" y="639.50"></text></g><g><title>sched_clock (5 samples, 0.03%)</title><rect x="85.1280%" y="613" width="0.0320%" height="15" fill="rgb(234,150,37)" fg:x="13297" fg:w="5"/><text x="85.3423%" y="623.50"></text></g><g><title>kvm_sched_clock_read (3 samples, 0.02%)</title><rect x="85.1408%" y="597" width="0.0192%" height="15" fill="rgb(248,187,27)" fg:x="13299" fg:w="3"/><text x="85.3551%" y="607.50"></text></g><g><title>pvclock_clocksource_read (3 samples, 0.02%)</title><rect x="85.1408%" y="581" width="0.0192%" height="15" fill="rgb(246,59,10)" fg:x="13299" fg:w="3"/><text x="85.3551%" y="591.50"></text></g><g><title>newidle_balance (106 samples, 0.68%)</title><rect x="84.6159%" y="677" width="0.6786%" height="15" fill="rgb(211,171,16)" fg:x="13217" fg:w="106"/><text x="84.8302%" y="687.50"></text></g><g><title>update_blocked_averages (76 samples, 0.49%)</title><rect x="84.8079%" y="661" width="0.4866%" height="15" fill="rgb(250,41,28)" fg:x="13247" fg:w="76"/><text x="85.0222%" y="671.50"></text></g><g><title>update_rt_rq_load_avg (21 samples, 0.13%)</title><rect x="85.1601%" y="645" width="0.1344%" height="15" fill="rgb(235,84,33)" fg:x="13302" fg:w="21"/><text x="85.3743%" y="655.50"></text></g><g><title>pick_next_task_fair (119 samples, 0.76%)</title><rect x="84.5391%" y="693" width="0.7618%" height="15" fill="rgb(247,213,54)" fg:x="13205" fg:w="119"/><text x="84.7533%" y="703.50"></text></g><g><title>pick_next_task_idle (8 samples, 0.05%)</title><rect x="85.3009%" y="693" width="0.0512%" height="15" fill="rgb(220,165,36)" fg:x="13324" fg:w="8"/><text x="85.5152%" y="703.50"></text></g><g><title>psi_flags_change (6 samples, 0.04%)</title><rect x="85.5634%" y="677" width="0.0384%" height="15" fill="rgb(240,165,6)" fg:x="13365" fg:w="6"/><text x="85.7777%" y="687.50"></text></g><g><title>record_times (35 samples, 0.22%)</title><rect x="85.9987%" y="661" width="0.2241%" height="15" fill="rgb(235,137,9)" fg:x="13433" fg:w="35"/><text x="86.2130%" y="671.50"></text></g><g><title>sched_clock_cpu (24 samples, 0.15%)</title><rect x="86.0691%" y="645" width="0.1536%" height="15" fill="rgb(217,142,15)" fg:x="13444" fg:w="24"/><text x="86.2834%" y="655.50"></text></g><g><title>sched_clock (18 samples, 0.12%)</title><rect x="86.1076%" y="629" width="0.1152%" height="15" fill="rgb(234,150,37)" fg:x="13450" fg:w="18"/><text x="86.3218%" y="639.50"></text></g><g><title>kvm_sched_clock_read (14 samples, 0.09%)</title><rect x="86.1332%" y="613" width="0.0896%" height="15" fill="rgb(248,187,27)" fg:x="13454" fg:w="14"/><text x="86.3474%" y="623.50"></text></g><g><title>pvclock_clocksource_read (14 samples, 0.09%)</title><rect x="86.1332%" y="597" width="0.0896%" height="15" fill="rgb(246,59,10)" fg:x="13454" fg:w="14"/><text x="86.3474%" y="607.50"></text></g><g><title>psi_task_change (137 samples, 0.88%)</title><rect x="85.3521%" y="693" width="0.8771%" height="15" fill="rgb(214,87,45)" fg:x="13332" fg:w="137"/><text x="85.5664%" y="703.50"></text></g><g><title>psi_group_change (98 samples, 0.63%)</title><rect x="85.6018%" y="677" width="0.6274%" height="15" fill="rgb(214,74,3)" fg:x="13371" fg:w="98"/><text x="85.8161%" y="687.50"></text></g><g><title>psi_task_switch (4 samples, 0.03%)</title><rect x="86.2292%" y="693" width="0.0256%" height="15" fill="rgb(233,176,51)" fg:x="13469" fg:w="4"/><text x="86.4435%" y="703.50"></text></g><g><title>put_prev_task_fair (15 samples, 0.10%)</title><rect x="86.2548%" y="693" width="0.0960%" height="15" fill="rgb(217,100,33)" fg:x="13473" fg:w="15"/><text x="86.4691%" y="703.50"></text></g><g><title>put_prev_entity (10 samples, 0.06%)</title><rect x="86.2868%" y="677" width="0.0640%" height="15" fill="rgb(223,18,39)" fg:x="13478" fg:w="10"/><text x="86.5011%" y="687.50"></text></g><g><title>pvclock_clocksource_read (3 samples, 0.02%)</title><rect x="86.4533%" y="629" width="0.0192%" height="15" fill="rgb(246,59,10)" fg:x="13504" fg:w="3"/><text x="86.6676%" y="639.50"></text></g><g><title>__schedule (1,040 samples, 6.66%)</title><rect x="79.8207%" y="709" width="6.6581%" height="15" fill="rgb(207,40,26)" fg:x="12468" fg:w="1040"/><text x="80.0350%" y="719.50">__schedule</text></g><g><title>update_rq_clock (18 samples, 0.12%)</title><rect x="86.3636%" y="693" width="0.1152%" height="15" fill="rgb(248,207,48)" fg:x="13490" fg:w="18"/><text x="86.5779%" y="703.50"></text></g><g><title>sched_clock_cpu (11 samples, 0.07%)</title><rect x="86.4085%" y="677" width="0.0704%" height="15" fill="rgb(217,142,15)" fg:x="13497" fg:w="11"/><text x="86.6227%" y="687.50"></text></g><g><title>sched_clock (9 samples, 0.06%)</title><rect x="86.4213%" y="661" width="0.0576%" height="15" fill="rgb(234,150,37)" fg:x="13499" fg:w="9"/><text x="86.6355%" y="671.50"></text></g><g><title>kvm_sched_clock_read (9 samples, 0.06%)</title><rect x="86.4213%" y="645" width="0.0576%" height="15" fill="rgb(248,187,27)" fg:x="13499" fg:w="9"/><text x="86.6355%" y="655.50"></text></g><g><title>schedule (1,045 samples, 6.69%)</title><rect x="79.7951%" y="725" width="6.6901%" height="15" fill="rgb(213,215,35)" fg:x="12464" fg:w="1045"/><text x="80.0094%" y="735.50">schedule</text></g><g><title>schedule_hrtimeout_range_clock (1,204 samples, 7.71%)</title><rect x="78.7836%" y="741" width="7.7081%" height="15" fill="rgb(209,201,27)" fg:x="12306" fg:w="1204"/><text x="78.9979%" y="751.50">schedule_hrti..</text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="86.5557%" y="725" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="13520" fg:w="2"/><text x="86.7700%" y="735.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="86.5557%" y="709" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="13520" fg:w="2"/><text x="86.7700%" y="719.50"></text></g><g><title>ktime_get_ts64 (7 samples, 0.04%)</title><rect x="86.5685%" y="725" width="0.0448%" height="15" fill="rgb(212,111,10)" fg:x="13522" fg:w="7"/><text x="86.7828%" y="735.50"></text></g><g><title>kvm_clock_get_cycles (6 samples, 0.04%)</title><rect x="86.5749%" y="709" width="0.0384%" height="15" fill="rgb(213,218,37)" fg:x="13523" fg:w="6"/><text x="86.7892%" y="719.50"></text></g><g><title>pvclock_clocksource_read (4 samples, 0.03%)</title><rect x="86.5877%" y="693" width="0.0256%" height="15" fill="rgb(246,59,10)" fg:x="13525" fg:w="4"/><text x="86.8020%" y="703.50"></text></g><g><title>select_estimate_accuracy (27 samples, 0.17%)</title><rect x="86.4917%" y="741" width="0.1729%" height="15" fill="rgb(219,208,33)" fg:x="13510" fg:w="27"/><text x="86.7060%" y="751.50"></text></g><g><title>set_normalized_timespec64 (8 samples, 0.05%)</title><rect x="86.6133%" y="725" width="0.0512%" height="15" fill="rgb(245,82,4)" fg:x="13529" fg:w="8"/><text x="86.8276%" y="735.50"></text></g><g><title>__irqentry_text_start (103 samples, 0.66%)</title><rect x="92.0615%" y="725" width="0.6594%" height="15" fill="rgb(229,107,3)" fg:x="14380" fg:w="103"/><text x="92.2757%" y="735.50"></text></g><g><title>__x86_return_thunk (3 samples, 0.02%)</title><rect x="92.7209%" y="725" width="0.0192%" height="15" fill="rgb(211,8,20)" fg:x="14483" fg:w="3"/><text x="92.9352%" y="735.50"></text></g><g><title>srso_safe_ret_alias (3 samples, 0.02%)</title><rect x="92.7209%" y="709" width="0.0192%" height="15" fill="rgb(210,87,27)" fg:x="14483" fg:w="3"/><text x="92.9352%" y="719.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="92.7401%" y="693" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="14486" fg:w="2"/><text x="92.9544%" y="703.50"></text></g><g><title>handle_edge_irq (2 samples, 0.01%)</title><rect x="92.7401%" y="677" width="0.0128%" height="15" fill="rgb(219,15,9)" fg:x="14486" fg:w="2"/><text x="92.9544%" y="687.50"></text></g><g><title>handle_irq_event (2 samples, 0.01%)</title><rect x="92.7401%" y="661" width="0.0128%" height="15" fill="rgb(209,73,52)" fg:x="14486" fg:w="2"/><text x="92.9544%" y="671.50"></text></g><g><title>__qdisc_run (10 samples, 0.06%)</title><rect x="92.8361%" y="325" width="0.0640%" height="15" fill="rgb(252,144,25)" fg:x="14501" fg:w="10"/><text x="93.0504%" y="335.50"></text></g><g><title>sch_direct_xmit (8 samples, 0.05%)</title><rect x="92.8489%" y="309" width="0.0512%" height="15" fill="rgb(222,128,44)" fg:x="14503" fg:w="8"/><text x="93.0632%" y="319.50"></text></g><g><title>dev_hard_start_xmit (7 samples, 0.04%)</title><rect x="92.8553%" y="293" width="0.0448%" height="15" fill="rgb(251,86,39)" fg:x="14504" fg:w="7"/><text x="93.0696%" y="303.50"></text></g><g><title>start_xmit (7 samples, 0.04%)</title><rect x="92.8553%" y="277" width="0.0448%" height="15" fill="rgb(211,140,13)" fg:x="14504" fg:w="7"/><text x="93.0696%" y="287.50"></text></g><g><title>virtqueue_notify (4 samples, 0.03%)</title><rect x="92.8745%" y="261" width="0.0256%" height="15" fill="rgb(219,119,18)" fg:x="14507" fg:w="4"/><text x="93.0888%" y="271.50"></text></g><g><title>vp_notify (4 samples, 0.03%)</title><rect x="92.8745%" y="245" width="0.0256%" height="15" fill="rgb(230,193,37)" fg:x="14507" fg:w="4"/><text x="93.0888%" y="255.50"></text></g><g><title>iowrite16 (4 samples, 0.03%)</title><rect x="92.8745%" y="229" width="0.0256%" height="15" fill="rgb(218,139,37)" fg:x="14507" fg:w="4"/><text x="93.0888%" y="239.50"></text></g><g><title>__tcp_transmit_skb (11 samples, 0.07%)</title><rect x="92.8361%" y="389" width="0.0704%" height="15" fill="rgb(238,106,36)" fg:x="14501" fg:w="11"/><text x="93.0504%" y="399.50"></text></g><g><title>__ip_queue_xmit (11 samples, 0.07%)</title><rect x="92.8361%" y="373" width="0.0704%" height="15" fill="rgb(224,11,5)" fg:x="14501" fg:w="11"/><text x="93.0504%" y="383.50"></text></g><g><title>ip_finish_output2 (11 samples, 0.07%)</title><rect x="92.8361%" y="357" width="0.0704%" height="15" fill="rgb(219,227,11)" fg:x="14501" fg:w="11"/><text x="93.0504%" y="367.50"></text></g><g><title>__dev_queue_xmit (11 samples, 0.07%)</title><rect x="92.8361%" y="341" width="0.0704%" height="15" fill="rgb(232,116,37)" fg:x="14501" fg:w="11"/><text x="93.0504%" y="351.50"></text></g><g><title>__alloc_skb (2 samples, 0.01%)</title><rect x="92.9065%" y="373" width="0.0128%" height="15" fill="rgb(237,90,40)" fg:x="14512" fg:w="2"/><text x="93.1208%" y="383.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.01%)</title><rect x="92.9065%" y="357" width="0.0128%" height="15" fill="rgb(228,161,44)" fg:x="14512" fg:w="2"/><text x="93.1208%" y="367.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.02%)</title><rect x="92.9065%" y="389" width="0.0192%" height="15" fill="rgb(225,2,28)" fg:x="14512" fg:w="3"/><text x="93.1208%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (17 samples, 0.11%)</title><rect x="92.8297%" y="421" width="0.1088%" height="15" fill="rgb(226,88,38)" fg:x="14500" fg:w="17"/><text x="93.0440%" y="431.50"></text></g><g><title>tcp_write_xmit (17 samples, 0.11%)</title><rect x="92.8297%" y="405" width="0.1088%" height="15" fill="rgb(236,72,36)" fg:x="14500" fg:w="17"/><text x="93.0440%" y="415.50"></text></g><g><title>tcp_check_space (2 samples, 0.01%)</title><rect x="92.9257%" y="389" width="0.0128%" height="15" fill="rgb(212,169,11)" fg:x="14515" fg:w="2"/><text x="93.1400%" y="399.50"></text></g><g><title>kfree (3 samples, 0.02%)</title><rect x="92.9513%" y="389" width="0.0192%" height="15" fill="rgb(222,6,37)" fg:x="14519" fg:w="3"/><text x="93.1656%" y="399.50"></text></g><g><title>__kfree_skb (5 samples, 0.03%)</title><rect x="92.9513%" y="405" width="0.0320%" height="15" fill="rgb(208,195,26)" fg:x="14519" fg:w="5"/><text x="93.1656%" y="415.50"></text></g><g><title>skb_release_data (2 samples, 0.01%)</title><rect x="92.9706%" y="389" width="0.0128%" height="15" fill="rgb(252,193,18)" fg:x="14522" fg:w="2"/><text x="93.1848%" y="399.50"></text></g><g><title>tcp_sacktag_write_queue (3 samples, 0.02%)</title><rect x="92.9962%" y="405" width="0.0192%" height="15" fill="rgb(251,92,9)" fg:x="14526" fg:w="3"/><text x="93.2104%" y="415.50"></text></g><g><title>tcp_sacktag_walk (2 samples, 0.01%)</title><rect x="93.0026%" y="389" width="0.0128%" height="15" fill="rgb(235,55,24)" fg:x="14527" fg:w="2"/><text x="93.2168%" y="399.50"></text></g><g><title>tcp_ack (13 samples, 0.08%)</title><rect x="92.9385%" y="421" width="0.0832%" height="15" fill="rgb(213,228,3)" fg:x="14517" fg:w="13"/><text x="93.1528%" y="431.50"></text></g><g><title>tcp_v4_do_rcv (31 samples, 0.20%)</title><rect x="92.8297%" y="453" width="0.1985%" height="15" fill="rgb(228,220,18)" fg:x="14500" fg:w="31"/><text x="93.0440%" y="463.50"></text></g><g><title>tcp_rcv_established (31 samples, 0.20%)</title><rect x="92.8297%" y="437" width="0.1985%" height="15" fill="rgb(224,50,47)" fg:x="14500" fg:w="31"/><text x="93.0440%" y="447.50"></text></g><g><title>napi_complete_done (38 samples, 0.24%)</title><rect x="92.7977%" y="597" width="0.2433%" height="15" fill="rgb(226,216,13)" fg:x="14495" fg:w="38"/><text x="93.0120%" y="607.50"></text></g><g><title>netif_receive_skb_list_internal (37 samples, 0.24%)</title><rect x="92.8041%" y="581" width="0.2369%" height="15" fill="rgb(216,153,44)" fg:x="14496" fg:w="37"/><text x="93.0184%" y="591.50"></text></g><g><title>__netif_receive_skb_list_core (37 samples, 0.24%)</title><rect x="92.8041%" y="565" width="0.2369%" height="15" fill="rgb(227,176,26)" fg:x="14496" fg:w="37"/><text x="93.0184%" y="575.50"></text></g><g><title>ip_list_rcv (37 samples, 0.24%)</title><rect x="92.8041%" y="549" width="0.2369%" height="15" fill="rgb(215,38,16)" fg:x="14496" fg:w="37"/><text x="93.0184%" y="559.50"></text></g><g><title>ip_sublist_rcv (37 samples, 0.24%)</title><rect x="92.8041%" y="533" width="0.2369%" height="15" fill="rgb(207,166,9)" fg:x="14496" fg:w="37"/><text x="93.0184%" y="543.50"></text></g><g><title>ip_sublist_rcv_finish (37 samples, 0.24%)</title><rect x="92.8041%" y="517" width="0.2369%" height="15" fill="rgb(223,178,14)" fg:x="14496" fg:w="37"/><text x="93.0184%" y="527.50"></text></g><g><title>ip_local_deliver_finish (36 samples, 0.23%)</title><rect x="92.8105%" y="501" width="0.2305%" height="15" fill="rgb(220,94,29)" fg:x="14497" fg:w="36"/><text x="93.0248%" y="511.50"></text></g><g><title>ip_protocol_deliver_rcu (36 samples, 0.23%)</title><rect x="92.8105%" y="485" width="0.2305%" height="15" fill="rgb(207,19,13)" fg:x="14497" fg:w="36"/><text x="93.0248%" y="495.50"></text></g><g><title>tcp_v4_rcv (36 samples, 0.23%)</title><rect x="92.8105%" y="469" width="0.2305%" height="15" fill="rgb(224,38,0)" fg:x="14497" fg:w="36"/><text x="93.0248%" y="479.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.01%)</title><rect x="93.0538%" y="533" width="0.0128%" height="15" fill="rgb(227,94,12)" fg:x="14535" fg:w="2"/><text x="93.2681%" y="543.50"></text></g><g><title>__napi_alloc_skb (3 samples, 0.02%)</title><rect x="93.0538%" y="565" width="0.0192%" height="15" fill="rgb(236,121,11)" fg:x="14535" fg:w="3"/><text x="93.2681%" y="575.50"></text></g><g><title>__alloc_skb (3 samples, 0.02%)</title><rect x="93.0538%" y="549" width="0.0192%" height="15" fill="rgb(237,90,40)" fg:x="14535" fg:w="3"/><text x="93.2681%" y="559.50"></text></g><g><title>receive_buf (6 samples, 0.04%)</title><rect x="93.0474%" y="597" width="0.0384%" height="15" fill="rgb(233,111,44)" fg:x="14534" fg:w="6"/><text x="93.2617%" y="607.50"></text></g><g><title>page_to_skb (6 samples, 0.04%)</title><rect x="93.0474%" y="581" width="0.0384%" height="15" fill="rgb(243,180,22)" fg:x="14534" fg:w="6"/><text x="93.2617%" y="591.50"></text></g><g><title>try_fill_recv (4 samples, 0.03%)</title><rect x="93.0858%" y="597" width="0.0256%" height="15" fill="rgb(209,67,13)" fg:x="14540" fg:w="4"/><text x="93.3001%" y="607.50"></text></g><g><title>skb_page_frag_refill (3 samples, 0.02%)</title><rect x="93.0922%" y="581" width="0.0192%" height="15" fill="rgb(240,178,22)" fg:x="14541" fg:w="3"/><text x="93.3065%" y="591.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.02%)</title><rect x="93.0922%" y="565" width="0.0192%" height="15" fill="rgb(245,49,10)" fg:x="14541" fg:w="3"/><text x="93.3065%" y="575.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.02%)</title><rect x="93.0922%" y="549" width="0.0192%" height="15" fill="rgb(246,35,53)" fg:x="14541" fg:w="3"/><text x="93.3065%" y="559.50"></text></g><g><title>prep_new_page (3 samples, 0.02%)</title><rect x="93.0922%" y="533" width="0.0192%" height="15" fill="rgb(220,94,29)" fg:x="14541" fg:w="3"/><text x="93.3065%" y="543.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.02%)</title><rect x="93.0922%" y="517" width="0.0192%" height="15" fill="rgb(253,165,35)" fg:x="14541" fg:w="3"/><text x="93.3065%" y="527.50"></text></g><g><title>clear_page_rep (2 samples, 0.01%)</title><rect x="93.0986%" y="501" width="0.0128%" height="15" fill="rgb(233,188,25)" fg:x="14542" fg:w="2"/><text x="93.3129%" y="511.50"></text></g><g><title>virtnet_poll (52 samples, 0.33%)</title><rect x="92.7849%" y="613" width="0.3329%" height="15" fill="rgb(213,187,12)" fg:x="14493" fg:w="52"/><text x="92.9992%" y="623.50"></text></g><g><title>net_rx_action (60 samples, 0.38%)</title><rect x="92.7657%" y="629" width="0.3841%" height="15" fill="rgb(231,11,52)" fg:x="14490" fg:w="60"/><text x="92.9800%" y="639.50"></text></g><g><title>virtnet_poll_tx (5 samples, 0.03%)</title><rect x="93.1178%" y="613" width="0.0320%" height="15" fill="rgb(251,188,47)" fg:x="14545" fg:w="5"/><text x="93.3321%" y="623.50"></text></g><g><title>free_old_xmit_skbs (4 samples, 0.03%)</title><rect x="93.1242%" y="597" width="0.0256%" height="15" fill="rgb(235,178,6)" fg:x="14546" fg:w="4"/><text x="93.3385%" y="607.50"></text></g><g><title>virtqueue_get_buf_ctx_split (4 samples, 0.03%)</title><rect x="93.1242%" y="581" width="0.0256%" height="15" fill="rgb(235,34,35)" fg:x="14546" fg:w="4"/><text x="93.3385%" y="591.50"></text></g><g><title>detach_buf_split (2 samples, 0.01%)</title><rect x="93.1370%" y="565" width="0.0128%" height="15" fill="rgb(228,101,1)" fg:x="14548" fg:w="2"/><text x="93.3513%" y="575.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.02%)</title><rect x="93.1690%" y="549" width="0.0192%" height="15" fill="rgb(224,11,5)" fg:x="14553" fg:w="3"/><text x="93.3833%" y="559.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="93.1754%" y="533" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="14554" fg:w="2"/><text x="93.3897%" y="543.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="93.1754%" y="517" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="14554" fg:w="2"/><text x="93.3897%" y="527.50"></text></g><g><title>__qdisc_run (2 samples, 0.01%)</title><rect x="93.1754%" y="501" width="0.0128%" height="15" fill="rgb(252,144,25)" fg:x="14554" fg:w="2"/><text x="93.3897%" y="511.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="93.1754%" y="485" width="0.0128%" height="15" fill="rgb(222,128,44)" fg:x="14554" fg:w="2"/><text x="93.3897%" y="495.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="93.1754%" y="469" width="0.0128%" height="15" fill="rgb(251,86,39)" fg:x="14554" fg:w="2"/><text x="93.3897%" y="479.50"></text></g><g><title>start_xmit (2 samples, 0.01%)</title><rect x="93.1754%" y="453" width="0.0128%" height="15" fill="rgb(211,140,13)" fg:x="14554" fg:w="2"/><text x="93.3897%" y="463.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.03%)</title><rect x="93.1626%" y="565" width="0.0320%" height="15" fill="rgb(238,106,36)" fg:x="14552" fg:w="5"/><text x="93.3769%" y="575.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.01%)</title><rect x="93.1946%" y="565" width="0.0128%" height="15" fill="rgb(225,2,28)" fg:x="14557" fg:w="2"/><text x="93.4089%" y="575.50"></text></g><g><title>asm_common_interrupt (75 samples, 0.48%)</title><rect x="92.7401%" y="725" width="0.4802%" height="15" fill="rgb(248,227,45)" fg:x="14486" fg:w="75"/><text x="92.9544%" y="735.50"></text></g><g><title>common_interrupt (75 samples, 0.48%)</title><rect x="92.7401%" y="709" width="0.4802%" height="15" fill="rgb(250,67,32)" fg:x="14486" fg:w="75"/><text x="92.9544%" y="719.50"></text></g><g><title>irq_exit_rcu (73 samples, 0.47%)</title><rect x="92.7529%" y="693" width="0.4673%" height="15" fill="rgb(240,18,12)" fg:x="14488" fg:w="73"/><text x="92.9672%" y="703.50"></text></g><g><title>do_softirq_own_stack (72 samples, 0.46%)</title><rect x="92.7593%" y="677" width="0.4609%" height="15" fill="rgb(223,89,53)" fg:x="14489" fg:w="72"/><text x="92.9736%" y="687.50"></text></g><g><title>asm_call_sysvec_on_stack (72 samples, 0.46%)</title><rect x="92.7593%" y="661" width="0.4609%" height="15" fill="rgb(208,184,36)" fg:x="14489" fg:w="72"/><text x="92.9736%" y="671.50"></text></g><g><title>__softirqentry_text_start (72 samples, 0.46%)</title><rect x="92.7593%" y="645" width="0.4609%" height="15" fill="rgb(249,91,22)" fg:x="14489" fg:w="72"/><text x="92.9736%" y="655.50"></text></g><g><title>tasklet_action_common.constprop.0 (11 samples, 0.07%)</title><rect x="93.1498%" y="629" width="0.0704%" height="15" fill="rgb(220,151,48)" fg:x="14550" fg:w="11"/><text x="93.3641%" y="639.50"></text></g><g><title>tcp_tasklet_func (11 samples, 0.07%)</title><rect x="93.1498%" y="613" width="0.0704%" height="15" fill="rgb(218,189,37)" fg:x="14550" fg:w="11"/><text x="93.3641%" y="623.50"></text></g><g><title>tcp_tsq_handler (11 samples, 0.07%)</title><rect x="93.1498%" y="597" width="0.0704%" height="15" fill="rgb(238,207,14)" fg:x="14550" fg:w="11"/><text x="93.3641%" y="607.50"></text></g><g><title>tcp_write_xmit (11 samples, 0.07%)</title><rect x="93.1498%" y="581" width="0.0704%" height="15" fill="rgb(236,72,36)" fg:x="14550" fg:w="11"/><text x="93.3641%" y="591.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="93.2202%" y="725" width="0.0192%" height="15" fill="rgb(209,17,43)" fg:x="14561" fg:w="3"/><text x="93.4345%" y="735.50"></text></g><g><title>__irqentry_text_start (36 samples, 0.23%)</title><rect x="95.6786%" y="709" width="0.2305%" height="15" fill="rgb(229,107,3)" fg:x="14945" fg:w="36"/><text x="95.8929%" y="719.50"></text></g><g><title>_cond_resched (16 samples, 0.10%)</title><rect x="96.3316%" y="661" width="0.1024%" height="15" fill="rgb(240,228,18)" fg:x="15047" fg:w="16"/><text x="96.5459%" y="671.50"></text></g><g><title>rcu_all_qs (7 samples, 0.04%)</title><rect x="96.3892%" y="645" width="0.0448%" height="15" fill="rgb(224,119,51)" fg:x="15056" fg:w="7"/><text x="96.6035%" y="655.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="96.4213%" y="629" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="15061" fg:w="2"/><text x="96.6355%" y="639.50"></text></g><g><title>__inc_numa_state (3 samples, 0.02%)</title><rect x="96.5429%" y="645" width="0.0192%" height="15" fill="rgb(213,57,28)" fg:x="15080" fg:w="3"/><text x="96.7572%" y="655.50"></text></g><g><title>__list_del_entry_valid (11 samples, 0.07%)</title><rect x="96.5685%" y="645" width="0.0704%" height="15" fill="rgb(224,110,12)" fg:x="15084" fg:w="11"/><text x="96.7828%" y="655.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="96.9590%" y="597" width="0.0256%" height="15" fill="rgb(229,107,3)" fg:x="15145" fg:w="4"/><text x="97.1733%" y="607.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="96.9846%" y="469" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="15149" fg:w="2"/><text x="97.1989%" y="479.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="96.9846%" y="453" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="15149" fg:w="2"/><text x="97.1989%" y="463.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="96.9846%" y="437" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="15149" fg:w="2"/><text x="97.1989%" y="447.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="96.9846%" y="421" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="15149" fg:w="2"/><text x="97.1989%" y="431.50"></text></g><g><title>virtnet_poll (3 samples, 0.02%)</title><rect x="96.9846%" y="485" width="0.0192%" height="15" fill="rgb(213,187,12)" fg:x="15149" fg:w="3"/><text x="97.1989%" y="495.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="96.9846%" y="501" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="15149" fg:w="4"/><text x="97.1989%" y="511.50"></text></g><g><title>kernel_init_free_pages (50 samples, 0.32%)</title><rect x="96.7029%" y="629" width="0.3201%" height="15" fill="rgb(253,165,35)" fg:x="15105" fg:w="50"/><text x="96.9172%" y="639.50"></text></g><g><title>clear_page_rep (49 samples, 0.31%)</title><rect x="96.7093%" y="613" width="0.3137%" height="15" fill="rgb(233,188,25)" fg:x="15106" fg:w="49"/><text x="96.9236%" y="623.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.04%)</title><rect x="96.9846%" y="597" width="0.0384%" height="15" fill="rgb(248,227,45)" fg:x="15149" fg:w="6"/><text x="97.1989%" y="607.50"></text></g><g><title>common_interrupt (6 samples, 0.04%)</title><rect x="96.9846%" y="581" width="0.0384%" height="15" fill="rgb(250,67,32)" fg:x="15149" fg:w="6"/><text x="97.1989%" y="591.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.04%)</title><rect x="96.9846%" y="565" width="0.0384%" height="15" fill="rgb(240,18,12)" fg:x="15149" fg:w="6"/><text x="97.1989%" y="575.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.04%)</title><rect x="96.9846%" y="549" width="0.0384%" height="15" fill="rgb(223,89,53)" fg:x="15149" fg:w="6"/><text x="97.1989%" y="559.50"></text></g><g><title>asm_call_sysvec_on_stack (6 samples, 0.04%)</title><rect x="96.9846%" y="533" width="0.0384%" height="15" fill="rgb(208,184,36)" fg:x="15149" fg:w="6"/><text x="97.1989%" y="543.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.04%)</title><rect x="96.9846%" y="517" width="0.0384%" height="15" fill="rgb(249,91,22)" fg:x="15149" fg:w="6"/><text x="97.1989%" y="527.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.01%)</title><rect x="97.0102%" y="501" width="0.0128%" height="15" fill="rgb(220,151,48)" fg:x="15153" fg:w="2"/><text x="97.2245%" y="511.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.01%)</title><rect x="97.0102%" y="485" width="0.0128%" height="15" fill="rgb(218,189,37)" fg:x="15153" fg:w="2"/><text x="97.2245%" y="495.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.01%)</title><rect x="97.0102%" y="469" width="0.0128%" height="15" fill="rgb(238,207,14)" fg:x="15153" fg:w="2"/><text x="97.2245%" y="479.50"></text></g><g><title>kernel_poison_pages (3 samples, 0.02%)</title><rect x="97.0230%" y="629" width="0.0192%" height="15" fill="rgb(240,82,29)" fg:x="15155" fg:w="3"/><text x="97.2373%" y="639.50"></text></g><g><title>get_page_from_freelist (96 samples, 0.61%)</title><rect x="96.4405%" y="661" width="0.6146%" height="15" fill="rgb(246,35,53)" fg:x="15064" fg:w="96"/><text x="96.6547%" y="671.50"></text></g><g><title>prep_new_page (65 samples, 0.42%)</title><rect x="96.6389%" y="645" width="0.4161%" height="15" fill="rgb(220,94,29)" fg:x="15095" fg:w="65"/><text x="96.8532%" y="655.50"></text></g><g><title>page_poisoning_enabled (2 samples, 0.01%)</title><rect x="97.0423%" y="629" width="0.0128%" height="15" fill="rgb(210,88,43)" fg:x="15158" fg:w="2"/><text x="97.2565%" y="639.50"></text></g><g><title>__alloc_pages_nodemask (130 samples, 0.83%)</title><rect x="96.2420%" y="677" width="0.8323%" height="15" fill="rgb(245,49,10)" fg:x="15033" fg:w="130"/><text x="96.4563%" y="687.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.01%)</title><rect x="97.0615%" y="661" width="0.0128%" height="15" fill="rgb(210,87,27)" fg:x="15161" fg:w="2"/><text x="97.2757%" y="671.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="97.0743%" y="677" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="15163" fg:w="2"/><text x="97.2885%" y="687.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="97.1831%" y="661" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="15180" fg:w="2"/><text x="97.3974%" y="671.50"></text></g><g><title>policy_node (3 samples, 0.02%)</title><rect x="97.1959%" y="661" width="0.0192%" height="15" fill="rgb(205,161,10)" fg:x="15182" fg:w="3"/><text x="97.4102%" y="671.50"></text></g><g><title>alloc_pages_current (21 samples, 0.13%)</title><rect x="97.0871%" y="677" width="0.1344%" height="15" fill="rgb(250,171,52)" fg:x="15165" fg:w="21"/><text x="97.3014%" y="687.50"></text></g><g><title>__get_free_pages (163 samples, 1.04%)</title><rect x="96.1844%" y="693" width="1.0435%" height="15" fill="rgb(229,178,48)" fg:x="15024" fg:w="163"/><text x="96.3987%" y="703.50"></text></g><g><title>__irqentry_text_start (8 samples, 0.05%)</title><rect x="97.2279%" y="693" width="0.0512%" height="15" fill="rgb(229,107,3)" fg:x="15187" fg:w="8"/><text x="97.4422%" y="703.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="97.2791%" y="597" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="15195" fg:w="2"/><text x="97.4934%" y="607.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="97.2791%" y="581" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="15195" fg:w="2"/><text x="97.4934%" y="591.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="97.2791%" y="693" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="15195" fg:w="3"/><text x="97.4934%" y="703.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="97.2791%" y="677" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="15195" fg:w="3"/><text x="97.4934%" y="687.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="97.2791%" y="661" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="15195" fg:w="3"/><text x="97.4934%" y="671.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="97.2791%" y="645" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="15195" fg:w="3"/><text x="97.4934%" y="655.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="97.2791%" y="629" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="15195" fg:w="3"/><text x="97.4934%" y="639.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="97.2791%" y="613" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="15195" fg:w="3"/><text x="97.4934%" y="623.50"></text></g><g><title>__pollwait (218 samples, 1.40%)</title><rect x="95.9091%" y="709" width="1.3956%" height="15" fill="rgb(248,41,12)" fg:x="14981" fg:w="218"/><text x="96.1234%" y="719.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="97.4776%" y="389" width="0.0128%" height="15" fill="rgb(226,88,38)" fg:x="15226" fg:w="2"/><text x="97.6919%" y="399.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="97.4776%" y="373" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="15226" fg:w="2"/><text x="97.6919%" y="383.50"></text></g><g><title>tcp_ack (3 samples, 0.02%)</title><rect x="97.4904%" y="389" width="0.0192%" height="15" fill="rgb(213,228,3)" fg:x="15228" fg:w="3"/><text x="97.7047%" y="399.50"></text></g><g><title>napi_complete_done (8 samples, 0.05%)</title><rect x="97.4648%" y="565" width="0.0512%" height="15" fill="rgb(226,216,13)" fg:x="15224" fg:w="8"/><text x="97.6791%" y="575.50"></text></g><g><title>netif_receive_skb_list_internal (8 samples, 0.05%)</title><rect x="97.4648%" y="549" width="0.0512%" height="15" fill="rgb(216,153,44)" fg:x="15224" fg:w="8"/><text x="97.6791%" y="559.50"></text></g><g><title>__netif_receive_skb_list_core (8 samples, 0.05%)</title><rect x="97.4648%" y="533" width="0.0512%" height="15" fill="rgb(227,176,26)" fg:x="15224" fg:w="8"/><text x="97.6791%" y="543.50"></text></g><g><title>ip_list_rcv (8 samples, 0.05%)</title><rect x="97.4648%" y="517" width="0.0512%" height="15" fill="rgb(215,38,16)" fg:x="15224" fg:w="8"/><text x="97.6791%" y="527.50"></text></g><g><title>ip_sublist_rcv (8 samples, 0.05%)</title><rect x="97.4648%" y="501" width="0.0512%" height="15" fill="rgb(207,166,9)" fg:x="15224" fg:w="8"/><text x="97.6791%" y="511.50"></text></g><g><title>ip_sublist_rcv_finish (7 samples, 0.04%)</title><rect x="97.4712%" y="485" width="0.0448%" height="15" fill="rgb(223,178,14)" fg:x="15225" fg:w="7"/><text x="97.6855%" y="495.50"></text></g><g><title>ip_local_deliver_finish (7 samples, 0.04%)</title><rect x="97.4712%" y="469" width="0.0448%" height="15" fill="rgb(220,94,29)" fg:x="15225" fg:w="7"/><text x="97.6855%" y="479.50"></text></g><g><title>ip_protocol_deliver_rcu (7 samples, 0.04%)</title><rect x="97.4712%" y="453" width="0.0448%" height="15" fill="rgb(207,19,13)" fg:x="15225" fg:w="7"/><text x="97.6855%" y="463.50"></text></g><g><title>tcp_v4_rcv (7 samples, 0.04%)</title><rect x="97.4712%" y="437" width="0.0448%" height="15" fill="rgb(224,38,0)" fg:x="15225" fg:w="7"/><text x="97.6855%" y="447.50"></text></g><g><title>tcp_v4_do_rcv (6 samples, 0.04%)</title><rect x="97.4776%" y="421" width="0.0384%" height="15" fill="rgb(228,220,18)" fg:x="15226" fg:w="6"/><text x="97.6919%" y="431.50"></text></g><g><title>tcp_rcv_established (6 samples, 0.04%)</title><rect x="97.4776%" y="405" width="0.0384%" height="15" fill="rgb(224,50,47)" fg:x="15226" fg:w="6"/><text x="97.6919%" y="415.50"></text></g><g><title>virtnet_poll (9 samples, 0.06%)</title><rect x="97.4648%" y="581" width="0.0576%" height="15" fill="rgb(213,187,12)" fg:x="15224" fg:w="9"/><text x="97.6791%" y="591.50"></text></g><g><title>net_rx_action (11 samples, 0.07%)</title><rect x="97.4648%" y="597" width="0.0704%" height="15" fill="rgb(231,11,52)" fg:x="15224" fg:w="11"/><text x="97.6791%" y="607.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.01%)</title><rect x="97.5224%" y="581" width="0.0128%" height="15" fill="rgb(251,188,47)" fg:x="15233" fg:w="2"/><text x="97.7367%" y="591.50"></text></g><g><title>free_old_xmit_skbs (2 samples, 0.01%)</title><rect x="97.5224%" y="565" width="0.0128%" height="15" fill="rgb(235,178,6)" fg:x="15233" fg:w="2"/><text x="97.7367%" y="575.50"></text></g><g><title>asm_common_interrupt (13 samples, 0.08%)</title><rect x="97.4648%" y="693" width="0.0832%" height="15" fill="rgb(248,227,45)" fg:x="15224" fg:w="13"/><text x="97.6791%" y="703.50"></text></g><g><title>common_interrupt (13 samples, 0.08%)</title><rect x="97.4648%" y="677" width="0.0832%" height="15" fill="rgb(250,67,32)" fg:x="15224" fg:w="13"/><text x="97.6791%" y="687.50"></text></g><g><title>irq_exit_rcu (13 samples, 0.08%)</title><rect x="97.4648%" y="661" width="0.0832%" height="15" fill="rgb(240,18,12)" fg:x="15224" fg:w="13"/><text x="97.6791%" y="671.50"></text></g><g><title>do_softirq_own_stack (13 samples, 0.08%)</title><rect x="97.4648%" y="645" width="0.0832%" height="15" fill="rgb(223,89,53)" fg:x="15224" fg:w="13"/><text x="97.6791%" y="655.50"></text></g><g><title>asm_call_sysvec_on_stack (13 samples, 0.08%)</title><rect x="97.4648%" y="629" width="0.0832%" height="15" fill="rgb(208,184,36)" fg:x="15224" fg:w="13"/><text x="97.6791%" y="639.50"></text></g><g><title>__softirqentry_text_start (13 samples, 0.08%)</title><rect x="97.4648%" y="613" width="0.0832%" height="15" fill="rgb(249,91,22)" fg:x="15224" fg:w="13"/><text x="97.6791%" y="623.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.01%)</title><rect x="97.5352%" y="597" width="0.0128%" height="15" fill="rgb(220,151,48)" fg:x="15235" fg:w="2"/><text x="97.7495%" y="607.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.01%)</title><rect x="97.5352%" y="581" width="0.0128%" height="15" fill="rgb(218,189,37)" fg:x="15235" fg:w="2"/><text x="97.7495%" y="591.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.01%)</title><rect x="97.5352%" y="565" width="0.0128%" height="15" fill="rgb(238,207,14)" fg:x="15235" fg:w="2"/><text x="97.7495%" y="575.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.01%)</title><rect x="97.5352%" y="549" width="0.0128%" height="15" fill="rgb(236,72,36)" fg:x="15235" fg:w="2"/><text x="97.7495%" y="559.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="97.5352%" y="533" width="0.0128%" height="15" fill="rgb(238,106,36)" fg:x="15235" fg:w="2"/><text x="97.7495%" y="543.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.01%)</title><rect x="97.5352%" y="517" width="0.0128%" height="15" fill="rgb(224,11,5)" fg:x="15235" fg:w="2"/><text x="97.7495%" y="527.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.01%)</title><rect x="97.5352%" y="501" width="0.0128%" height="15" fill="rgb(219,227,11)" fg:x="15235" fg:w="2"/><text x="97.7495%" y="511.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="97.5352%" y="485" width="0.0128%" height="15" fill="rgb(232,116,37)" fg:x="15235" fg:w="2"/><text x="97.7495%" y="495.50"></text></g><g><title>__qdisc_run (2 samples, 0.01%)</title><rect x="97.5352%" y="469" width="0.0128%" height="15" fill="rgb(252,144,25)" fg:x="15235" fg:w="2"/><text x="97.7495%" y="479.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="97.5352%" y="453" width="0.0128%" height="15" fill="rgb(222,128,44)" fg:x="15235" fg:w="2"/><text x="97.7495%" y="463.50"></text></g><g><title>_raw_spin_unlock_irqrestore (38 samples, 0.24%)</title><rect x="97.3111%" y="709" width="0.2433%" height="15" fill="rgb(216,183,20)" fg:x="15200" fg:w="38"/><text x="97.5254%" y="719.50"></text></g><g><title>__list_add_valid (28 samples, 0.18%)</title><rect x="97.9257%" y="693" width="0.1793%" height="15" fill="rgb(206,79,8)" fg:x="15296" fg:w="28"/><text x="98.1400%" y="703.50"></text></g><g><title>_raw_spin_lock_irqsave (23 samples, 0.15%)</title><rect x="98.1050%" y="693" width="0.1472%" height="15" fill="rgb(206,213,41)" fg:x="15324" fg:w="23"/><text x="98.3193%" y="703.50"></text></g><g><title>add_wait_queue (110 samples, 0.70%)</title><rect x="97.5544%" y="709" width="0.7042%" height="15" fill="rgb(227,131,29)" fg:x="15238" fg:w="110"/><text x="97.7687%" y="719.50"></text></g><g><title>__tcp_push_pending_frames (4 samples, 0.03%)</title><rect x="98.2971%" y="405" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="15354" fg:w="4"/><text x="98.5113%" y="415.50"></text></g><g><title>tcp_write_xmit (4 samples, 0.03%)</title><rect x="98.2971%" y="389" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="15354" fg:w="4"/><text x="98.5113%" y="399.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (2 samples, 0.01%)</title><rect x="98.3099%" y="373" width="0.0128%" height="15" fill="rgb(213,104,8)" fg:x="15356" fg:w="2"/><text x="98.5241%" y="383.50"></text></g><g><title>tcp_ack (3 samples, 0.02%)</title><rect x="98.3291%" y="405" width="0.0192%" height="15" fill="rgb(213,228,3)" fg:x="15359" fg:w="3"/><text x="98.5434%" y="415.50"></text></g><g><title>napi_complete_done (12 samples, 0.08%)</title><rect x="98.2843%" y="581" width="0.0768%" height="15" fill="rgb(226,216,13)" fg:x="15352" fg:w="12"/><text x="98.4985%" y="591.50"></text></g><g><title>netif_receive_skb_list_internal (12 samples, 0.08%)</title><rect x="98.2843%" y="565" width="0.0768%" height="15" fill="rgb(216,153,44)" fg:x="15352" fg:w="12"/><text x="98.4985%" y="575.50"></text></g><g><title>__netif_receive_skb_list_core (12 samples, 0.08%)</title><rect x="98.2843%" y="549" width="0.0768%" height="15" fill="rgb(227,176,26)" fg:x="15352" fg:w="12"/><text x="98.4985%" y="559.50"></text></g><g><title>ip_list_rcv (12 samples, 0.08%)</title><rect x="98.2843%" y="533" width="0.0768%" height="15" fill="rgb(215,38,16)" fg:x="15352" fg:w="12"/><text x="98.4985%" y="543.50"></text></g><g><title>ip_sublist_rcv (12 samples, 0.08%)</title><rect x="98.2843%" y="517" width="0.0768%" height="15" fill="rgb(207,166,9)" fg:x="15352" fg:w="12"/><text x="98.4985%" y="527.50"></text></g><g><title>ip_sublist_rcv_finish (12 samples, 0.08%)</title><rect x="98.2843%" y="501" width="0.0768%" height="15" fill="rgb(223,178,14)" fg:x="15352" fg:w="12"/><text x="98.4985%" y="511.50"></text></g><g><title>ip_local_deliver_finish (12 samples, 0.08%)</title><rect x="98.2843%" y="485" width="0.0768%" height="15" fill="rgb(220,94,29)" fg:x="15352" fg:w="12"/><text x="98.4985%" y="495.50"></text></g><g><title>ip_protocol_deliver_rcu (12 samples, 0.08%)</title><rect x="98.2843%" y="469" width="0.0768%" height="15" fill="rgb(207,19,13)" fg:x="15352" fg:w="12"/><text x="98.4985%" y="479.50"></text></g><g><title>tcp_v4_rcv (12 samples, 0.08%)</title><rect x="98.2843%" y="453" width="0.0768%" height="15" fill="rgb(224,38,0)" fg:x="15352" fg:w="12"/><text x="98.4985%" y="463.50"></text></g><g><title>tcp_v4_do_rcv (10 samples, 0.06%)</title><rect x="98.2971%" y="437" width="0.0640%" height="15" fill="rgb(228,220,18)" fg:x="15354" fg:w="10"/><text x="98.5113%" y="447.50"></text></g><g><title>tcp_rcv_established (10 samples, 0.06%)</title><rect x="98.2971%" y="421" width="0.0640%" height="15" fill="rgb(224,50,47)" fg:x="15354" fg:w="10"/><text x="98.5113%" y="431.50"></text></g><g><title>virtnet_poll (14 samples, 0.09%)</title><rect x="98.2843%" y="597" width="0.0896%" height="15" fill="rgb(213,187,12)" fg:x="15352" fg:w="14"/><text x="98.4985%" y="607.50"></text></g><g><title>net_rx_action (18 samples, 0.12%)</title><rect x="98.2650%" y="613" width="0.1152%" height="15" fill="rgb(231,11,52)" fg:x="15349" fg:w="18"/><text x="98.4793%" y="623.50"></text></g><g><title>virtqueue_add_outbuf (2 samples, 0.01%)</title><rect x="98.3867%" y="421" width="0.0128%" height="15" fill="rgb(207,208,9)" fg:x="15368" fg:w="2"/><text x="98.6010%" y="431.50"></text></g><g><title>virtqueue_add_split (2 samples, 0.01%)</title><rect x="98.3867%" y="405" width="0.0128%" height="15" fill="rgb(238,41,16)" fg:x="15368" fg:w="2"/><text x="98.6010%" y="415.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.03%)</title><rect x="98.3867%" y="549" width="0.0320%" height="15" fill="rgb(238,106,36)" fg:x="15368" fg:w="5"/><text x="98.6010%" y="559.50"></text></g><g><title>__ip_queue_xmit (5 samples, 0.03%)</title><rect x="98.3867%" y="533" width="0.0320%" height="15" fill="rgb(224,11,5)" fg:x="15368" fg:w="5"/><text x="98.6010%" y="543.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.03%)</title><rect x="98.3867%" y="517" width="0.0320%" height="15" fill="rgb(219,227,11)" fg:x="15368" fg:w="5"/><text x="98.6010%" y="527.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="98.3867%" y="501" width="0.0320%" height="15" fill="rgb(232,116,37)" fg:x="15368" fg:w="5"/><text x="98.6010%" y="511.50"></text></g><g><title>__qdisc_run (5 samples, 0.03%)</title><rect x="98.3867%" y="485" width="0.0320%" height="15" fill="rgb(252,144,25)" fg:x="15368" fg:w="5"/><text x="98.6010%" y="495.50"></text></g><g><title>sch_direct_xmit (5 samples, 0.03%)</title><rect x="98.3867%" y="469" width="0.0320%" height="15" fill="rgb(222,128,44)" fg:x="15368" fg:w="5"/><text x="98.6010%" y="479.50"></text></g><g><title>dev_hard_start_xmit (5 samples, 0.03%)</title><rect x="98.3867%" y="453" width="0.0320%" height="15" fill="rgb(251,86,39)" fg:x="15368" fg:w="5"/><text x="98.6010%" y="463.50"></text></g><g><title>start_xmit (5 samples, 0.03%)</title><rect x="98.3867%" y="437" width="0.0320%" height="15" fill="rgb(211,140,13)" fg:x="15368" fg:w="5"/><text x="98.6010%" y="447.50"></text></g><g><title>virtqueue_notify (3 samples, 0.02%)</title><rect x="98.3995%" y="421" width="0.0192%" height="15" fill="rgb(219,119,18)" fg:x="15370" fg:w="3"/><text x="98.6138%" y="431.50"></text></g><g><title>vp_notify (3 samples, 0.02%)</title><rect x="98.3995%" y="405" width="0.0192%" height="15" fill="rgb(230,193,37)" fg:x="15370" fg:w="3"/><text x="98.6138%" y="415.50"></text></g><g><title>iowrite16 (3 samples, 0.02%)</title><rect x="98.3995%" y="389" width="0.0192%" height="15" fill="rgb(218,139,37)" fg:x="15370" fg:w="3"/><text x="98.6138%" y="399.50"></text></g><g><title>asm_common_interrupt (27 samples, 0.17%)</title><rect x="98.2586%" y="709" width="0.1729%" height="15" fill="rgb(248,227,45)" fg:x="15348" fg:w="27"/><text x="98.4729%" y="719.50"></text></g><g><title>common_interrupt (27 samples, 0.17%)</title><rect x="98.2586%" y="693" width="0.1729%" height="15" fill="rgb(250,67,32)" fg:x="15348" fg:w="27"/><text x="98.4729%" y="703.50"></text></g><g><title>irq_exit_rcu (27 samples, 0.17%)</title><rect x="98.2586%" y="677" width="0.1729%" height="15" fill="rgb(240,18,12)" fg:x="15348" fg:w="27"/><text x="98.4729%" y="687.50"></text></g><g><title>do_softirq_own_stack (27 samples, 0.17%)</title><rect x="98.2586%" y="661" width="0.1729%" height="15" fill="rgb(223,89,53)" fg:x="15348" fg:w="27"/><text x="98.4729%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (27 samples, 0.17%)</title><rect x="98.2586%" y="645" width="0.1729%" height="15" fill="rgb(208,184,36)" fg:x="15348" fg:w="27"/><text x="98.4729%" y="655.50"></text></g><g><title>__softirqentry_text_start (27 samples, 0.17%)</title><rect x="98.2586%" y="629" width="0.1729%" height="15" fill="rgb(249,91,22)" fg:x="15348" fg:w="27"/><text x="98.4729%" y="639.50"></text></g><g><title>tasklet_action_common.constprop.0 (8 samples, 0.05%)</title><rect x="98.3803%" y="613" width="0.0512%" height="15" fill="rgb(220,151,48)" fg:x="15367" fg:w="8"/><text x="98.5946%" y="623.50"></text></g><g><title>tcp_tasklet_func (7 samples, 0.04%)</title><rect x="98.3867%" y="597" width="0.0448%" height="15" fill="rgb(218,189,37)" fg:x="15368" fg:w="7"/><text x="98.6010%" y="607.50"></text></g><g><title>tcp_tsq_handler (7 samples, 0.04%)</title><rect x="98.3867%" y="581" width="0.0448%" height="15" fill="rgb(238,207,14)" fg:x="15368" fg:w="7"/><text x="98.6010%" y="591.50"></text></g><g><title>tcp_write_xmit (7 samples, 0.04%)</title><rect x="98.3867%" y="565" width="0.0448%" height="15" fill="rgb(236,72,36)" fg:x="15368" fg:w="7"/><text x="98.6010%" y="575.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.01%)</title><rect x="98.4187%" y="549" width="0.0128%" height="15" fill="rgb(225,2,28)" fg:x="15373" fg:w="2"/><text x="98.6330%" y="559.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="98.4315%" y="709" width="0.0128%" height="15" fill="rgb(209,17,43)" fg:x="15375" fg:w="2"/><text x="98.6458%" y="719.50"></text></g><g><title>__irqentry_text_start (7 samples, 0.04%)</title><rect x="98.7900%" y="693" width="0.0448%" height="15" fill="rgb(229,107,3)" fg:x="15431" fg:w="7"/><text x="99.0043%" y="703.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="98.8348%" y="597" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="15438" fg:w="2"/><text x="99.0491%" y="607.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="98.8348%" y="581" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="15438" fg:w="2"/><text x="99.0491%" y="591.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="98.8348%" y="565" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="15438" fg:w="2"/><text x="99.0491%" y="575.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="98.8348%" y="549" width="0.0128%" height="15" fill="rgb(216,153,44)" fg:x="15438" fg:w="2"/><text x="99.0491%" y="559.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="98.8348%" y="533" width="0.0128%" height="15" fill="rgb(227,176,26)" fg:x="15438" fg:w="2"/><text x="99.0491%" y="543.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="98.8348%" y="517" width="0.0128%" height="15" fill="rgb(215,38,16)" fg:x="15438" fg:w="2"/><text x="99.0491%" y="527.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="98.8348%" y="501" width="0.0128%" height="15" fill="rgb(207,166,9)" fg:x="15438" fg:w="2"/><text x="99.0491%" y="511.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.01%)</title><rect x="98.8348%" y="485" width="0.0128%" height="15" fill="rgb(223,178,14)" fg:x="15438" fg:w="2"/><text x="99.0491%" y="495.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="98.8348%" y="469" width="0.0128%" height="15" fill="rgb(220,94,29)" fg:x="15438" fg:w="2"/><text x="99.0491%" y="479.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="98.8348%" y="453" width="0.0128%" height="15" fill="rgb(207,19,13)" fg:x="15438" fg:w="2"/><text x="99.0491%" y="463.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="98.8348%" y="437" width="0.0128%" height="15" fill="rgb(224,38,0)" fg:x="15438" fg:w="2"/><text x="99.0491%" y="447.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="98.8348%" y="693" width="0.0192%" height="15" fill="rgb(248,227,45)" fg:x="15438" fg:w="3"/><text x="99.0491%" y="703.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="98.8348%" y="677" width="0.0192%" height="15" fill="rgb(250,67,32)" fg:x="15438" fg:w="3"/><text x="99.0491%" y="687.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="98.8348%" y="661" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="15438" fg:w="3"/><text x="99.0491%" y="671.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="98.8348%" y="645" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="15438" fg:w="3"/><text x="99.0491%" y="655.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="98.8348%" y="629" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="15438" fg:w="3"/><text x="99.0491%" y="639.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="98.8348%" y="613" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="15438" fg:w="3"/><text x="99.0491%" y="623.50"></text></g><g><title>do_sys_poll (4,540 samples, 29.07%)</title><rect x="69.7951%" y="757" width="29.0653%" height="15" fill="rgb(246,108,27)" fg:x="10902" fg:w="4540"/><text x="70.0094%" y="767.50">do_sys_poll</text></g><g><title>sock_poll (1,905 samples, 12.20%)</title><rect x="86.6645%" y="741" width="12.1959%" height="15" fill="rgb(224,152,37)" fg:x="13537" fg:w="1905"/><text x="86.8788%" y="751.50">sock_poll</text></g><g><title>tcp_poll (878 samples, 5.62%)</title><rect x="93.2394%" y="725" width="5.6210%" height="15" fill="rgb(233,143,3)" fg:x="14564" fg:w="878"/><text x="93.4537%" y="735.50">tcp_poll</text></g><g><title>tcp_stream_memory_free (65 samples, 0.42%)</title><rect x="98.4443%" y="709" width="0.4161%" height="15" fill="rgb(235,140,9)" fg:x="15377" fg:w="65"/><text x="98.6586%" y="719.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="98.8924%" y="741" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="15447" fg:w="2"/><text x="99.1067%" y="751.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="99.0077%" y="709" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="15465" fg:w="2"/><text x="99.2220%" y="719.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="99.0077%" y="693" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="15465" fg:w="2"/><text x="99.2220%" y="703.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.01%)</title><rect x="99.0653%" y="693" width="0.0128%" height="15" fill="rgb(229,107,3)" fg:x="15474" fg:w="2"/><text x="99.2796%" y="703.50"></text></g><g><title>ktime_get_ts64 (28 samples, 0.18%)</title><rect x="98.9052%" y="741" width="0.1793%" height="15" fill="rgb(212,111,10)" fg:x="15449" fg:w="28"/><text x="99.1195%" y="751.50"></text></g><g><title>kvm_clock_get_cycles (15 samples, 0.10%)</title><rect x="98.9885%" y="725" width="0.0960%" height="15" fill="rgb(213,218,37)" fg:x="15462" fg:w="15"/><text x="99.2028%" y="735.50"></text></g><g><title>pvclock_clocksource_read (9 samples, 0.06%)</title><rect x="99.0269%" y="709" width="0.0576%" height="15" fill="rgb(246,59,10)" fg:x="15468" fg:w="9"/><text x="99.2412%" y="719.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.02%)</title><rect x="99.1101%" y="725" width="0.0192%" height="15" fill="rgb(229,107,3)" fg:x="15481" fg:w="3"/><text x="99.3244%" y="735.50"></text></g><g><title>__x64_sys_poll (4,613 samples, 29.53%)</title><rect x="69.6031%" y="773" width="29.5327%" height="15" fill="rgb(220,34,9)" fg:x="10872" fg:w="4613"/><text x="69.8174%" y="783.50">__x64_sys_poll</text></g><g><title>poll_select_set_timeout (43 samples, 0.28%)</title><rect x="98.8604%" y="757" width="0.2753%" height="15" fill="rgb(216,174,36)" fg:x="15442" fg:w="43"/><text x="99.0747%" y="767.50"></text></g><g><title>timespec64_add_safe (8 samples, 0.05%)</title><rect x="99.0845%" y="741" width="0.0512%" height="15" fill="rgb(244,181,45)" fg:x="15477" fg:w="8"/><text x="99.2988%" y="751.50"></text></g><g><title>__x86_return_thunk (3 samples, 0.02%)</title><rect x="99.1357%" y="773" width="0.0192%" height="15" fill="rgb(211,8,20)" fg:x="15485" fg:w="3"/><text x="99.3500%" y="783.50"></text></g><g><title>srso_safe_ret_alias (3 samples, 0.02%)</title><rect x="99.1357%" y="757" width="0.0192%" height="15" fill="rgb(210,87,27)" fg:x="15485" fg:w="3"/><text x="99.3500%" y="767.50"></text></g><g><title>do_syscall_64 (4,646 samples, 29.74%)</title><rect x="69.4558%" y="789" width="29.7439%" height="15" fill="rgb(220,74,14)" fg:x="10849" fg:w="4646"/><text x="69.6701%" y="799.50">do_syscall_64</text></g><g><title>syscall_enter_from_user_mode (4 samples, 0.03%)</title><rect x="99.1741%" y="773" width="0.0256%" height="15" fill="rgb(224,163,22)" fg:x="15491" fg:w="4"/><text x="99.3884%" y="783.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="99.1869%" y="757" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="15493" fg:w="2"/><text x="99.4012%" y="767.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="99.1869%" y="741" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="15493" fg:w="2"/><text x="99.4012%" y="751.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="99.1869%" y="725" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="15493" fg:w="2"/><text x="99.4012%" y="735.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="99.1869%" y="709" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="15493" fg:w="2"/><text x="99.4012%" y="719.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="99.1869%" y="693" width="0.0128%" height="15" fill="rgb(208,184,36)" fg:x="15493" fg:w="2"/><text x="99.4012%" y="703.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="99.1869%" y="677" width="0.0128%" height="15" fill="rgb(249,91,22)" fg:x="15493" fg:w="2"/><text x="99.4012%" y="687.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.01%)</title><rect x="99.2894%" y="757" width="0.0128%" height="15" fill="rgb(211,8,20)" fg:x="15509" fg:w="2"/><text x="99.5037%" y="767.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.01%)</title><rect x="99.2894%" y="741" width="0.0128%" height="15" fill="rgb(210,87,27)" fg:x="15509" fg:w="2"/><text x="99.5037%" y="751.50"></text></g><g><title>fpregs_assert_state_consistent (6 samples, 0.04%)</title><rect x="99.3022%" y="757" width="0.0384%" height="15" fill="rgb(227,221,38)" fg:x="15511" fg:w="6"/><text x="99.5165%" y="767.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="99.3470%" y="613" width="0.0128%" height="15" fill="rgb(231,11,52)" fg:x="15518" fg:w="2"/><text x="99.5613%" y="623.50"></text></g><g><title>virtnet_poll (2 samples, 0.01%)</title><rect x="99.3470%" y="597" width="0.0128%" height="15" fill="rgb(213,187,12)" fg:x="15518" fg:w="2"/><text x="99.5613%" y="607.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="99.3470%" y="581" width="0.0128%" height="15" fill="rgb(226,216,13)" fg:x="15518" fg:w="2"/><text x="99.5613%" y="591.50"></text></g><g><title>finish_task_switch (4 samples, 0.03%)</title><rect x="99.3406%" y="725" width="0.0256%" height="15" fill="rgb(214,214,33)" fg:x="15517" fg:w="4"/><text x="99.5549%" y="735.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.03%)</title><rect x="99.3406%" y="709" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="15517" fg:w="4"/><text x="99.5549%" y="719.50"></text></g><g><title>common_interrupt (4 samples, 0.03%)</title><rect x="99.3406%" y="693" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="15517" fg:w="4"/><text x="99.5549%" y="703.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="99.3470%" y="677" width="0.0192%" height="15" fill="rgb(240,18,12)" fg:x="15518" fg:w="3"/><text x="99.5613%" y="687.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="99.3470%" y="661" width="0.0192%" height="15" fill="rgb(223,89,53)" fg:x="15518" fg:w="3"/><text x="99.5613%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="99.3470%" y="645" width="0.0192%" height="15" fill="rgb(208,184,36)" fg:x="15518" fg:w="3"/><text x="99.5613%" y="655.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="99.3470%" y="629" width="0.0192%" height="15" fill="rgb(249,91,22)" fg:x="15518" fg:w="3"/><text x="99.5613%" y="639.50"></text></g><g><title>schedule (6 samples, 0.04%)</title><rect x="99.3406%" y="757" width="0.0384%" height="15" fill="rgb(213,215,35)" fg:x="15517" fg:w="6"/><text x="99.5549%" y="767.50"></text></g><g><title>__schedule (6 samples, 0.04%)</title><rect x="99.3406%" y="741" width="0.0384%" height="15" fill="rgb(207,40,26)" fg:x="15517" fg:w="6"/><text x="99.5549%" y="751.50"></text></g><g><title>srso_safe_ret_alias (3 samples, 0.02%)</title><rect x="99.3790%" y="757" width="0.0192%" height="15" fill="rgb(210,87,27)" fg:x="15523" fg:w="3"/><text x="99.5933%" y="767.50"></text></g><g><title>exit_to_user_mode_prepare (50 samples, 0.32%)</title><rect x="99.2254%" y="773" width="0.3201%" height="15" fill="rgb(240,77,26)" fg:x="15499" fg:w="50"/><text x="99.4396%" y="783.50"></text></g><g><title>switch_fpu_return (23 samples, 0.15%)</title><rect x="99.3982%" y="757" width="0.1472%" height="15" fill="rgb(214,180,49)" fg:x="15526" fg:w="23"/><text x="99.6125%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,710 samples, 30.15%)</title><rect x="69.3982%" y="805" width="30.1536%" height="15" fill="rgb(205,226,15)" fg:x="10840" fg:w="4710"/><text x="69.6125%" y="815.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>syscall_exit_to_user_mode (54 samples, 0.35%)</title><rect x="99.2061%" y="789" width="0.3457%" height="15" fill="rgb(215,101,28)" fg:x="15496" fg:w="54"/><text x="99.4204%" y="799.50"></text></g><g><title>syscall_return_via_sysret (26 samples, 0.17%)</title><rect x="99.5839%" y="805" width="0.1665%" height="15" fill="rgb(230,222,6)" fg:x="15555" fg:w="26"/><text x="99.7982%" y="815.50"></text></g><g><title>__x86_indirect_thunk_rcx (3 samples, 0.02%)</title><rect x="99.7503%" y="789" width="0.0192%" height="15" fill="rgb(225,153,7)" fg:x="15581" fg:w="3"/><text x="99.9646%" y="799.50"></text></g><g><title>tcp_poll (8 samples, 0.05%)</title><rect x="99.7503%" y="805" width="0.0512%" height="15" fill="rgb(233,143,3)" fg:x="15581" fg:w="8"/><text x="99.9646%" y="815.50"></text></g><g><title>srso_safe_ret_alias (5 samples, 0.03%)</title><rect x="99.7695%" y="789" width="0.0320%" height="15" fill="rgb(210,87,27)" fg:x="15584" fg:w="5"/><text x="99.9838%" y="799.50"></text></g><g><title>tcp_stream_memory_free (3 samples, 0.02%)</title><rect x="99.8015%" y="805" width="0.0192%" height="15" fill="rgb(235,140,9)" fg:x="15589" fg:w="3"/><text x="100.0158%" y="815.50"></text></g><g><title>srso_safe_ret_alias (3 samples, 0.02%)</title><rect x="99.8015%" y="789" width="0.0192%" height="15" fill="rgb(210,87,27)" fg:x="15589" fg:w="3"/><text x="100.0158%" y="799.50"></text></g><g><title>__poll (4,932 samples, 31.57%)</title><rect x="68.2586%" y="821" width="31.5749%" height="15" fill="rgb(248,204,13)" fg:x="10662" fg:w="4932"/><text x="68.4729%" y="831.50">__poll</text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::data (4 samples, 0.03%)</title><rect x="99.8464%" y="821" width="0.0256%" height="15" fill="rgb(213,156,9)" fg:x="15596" fg:w="4"/><text x="100.0606%" y="831.50"></text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::_M_data_ptr&lt;pollfd&gt; (3 samples, 0.02%)</title><rect x="99.8528%" y="805" width="0.0192%" height="15" fill="rgb(236,85,54)" fg:x="15597" fg:w="3"/><text x="100.0670%" y="815.50"></text></g><g><title>Poll::poll (14,177 samples, 90.76%)</title><rect x="9.1165%" y="837" width="90.7618%" height="15" fill="rgb(241,47,17)" fg:x="1424" fg:w="14177"/><text x="9.3308%" y="847.50">Poll::poll</text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="99.8784%" y="837" width="0.0128%" height="15" fill="rgb(248,227,45)" fg:x="15601" fg:w="2"/><text x="100.0926%" y="847.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="99.8784%" y="821" width="0.0128%" height="15" fill="rgb(250,67,32)" fg:x="15601" fg:w="2"/><text x="100.0926%" y="831.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="99.8784%" y="805" width="0.0128%" height="15" fill="rgb(240,18,12)" fg:x="15601" fg:w="2"/><text x="100.0926%" y="815.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="99.8784%" y="789" width="0.0128%" height="15" fill="rgb(223,89,53)" fg:x="15601" fg:w="2"/><text x="100.0926%" y="799.50"></text></g><g><title>_start (14,192 samples, 90.86%)</title><rect x="9.0525%" y="885" width="90.8579%" height="15" fill="rgb(210,219,27)" fg:x="1414" fg:w="14192"/><text x="9.2668%" y="895.50">_start</text></g><g><title>__libc_start_main (14,192 samples, 90.86%)</title><rect x="9.0525%" y="869" width="90.8579%" height="15" fill="rgb(211,91,2)" fg:x="1414" fg:w="14192"/><text x="9.2668%" y="879.50">__libc_start_main</text></g><g><title>main (14,191 samples, 90.85%)</title><rect x="9.0589%" y="853" width="90.8515%" height="15" fill="rgb(238,28,47)" fg:x="1415" fg:w="14191"/><text x="9.2732%" y="863.50">main</text></g><g><title>loadConfig (3 samples, 0.02%)</title><rect x="99.8912%" y="837" width="0.0192%" height="15" fill="rgb(216,190,24)" fg:x="15603" fg:w="3"/><text x="100.1055%" y="847.50"></text></g><g><title>Log::write (2 samples, 0.01%)</title><rect x="99.8976%" y="821" width="0.0128%" height="15" fill="rgb(230,27,54)" fg:x="15604" fg:w="2"/><text x="100.1119%" y="831.50"></text></g><g><title>std::endl&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="99.8976%" y="805" width="0.0128%" height="15" fill="rgb(246,112,30)" fg:x="15604" fg:w="2"/><text x="100.1119%" y="815.50"></text></g><g><title>std::ostream::put (2 samples, 0.01%)</title><rect x="99.8976%" y="789" width="0.0128%" height="15" fill="rgb(226,61,44)" fg:x="15604" fg:w="2"/><text x="100.1119%" y="799.50"></text></g><g><title>_IO_file_overflow (2 samples, 0.01%)</title><rect x="99.8976%" y="773" width="0.0128%" height="15" fill="rgb(248,85,26)" fg:x="15604" fg:w="2"/><text x="100.1119%" y="783.50"></text></g><g><title>_IO_do_write (2 samples, 0.01%)</title><rect x="99.8976%" y="757" width="0.0128%" height="15" fill="rgb(247,226,32)" fg:x="15604" fg:w="2"/><text x="100.1119%" y="767.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="99.8976%" y="741" width="0.0128%" height="15" fill="rgb(247,113,52)" fg:x="15604" fg:w="2"/><text x="100.1119%" y="751.50"></text></g><g><title>_IO_file_write (2 samples, 0.01%)</title><rect x="99.8976%" y="725" width="0.0128%" height="15" fill="rgb(222,148,11)" fg:x="15604" fg:w="2"/><text x="100.1119%" y="735.50"></text></g><g><title>__write (2 samples, 0.01%)</title><rect x="99.8976%" y="709" width="0.0128%" height="15" fill="rgb(227,101,21)" fg:x="15604" fg:w="2"/><text x="100.1119%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="99.8976%" y="693" width="0.0128%" height="15" fill="rgb(205,226,15)" fg:x="15604" fg:w="2"/><text x="100.1119%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="99.9104%" y="885" width="0.0384%" height="15" fill="rgb(205,226,15)" fg:x="15606" fg:w="6"/><text x="100.1247%" y="895.50"></text></g><g><title>all (15,620 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="15620"/><text x="0.2143%" y="927.50"></text></g><g><title>webserv (15,619 samples, 99.99%)</title><rect x="0.0064%" y="901" width="99.9936%" height="15" fill="rgb(207,222,45)" fg:x="1" fg:w="15619"/><text x="0.2207%" y="911.50">webserv</text></g></svg></svg>