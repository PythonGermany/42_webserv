<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1400" height="1046" onload="init(evt)" viewBox="0 0 1400 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1046" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1029.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1390" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1390" y="1029.00"> </text><svg id="frames" x="10" width="1380" total_samples="11730"><g><title>AConnection::onNoPollEvent (2 samples, 0.02%)</title><rect x="0.0171%" y="965" width="0.0171%" height="15" fill="rgb(239,49,17)" fg:x="2" fg:w="2"/><text x="0.2313%" y="975.50"></text></g><g><title>AConnection::onNoPollEvent (2 samples, 0.02%)</title><rect x="0.0341%" y="949" width="0.0171%" height="15" fill="rgb(239,49,17)" fg:x="4" fg:w="2"/><text x="0.2484%" y="959.50"></text></g><g><title>AConnection::onPollEvent (4 samples, 0.03%)</title><rect x="0.0341%" y="965" width="0.0341%" height="15" fill="rgb(240,200,10)" fg:x="4" fg:w="4"/><text x="0.2484%" y="975.50"></text></g><g><title>AConnection::onPollIn (2 samples, 0.02%)</title><rect x="0.0512%" y="949" width="0.0171%" height="15" fill="rgb(238,25,4)" fg:x="6" fg:w="2"/><text x="0.2654%" y="959.50"></text></g><g><title>ListenSocket::onPollEvent (3 samples, 0.03%)</title><rect x="0.0853%" y="965" width="0.0256%" height="15" fill="rgb(234,106,36)" fg:x="10" fg:w="3"/><text x="0.2995%" y="975.50"></text></g><g><title>Address::~Address (3 samples, 0.03%)</title><rect x="0.0853%" y="949" width="0.0256%" height="15" fill="rgb(211,197,29)" fg:x="10" fg:w="3"/><text x="0.2995%" y="959.50"></text></g><g><title>Poll::getInstance (2 samples, 0.02%)</title><rect x="0.1108%" y="949" width="0.0171%" height="15" fill="rgb(237,174,43)" fg:x="13" fg:w="2"/><text x="0.3251%" y="959.50"></text></g><g><title>Poll::addPollEvent (3 samples, 0.03%)</title><rect x="0.1108%" y="965" width="0.0256%" height="15" fill="rgb(243,35,49)" fg:x="13" fg:w="3"/><text x="0.3251%" y="975.50"></text></g><g><title>[[heap]] (6 samples, 0.05%)</title><rect x="0.1535%" y="965" width="0.0512%" height="15" fill="rgb(221,205,47)" fg:x="18" fg:w="6"/><text x="0.3677%" y="975.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="0.2046%" y="949" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="24" fg:w="2"/><text x="0.4189%" y="959.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="0.2217%" y="949" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="26" fg:w="2"/><text x="0.4359%" y="959.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="0.2217%" y="933" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="26" fg:w="2"/><text x="0.4359%" y="943.50"></text></g><g><title>__write (2 samples, 0.02%)</title><rect x="0.2387%" y="949" width="0.0171%" height="15" fill="rgb(227,101,21)" fg:x="28" fg:w="2"/><text x="0.4530%" y="959.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="0.2387%" y="933" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="28" fg:w="2"/><text x="0.4530%" y="943.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="0.2558%" y="933" width="0.0341%" height="15" fill="rgb(229,107,3)" fg:x="30" fg:w="4"/><text x="0.4700%" y="943.50"></text></g><g><title>__xstat64 (6 samples, 0.05%)</title><rect x="0.2558%" y="949" width="0.0512%" height="15" fill="rgb(220,214,18)" fg:x="30" fg:w="6"/><text x="0.4700%" y="959.50"></text></g><g><title>[[stack]] (14 samples, 0.12%)</title><rect x="0.2046%" y="965" width="0.1194%" height="15" fill="rgb(208,199,53)" fg:x="24" fg:w="14"/><text x="0.4189%" y="975.50"></text></g><g><title>Context::exists (3 samples, 0.03%)</title><rect x="0.3495%" y="885" width="0.0256%" height="15" fill="rgb(247,57,9)" fg:x="41" fg:w="3"/><text x="0.5638%" y="895.50"></text></g><g><title>Http::isMehodImplemented (3 samples, 0.03%)</title><rect x="0.3751%" y="885" width="0.0256%" height="15" fill="rgb(208,46,35)" fg:x="44" fg:w="3"/><text x="0.5894%" y="895.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_begin (2 samples, 0.02%)</title><rect x="0.4263%" y="805" width="0.0171%" height="15" fill="rgb(230,74,14)" fg:x="50" fg:w="2"/><text x="0.6405%" y="815.50"></text></g><g><title>Context::exists (3 samples, 0.03%)</title><rect x="0.4263%" y="853" width="0.0256%" height="15" fill="rgb(247,57,9)" fg:x="50" fg:w="3"/><text x="0.6405%" y="863.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (3 samples, 0.03%)</title><rect x="0.4263%" y="837" width="0.0256%" height="15" fill="rgb(242,154,52)" fg:x="50" fg:w="3"/><text x="0.6405%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (3 samples, 0.03%)</title><rect x="0.4263%" y="821" width="0.0256%" height="15" fill="rgb(207,227,6)" fg:x="50" fg:w="3"/><text x="0.6405%" y="831.50"></text></g><g><title>std::_Construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="0.4859%" y="773" width="0.0171%" height="15" fill="rgb(210,114,0)" fg:x="57" fg:w="2"/><text x="0.7002%" y="783.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator= (5 samples, 0.04%)</title><rect x="0.4689%" y="853" width="0.0426%" height="15" fill="rgb(253,123,43)" fg:x="55" fg:w="5"/><text x="0.6832%" y="863.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (4 samples, 0.03%)</title><rect x="0.4774%" y="837" width="0.0341%" height="15" fill="rgb(248,65,39)" fg:x="56" fg:w="4"/><text x="0.6917%" y="847.50"></text></g><g><title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.03%)</title><rect x="0.4774%" y="821" width="0.0341%" height="15" fill="rgb(253,109,20)" fg:x="56" fg:w="4"/><text x="0.6917%" y="831.50"></text></g><g><title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (3 samples, 0.03%)</title><rect x="0.4859%" y="805" width="0.0256%" height="15" fill="rgb(252,132,47)" fg:x="57" fg:w="3"/><text x="0.7002%" y="815.50"></text></g><g><title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (3 samples, 0.03%)</title><rect x="0.4859%" y="789" width="0.0256%" height="15" fill="rgb(210,190,6)" fg:x="57" fg:w="3"/><text x="0.7002%" y="799.50"></text></g><g><title>Http::getAllowedMethods[abi:cxx11] (12 samples, 0.10%)</title><rect x="0.4177%" y="869" width="0.1023%" height="15" fill="rgb(231,65,46)" fg:x="49" fg:w="12"/><text x="0.6320%" y="879.50"></text></g><g><title>Http::isMethodValid (15 samples, 0.13%)</title><rect x="0.4007%" y="885" width="0.1279%" height="15" fill="rgb(247,62,44)" fg:x="47" fg:w="15"/><text x="0.6150%" y="895.50"></text></g><g><title>Context::getDirective (3 samples, 0.03%)</title><rect x="0.5882%" y="869" width="0.0256%" height="15" fill="rgb(251,123,38)" fg:x="69" fg:w="3"/><text x="0.8025%" y="879.50"></text></g><g><title>Context::getDirective (3 samples, 0.03%)</title><rect x="0.5882%" y="853" width="0.0256%" height="15" fill="rgb(251,123,38)" fg:x="69" fg:w="3"/><text x="0.8025%" y="863.50"></text></g><g><title>Context::exists (3 samples, 0.03%)</title><rect x="0.5882%" y="837" width="0.0256%" height="15" fill="rgb(247,57,9)" fg:x="69" fg:w="3"/><text x="0.8025%" y="847.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (3 samples, 0.03%)</title><rect x="0.5882%" y="821" width="0.0256%" height="15" fill="rgb(242,154,52)" fg:x="69" fg:w="3"/><text x="0.8025%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (3 samples, 0.03%)</title><rect x="0.5882%" y="805" width="0.0256%" height="15" fill="rgb(207,227,6)" fg:x="69" fg:w="3"/><text x="0.8025%" y="815.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_lower_bound (3 samples, 0.03%)</title><rect x="0.5882%" y="789" width="0.0256%" height="15" fill="rgb(246,72,10)" fg:x="69" fg:w="3"/><text x="0.8025%" y="799.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2 samples, 0.02%)</title><rect x="0.5968%" y="773" width="0.0171%" height="15" fill="rgb(228,56,32)" fg:x="70" fg:w="2"/><text x="0.8110%" y="783.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.02%)</title><rect x="0.5968%" y="757" width="0.0171%" height="15" fill="rgb(241,103,2)" fg:x="70" fg:w="2"/><text x="0.8110%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.02%)</title><rect x="0.5968%" y="741" width="0.0171%" height="15" fill="rgb(212,2,49)" fg:x="70" fg:w="2"/><text x="0.8110%" y="751.50"></text></g><g><title>cp_new_stat (2 samples, 0.02%)</title><rect x="0.6223%" y="789" width="0.0171%" height="15" fill="rgb(206,214,9)" fg:x="73" fg:w="2"/><text x="0.8366%" y="799.50"></text></g><g><title>kmem_cache_free (2 samples, 0.02%)</title><rect x="0.6479%" y="757" width="0.0171%" height="15" fill="rgb(225,137,16)" fg:x="76" fg:w="2"/><text x="0.8622%" y="767.50"></text></g><g><title>filename_lookup (8 samples, 0.07%)</title><rect x="0.6394%" y="773" width="0.0682%" height="15" fill="rgb(251,85,21)" fg:x="75" fg:w="8"/><text x="0.8537%" y="783.50"></text></g><g><title>path_lookupat (5 samples, 0.04%)</title><rect x="0.6650%" y="757" width="0.0426%" height="15" fill="rgb(214,118,26)" fg:x="78" fg:w="5"/><text x="0.8792%" y="767.50"></text></g><g><title>link_path_walk.part.0 (5 samples, 0.04%)</title><rect x="0.6650%" y="741" width="0.0426%" height="15" fill="rgb(224,50,14)" fg:x="78" fg:w="5"/><text x="0.8792%" y="751.50"></text></g><g><title>kmem_cache_alloc (3 samples, 0.03%)</title><rect x="0.7246%" y="741" width="0.0256%" height="15" fill="rgb(223,51,51)" fg:x="85" fg:w="3"/><text x="0.9389%" y="751.50"></text></g><g><title>memset (2 samples, 0.02%)</title><rect x="0.7332%" y="725" width="0.0171%" height="15" fill="rgb(251,9,1)" fg:x="86" fg:w="2"/><text x="0.9474%" y="735.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="0.7332%" y="709" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="86" fg:w="2"/><text x="0.9474%" y="719.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="0.7332%" y="693" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="86" fg:w="2"/><text x="0.9474%" y="703.50"></text></g><g><title>File::dir (16 samples, 0.14%)</title><rect x="0.6223%" y="869" width="0.1364%" height="15" fill="rgb(217,56,25)" fg:x="73" fg:w="16"/><text x="0.8366%" y="879.50"></text></g><g><title>__xstat64 (16 samples, 0.14%)</title><rect x="0.6223%" y="853" width="0.1364%" height="15" fill="rgb(220,214,18)" fg:x="73" fg:w="16"/><text x="0.8366%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.14%)</title><rect x="0.6223%" y="837" width="0.1364%" height="15" fill="rgb(205,226,15)" fg:x="73" fg:w="16"/><text x="0.8366%" y="847.50"></text></g><g><title>do_syscall_64 (16 samples, 0.14%)</title><rect x="0.6223%" y="821" width="0.1364%" height="15" fill="rgb(220,74,14)" fg:x="73" fg:w="16"/><text x="0.8366%" y="831.50"></text></g><g><title>__do_sys_newstat (16 samples, 0.14%)</title><rect x="0.6223%" y="805" width="0.1364%" height="15" fill="rgb(232,11,11)" fg:x="73" fg:w="16"/><text x="0.8366%" y="815.50"></text></g><g><title>vfs_statx (14 samples, 0.12%)</title><rect x="0.6394%" y="789" width="0.1194%" height="15" fill="rgb(253,80,28)" fg:x="75" fg:w="14"/><text x="0.8537%" y="799.50"></text></g><g><title>user_path_at_empty (5 samples, 0.04%)</title><rect x="0.7161%" y="773" width="0.0426%" height="15" fill="rgb(238,106,16)" fg:x="84" fg:w="5"/><text x="0.9304%" y="783.50"></text></g><g><title>getname_flags.part.0 (5 samples, 0.04%)</title><rect x="0.7161%" y="757" width="0.0426%" height="15" fill="rgb(214,38,37)" fg:x="84" fg:w="5"/><text x="0.9304%" y="767.50"></text></g><g><title>cp_new_stat (3 samples, 0.03%)</title><rect x="0.8184%" y="789" width="0.0256%" height="15" fill="rgb(206,214,9)" fg:x="96" fg:w="3"/><text x="1.0327%" y="799.50"></text></g><g><title>ext4_file_getattr (6 samples, 0.05%)</title><rect x="0.8610%" y="773" width="0.0512%" height="15" fill="rgb(216,81,46)" fg:x="101" fg:w="6"/><text x="1.0753%" y="783.50"></text></g><g><title>ext4_getattr (6 samples, 0.05%)</title><rect x="0.8610%" y="757" width="0.0512%" height="15" fill="rgb(245,33,42)" fg:x="101" fg:w="6"/><text x="1.0753%" y="767.50"></text></g><g><title>complete_walk (4 samples, 0.03%)</title><rect x="0.9292%" y="741" width="0.0341%" height="15" fill="rgb(233,57,23)" fg:x="109" fg:w="4"/><text x="1.1435%" y="751.50"></text></g><g><title>try_to_unlazy (4 samples, 0.03%)</title><rect x="0.9292%" y="725" width="0.0341%" height="15" fill="rgb(250,130,2)" fg:x="109" fg:w="4"/><text x="1.1435%" y="735.50"></text></g><g><title>__legitimize_path (4 samples, 0.03%)</title><rect x="0.9292%" y="709" width="0.0341%" height="15" fill="rgb(208,103,0)" fg:x="109" fg:w="4"/><text x="1.1435%" y="719.50"></text></g><g><title>lockref_get_not_dead (2 samples, 0.02%)</title><rect x="0.9463%" y="693" width="0.0171%" height="15" fill="rgb(233,184,8)" fg:x="111" fg:w="2"/><text x="1.1606%" y="703.50"></text></g><g><title>inode_permission.part.0 (5 samples, 0.04%)</title><rect x="0.9633%" y="725" width="0.0426%" height="15" fill="rgb(226,127,45)" fg:x="113" fg:w="5"/><text x="1.1776%" y="735.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="1.1253%" y="549" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="132" fg:w="2"/><text x="1.3396%" y="559.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="1.1253%" y="533" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="132" fg:w="2"/><text x="1.3396%" y="543.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="1.1253%" y="517" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="132" fg:w="2"/><text x="1.3396%" y="527.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="1.1253%" y="501" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="132" fg:w="2"/><text x="1.3396%" y="511.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="1.1253%" y="485" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="132" fg:w="2"/><text x="1.3396%" y="495.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="1.1253%" y="469" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="132" fg:w="2"/><text x="1.3396%" y="479.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="1.1253%" y="453" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="132" fg:w="2"/><text x="1.3396%" y="463.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="1.1253%" y="437" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="132" fg:w="2"/><text x="1.3396%" y="447.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="1.1253%" y="421" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="132" fg:w="2"/><text x="1.3396%" y="431.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="1.1253%" y="405" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="132" fg:w="2"/><text x="1.3396%" y="415.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="1.1253%" y="389" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="132" fg:w="2"/><text x="1.3396%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="1.1253%" y="373" width="0.0171%" height="15" fill="rgb(226,88,38)" fg:x="132" fg:w="2"/><text x="1.3396%" y="383.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="1.1253%" y="357" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="132" fg:w="2"/><text x="1.3396%" y="367.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="1.1253%" y="341" width="0.0171%" height="15" fill="rgb(238,106,36)" fg:x="132" fg:w="2"/><text x="1.3396%" y="351.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="1.1253%" y="325" width="0.0171%" height="15" fill="rgb(224,11,5)" fg:x="132" fg:w="2"/><text x="1.3396%" y="335.50"></text></g><g><title>link_path_walk.part.0 (22 samples, 0.19%)</title><rect x="0.9633%" y="741" width="0.1876%" height="15" fill="rgb(224,50,14)" fg:x="113" fg:w="22"/><text x="1.1776%" y="751.50"></text></g><g><title>walk_component (16 samples, 0.14%)</title><rect x="1.0145%" y="725" width="0.1364%" height="15" fill="rgb(250,91,19)" fg:x="119" fg:w="16"/><text x="1.2288%" y="735.50"></text></g><g><title>lookup_fast (16 samples, 0.14%)</title><rect x="1.0145%" y="709" width="0.1364%" height="15" fill="rgb(223,109,4)" fg:x="119" fg:w="16"/><text x="1.2288%" y="719.50"></text></g><g><title>__d_lookup_rcu (14 samples, 0.12%)</title><rect x="1.0315%" y="693" width="0.1194%" height="15" fill="rgb(227,66,48)" fg:x="121" fg:w="14"/><text x="1.2458%" y="703.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="1.1253%" y="677" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="132" fg:w="3"/><text x="1.3396%" y="687.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="1.1253%" y="661" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="132" fg:w="3"/><text x="1.3396%" y="671.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="1.1253%" y="645" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="132" fg:w="3"/><text x="1.3396%" y="655.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="1.1253%" y="629" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="132" fg:w="3"/><text x="1.3396%" y="639.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="1.1253%" y="613" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="132" fg:w="3"/><text x="1.3396%" y="623.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="1.1253%" y="597" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="132" fg:w="3"/><text x="1.3396%" y="607.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="1.1253%" y="581" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="132" fg:w="3"/><text x="1.3396%" y="591.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="1.1253%" y="565" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="132" fg:w="3"/><text x="1.3396%" y="575.50"></text></g><g><title>path_init (9 samples, 0.08%)</title><rect x="1.1509%" y="741" width="0.0767%" height="15" fill="rgb(215,181,33)" fg:x="135" fg:w="9"/><text x="1.3652%" y="751.50"></text></g><g><title>terminate_walk (2 samples, 0.02%)</title><rect x="1.2276%" y="741" width="0.0171%" height="15" fill="rgb(225,202,12)" fg:x="144" fg:w="2"/><text x="1.4419%" y="751.50"></text></g><g><title>filename_lookup (44 samples, 0.38%)</title><rect x="0.9122%" y="773" width="0.3751%" height="15" fill="rgb(251,85,21)" fg:x="107" fg:w="44"/><text x="1.1265%" y="783.50"></text></g><g><title>path_lookupat (42 samples, 0.36%)</title><rect x="0.9292%" y="757" width="0.3581%" height="15" fill="rgb(214,118,26)" fg:x="109" fg:w="42"/><text x="1.1435%" y="767.50"></text></g><g><title>walk_component (5 samples, 0.04%)</title><rect x="1.2447%" y="741" width="0.0426%" height="15" fill="rgb(250,91,19)" fg:x="146" fg:w="5"/><text x="1.4590%" y="751.50"></text></g><g><title>lookup_fast (5 samples, 0.04%)</title><rect x="1.2447%" y="725" width="0.0426%" height="15" fill="rgb(223,109,4)" fg:x="146" fg:w="5"/><text x="1.4590%" y="735.50"></text></g><g><title>__d_lookup_rcu (5 samples, 0.04%)</title><rect x="1.2447%" y="709" width="0.0426%" height="15" fill="rgb(227,66,48)" fg:x="146" fg:w="5"/><text x="1.4590%" y="719.50"></text></g><g><title>mntput_no_expire (2 samples, 0.02%)</title><rect x="1.2873%" y="773" width="0.0171%" height="15" fill="rgb(231,188,50)" fg:x="151" fg:w="2"/><text x="1.5016%" y="783.50"></text></g><g><title>security_inode_getattr (11 samples, 0.09%)</title><rect x="1.3129%" y="773" width="0.0938%" height="15" fill="rgb(232,137,28)" fg:x="154" fg:w="11"/><text x="1.5272%" y="783.50"></text></g><g><title>tomoyo_path_perm (7 samples, 0.06%)</title><rect x="1.3470%" y="757" width="0.0597%" height="15" fill="rgb(217,76,1)" fg:x="158" fg:w="7"/><text x="1.5613%" y="767.50"></text></g><g><title>tomoyo_init_request_info (5 samples, 0.04%)</title><rect x="1.3640%" y="741" width="0.0426%" height="15" fill="rgb(221,167,18)" fg:x="160" fg:w="5"/><text x="1.5783%" y="751.50"></text></g><g><title>memset (4 samples, 0.03%)</title><rect x="1.4408%" y="725" width="0.0341%" height="15" fill="rgb(251,9,1)" fg:x="169" fg:w="4"/><text x="1.6550%" y="735.50"></text></g><g><title>kmem_cache_alloc (11 samples, 0.09%)</title><rect x="1.4237%" y="741" width="0.0938%" height="15" fill="rgb(223,51,51)" fg:x="167" fg:w="11"/><text x="1.6380%" y="751.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (5 samples, 0.04%)</title><rect x="1.4749%" y="725" width="0.0426%" height="15" fill="rgb(212,11,50)" fg:x="173" fg:w="5"/><text x="1.6891%" y="735.50"></text></g><g><title>__virt_addr_valid (3 samples, 0.03%)</title><rect x="1.5772%" y="709" width="0.0256%" height="15" fill="rgb(216,204,49)" fg:x="185" fg:w="3"/><text x="1.7914%" y="719.50"></text></g><g><title>user_path_at_empty (24 samples, 0.20%)</title><rect x="1.4066%" y="773" width="0.2046%" height="15" fill="rgb(238,106,16)" fg:x="165" fg:w="24"/><text x="1.6209%" y="783.50"></text></g><g><title>getname_flags.part.0 (22 samples, 0.19%)</title><rect x="1.4237%" y="757" width="0.1876%" height="15" fill="rgb(214,38,37)" fg:x="167" fg:w="22"/><text x="1.6380%" y="767.50"></text></g><g><title>strncpy_from_user (11 samples, 0.09%)</title><rect x="1.5175%" y="741" width="0.0938%" height="15" fill="rgb(245,149,46)" fg:x="178" fg:w="11"/><text x="1.7318%" y="751.50"></text></g><g><title>__check_object_size (9 samples, 0.08%)</title><rect x="1.5345%" y="725" width="0.0767%" height="15" fill="rgb(218,1,22)" fg:x="180" fg:w="9"/><text x="1.7488%" y="735.50"></text></g><g><title>__do_sys_newstat (95 samples, 0.81%)</title><rect x="0.8184%" y="805" width="0.8099%" height="15" fill="rgb(232,11,11)" fg:x="96" fg:w="95"/><text x="1.0327%" y="815.50"></text></g><g><title>vfs_statx (92 samples, 0.78%)</title><rect x="0.8440%" y="789" width="0.7843%" height="15" fill="rgb(253,80,28)" fg:x="99" fg:w="92"/><text x="1.0583%" y="799.50"></text></g><g><title>vfs_getattr_nosec (2 samples, 0.02%)</title><rect x="1.6113%" y="773" width="0.0171%" height="15" fill="rgb(228,96,32)" fg:x="189" fg:w="2"/><text x="1.8255%" y="783.50"></text></g><g><title>File::exists (103 samples, 0.88%)</title><rect x="0.7587%" y="869" width="0.8781%" height="15" fill="rgb(233,182,48)" fg:x="89" fg:w="103"/><text x="0.9730%" y="879.50"></text></g><g><title>__xstat64 (102 samples, 0.87%)</title><rect x="0.7673%" y="853" width="0.8696%" height="15" fill="rgb(220,214,18)" fg:x="90" fg:w="102"/><text x="0.9815%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (97 samples, 0.83%)</title><rect x="0.8099%" y="837" width="0.8269%" height="15" fill="rgb(205,226,15)" fg:x="95" fg:w="97"/><text x="1.0242%" y="847.50"></text></g><g><title>do_syscall_64 (97 samples, 0.83%)</title><rect x="0.8099%" y="821" width="0.8269%" height="15" fill="rgb(220,74,14)" fg:x="95" fg:w="97"/><text x="1.0242%" y="831.50"></text></g><g><title>File::getExtension[abi:cxx11] (2 samples, 0.02%)</title><rect x="1.6368%" y="869" width="0.0171%" height="15" fill="rgb(248,218,44)" fg:x="192" fg:w="2"/><text x="1.8511%" y="879.50"></text></g><g><title>File::getName[abi:cxx11] (2 samples, 0.02%)</title><rect x="1.6368%" y="853" width="0.0171%" height="15" fill="rgb(212,162,47)" fg:x="192" fg:w="2"/><text x="1.8511%" y="863.50"></text></g><g><title>File::getPath[abi:cxx11] (2 samples, 0.02%)</title><rect x="1.6539%" y="869" width="0.0171%" height="15" fill="rgb(211,88,29)" fg:x="194" fg:w="2"/><text x="1.8682%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="1.6539%" y="853" width="0.0171%" height="15" fill="rgb(254,182,12)" fg:x="194" fg:w="2"/><text x="1.8682%" y="863.50"></text></g><g><title>filename_lookup (2 samples, 0.02%)</title><rect x="1.6965%" y="757" width="0.0171%" height="15" fill="rgb(251,85,21)" fg:x="199" fg:w="2"/><text x="1.9108%" y="767.50"></text></g><g><title>path_lookupat (2 samples, 0.02%)</title><rect x="1.6965%" y="741" width="0.0171%" height="15" fill="rgb(214,118,26)" fg:x="199" fg:w="2"/><text x="1.9108%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.06%)</title><rect x="1.6709%" y="821" width="0.0597%" height="15" fill="rgb(205,226,15)" fg:x="196" fg:w="7"/><text x="1.8852%" y="831.50"></text></g><g><title>do_syscall_64 (6 samples, 0.05%)</title><rect x="1.6795%" y="805" width="0.0512%" height="15" fill="rgb(220,74,14)" fg:x="197" fg:w="6"/><text x="1.8937%" y="815.50"></text></g><g><title>__do_sys_newstat (6 samples, 0.05%)</title><rect x="1.6795%" y="789" width="0.0512%" height="15" fill="rgb(232,11,11)" fg:x="197" fg:w="6"/><text x="1.8937%" y="799.50"></text></g><g><title>vfs_statx (5 samples, 0.04%)</title><rect x="1.6880%" y="773" width="0.0426%" height="15" fill="rgb(253,80,28)" fg:x="198" fg:w="5"/><text x="1.9023%" y="783.50"></text></g><g><title>user_path_at_empty (2 samples, 0.02%)</title><rect x="1.7136%" y="757" width="0.0171%" height="15" fill="rgb(238,106,16)" fg:x="201" fg:w="2"/><text x="1.9278%" y="767.50"></text></g><g><title>getname_flags.part.0 (2 samples, 0.02%)</title><rect x="1.7136%" y="741" width="0.0171%" height="15" fill="rgb(214,38,37)" fg:x="201" fg:w="2"/><text x="1.9278%" y="751.50"></text></g><g><title>strncpy_from_user (2 samples, 0.02%)</title><rect x="1.7136%" y="725" width="0.0171%" height="15" fill="rgb(245,149,46)" fg:x="201" fg:w="2"/><text x="1.9278%" y="735.50"></text></g><g><title>File::getLastModified (8 samples, 0.07%)</title><rect x="1.6709%" y="853" width="0.0682%" height="15" fill="rgb(221,212,34)" fg:x="196" fg:w="8"/><text x="1.8852%" y="863.50"></text></g><g><title>__xstat64 (8 samples, 0.07%)</title><rect x="1.6709%" y="837" width="0.0682%" height="15" fill="rgb(220,214,18)" fg:x="196" fg:w="8"/><text x="1.8852%" y="847.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="1.7391%" y="837" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="204" fg:w="2"/><text x="1.9534%" y="847.50"></text></g><g><title>getTime (20 samples, 0.17%)</title><rect x="1.7391%" y="853" width="0.1705%" height="15" fill="rgb(245,134,19)" fg:x="204" fg:w="20"/><text x="1.9534%" y="863.50"></text></g><g><title>strftime_l (14 samples, 0.12%)</title><rect x="1.7903%" y="837" width="0.1194%" height="15" fill="rgb(247,36,6)" fg:x="210" fg:w="14"/><text x="2.0046%" y="847.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.11%)</title><rect x="1.7988%" y="821" width="0.1108%" height="15" fill="rgb(247,113,52)" fg:x="211" fg:w="13"/><text x="2.0131%" y="831.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.05%)</title><rect x="1.8585%" y="805" width="0.0512%" height="15" fill="rgb(247,113,52)" fg:x="218" fg:w="6"/><text x="2.0728%" y="815.50"></text></g><g><title>File::lastModified (29 samples, 0.25%)</title><rect x="1.6709%" y="869" width="0.2472%" height="15" fill="rgb(230,175,3)" fg:x="196" fg:w="29"/><text x="1.8852%" y="879.50"></text></g><g><title>complete_walk (2 samples, 0.02%)</title><rect x="1.9267%" y="741" width="0.0171%" height="15" fill="rgb(233,57,23)" fg:x="226" fg:w="2"/><text x="2.1410%" y="751.50"></text></g><g><title>try_to_unlazy (2 samples, 0.02%)</title><rect x="1.9267%" y="725" width="0.0171%" height="15" fill="rgb(250,130,2)" fg:x="226" fg:w="2"/><text x="2.1410%" y="735.50"></text></g><g><title>__legitimize_path (2 samples, 0.02%)</title><rect x="1.9267%" y="709" width="0.0171%" height="15" fill="rgb(208,103,0)" fg:x="226" fg:w="2"/><text x="2.1410%" y="719.50"></text></g><g><title>filename_lookup (3 samples, 0.03%)</title><rect x="1.9267%" y="773" width="0.0256%" height="15" fill="rgb(251,85,21)" fg:x="226" fg:w="3"/><text x="2.1410%" y="783.50"></text></g><g><title>path_lookupat (3 samples, 0.03%)</title><rect x="1.9267%" y="757" width="0.0256%" height="15" fill="rgb(214,118,26)" fg:x="226" fg:w="3"/><text x="2.1410%" y="767.50"></text></g><g><title>user_path_at_empty (4 samples, 0.03%)</title><rect x="1.9693%" y="773" width="0.0341%" height="15" fill="rgb(238,106,16)" fg:x="231" fg:w="4"/><text x="2.1836%" y="783.50"></text></g><g><title>getname_flags.part.0 (4 samples, 0.03%)</title><rect x="1.9693%" y="757" width="0.0341%" height="15" fill="rgb(214,38,37)" fg:x="231" fg:w="4"/><text x="2.1836%" y="767.50"></text></g><g><title>strncpy_from_user (2 samples, 0.02%)</title><rect x="1.9864%" y="741" width="0.0171%" height="15" fill="rgb(245,149,46)" fg:x="233" fg:w="2"/><text x="2.2006%" y="751.50"></text></g><g><title>File::readable (11 samples, 0.09%)</title><rect x="1.9182%" y="869" width="0.0938%" height="15" fill="rgb(241,128,18)" fg:x="225" fg:w="11"/><text x="2.1324%" y="879.50"></text></g><g><title>__xstat64 (11 samples, 0.09%)</title><rect x="1.9182%" y="853" width="0.0938%" height="15" fill="rgb(220,214,18)" fg:x="225" fg:w="11"/><text x="2.1324%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.09%)</title><rect x="1.9182%" y="837" width="0.0938%" height="15" fill="rgb(205,226,15)" fg:x="225" fg:w="11"/><text x="2.1324%" y="847.50"></text></g><g><title>do_syscall_64 (10 samples, 0.09%)</title><rect x="1.9267%" y="821" width="0.0853%" height="15" fill="rgb(220,74,14)" fg:x="226" fg:w="10"/><text x="2.1410%" y="831.50"></text></g><g><title>__do_sys_newstat (10 samples, 0.09%)</title><rect x="1.9267%" y="805" width="0.0853%" height="15" fill="rgb(232,11,11)" fg:x="226" fg:w="10"/><text x="2.1410%" y="815.50"></text></g><g><title>vfs_statx (10 samples, 0.09%)</title><rect x="1.9267%" y="789" width="0.0853%" height="15" fill="rgb(253,80,28)" fg:x="226" fg:w="10"/><text x="2.1410%" y="799.50"></text></g><g><title>filename_lookup (3 samples, 0.03%)</title><rect x="2.0375%" y="773" width="0.0256%" height="15" fill="rgb(251,85,21)" fg:x="239" fg:w="3"/><text x="2.2518%" y="783.50"></text></g><g><title>path_lookupat (2 samples, 0.02%)</title><rect x="2.0460%" y="757" width="0.0171%" height="15" fill="rgb(214,118,26)" fg:x="240" fg:w="2"/><text x="2.2603%" y="767.50"></text></g><g><title>security_inode_getattr (3 samples, 0.03%)</title><rect x="2.0631%" y="773" width="0.0256%" height="15" fill="rgb(232,137,28)" fg:x="242" fg:w="3"/><text x="2.2774%" y="783.50"></text></g><g><title>user_path_at_empty (2 samples, 0.02%)</title><rect x="2.0887%" y="773" width="0.0171%" height="15" fill="rgb(238,106,16)" fg:x="245" fg:w="2"/><text x="2.3029%" y="783.50"></text></g><g><title>getname_flags.part.0 (2 samples, 0.02%)</title><rect x="2.0887%" y="757" width="0.0171%" height="15" fill="rgb(214,38,37)" fg:x="245" fg:w="2"/><text x="2.3029%" y="767.50"></text></g><g><title>File::size (12 samples, 0.10%)</title><rect x="2.0119%" y="869" width="0.1023%" height="15" fill="rgb(217,35,38)" fg:x="236" fg:w="12"/><text x="2.2262%" y="879.50"></text></g><g><title>__xstat64 (12 samples, 0.10%)</title><rect x="2.0119%" y="853" width="0.1023%" height="15" fill="rgb(220,214,18)" fg:x="236" fg:w="12"/><text x="2.2262%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.10%)</title><rect x="2.0119%" y="837" width="0.1023%" height="15" fill="rgb(205,226,15)" fg:x="236" fg:w="12"/><text x="2.2262%" y="847.50"></text></g><g><title>do_syscall_64 (12 samples, 0.10%)</title><rect x="2.0119%" y="821" width="0.1023%" height="15" fill="rgb(220,74,14)" fg:x="236" fg:w="12"/><text x="2.2262%" y="831.50"></text></g><g><title>__do_sys_newstat (12 samples, 0.10%)</title><rect x="2.0119%" y="805" width="0.1023%" height="15" fill="rgb(232,11,11)" fg:x="236" fg:w="12"/><text x="2.2262%" y="815.50"></text></g><g><title>vfs_statx (12 samples, 0.10%)</title><rect x="2.0119%" y="789" width="0.1023%" height="15" fill="rgb(253,80,28)" fg:x="236" fg:w="12"/><text x="2.2262%" y="799.50"></text></g><g><title>Request::getMethod[abi:cxx11] (2 samples, 0.02%)</title><rect x="2.1313%" y="869" width="0.0171%" height="15" fill="rgb(241,10,47)" fg:x="250" fg:w="2"/><text x="2.3456%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="2.1483%" y="853" width="0.0171%" height="15" fill="rgb(254,182,12)" fg:x="252" fg:w="2"/><text x="2.3626%" y="863.50"></text></g><g><title>Response::Response (4 samples, 0.03%)</title><rect x="2.1483%" y="869" width="0.0341%" height="15" fill="rgb(215,13,29)" fg:x="252" fg:w="4"/><text x="2.3626%" y="879.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map (2 samples, 0.02%)</title><rect x="2.1654%" y="853" width="0.0171%" height="15" fill="rgb(235,99,43)" fg:x="254" fg:w="2"/><text x="2.3797%" y="863.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree (2 samples, 0.02%)</title><rect x="2.1654%" y="837" width="0.0171%" height="15" fill="rgb(232,136,19)" fg:x="254" fg:w="2"/><text x="2.3797%" y="847.50"></text></g><g><title>Response::operator= (2 samples, 0.02%)</title><rect x="2.1824%" y="869" width="0.0171%" height="15" fill="rgb(206,25,0)" fg:x="256" fg:w="2"/><text x="2.3967%" y="879.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator= (2 samples, 0.02%)</title><rect x="2.1824%" y="853" width="0.0171%" height="15" fill="rgb(217,57,53)" fg:x="256" fg:w="2"/><text x="2.3967%" y="863.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator= (2 samples, 0.02%)</title><rect x="2.1824%" y="837" width="0.0171%" height="15" fill="rgb(248,210,34)" fg:x="256" fg:w="2"/><text x="2.3967%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (3 samples, 0.03%)</title><rect x="2.2421%" y="789" width="0.0256%" height="15" fill="rgb(206,139,2)" fg:x="263" fg:w="3"/><text x="2.4564%" y="799.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node (4 samples, 0.03%)</title><rect x="2.2762%" y="741" width="0.0341%" height="15" fill="rgb(241,70,20)" fg:x="267" fg:w="4"/><text x="2.4905%" y="751.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct (4 samples, 0.03%)</title><rect x="2.2762%" y="725" width="0.0341%" height="15" fill="rgb(253,150,38)" fg:x="267" fg:w="4"/><text x="2.4905%" y="735.50"></text></g><g><title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (4 samples, 0.03%)</title><rect x="2.2762%" y="709" width="0.0341%" height="15" fill="rgb(250,81,54)" fg:x="267" fg:w="4"/><text x="2.4905%" y="719.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (7 samples, 0.06%)</title><rect x="2.2762%" y="773" width="0.0597%" height="15" fill="rgb(249,156,9)" fg:x="267" fg:w="7"/><text x="2.4905%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node (7 samples, 0.06%)</title><rect x="2.2762%" y="757" width="0.0597%" height="15" fill="rgb(223,17,51)" fg:x="267" fg:w="7"/><text x="2.4905%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node (3 samples, 0.03%)</title><rect x="2.3103%" y="741" width="0.0256%" height="15" fill="rgb(240,154,39)" fg:x="271" fg:w="3"/><text x="2.5246%" y="751.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (3 samples, 0.03%)</title><rect x="2.3103%" y="725" width="0.0256%" height="15" fill="rgb(232,149,36)" fg:x="271" fg:w="3"/><text x="2.5246%" y="735.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (3 samples, 0.03%)</title><rect x="2.3103%" y="709" width="0.0256%" height="15" fill="rgb(205,50,19)" fg:x="271" fg:w="3"/><text x="2.5246%" y="719.50"></text></g><g><title>operator new (3 samples, 0.03%)</title><rect x="2.3103%" y="693" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="271" fg:w="3"/><text x="2.5246%" y="703.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="2.3103%" y="677" width="0.0256%" height="15" fill="rgb(232,24,50)" fg:x="271" fg:w="3"/><text x="2.5246%" y="687.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="2.3188%" y="661" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="272" fg:w="2"/><text x="2.5331%" y="671.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::insert (13 samples, 0.11%)</title><rect x="2.2421%" y="837" width="0.1108%" height="15" fill="rgb(253,1,32)" fg:x="263" fg:w="13"/><text x="2.4564%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_ (13 samples, 0.11%)</title><rect x="2.2421%" y="821" width="0.1108%" height="15" fill="rgb(229,182,52)" fg:x="263" fg:w="13"/><text x="2.4564%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (13 samples, 0.11%)</title><rect x="2.2421%" y="805" width="0.1108%" height="15" fill="rgb(227,197,36)" fg:x="263" fg:w="13"/><text x="2.4564%" y="815.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (10 samples, 0.09%)</title><rect x="2.2677%" y="789" width="0.0853%" height="15" fill="rgb(210,214,38)" fg:x="266" fg:w="10"/><text x="2.4820%" y="799.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (2 samples, 0.02%)</title><rect x="2.3359%" y="773" width="0.0171%" height="15" fill="rgb(216,64,20)" fg:x="274" fg:w="2"/><text x="2.5502%" y="783.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (17 samples, 0.14%)</title><rect x="2.2165%" y="853" width="0.1449%" height="15" fill="rgb(213,223,15)" fg:x="260" fg:w="17"/><text x="2.4308%" y="863.50"></text></g><g><title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="2.3615%" y="837" width="0.0171%" height="15" fill="rgb(253,175,3)" fg:x="277" fg:w="2"/><text x="2.5758%" y="847.50"></text></g><g><title>Response::setHeader (26 samples, 0.22%)</title><rect x="2.1995%" y="869" width="0.2217%" height="15" fill="rgb(253,98,0)" fg:x="258" fg:w="26"/><text x="2.4138%" y="879.50"></text></g><g><title>std::transform&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int (*)(int)&gt; (7 samples, 0.06%)</title><rect x="2.3615%" y="853" width="0.0597%" height="15" fill="rgb(232,139,18)" fg:x="277" fg:w="7"/><text x="2.5758%" y="863.50"></text></g><g><title>tolower (5 samples, 0.04%)</title><rect x="2.3785%" y="837" width="0.0426%" height="15" fill="rgb(241,224,41)" fg:x="279" fg:w="5"/><text x="2.5928%" y="847.50"></text></g><g><title>VirtualHost::getMimeType (14 samples, 0.12%)</title><rect x="2.4211%" y="869" width="0.1194%" height="15" fill="rgb(228,222,25)" fg:x="284" fg:w="14"/><text x="2.6354%" y="879.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (12 samples, 0.10%)</title><rect x="2.4382%" y="853" width="0.1023%" height="15" fill="rgb(251,39,6)" fg:x="286" fg:w="12"/><text x="2.6525%" y="863.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (12 samples, 0.10%)</title><rect x="2.4382%" y="837" width="0.1023%" height="15" fill="rgb(215,30,0)" fg:x="286" fg:w="12"/><text x="2.6525%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (11 samples, 0.09%)</title><rect x="2.4467%" y="821" width="0.0938%" height="15" fill="rgb(243,60,52)" fg:x="287" fg:w="11"/><text x="2.6610%" y="831.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (11 samples, 0.09%)</title><rect x="2.4467%" y="805" width="0.0938%" height="15" fill="rgb(228,56,32)" fg:x="287" fg:w="11"/><text x="2.6610%" y="815.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11 samples, 0.09%)</title><rect x="2.4467%" y="789" width="0.0938%" height="15" fill="rgb(241,103,2)" fg:x="287" fg:w="11"/><text x="2.6610%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (10 samples, 0.09%)</title><rect x="2.4552%" y="773" width="0.0853%" height="15" fill="rgb(212,2,49)" fg:x="288" fg:w="10"/><text x="2.6695%" y="783.50"></text></g><g><title>cfree (3 samples, 0.03%)</title><rect x="2.5575%" y="869" width="0.0256%" height="15" fill="rgb(221,14,53)" fg:x="300" fg:w="3"/><text x="2.7718%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.03%)</title><rect x="2.6257%" y="869" width="0.0256%" height="15" fill="rgb(254,182,12)" fg:x="308" fg:w="3"/><text x="2.8400%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.03%)</title><rect x="2.6513%" y="869" width="0.0341%" height="15" fill="rgb(244,92,22)" fg:x="311" fg:w="4"/><text x="2.8656%" y="879.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="2.6598%" y="853" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="312" fg:w="3"/><text x="2.8741%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.02%)</title><rect x="2.6854%" y="869" width="0.0171%" height="15" fill="rgb(216,41,4)" fg:x="315" fg:w="2"/><text x="2.8997%" y="879.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.02%)</title><rect x="2.7025%" y="869" width="0.0171%" height="15" fill="rgb(222,170,8)" fg:x="317" fg:w="2"/><text x="2.9168%" y="879.50"></text></g><g><title>fwrite (2 samples, 0.02%)</title><rect x="2.7025%" y="853" width="0.0171%" height="15" fill="rgb(227,73,51)" fg:x="317" fg:w="2"/><text x="2.9168%" y="863.50"></text></g><g><title>_IO_file_xsputn (2 samples, 0.02%)</title><rect x="2.7025%" y="837" width="0.0171%" height="15" fill="rgb(212,187,30)" fg:x="317" fg:w="2"/><text x="2.9168%" y="847.50"></text></g><g><title>std::has_facet&lt;std::codecvt&lt;char, char, __mbstate_t&gt; &gt; (5 samples, 0.04%)</title><rect x="2.7877%" y="837" width="0.0426%" height="15" fill="rgb(206,195,19)" fg:x="327" fg:w="5"/><text x="3.0020%" y="847.50"></text></g><g><title>std::locale::id::_M_id (2 samples, 0.02%)</title><rect x="2.8133%" y="821" width="0.0171%" height="15" fill="rgb(241,7,48)" fg:x="330" fg:w="2"/><text x="3.0276%" y="831.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::basic_filebuf (12 samples, 0.10%)</title><rect x="2.7621%" y="853" width="0.1023%" height="15" fill="rgb(232,91,52)" fg:x="324" fg:w="12"/><text x="2.9764%" y="863.50"></text></g><g><title>std::use_facet&lt;std::codecvt&lt;char, char, __mbstate_t&gt; &gt; (4 samples, 0.03%)</title><rect x="2.8303%" y="837" width="0.0341%" height="15" fill="rgb(221,191,45)" fg:x="332" fg:w="4"/><text x="3.0446%" y="847.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="2.8900%" y="805" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="339" fg:w="3"/><text x="3.1043%" y="815.50"></text></g><g><title>_IO_link_in (3 samples, 0.03%)</title><rect x="2.8900%" y="789" width="0.0256%" height="15" fill="rgb(235,219,6)" fg:x="339" fg:w="3"/><text x="3.1043%" y="799.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="2.9241%" y="789" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="343" fg:w="3"/><text x="3.1384%" y="799.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="2.9668%" y="709" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="348" fg:w="2"/><text x="3.1810%" y="719.50"></text></g><g><title>__alloc_fd (2 samples, 0.02%)</title><rect x="2.9838%" y="693" width="0.0171%" height="15" fill="rgb(234,27,45)" fg:x="350" fg:w="2"/><text x="3.1981%" y="703.50"></text></g><g><title>build_open_flags (2 samples, 0.02%)</title><rect x="3.0094%" y="693" width="0.0171%" height="15" fill="rgb(212,226,28)" fg:x="353" fg:w="2"/><text x="3.2237%" y="703.50"></text></g><g><title>alloc_empty_file (5 samples, 0.04%)</title><rect x="3.0520%" y="661" width="0.0426%" height="15" fill="rgb(242,156,16)" fg:x="358" fg:w="5"/><text x="3.2663%" y="671.50"></text></g><g><title>__alloc_file (4 samples, 0.03%)</title><rect x="3.0605%" y="645" width="0.0341%" height="15" fill="rgb(208,34,24)" fg:x="359" fg:w="4"/><text x="3.2748%" y="655.50"></text></g><g><title>dquot_file_open (3 samples, 0.03%)</title><rect x="3.1202%" y="645" width="0.0256%" height="15" fill="rgb(207,110,7)" fg:x="366" fg:w="3"/><text x="3.3345%" y="655.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="3.1714%" y="613" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="372" fg:w="2"/><text x="3.3856%" y="623.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="3.1714%" y="597" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="372" fg:w="2"/><text x="3.3856%" y="607.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="3.1714%" y="581" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="372" fg:w="2"/><text x="3.3856%" y="591.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="3.1714%" y="565" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="372" fg:w="2"/><text x="3.3856%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="3.1714%" y="549" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="372" fg:w="2"/><text x="3.3856%" y="559.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="3.1714%" y="533" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="372" fg:w="2"/><text x="3.3856%" y="543.50"></text></g><g><title>dget_parent (2 samples, 0.02%)</title><rect x="3.1884%" y="613" width="0.0171%" height="15" fill="rgb(239,199,25)" fg:x="374" fg:w="2"/><text x="3.4027%" y="623.50"></text></g><g><title>fscrypt_file_open (5 samples, 0.04%)</title><rect x="3.1714%" y="629" width="0.0426%" height="15" fill="rgb(235,1,22)" fg:x="372" fg:w="5"/><text x="3.3856%" y="639.50"></text></g><g><title>ext4_file_open (9 samples, 0.08%)</title><rect x="3.1458%" y="645" width="0.0767%" height="15" fill="rgb(214,87,30)" fg:x="369" fg:w="9"/><text x="3.3601%" y="655.50"></text></g><g><title>apparmor_file_open (2 samples, 0.02%)</title><rect x="3.2310%" y="629" width="0.0171%" height="15" fill="rgb(242,124,47)" fg:x="379" fg:w="2"/><text x="3.4453%" y="639.50"></text></g><g><title>do_dentry_open (26 samples, 0.22%)</title><rect x="3.1032%" y="661" width="0.2217%" height="15" fill="rgb(251,170,35)" fg:x="364" fg:w="26"/><text x="3.3174%" y="671.50"></text></g><g><title>security_file_open (11 samples, 0.09%)</title><rect x="3.2310%" y="645" width="0.0938%" height="15" fill="rgb(210,168,47)" fg:x="379" fg:w="11"/><text x="3.4453%" y="655.50"></text></g><g><title>tomoyo_check_open_permission (9 samples, 0.08%)</title><rect x="3.2481%" y="629" width="0.0767%" height="15" fill="rgb(246,102,49)" fg:x="381" fg:w="9"/><text x="3.4624%" y="639.50"></text></g><g><title>__srcu_read_lock (7 samples, 0.06%)</title><rect x="3.2651%" y="613" width="0.0597%" height="15" fill="rgb(223,99,5)" fg:x="383" fg:w="7"/><text x="3.4794%" y="623.50"></text></g><g><title>link_path_walk.part.0 (4 samples, 0.03%)</title><rect x="3.3248%" y="661" width="0.0341%" height="15" fill="rgb(224,50,14)" fg:x="390" fg:w="4"/><text x="3.5391%" y="671.50"></text></g><g><title>walk_component (3 samples, 0.03%)</title><rect x="3.3333%" y="645" width="0.0256%" height="15" fill="rgb(250,91,19)" fg:x="391" fg:w="3"/><text x="3.5476%" y="655.50"></text></g><g><title>lookup_fast (2 samples, 0.02%)</title><rect x="3.3419%" y="629" width="0.0171%" height="15" fill="rgb(223,109,4)" fg:x="392" fg:w="2"/><text x="3.5561%" y="639.50"></text></g><g><title>__d_lookup_rcu (2 samples, 0.02%)</title><rect x="3.3419%" y="613" width="0.0171%" height="15" fill="rgb(227,66,48)" fg:x="392" fg:w="2"/><text x="3.5561%" y="623.50"></text></g><g><title>do_filp_open (41 samples, 0.35%)</title><rect x="3.0264%" y="693" width="0.3495%" height="15" fill="rgb(219,26,10)" fg:x="355" fg:w="41"/><text x="3.2407%" y="703.50"></text></g><g><title>path_openat (41 samples, 0.35%)</title><rect x="3.0264%" y="677" width="0.3495%" height="15" fill="rgb(228,25,37)" fg:x="355" fg:w="41"/><text x="3.2407%" y="687.50"></text></g><g><title>kmem_cache_alloc (2 samples, 0.02%)</title><rect x="3.3845%" y="677" width="0.0171%" height="15" fill="rgb(223,51,51)" fg:x="397" fg:w="2"/><text x="3.5988%" y="687.50"></text></g><g><title>getname_flags.part.0 (3 samples, 0.03%)</title><rect x="3.3845%" y="693" width="0.0256%" height="15" fill="rgb(214,38,37)" fg:x="397" fg:w="3"/><text x="3.5988%" y="703.50"></text></g><g><title>do_syscall_64 (55 samples, 0.47%)</title><rect x="2.9497%" y="741" width="0.4689%" height="15" fill="rgb(220,74,14)" fg:x="346" fg:w="55"/><text x="3.1640%" y="751.50"></text></g><g><title>__x64_sys_openat (53 samples, 0.45%)</title><rect x="2.9668%" y="725" width="0.4518%" height="15" fill="rgb(236,228,31)" fg:x="348" fg:w="53"/><text x="3.1810%" y="735.50"></text></g><g><title>do_sys_openat2 (51 samples, 0.43%)</title><rect x="2.9838%" y="709" width="0.4348%" height="15" fill="rgb(208,111,23)" fg:x="350" fg:w="51"/><text x="3.1981%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (56 samples, 0.48%)</title><rect x="2.9497%" y="757" width="0.4774%" height="15" fill="rgb(205,226,15)" fg:x="346" fg:w="56"/><text x="3.1640%" y="767.50"></text></g><g><title>_IO_file_fopen (61 samples, 0.52%)</title><rect x="2.9156%" y="805" width="0.5200%" height="15" fill="rgb(230,71,35)" fg:x="342" fg:w="61"/><text x="3.1299%" y="815.50"></text></g><g><title>_IO_file_open (57 samples, 0.49%)</title><rect x="2.9497%" y="789" width="0.4859%" height="15" fill="rgb(224,210,15)" fg:x="346" fg:w="57"/><text x="3.1640%" y="799.50"></text></g><g><title>__open64 (57 samples, 0.49%)</title><rect x="2.9497%" y="773" width="0.4859%" height="15" fill="rgb(239,156,4)" fg:x="346" fg:w="57"/><text x="3.1640%" y="783.50"></text></g><g><title>[libc-2.31.so] (66 samples, 0.56%)</title><rect x="2.8900%" y="821" width="0.5627%" height="15" fill="rgb(247,113,52)" fg:x="339" fg:w="66"/><text x="3.1043%" y="831.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="3.4356%" y="805" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="403" fg:w="2"/><text x="3.6499%" y="815.50"></text></g><g><title>std::__basic_file&lt;char&gt;::open (68 samples, 0.58%)</title><rect x="2.8900%" y="837" width="0.5797%" height="15" fill="rgb(253,221,0)" fg:x="339" fg:w="68"/><text x="3.1043%" y="847.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="3.5550%" y="773" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="417" fg:w="2"/><text x="3.7693%" y="783.50"></text></g><g><title>operator new (15 samples, 0.13%)</title><rect x="3.4697%" y="821" width="0.1279%" height="15" fill="rgb(214,91,1)" fg:x="407" fg:w="15"/><text x="3.6840%" y="831.50"></text></g><g><title>__libc_malloc (15 samples, 0.13%)</title><rect x="3.4697%" y="805" width="0.1279%" height="15" fill="rgb(232,24,50)" fg:x="407" fg:w="15"/><text x="3.6840%" y="815.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.13%)</title><rect x="3.4697%" y="789" width="0.1279%" height="15" fill="rgb(247,113,52)" fg:x="407" fg:w="15"/><text x="3.6840%" y="799.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="3.5720%" y="773" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="419" fg:w="3"/><text x="3.7863%" y="783.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="3.5720%" y="757" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="419" fg:w="3"/><text x="3.7863%" y="767.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="3.5720%" y="741" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="419" fg:w="3"/><text x="3.7863%" y="751.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="3.5720%" y="725" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="419" fg:w="3"/><text x="3.7863%" y="735.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="3.5720%" y="709" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="419" fg:w="3"/><text x="3.7863%" y="719.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="3.5720%" y="693" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="419" fg:w="3"/><text x="3.7863%" y="703.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="3.5720%" y="677" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="419" fg:w="3"/><text x="3.7863%" y="687.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="3.5720%" y="661" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="419" fg:w="3"/><text x="3.7863%" y="671.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="3.5720%" y="645" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="419" fg:w="3"/><text x="3.7863%" y="655.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="3.5720%" y="629" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="419" fg:w="3"/><text x="3.7863%" y="639.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="3.5720%" y="613" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="419" fg:w="3"/><text x="3.7863%" y="623.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="3.5720%" y="597" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="419" fg:w="3"/><text x="3.7863%" y="607.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="3.5720%" y="581" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="419" fg:w="3"/><text x="3.7863%" y="591.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="3.5806%" y="565" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="420" fg:w="2"/><text x="3.7948%" y="575.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="3.5806%" y="549" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="420" fg:w="2"/><text x="3.7948%" y="559.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="3.5806%" y="533" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="420" fg:w="2"/><text x="3.7948%" y="543.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="3.5806%" y="517" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="420" fg:w="2"/><text x="3.7948%" y="527.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="3.5806%" y="501" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="420" fg:w="2"/><text x="3.7948%" y="511.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="3.5806%" y="485" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="420" fg:w="2"/><text x="3.7948%" y="495.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (88 samples, 0.75%)</title><rect x="2.8645%" y="853" width="0.7502%" height="15" fill="rgb(232,25,18)" fg:x="336" fg:w="88"/><text x="3.0787%" y="863.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (17 samples, 0.14%)</title><rect x="3.4697%" y="837" width="0.1449%" height="15" fill="rgb(231,75,9)" fg:x="407" fg:w="17"/><text x="3.6840%" y="847.50"></text></g><g><title>operator new[] (2 samples, 0.02%)</title><rect x="3.5976%" y="821" width="0.0171%" height="15" fill="rgb(227,45,20)" fg:x="422" fg:w="2"/><text x="3.8119%" y="831.50"></text></g><g><title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.03%)</title><rect x="3.6317%" y="821" width="0.0256%" height="15" fill="rgb(215,60,9)" fg:x="426" fg:w="3"/><text x="3.8460%" y="831.50"></text></g><g><title>__dynamic_cast (3 samples, 0.03%)</title><rect x="3.6317%" y="805" width="0.0256%" height="15" fill="rgb(214,65,42)" fg:x="426" fg:w="3"/><text x="3.8460%" y="815.50"></text></g><g><title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="3.6573%" y="821" width="0.0171%" height="15" fill="rgb(207,140,3)" fg:x="429" fg:w="2"/><text x="3.8716%" y="831.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (7 samples, 0.06%)</title><rect x="3.6317%" y="837" width="0.0597%" height="15" fill="rgb(237,227,49)" fg:x="426" fg:w="7"/><text x="3.8460%" y="847.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10 samples, 0.09%)</title><rect x="3.6232%" y="853" width="0.0853%" height="15" fill="rgb(223,206,25)" fg:x="425" fg:w="10"/><text x="3.8375%" y="863.50"></text></g><g><title>std::ios_base::_M_init (2 samples, 0.02%)</title><rect x="3.6914%" y="837" width="0.0171%" height="15" fill="rgb(211,168,7)" fg:x="433" fg:w="2"/><text x="3.9057%" y="847.50"></text></g><g><title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ifstream (117 samples, 1.00%)</title><rect x="2.7366%" y="869" width="0.9974%" height="15" fill="rgb(230,170,3)" fg:x="321" fg:w="117"/><text x="2.9509%" y="879.50"></text></g><g><title>std::locale::locale (2 samples, 0.02%)</title><rect x="3.7170%" y="853" width="0.0171%" height="15" fill="rgb(240,92,16)" fg:x="436" fg:w="2"/><text x="3.9313%" y="863.50"></text></g><g><title>__check_object_size (2 samples, 0.02%)</title><rect x="3.7766%" y="661" width="0.0171%" height="15" fill="rgb(218,1,22)" fg:x="443" fg:w="2"/><text x="3.9909%" y="671.50"></text></g><g><title>__virt_addr_valid (2 samples, 0.02%)</title><rect x="3.7766%" y="645" width="0.0171%" height="15" fill="rgb(216,204,49)" fg:x="443" fg:w="2"/><text x="3.9909%" y="655.50"></text></g><g><title>_copy_from_iter (2 samples, 0.02%)</title><rect x="3.8022%" y="661" width="0.0171%" height="15" fill="rgb(237,96,30)" fg:x="446" fg:w="2"/><text x="4.0165%" y="671.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.02%)</title><rect x="3.8448%" y="549" width="0.0171%" height="15" fill="rgb(252,79,15)" fg:x="451" fg:w="2"/><text x="4.0591%" y="559.50"></text></g><g><title>ttwu_do_activate (5 samples, 0.04%)</title><rect x="3.8448%" y="565" width="0.0426%" height="15" fill="rgb(244,166,49)" fg:x="451" fg:w="5"/><text x="4.0591%" y="575.50"></text></g><g><title>psi_task_change (3 samples, 0.03%)</title><rect x="3.8619%" y="549" width="0.0256%" height="15" fill="rgb(214,87,45)" fg:x="453" fg:w="3"/><text x="4.0762%" y="559.50"></text></g><g><title>psi_group_change (3 samples, 0.03%)</title><rect x="3.8619%" y="533" width="0.0256%" height="15" fill="rgb(214,74,3)" fg:x="453" fg:w="3"/><text x="4.0762%" y="543.50"></text></g><g><title>__queue_work (7 samples, 0.06%)</title><rect x="3.8363%" y="597" width="0.0597%" height="15" fill="rgb(228,111,53)" fg:x="450" fg:w="7"/><text x="4.0506%" y="607.50"></text></g><g><title>try_to_wake_up (6 samples, 0.05%)</title><rect x="3.8448%" y="581" width="0.0512%" height="15" fill="rgb(251,124,39)" fg:x="451" fg:w="6"/><text x="4.0591%" y="591.50"></text></g><g><title>queue_work_on (9 samples, 0.08%)</title><rect x="3.8363%" y="613" width="0.0767%" height="15" fill="rgb(224,62,31)" fg:x="450" fg:w="9"/><text x="4.0506%" y="623.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="3.8960%" y="597" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="457" fg:w="2"/><text x="4.1103%" y="607.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="3.8960%" y="581" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="457" fg:w="2"/><text x="4.1103%" y="591.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="3.8960%" y="565" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="457" fg:w="2"/><text x="4.1103%" y="575.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="3.8960%" y="549" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="457" fg:w="2"/><text x="4.1103%" y="559.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="3.8960%" y="533" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="457" fg:w="2"/><text x="4.1103%" y="543.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="3.8960%" y="517" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="457" fg:w="2"/><text x="4.1103%" y="527.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="3.8960%" y="501" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="457" fg:w="2"/><text x="4.1103%" y="511.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="3.8960%" y="485" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="457" fg:w="2"/><text x="4.1103%" y="495.50"></text></g><g><title>do_output_char (12 samples, 0.10%)</title><rect x="3.8278%" y="645" width="0.1023%" height="15" fill="rgb(228,220,0)" fg:x="449" fg:w="12"/><text x="4.0421%" y="655.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (11 samples, 0.09%)</title><rect x="3.8363%" y="629" width="0.0938%" height="15" fill="rgb(229,98,5)" fg:x="450" fg:w="11"/><text x="4.0506%" y="639.50"></text></g><g><title>tty_insert_flip_string_fixed_flag (2 samples, 0.02%)</title><rect x="3.9130%" y="613" width="0.0171%" height="15" fill="rgb(227,10,10)" fg:x="459" fg:w="2"/><text x="4.1273%" y="623.50"></text></g><g><title>native_read_msr (8 samples, 0.07%)</title><rect x="3.9386%" y="549" width="0.0682%" height="15" fill="rgb(218,43,9)" fg:x="462" fg:w="8"/><text x="4.1529%" y="559.50"></text></g><g><title>__perf_event_task_sched_out (11 samples, 0.09%)</title><rect x="3.9386%" y="597" width="0.0938%" height="15" fill="rgb(206,30,45)" fg:x="462" fg:w="11"/><text x="4.1529%" y="607.50"></text></g><g><title>amd_pmu_disable_all (11 samples, 0.09%)</title><rect x="3.9386%" y="581" width="0.0938%" height="15" fill="rgb(224,0,7)" fg:x="462" fg:w="11"/><text x="4.1529%" y="591.50"></text></g><g><title>x86_pmu_disable_all (11 samples, 0.09%)</title><rect x="3.9386%" y="565" width="0.0938%" height="15" fill="rgb(235,111,43)" fg:x="462" fg:w="11"/><text x="4.1529%" y="575.50"></text></g><g><title>native_write_msr (3 samples, 0.03%)</title><rect x="4.0068%" y="549" width="0.0256%" height="15" fill="rgb(220,53,36)" fg:x="470" fg:w="3"/><text x="4.2211%" y="559.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="4.0324%" y="549" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="473" fg:w="2"/><text x="4.2467%" y="559.50"></text></g><g><title>handle_edge_irq (2 samples, 0.02%)</title><rect x="4.0324%" y="533" width="0.0171%" height="15" fill="rgb(219,15,9)" fg:x="473" fg:w="2"/><text x="4.2467%" y="543.50"></text></g><g><title>handle_irq_event (2 samples, 0.02%)</title><rect x="4.0324%" y="517" width="0.0171%" height="15" fill="rgb(209,73,52)" fg:x="473" fg:w="2"/><text x="4.2467%" y="527.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="4.0750%" y="469" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="478" fg:w="2"/><text x="4.2893%" y="479.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="4.0750%" y="453" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="478" fg:w="2"/><text x="4.2893%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="4.0750%" y="437" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="478" fg:w="2"/><text x="4.2893%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="4.0750%" y="421" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="478" fg:w="2"/><text x="4.2893%" y="431.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="4.0750%" y="405" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="478" fg:w="2"/><text x="4.2893%" y="415.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="4.0750%" y="389" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="478" fg:w="2"/><text x="4.2893%" y="399.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="4.0750%" y="373" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="478" fg:w="2"/><text x="4.2893%" y="383.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="4.0750%" y="357" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="478" fg:w="2"/><text x="4.2893%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="4.0750%" y="341" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="478" fg:w="2"/><text x="4.2893%" y="351.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="4.0750%" y="325" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="478" fg:w="2"/><text x="4.2893%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="4.0750%" y="309" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="478" fg:w="2"/><text x="4.2893%" y="319.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="4.0750%" y="293" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="478" fg:w="2"/><text x="4.2893%" y="303.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="4.0750%" y="277" width="0.0171%" height="15" fill="rgb(226,88,38)" fg:x="478" fg:w="2"/><text x="4.2893%" y="287.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="4.0750%" y="261" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="478" fg:w="2"/><text x="4.2893%" y="271.50"></text></g><g><title>finish_task_switch (10 samples, 0.09%)</title><rect x="4.0324%" y="597" width="0.0853%" height="15" fill="rgb(214,214,33)" fg:x="473" fg:w="10"/><text x="4.2467%" y="607.50"></text></g><g><title>asm_common_interrupt (10 samples, 0.09%)</title><rect x="4.0324%" y="581" width="0.0853%" height="15" fill="rgb(248,227,45)" fg:x="473" fg:w="10"/><text x="4.2467%" y="591.50"></text></g><g><title>common_interrupt (10 samples, 0.09%)</title><rect x="4.0324%" y="565" width="0.0853%" height="15" fill="rgb(250,67,32)" fg:x="473" fg:w="10"/><text x="4.2467%" y="575.50"></text></g><g><title>irq_exit_rcu (8 samples, 0.07%)</title><rect x="4.0494%" y="549" width="0.0682%" height="15" fill="rgb(240,18,12)" fg:x="475" fg:w="8"/><text x="4.2637%" y="559.50"></text></g><g><title>do_softirq_own_stack (8 samples, 0.07%)</title><rect x="4.0494%" y="533" width="0.0682%" height="15" fill="rgb(223,89,53)" fg:x="475" fg:w="8"/><text x="4.2637%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (8 samples, 0.07%)</title><rect x="4.0494%" y="517" width="0.0682%" height="15" fill="rgb(208,184,36)" fg:x="475" fg:w="8"/><text x="4.2637%" y="527.50"></text></g><g><title>__softirqentry_text_start (8 samples, 0.07%)</title><rect x="4.0494%" y="501" width="0.0682%" height="15" fill="rgb(249,91,22)" fg:x="475" fg:w="8"/><text x="4.2637%" y="511.50"></text></g><g><title>net_rx_action (6 samples, 0.05%)</title><rect x="4.0665%" y="485" width="0.0512%" height="15" fill="rgb(231,11,52)" fg:x="477" fg:w="6"/><text x="4.2808%" y="495.50"></text></g><g><title>virtnet_poll_tx (3 samples, 0.03%)</title><rect x="4.0921%" y="469" width="0.0256%" height="15" fill="rgb(251,188,47)" fg:x="480" fg:w="3"/><text x="4.3064%" y="479.50"></text></g><g><title>free_old_xmit_skbs (3 samples, 0.03%)</title><rect x="4.0921%" y="453" width="0.0256%" height="15" fill="rgb(235,178,6)" fg:x="480" fg:w="3"/><text x="4.3064%" y="463.50"></text></g><g><title>napi_consume_skb (2 samples, 0.02%)</title><rect x="4.1006%" y="437" width="0.0171%" height="15" fill="rgb(244,99,54)" fg:x="481" fg:w="2"/><text x="4.3149%" y="447.50"></text></g><g><title>set_next_entity (2 samples, 0.02%)</title><rect x="4.1262%" y="581" width="0.0171%" height="15" fill="rgb(246,169,49)" fg:x="484" fg:w="2"/><text x="4.3405%" y="591.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.03%)</title><rect x="4.1176%" y="597" width="0.0341%" height="15" fill="rgb(247,213,54)" fg:x="483" fg:w="4"/><text x="4.3319%" y="607.50"></text></g><g><title>mutex_lock (29 samples, 0.25%)</title><rect x="3.9301%" y="645" width="0.2472%" height="15" fill="rgb(218,205,15)" fg:x="461" fg:w="29"/><text x="4.1444%" y="655.50"></text></g><g><title>_cond_resched (29 samples, 0.25%)</title><rect x="3.9301%" y="629" width="0.2472%" height="15" fill="rgb(240,228,18)" fg:x="461" fg:w="29"/><text x="4.1444%" y="639.50"></text></g><g><title>__schedule (29 samples, 0.25%)</title><rect x="3.9301%" y="613" width="0.2472%" height="15" fill="rgb(207,40,26)" fg:x="461" fg:w="29"/><text x="4.1444%" y="623.50"></text></g><g><title>psi_task_switch (3 samples, 0.03%)</title><rect x="4.1517%" y="597" width="0.0256%" height="15" fill="rgb(233,176,51)" fg:x="487" fg:w="3"/><text x="4.3660%" y="607.50"></text></g><g><title>psi_group_change (3 samples, 0.03%)</title><rect x="4.1517%" y="581" width="0.0256%" height="15" fill="rgb(214,74,3)" fg:x="487" fg:w="3"/><text x="4.3660%" y="591.50"></text></g><g><title>remove_wait_queue (2 samples, 0.02%)</title><rect x="4.2029%" y="645" width="0.0171%" height="15" fill="rgb(247,210,21)" fg:x="493" fg:w="2"/><text x="4.4172%" y="655.50"></text></g><g><title>update_curr (2 samples, 0.02%)</title><rect x="4.2796%" y="533" width="0.0171%" height="15" fill="rgb(242,65,24)" fg:x="502" fg:w="2"/><text x="4.4939%" y="543.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.04%)</title><rect x="4.2626%" y="565" width="0.0426%" height="15" fill="rgb(252,79,15)" fg:x="500" fg:w="5"/><text x="4.4769%" y="575.50"></text></g><g><title>enqueue_entity (4 samples, 0.03%)</title><rect x="4.2711%" y="549" width="0.0341%" height="15" fill="rgb(206,193,49)" fg:x="501" fg:w="4"/><text x="4.4854%" y="559.50"></text></g><g><title>ttwu_do_activate (8 samples, 0.07%)</title><rect x="4.2626%" y="581" width="0.0682%" height="15" fill="rgb(244,166,49)" fg:x="500" fg:w="8"/><text x="4.4769%" y="591.50"></text></g><g><title>psi_task_change (3 samples, 0.03%)</title><rect x="4.3052%" y="565" width="0.0256%" height="15" fill="rgb(214,87,45)" fg:x="505" fg:w="3"/><text x="4.5195%" y="575.50"></text></g><g><title>ttwu_do_wakeup (4 samples, 0.03%)</title><rect x="4.3308%" y="581" width="0.0341%" height="15" fill="rgb(220,201,44)" fg:x="508" fg:w="4"/><text x="4.5451%" y="591.50"></text></g><g><title>check_preempt_curr (3 samples, 0.03%)</title><rect x="4.3393%" y="565" width="0.0256%" height="15" fill="rgb(253,116,22)" fg:x="509" fg:w="3"/><text x="4.5536%" y="575.50"></text></g><g><title>check_preempt_wakeup (2 samples, 0.02%)</title><rect x="4.3478%" y="549" width="0.0171%" height="15" fill="rgb(225,77,38)" fg:x="510" fg:w="2"/><text x="4.5621%" y="559.50"></text></g><g><title>__queue_work (16 samples, 0.14%)</title><rect x="4.2370%" y="613" width="0.1364%" height="15" fill="rgb(228,111,53)" fg:x="497" fg:w="16"/><text x="4.4513%" y="623.50"></text></g><g><title>try_to_wake_up (14 samples, 0.12%)</title><rect x="4.2540%" y="597" width="0.1194%" height="15" fill="rgb(251,124,39)" fg:x="499" fg:w="14"/><text x="4.4683%" y="607.50"></text></g><g><title>queue_work_on (19 samples, 0.16%)</title><rect x="4.2285%" y="629" width="0.1620%" height="15" fill="rgb(224,62,31)" fg:x="496" fg:w="19"/><text x="4.4428%" y="639.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="4.3734%" y="613" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="513" fg:w="2"/><text x="4.5877%" y="623.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="4.3734%" y="597" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="513" fg:w="2"/><text x="4.5877%" y="607.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="4.3734%" y="581" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="513" fg:w="2"/><text x="4.5877%" y="591.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="4.3734%" y="565" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="513" fg:w="2"/><text x="4.5877%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="4.3734%" y="549" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="513" fg:w="2"/><text x="4.5877%" y="559.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="4.3734%" y="533" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="513" fg:w="2"/><text x="4.5877%" y="543.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="4.3734%" y="517" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="513" fg:w="2"/><text x="4.5877%" y="527.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="4.3734%" y="501" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="513" fg:w="2"/><text x="4.5877%" y="511.50"></text></g><g><title>n_tty_write (69 samples, 0.59%)</title><rect x="3.8193%" y="661" width="0.5882%" height="15" fill="rgb(240,0,6)" fg:x="448" fg:w="69"/><text x="4.0336%" y="671.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (22 samples, 0.19%)</title><rect x="4.2199%" y="645" width="0.1876%" height="15" fill="rgb(229,98,5)" fg:x="495" fg:w="22"/><text x="4.4342%" y="655.50"></text></g><g><title>tty_insert_flip_string_fixed_flag (2 samples, 0.02%)</title><rect x="4.3905%" y="629" width="0.0171%" height="15" fill="rgb(227,10,10)" fg:x="515" fg:w="2"/><text x="4.6047%" y="639.50"></text></g><g><title>file_tty_write.constprop.0 (77 samples, 0.66%)</title><rect x="3.7766%" y="677" width="0.6564%" height="15" fill="rgb(225,84,50)" fg:x="443" fg:w="77"/><text x="3.9909%" y="687.50"></text></g><g><title>tty_ldisc_ref_wait (2 samples, 0.02%)</title><rect x="4.4160%" y="661" width="0.0171%" height="15" fill="rgb(209,153,28)" fg:x="518" fg:w="2"/><text x="4.6303%" y="671.50"></text></g><g><title>new_sync_write (79 samples, 0.67%)</title><rect x="3.7766%" y="693" width="0.6735%" height="15" fill="rgb(220,167,51)" fg:x="443" fg:w="79"/><text x="3.9909%" y="703.50"></text></g><g><title>tty_write (2 samples, 0.02%)</title><rect x="4.4331%" y="677" width="0.0171%" height="15" fill="rgb(233,6,35)" fg:x="520" fg:w="2"/><text x="4.6474%" y="687.50"></text></g><g><title>do_syscall_64 (81 samples, 0.69%)</title><rect x="3.7681%" y="741" width="0.6905%" height="15" fill="rgb(220,74,14)" fg:x="442" fg:w="81"/><text x="3.9824%" y="751.50"></text></g><g><title>ksys_write (81 samples, 0.69%)</title><rect x="3.7681%" y="725" width="0.6905%" height="15" fill="rgb(223,155,43)" fg:x="442" fg:w="81"/><text x="3.9824%" y="735.50"></text></g><g><title>vfs_write (81 samples, 0.69%)</title><rect x="3.7681%" y="709" width="0.6905%" height="15" fill="rgb(216,184,13)" fg:x="442" fg:w="81"/><text x="3.9824%" y="719.50"></text></g><g><title>native_read_msr (10 samples, 0.09%)</title><rect x="4.4757%" y="629" width="0.0853%" height="15" fill="rgb(218,43,9)" fg:x="525" fg:w="10"/><text x="4.6900%" y="639.50"></text></g><g><title>__perf_event_task_sched_out (11 samples, 0.09%)</title><rect x="4.4757%" y="677" width="0.0938%" height="15" fill="rgb(206,30,45)" fg:x="525" fg:w="11"/><text x="4.6900%" y="687.50"></text></g><g><title>amd_pmu_disable_all (11 samples, 0.09%)</title><rect x="4.4757%" y="661" width="0.0938%" height="15" fill="rgb(224,0,7)" fg:x="525" fg:w="11"/><text x="4.6900%" y="671.50"></text></g><g><title>x86_pmu_disable_all (11 samples, 0.09%)</title><rect x="4.4757%" y="645" width="0.0938%" height="15" fill="rgb(235,111,43)" fg:x="525" fg:w="11"/><text x="4.6900%" y="655.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.02%)</title><rect x="4.6121%" y="453" width="0.0171%" height="15" fill="rgb(246,15,53)" fg:x="541" fg:w="2"/><text x="4.8264%" y="463.50"></text></g><g><title>tcp_v4_early_demux (2 samples, 0.02%)</title><rect x="4.6121%" y="437" width="0.0171%" height="15" fill="rgb(225,190,1)" fg:x="541" fg:w="2"/><text x="4.8264%" y="447.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.02%)</title><rect x="4.6121%" y="421" width="0.0171%" height="15" fill="rgb(219,202,51)" fg:x="541" fg:w="2"/><text x="4.8264%" y="431.50"></text></g><g><title>asm_common_interrupt (7 samples, 0.06%)</title><rect x="4.5865%" y="661" width="0.0597%" height="15" fill="rgb(248,227,45)" fg:x="538" fg:w="7"/><text x="4.8008%" y="671.50"></text></g><g><title>common_interrupt (7 samples, 0.06%)</title><rect x="4.5865%" y="645" width="0.0597%" height="15" fill="rgb(250,67,32)" fg:x="538" fg:w="7"/><text x="4.8008%" y="655.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.05%)</title><rect x="4.5951%" y="629" width="0.0512%" height="15" fill="rgb(240,18,12)" fg:x="539" fg:w="6"/><text x="4.8093%" y="639.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.05%)</title><rect x="4.5951%" y="613" width="0.0512%" height="15" fill="rgb(223,89,53)" fg:x="539" fg:w="6"/><text x="4.8093%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (6 samples, 0.05%)</title><rect x="4.5951%" y="597" width="0.0512%" height="15" fill="rgb(208,184,36)" fg:x="539" fg:w="6"/><text x="4.8093%" y="607.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.05%)</title><rect x="4.5951%" y="581" width="0.0512%" height="15" fill="rgb(249,91,22)" fg:x="539" fg:w="6"/><text x="4.8093%" y="591.50"></text></g><g><title>net_rx_action (5 samples, 0.04%)</title><rect x="4.6036%" y="565" width="0.0426%" height="15" fill="rgb(231,11,52)" fg:x="540" fg:w="5"/><text x="4.8179%" y="575.50"></text></g><g><title>virtnet_poll (5 samples, 0.04%)</title><rect x="4.6036%" y="549" width="0.0426%" height="15" fill="rgb(213,187,12)" fg:x="540" fg:w="5"/><text x="4.8179%" y="559.50"></text></g><g><title>napi_complete_done (5 samples, 0.04%)</title><rect x="4.6036%" y="533" width="0.0426%" height="15" fill="rgb(226,216,13)" fg:x="540" fg:w="5"/><text x="4.8179%" y="543.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="4.6121%" y="517" width="0.0341%" height="15" fill="rgb(216,153,44)" fg:x="541" fg:w="4"/><text x="4.8264%" y="527.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="4.6121%" y="501" width="0.0341%" height="15" fill="rgb(227,176,26)" fg:x="541" fg:w="4"/><text x="4.8264%" y="511.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="4.6121%" y="485" width="0.0341%" height="15" fill="rgb(215,38,16)" fg:x="541" fg:w="4"/><text x="4.8264%" y="495.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="4.6121%" y="469" width="0.0341%" height="15" fill="rgb(207,166,9)" fg:x="541" fg:w="4"/><text x="4.8264%" y="479.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="4.6292%" y="453" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="543" fg:w="2"/><text x="4.8434%" y="463.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="4.6292%" y="437" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="543" fg:w="2"/><text x="4.8434%" y="447.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="4.6292%" y="421" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="543" fg:w="2"/><text x="4.8434%" y="431.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="4.6292%" y="405" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="543" fg:w="2"/><text x="4.8434%" y="415.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="4.6292%" y="389" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="543" fg:w="2"/><text x="4.8434%" y="399.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="4.6292%" y="373" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="543" fg:w="2"/><text x="4.8434%" y="383.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="4.6292%" y="357" width="0.0171%" height="15" fill="rgb(226,88,38)" fg:x="543" fg:w="2"/><text x="4.8434%" y="367.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="4.6292%" y="341" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="543" fg:w="2"/><text x="4.8434%" y="351.50"></text></g><g><title>finish_task_switch (10 samples, 0.09%)</title><rect x="4.5695%" y="677" width="0.0853%" height="15" fill="rgb(214,214,33)" fg:x="536" fg:w="10"/><text x="4.7838%" y="687.50"></text></g><g><title>pick_next_task_fair (3 samples, 0.03%)</title><rect x="4.6547%" y="677" width="0.0256%" height="15" fill="rgb(247,213,54)" fg:x="546" fg:w="3"/><text x="4.8690%" y="687.50"></text></g><g><title>set_next_entity (2 samples, 0.02%)</title><rect x="4.6633%" y="661" width="0.0171%" height="15" fill="rgb(246,169,49)" fg:x="547" fg:w="2"/><text x="4.8775%" y="671.50"></text></g><g><title>schedule (29 samples, 0.25%)</title><rect x="4.4587%" y="709" width="0.2472%" height="15" fill="rgb(213,215,35)" fg:x="523" fg:w="29"/><text x="4.6729%" y="719.50"></text></g><g><title>__schedule (29 samples, 0.25%)</title><rect x="4.4587%" y="693" width="0.2472%" height="15" fill="rgb(207,40,26)" fg:x="523" fg:w="29"/><text x="4.6729%" y="703.50"></text></g><g><title>psi_task_switch (3 samples, 0.03%)</title><rect x="4.6803%" y="677" width="0.0256%" height="15" fill="rgb(233,176,51)" fg:x="549" fg:w="3"/><text x="4.8946%" y="687.50"></text></g><g><title>psi_group_change (3 samples, 0.03%)</title><rect x="4.6803%" y="661" width="0.0256%" height="15" fill="rgb(214,74,3)" fg:x="549" fg:w="3"/><text x="4.8946%" y="671.50"></text></g><g><title>record_times (2 samples, 0.02%)</title><rect x="4.6888%" y="645" width="0.0171%" height="15" fill="rgb(235,137,9)" fg:x="550" fg:w="2"/><text x="4.9031%" y="655.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.02%)</title><rect x="4.6888%" y="629" width="0.0171%" height="15" fill="rgb(217,142,15)" fg:x="550" fg:w="2"/><text x="4.9031%" y="639.50"></text></g><g><title>sched_clock (2 samples, 0.02%)</title><rect x="4.6888%" y="613" width="0.0171%" height="15" fill="rgb(234,150,37)" fg:x="550" fg:w="2"/><text x="4.9031%" y="623.50"></text></g><g><title>kvm_sched_clock_read (2 samples, 0.02%)</title><rect x="4.6888%" y="597" width="0.0171%" height="15" fill="rgb(248,187,27)" fg:x="550" fg:w="2"/><text x="4.9031%" y="607.50"></text></g><g><title>pvclock_clocksource_read (2 samples, 0.02%)</title><rect x="4.6888%" y="581" width="0.0171%" height="15" fill="rgb(246,59,10)" fg:x="550" fg:w="2"/><text x="4.9031%" y="591.50"></text></g><g><title>_IO_file_overflow (114 samples, 0.97%)</title><rect x="3.7425%" y="837" width="0.9719%" height="15" fill="rgb(248,85,26)" fg:x="439" fg:w="114"/><text x="3.9568%" y="847.50"></text></g><g><title>_IO_do_write (114 samples, 0.97%)</title><rect x="3.7425%" y="821" width="0.9719%" height="15" fill="rgb(247,226,32)" fg:x="439" fg:w="114"/><text x="3.9568%" y="831.50"></text></g><g><title>[libc-2.31.so] (113 samples, 0.96%)</title><rect x="3.7511%" y="805" width="0.9633%" height="15" fill="rgb(247,113,52)" fg:x="440" fg:w="113"/><text x="3.9654%" y="815.50"></text></g><g><title>_IO_file_write (113 samples, 0.96%)</title><rect x="3.7511%" y="789" width="0.9633%" height="15" fill="rgb(222,148,11)" fg:x="440" fg:w="113"/><text x="3.9654%" y="799.50"></text></g><g><title>__write (112 samples, 0.95%)</title><rect x="3.7596%" y="773" width="0.9548%" height="15" fill="rgb(227,101,21)" fg:x="441" fg:w="112"/><text x="3.9739%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (111 samples, 0.95%)</title><rect x="3.7681%" y="757" width="0.9463%" height="15" fill="rgb(205,226,15)" fg:x="442" fg:w="111"/><text x="3.9824%" y="767.50"></text></g><g><title>syscall_exit_to_user_mode (30 samples, 0.26%)</title><rect x="4.4587%" y="741" width="0.2558%" height="15" fill="rgb(215,101,28)" fg:x="523" fg:w="30"/><text x="4.6729%" y="751.50"></text></g><g><title>exit_to_user_mode_prepare (30 samples, 0.26%)</title><rect x="4.4587%" y="725" width="0.2558%" height="15" fill="rgb(240,77,26)" fg:x="523" fg:w="30"/><text x="4.6729%" y="735.50"></text></g><g><title>std::endl&lt;char, std::char_traits&lt;char&gt; &gt; (115 samples, 0.98%)</title><rect x="3.7425%" y="869" width="0.9804%" height="15" fill="rgb(246,112,30)" fg:x="439" fg:w="115"/><text x="3.9568%" y="879.50"></text></g><g><title>std::ostream::put (115 samples, 0.98%)</title><rect x="3.7425%" y="853" width="0.9804%" height="15" fill="rgb(226,61,44)" fg:x="439" fg:w="115"/><text x="3.9568%" y="863.50"></text></g><g><title>std::ostream::flush (2 samples, 0.02%)</title><rect x="4.7485%" y="869" width="0.0171%" height="15" fill="rgb(232,177,40)" fg:x="557" fg:w="2"/><text x="4.9628%" y="879.50"></text></g><g><title>__gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::sync (2 samples, 0.02%)</title><rect x="4.7485%" y="853" width="0.0171%" height="15" fill="rgb(253,40,40)" fg:x="557" fg:w="2"/><text x="4.9628%" y="863.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (2 samples, 0.02%)</title><rect x="4.7656%" y="853" width="0.0171%" height="15" fill="rgb(230,13,26)" fg:x="559" fg:w="2"/><text x="4.9798%" y="863.50"></text></g><g><title>Http::processFile (502 samples, 4.28%)</title><rect x="0.5286%" y="885" width="4.2796%" height="15" fill="rgb(253,96,38)" fg:x="62" fg:w="502"/><text x="0.7428%" y="895.50">Http::..</text></g><g><title>toString&lt;unsigned long&gt; (5 samples, 0.04%)</title><rect x="4.7656%" y="869" width="0.0426%" height="15" fill="rgb(226,165,29)" fg:x="559" fg:w="5"/><text x="4.9798%" y="879.50"></text></g><g><title>std::ostream::_M_insert&lt;unsigned long&gt; (2 samples, 0.02%)</title><rect x="4.7911%" y="853" width="0.0171%" height="15" fill="rgb(226,22,13)" fg:x="562" fg:w="2"/><text x="5.0054%" y="863.50"></text></g><g><title>Log::getLevel (2 samples, 0.02%)</title><rect x="4.8082%" y="885" width="0.0171%" height="15" fill="rgb(214,0,25)" fg:x="564" fg:w="2"/><text x="5.0225%" y="895.50"></text></g><g><title>Request::getMethod[abi:cxx11] (2 samples, 0.02%)</title><rect x="4.8252%" y="885" width="0.0171%" height="15" fill="rgb(241,10,47)" fg:x="566" fg:w="2"/><text x="5.0395%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="4.8252%" y="869" width="0.0171%" height="15" fill="rgb(254,182,12)" fg:x="566" fg:w="2"/><text x="5.0395%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.02%)</title><rect x="4.8593%" y="853" width="0.0171%" height="15" fill="rgb(244,92,22)" fg:x="570" fg:w="2"/><text x="5.0736%" y="863.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="4.8593%" y="837" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="570" fg:w="2"/><text x="5.0736%" y="847.50"></text></g><g><title>Uri::pathOutOfBound (4 samples, 0.03%)</title><rect x="4.8508%" y="869" width="0.0341%" height="15" fill="rgb(218,183,48)" fg:x="569" fg:w="4"/><text x="5.0651%" y="879.50"></text></g><g><title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (2 samples, 0.02%)</title><rect x="4.8849%" y="805" width="0.0171%" height="15" fill="rgb(223,36,30)" fg:x="573" fg:w="2"/><text x="5.0992%" y="815.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (3 samples, 0.03%)</title><rect x="4.8849%" y="837" width="0.0256%" height="15" fill="rgb(243,60,52)" fg:x="573" fg:w="3"/><text x="5.0992%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (3 samples, 0.03%)</title><rect x="4.8849%" y="821" width="0.0256%" height="15" fill="rgb(206,58,30)" fg:x="573" fg:w="3"/><text x="5.0992%" y="831.50"></text></g><g><title>Request::isValid (9 samples, 0.08%)</title><rect x="4.8423%" y="885" width="0.0767%" height="15" fill="rgb(210,87,46)" fg:x="568" fg:w="9"/><text x="5.0566%" y="895.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (4 samples, 0.03%)</title><rect x="4.8849%" y="869" width="0.0341%" height="15" fill="rgb(251,39,6)" fg:x="573" fg:w="4"/><text x="5.0992%" y="879.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (4 samples, 0.03%)</title><rect x="4.8849%" y="853" width="0.0341%" height="15" fill="rgb(215,30,0)" fg:x="573" fg:w="4"/><text x="5.0992%" y="863.50"></text></g><g><title>percentDecode (6 samples, 0.05%)</title><rect x="4.9361%" y="869" width="0.0512%" height="15" fill="rgb(216,181,17)" fg:x="579" fg:w="6"/><text x="5.1503%" y="879.50"></text></g><g><title>std::allocator&lt;char&gt;::allocator (2 samples, 0.02%)</title><rect x="4.9702%" y="853" width="0.0171%" height="15" fill="rgb(215,89,36)" fg:x="583" fg:w="2"/><text x="5.1844%" y="863.50"></text></g><g><title>Uri::decode (9 samples, 0.08%)</title><rect x="4.9190%" y="885" width="0.0767%" height="15" fill="rgb(233,44,47)" fg:x="577" fg:w="9"/><text x="5.1333%" y="895.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_lower_bound (3 samples, 0.03%)</title><rect x="5.0128%" y="805" width="0.0256%" height="15" fill="rgb(246,72,10)" fg:x="588" fg:w="3"/><text x="5.2271%" y="815.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (3 samples, 0.03%)</title><rect x="5.0128%" y="789" width="0.0256%" height="15" fill="rgb(228,56,32)" fg:x="588" fg:w="3"/><text x="5.2271%" y="799.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.03%)</title><rect x="5.0128%" y="773" width="0.0256%" height="15" fill="rgb(241,103,2)" fg:x="588" fg:w="3"/><text x="5.2271%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3 samples, 0.03%)</title><rect x="5.0128%" y="757" width="0.0256%" height="15" fill="rgb(212,2,49)" fg:x="588" fg:w="3"/><text x="5.2271%" y="767.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="5.0213%" y="741" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="589" fg:w="2"/><text x="5.2356%" y="751.50"></text></g><g><title>Context::exists (4 samples, 0.03%)</title><rect x="5.0128%" y="853" width="0.0341%" height="15" fill="rgb(247,57,9)" fg:x="588" fg:w="4"/><text x="5.2271%" y="863.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (4 samples, 0.03%)</title><rect x="5.0128%" y="837" width="0.0341%" height="15" fill="rgb(242,154,52)" fg:x="588" fg:w="4"/><text x="5.2271%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (4 samples, 0.03%)</title><rect x="5.0128%" y="821" width="0.0341%" height="15" fill="rgb(207,227,6)" fg:x="588" fg:w="4"/><text x="5.2271%" y="831.50"></text></g><g><title>Context::getDirective (6 samples, 0.05%)</title><rect x="5.0128%" y="869" width="0.0512%" height="15" fill="rgb(251,123,38)" fg:x="588" fg:w="6"/><text x="5.2271%" y="879.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator[] (2 samples, 0.02%)</title><rect x="5.0469%" y="853" width="0.0171%" height="15" fill="rgb(241,90,24)" fg:x="592" fg:w="2"/><text x="5.2612%" y="863.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::lower_bound (2 samples, 0.02%)</title><rect x="5.0469%" y="837" width="0.0171%" height="15" fill="rgb(236,33,33)" fg:x="592" fg:w="2"/><text x="5.2612%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::lower_bound (2 samples, 0.02%)</title><rect x="5.0469%" y="821" width="0.0171%" height="15" fill="rgb(234,73,1)" fg:x="592" fg:w="2"/><text x="5.2612%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (2 samples, 0.02%)</title><rect x="5.0469%" y="805" width="0.0171%" height="15" fill="rgb(237,13,3)" fg:x="592" fg:w="2"/><text x="5.2612%" y="815.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2 samples, 0.02%)</title><rect x="5.0469%" y="789" width="0.0171%" height="15" fill="rgb(228,56,32)" fg:x="592" fg:w="2"/><text x="5.2612%" y="799.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.02%)</title><rect x="5.0469%" y="773" width="0.0171%" height="15" fill="rgb(241,103,2)" fg:x="592" fg:w="2"/><text x="5.2612%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.02%)</title><rect x="5.0469%" y="757" width="0.0171%" height="15" fill="rgb(212,2,49)" fg:x="592" fg:w="2"/><text x="5.2612%" y="767.50"></text></g><g><title>VirtualHost::getAddress[abi:cxx11] (8 samples, 0.07%)</title><rect x="5.0043%" y="885" width="0.0682%" height="15" fill="rgb(210,66,49)" fg:x="587" fg:w="8"/><text x="5.2185%" y="895.50"></text></g><g><title>Context::exists (2 samples, 0.02%)</title><rect x="5.1066%" y="869" width="0.0171%" height="15" fill="rgb(247,57,9)" fg:x="599" fg:w="2"/><text x="5.3209%" y="879.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (2 samples, 0.02%)</title><rect x="5.1066%" y="853" width="0.0171%" height="15" fill="rgb(242,154,52)" fg:x="599" fg:w="2"/><text x="5.3209%" y="863.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (2 samples, 0.02%)</title><rect x="5.1066%" y="837" width="0.0171%" height="15" fill="rgb(207,227,6)" fg:x="599" fg:w="2"/><text x="5.3209%" y="847.50"></text></g><g><title>Context::exists (2 samples, 0.02%)</title><rect x="5.1236%" y="853" width="0.0171%" height="15" fill="rgb(247,57,9)" fg:x="601" fg:w="2"/><text x="5.3379%" y="863.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (2 samples, 0.02%)</title><rect x="5.1236%" y="837" width="0.0171%" height="15" fill="rgb(242,154,52)" fg:x="601" fg:w="2"/><text x="5.3379%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (2 samples, 0.02%)</title><rect x="5.1236%" y="821" width="0.0171%" height="15" fill="rgb(207,227,6)" fg:x="601" fg:w="2"/><text x="5.3379%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_lower_bound (2 samples, 0.02%)</title><rect x="5.1236%" y="805" width="0.0171%" height="15" fill="rgb(246,72,10)" fg:x="601" fg:w="2"/><text x="5.3379%" y="815.50"></text></g><g><title>Context::getContext (9 samples, 0.08%)</title><rect x="5.1236%" y="869" width="0.0767%" height="15" fill="rgb(240,0,33)" fg:x="601" fg:w="9"/><text x="5.3379%" y="879.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt; &gt;::operator[] (6 samples, 0.05%)</title><rect x="5.1492%" y="853" width="0.0512%" height="15" fill="rgb(226,141,48)" fg:x="604" fg:w="6"/><text x="5.3635%" y="863.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt; &gt;::lower_bound (4 samples, 0.03%)</title><rect x="5.1662%" y="837" width="0.0341%" height="15" fill="rgb(225,35,17)" fg:x="606" fg:w="4"/><text x="5.3805%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt; &gt;::lower_bound (3 samples, 0.03%)</title><rect x="5.1748%" y="821" width="0.0256%" height="15" fill="rgb(208,224,50)" fg:x="607" fg:w="3"/><text x="5.3891%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;Context, std::allocator&lt;Context&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (2 samples, 0.02%)</title><rect x="5.1833%" y="805" width="0.0171%" height="15" fill="rgb(226,133,54)" fg:x="608" fg:w="2"/><text x="5.3976%" y="815.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="5.2430%" y="853" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="615" fg:w="2"/><text x="5.4573%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.03%)</title><rect x="5.2344%" y="869" width="0.0341%" height="15" fill="rgb(254,182,12)" fg:x="614" fg:w="4"/><text x="5.4487%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13 samples, 0.11%)</title><rect x="5.2685%" y="869" width="0.1108%" height="15" fill="rgb(244,92,22)" fg:x="618" fg:w="13"/><text x="5.4828%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.02%)</title><rect x="5.3879%" y="869" width="0.0171%" height="15" fill="rgb(216,41,4)" fg:x="632" fg:w="2"/><text x="5.6022%" y="879.50"></text></g><g><title>VirtualHost::matchLocation (49 samples, 0.42%)</title><rect x="5.0725%" y="885" width="0.4177%" height="15" fill="rgb(243,79,28)" fg:x="595" fg:w="49"/><text x="5.2867%" y="895.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator[] (7 samples, 0.06%)</title><rect x="5.4305%" y="869" width="0.0597%" height="15" fill="rgb(250,181,37)" fg:x="637" fg:w="7"/><text x="5.6448%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (3 samples, 0.03%)</title><rect x="5.4987%" y="885" width="0.0256%" height="15" fill="rgb(216,50,33)" fg:x="645" fg:w="3"/><text x="5.7130%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (3 samples, 0.03%)</title><rect x="5.4987%" y="869" width="0.0256%" height="15" fill="rgb(250,46,35)" fg:x="645" fg:w="3"/><text x="5.7130%" y="879.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="5.5072%" y="853" width="0.0171%" height="15" fill="rgb(214,91,1)" fg:x="646" fg:w="2"/><text x="5.7215%" y="863.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="5.5072%" y="837" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="646" fg:w="2"/><text x="5.7215%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.02%)</title><rect x="5.5243%" y="885" width="0.0171%" height="15" fill="rgb(240,176,52)" fg:x="648" fg:w="2"/><text x="5.7386%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4 samples, 0.03%)</title><rect x="5.5584%" y="869" width="0.0341%" height="15" fill="rgb(216,50,33)" fg:x="652" fg:w="4"/><text x="5.7727%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.03%)</title><rect x="5.5584%" y="853" width="0.0341%" height="15" fill="rgb(250,46,35)" fg:x="652" fg:w="4"/><text x="5.7727%" y="863.50"></text></g><g><title>Http::processRequest (620 samples, 5.29%)</title><rect x="0.3410%" y="901" width="5.2856%" height="15" fill="rgb(223,169,38)" fg:x="40" fg:w="620"/><text x="0.5553%" y="911.50">Http::pr..</text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8 samples, 0.07%)</title><rect x="5.5584%" y="885" width="0.0682%" height="15" fill="rgb(226,32,40)" fg:x="652" fg:w="8"/><text x="5.7727%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.03%)</title><rect x="5.5925%" y="869" width="0.0341%" height="15" fill="rgb(254,182,12)" fg:x="656" fg:w="4"/><text x="5.8068%" y="879.50"></text></g><g><title>std::distance&lt;char*&gt; (2 samples, 0.02%)</title><rect x="5.6095%" y="853" width="0.0171%" height="15" fill="rgb(213,138,18)" fg:x="658" fg:w="2"/><text x="5.8238%" y="863.50"></text></g><g><title>__gnu_cxx::operator!=&lt;IFileDescriptor**, std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="5.6777%" y="853" width="0.0171%" height="15" fill="rgb(237,157,14)" fg:x="666" fg:w="2"/><text x="5.8920%" y="863.50"></text></g><g><title>AConnection::send (9 samples, 0.08%)</title><rect x="5.6436%" y="885" width="0.0767%" height="15" fill="rgb(252,37,44)" fg:x="662" fg:w="9"/><text x="5.8579%" y="895.50"></text></g><g><title>Poll::addPollEvent (8 samples, 0.07%)</title><rect x="5.6522%" y="869" width="0.0682%" height="15" fill="rgb(243,35,49)" fg:x="663" fg:w="8"/><text x="5.8665%" y="879.50"></text></g><g><title>std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt;::end (2 samples, 0.02%)</title><rect x="5.7033%" y="853" width="0.0171%" height="15" fill="rgb(210,85,12)" fg:x="669" fg:w="2"/><text x="5.9176%" y="863.50"></text></g><g><title>__fdget_pos (2 samples, 0.02%)</title><rect x="5.7630%" y="789" width="0.0171%" height="15" fill="rgb(205,61,45)" fg:x="676" fg:w="2"/><text x="5.9773%" y="799.50"></text></g><g><title>__fget_light (2 samples, 0.02%)</title><rect x="5.7630%" y="773" width="0.0171%" height="15" fill="rgb(243,103,32)" fg:x="676" fg:w="2"/><text x="5.9773%" y="783.50"></text></g><g><title>file_modified (3 samples, 0.03%)</title><rect x="5.8056%" y="741" width="0.0256%" height="15" fill="rgb(231,34,43)" fg:x="681" fg:w="3"/><text x="6.0199%" y="751.50"></text></g><g><title>file_remove_privs (3 samples, 0.03%)</title><rect x="5.8056%" y="725" width="0.0256%" height="15" fill="rgb(252,38,21)" fg:x="681" fg:w="3"/><text x="6.0199%" y="735.50"></text></g><g><title>file_update_time (5 samples, 0.04%)</title><rect x="5.8312%" y="741" width="0.0426%" height="15" fill="rgb(237,12,27)" fg:x="684" fg:w="5"/><text x="6.0455%" y="751.50"></text></g><g><title>generic_update_time (4 samples, 0.03%)</title><rect x="5.8397%" y="725" width="0.0341%" height="15" fill="rgb(212,0,0)" fg:x="685" fg:w="4"/><text x="6.0540%" y="735.50"></text></g><g><title>__mark_inode_dirty (4 samples, 0.03%)</title><rect x="5.8397%" y="709" width="0.0341%" height="15" fill="rgb(212,91,54)" fg:x="685" fg:w="4"/><text x="6.0540%" y="719.50"></text></g><g><title>ext4_dirty_inode (2 samples, 0.02%)</title><rect x="5.8568%" y="693" width="0.0171%" height="15" fill="rgb(235,194,15)" fg:x="687" fg:w="2"/><text x="6.0711%" y="703.50"></text></g><g><title>__ext4_mark_inode_dirty (2 samples, 0.02%)</title><rect x="5.8568%" y="677" width="0.0171%" height="15" fill="rgb(250,159,10)" fg:x="687" fg:w="2"/><text x="6.0711%" y="687.50"></text></g><g><title>balance_dirty_pages_ratelimited (3 samples, 0.03%)</title><rect x="5.8909%" y="725" width="0.0256%" height="15" fill="rgb(221,121,40)" fg:x="691" fg:w="3"/><text x="6.1052%" y="735.50"></text></g><g><title>__radix_tree_lookup (3 samples, 0.03%)</title><rect x="5.8909%" y="709" width="0.0256%" height="15" fill="rgb(250,213,26)" fg:x="691" fg:w="3"/><text x="6.1052%" y="719.50"></text></g><g><title>__ext4_journal_start_sb (2 samples, 0.02%)</title><rect x="5.9506%" y="709" width="0.0171%" height="15" fill="rgb(251,66,45)" fg:x="698" fg:w="2"/><text x="6.1648%" y="719.50"></text></g><g><title>ext4_block_write_begin (2 samples, 0.02%)</title><rect x="5.9847%" y="709" width="0.0171%" height="15" fill="rgb(218,63,41)" fg:x="702" fg:w="2"/><text x="6.1989%" y="719.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.03%)</title><rect x="6.0017%" y="677" width="0.0256%" height="15" fill="rgb(245,49,10)" fg:x="704" fg:w="3"/><text x="6.2160%" y="687.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.02%)</title><rect x="6.0102%" y="661" width="0.0171%" height="15" fill="rgb(246,35,53)" fg:x="705" fg:w="2"/><text x="6.2245%" y="671.50"></text></g><g><title>pagecache_get_page (5 samples, 0.04%)</title><rect x="6.0017%" y="693" width="0.0426%" height="15" fill="rgb(254,146,25)" fg:x="704" fg:w="5"/><text x="6.2160%" y="703.50"></text></g><g><title>add_to_page_cache_lru (2 samples, 0.02%)</title><rect x="6.0273%" y="677" width="0.0171%" height="15" fill="rgb(223,55,45)" fg:x="707" fg:w="2"/><text x="6.2416%" y="687.50"></text></g><g><title>grab_cache_page_write_begin (6 samples, 0.05%)</title><rect x="6.0017%" y="709" width="0.0512%" height="15" fill="rgb(221,143,40)" fg:x="704" fg:w="6"/><text x="6.2160%" y="719.50"></text></g><g><title>ext4_da_write_begin (17 samples, 0.14%)</title><rect x="5.9165%" y="725" width="0.1449%" height="15" fill="rgb(235,31,43)" fg:x="694" fg:w="17"/><text x="6.1307%" y="735.50"></text></g><g><title>ext4_mark_iloc_dirty (5 samples, 0.04%)</title><rect x="6.1040%" y="645" width="0.0426%" height="15" fill="rgb(236,133,21)" fg:x="716" fg:w="5"/><text x="6.3183%" y="655.50"></text></g><g><title>map_id_up (2 samples, 0.02%)</title><rect x="6.1296%" y="629" width="0.0171%" height="15" fill="rgb(217,119,10)" fg:x="719" fg:w="2"/><text x="6.3439%" y="639.50"></text></g><g><title>__find_get_block (4 samples, 0.03%)</title><rect x="6.1552%" y="581" width="0.0341%" height="15" fill="rgb(254,214,1)" fg:x="722" fg:w="4"/><text x="6.3694%" y="591.50"></text></g><g><title>__getblk_gfp (5 samples, 0.04%)</title><rect x="6.1552%" y="597" width="0.0426%" height="15" fill="rgb(223,110,34)" fg:x="722" fg:w="5"/><text x="6.3694%" y="607.50"></text></g><g><title>__mark_inode_dirty (15 samples, 0.13%)</title><rect x="6.0784%" y="693" width="0.1279%" height="15" fill="rgb(212,91,54)" fg:x="713" fg:w="15"/><text x="6.2927%" y="703.50"></text></g><g><title>ext4_dirty_inode (12 samples, 0.10%)</title><rect x="6.1040%" y="677" width="0.1023%" height="15" fill="rgb(235,194,15)" fg:x="716" fg:w="12"/><text x="6.3183%" y="687.50"></text></g><g><title>__ext4_mark_inode_dirty (12 samples, 0.10%)</title><rect x="6.1040%" y="661" width="0.1023%" height="15" fill="rgb(250,159,10)" fg:x="716" fg:w="12"/><text x="6.3183%" y="671.50"></text></g><g><title>ext4_reserve_inode_write (7 samples, 0.06%)</title><rect x="6.1466%" y="645" width="0.0597%" height="15" fill="rgb(232,18,0)" fg:x="721" fg:w="7"/><text x="6.3609%" y="655.50"></text></g><g><title>ext4_get_inode_loc (7 samples, 0.06%)</title><rect x="6.1466%" y="629" width="0.0597%" height="15" fill="rgb(251,31,11)" fg:x="721" fg:w="7"/><text x="6.3609%" y="639.50"></text></g><g><title>__ext4_get_inode_loc (6 samples, 0.05%)</title><rect x="6.1552%" y="613" width="0.0512%" height="15" fill="rgb(231,98,31)" fg:x="722" fg:w="6"/><text x="6.3694%" y="623.50"></text></g><g><title>ext4_da_write_end (18 samples, 0.15%)</title><rect x="6.0614%" y="725" width="0.1535%" height="15" fill="rgb(230,92,14)" fg:x="711" fg:w="18"/><text x="6.2757%" y="735.50"></text></g><g><title>generic_write_end (17 samples, 0.14%)</title><rect x="6.0699%" y="709" width="0.1449%" height="15" fill="rgb(207,107,21)" fg:x="712" fg:w="17"/><text x="6.2842%" y="719.50"></text></g><g><title>generic_perform_write (44 samples, 0.38%)</title><rect x="5.8738%" y="741" width="0.3751%" height="15" fill="rgb(218,161,27)" fg:x="689" fg:w="44"/><text x="6.0881%" y="751.50"></text></g><g><title>iov_iter_copy_from_user_atomic (4 samples, 0.03%)</title><rect x="6.2148%" y="725" width="0.0341%" height="15" fill="rgb(233,17,49)" fg:x="729" fg:w="4"/><text x="6.4291%" y="735.50"></text></g><g><title>ext4_buffered_write_iter (54 samples, 0.46%)</title><rect x="5.7971%" y="757" width="0.4604%" height="15" fill="rgb(214,47,26)" fg:x="680" fg:w="54"/><text x="6.0114%" y="767.50"></text></g><g><title>new_sync_write (55 samples, 0.47%)</title><rect x="5.7971%" y="773" width="0.4689%" height="15" fill="rgb(220,167,51)" fg:x="680" fg:w="55"/><text x="6.0114%" y="783.50"></text></g><g><title>__write (62 samples, 0.53%)</title><rect x="5.7460%" y="853" width="0.5286%" height="15" fill="rgb(227,101,21)" fg:x="674" fg:w="62"/><text x="5.9602%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (61 samples, 0.52%)</title><rect x="5.7545%" y="837" width="0.5200%" height="15" fill="rgb(205,226,15)" fg:x="675" fg:w="61"/><text x="5.9688%" y="847.50"></text></g><g><title>do_syscall_64 (61 samples, 0.52%)</title><rect x="5.7545%" y="821" width="0.5200%" height="15" fill="rgb(220,74,14)" fg:x="675" fg:w="61"/><text x="5.9688%" y="831.50"></text></g><g><title>ksys_write (60 samples, 0.51%)</title><rect x="5.7630%" y="805" width="0.5115%" height="15" fill="rgb(223,155,43)" fg:x="676" fg:w="60"/><text x="5.9773%" y="815.50"></text></g><g><title>vfs_write (58 samples, 0.49%)</title><rect x="5.7801%" y="789" width="0.4945%" height="15" fill="rgb(216,184,13)" fg:x="678" fg:w="58"/><text x="5.9943%" y="799.50"></text></g><g><title>File::write (64 samples, 0.55%)</title><rect x="5.7374%" y="869" width="0.5456%" height="15" fill="rgb(221,56,14)" fg:x="673" fg:w="64"/><text x="5.9517%" y="879.50"></text></g><g><title>getTime (2 samples, 0.02%)</title><rect x="6.3001%" y="869" width="0.0171%" height="15" fill="rgb(245,134,19)" fg:x="739" fg:w="2"/><text x="6.5144%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (2 samples, 0.02%)</title><rect x="6.3342%" y="853" width="0.0171%" height="15" fill="rgb(236,91,4)" fg:x="743" fg:w="2"/><text x="6.5485%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.02%)</title><rect x="6.3342%" y="837" width="0.0171%" height="15" fill="rgb(250,46,35)" fg:x="743" fg:w="2"/><text x="6.5485%" y="847.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="6.3342%" y="821" width="0.0171%" height="15" fill="rgb(214,91,1)" fg:x="743" fg:w="2"/><text x="6.5485%" y="831.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="6.3342%" y="805" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="743" fg:w="2"/><text x="6.5485%" y="815.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="6.3853%" y="837" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="749" fg:w="3"/><text x="6.5996%" y="847.50"></text></g><g><title>highlight (13 samples, 0.11%)</title><rect x="6.3171%" y="869" width="0.1108%" height="15" fill="rgb(225,68,2)" fg:x="741" fg:w="13"/><text x="6.5314%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_of (9 samples, 0.08%)</title><rect x="6.3512%" y="853" width="0.0767%" height="15" fill="rgb(212,119,18)" fg:x="745" fg:w="9"/><text x="6.5655%" y="863.50"></text></g><g><title>memchr@plt (2 samples, 0.02%)</title><rect x="6.4109%" y="837" width="0.0171%" height="15" fill="rgb(235,190,52)" fg:x="752" fg:w="2"/><text x="6.6252%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="6.4280%" y="869" width="0.0171%" height="15" fill="rgb(254,182,12)" fg:x="754" fg:w="2"/><text x="6.6422%" y="879.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="6.4280%" y="853" width="0.0171%" height="15" fill="rgb(214,91,1)" fg:x="754" fg:w="2"/><text x="6.6422%" y="863.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="6.4280%" y="837" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="754" fg:w="2"/><text x="6.6422%" y="847.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="6.4962%" y="821" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="762" fg:w="2"/><text x="6.7104%" y="831.50"></text></g><g><title>_IO_default_xsputn (3 samples, 0.03%)</title><rect x="6.5132%" y="821" width="0.0256%" height="15" fill="rgb(222,74,13)" fg:x="764" fg:w="3"/><text x="6.7275%" y="831.50"></text></g><g><title>_IO_file_overflow (2 samples, 0.02%)</title><rect x="6.5217%" y="805" width="0.0171%" height="15" fill="rgb(248,85,26)" fg:x="765" fg:w="2"/><text x="6.7360%" y="815.50"></text></g><g><title>__fdget_pos (2 samples, 0.02%)</title><rect x="6.5644%" y="709" width="0.0171%" height="15" fill="rgb(205,61,45)" fg:x="770" fg:w="2"/><text x="6.7787%" y="719.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="6.7178%" y="517" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="788" fg:w="2"/><text x="6.9321%" y="527.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="6.7178%" y="501" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="788" fg:w="2"/><text x="6.9321%" y="511.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="6.7178%" y="485" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="788" fg:w="2"/><text x="6.9321%" y="495.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="6.7178%" y="469" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="788" fg:w="2"/><text x="6.9321%" y="479.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="6.7178%" y="453" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="788" fg:w="2"/><text x="6.9321%" y="463.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="6.7178%" y="437" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="788" fg:w="2"/><text x="6.9321%" y="447.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="6.7178%" y="421" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="788" fg:w="2"/><text x="6.9321%" y="431.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="6.7178%" y="405" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="788" fg:w="2"/><text x="6.9321%" y="415.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="6.7178%" y="389" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="788" fg:w="2"/><text x="6.9321%" y="399.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="6.7178%" y="373" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="788" fg:w="2"/><text x="6.9321%" y="383.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="6.7178%" y="357" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="788" fg:w="2"/><text x="6.9321%" y="367.50"></text></g><g><title>tcp_ack (2 samples, 0.02%)</title><rect x="6.7178%" y="341" width="0.0171%" height="15" fill="rgb(213,228,3)" fg:x="788" fg:w="2"/><text x="6.9321%" y="351.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="6.7178%" y="645" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="788" fg:w="3"/><text x="6.9321%" y="655.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="6.7178%" y="629" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="788" fg:w="3"/><text x="6.9321%" y="639.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="6.7178%" y="613" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="788" fg:w="3"/><text x="6.9321%" y="623.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="6.7178%" y="597" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="788" fg:w="3"/><text x="6.9321%" y="607.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="6.7178%" y="581" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="788" fg:w="3"/><text x="6.9321%" y="591.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="6.7178%" y="565" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="788" fg:w="3"/><text x="6.9321%" y="575.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="6.7178%" y="549" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="788" fg:w="3"/><text x="6.9321%" y="559.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="6.7178%" y="533" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="788" fg:w="3"/><text x="6.9321%" y="543.50"></text></g><g><title>__cgroup_account_cputime (2 samples, 0.02%)</title><rect x="6.9565%" y="501" width="0.0171%" height="15" fill="rgb(222,47,19)" fg:x="816" fg:w="2"/><text x="7.1708%" y="511.50"></text></g><g><title>update_curr (5 samples, 0.04%)</title><rect x="6.9480%" y="517" width="0.0426%" height="15" fill="rgb(242,65,24)" fg:x="815" fg:w="5"/><text x="7.1623%" y="527.50"></text></g><g><title>enqueue_task_fair (19 samples, 0.16%)</title><rect x="6.8627%" y="549" width="0.1620%" height="15" fill="rgb(252,79,15)" fg:x="805" fg:w="19"/><text x="7.0770%" y="559.50"></text></g><g><title>enqueue_entity (16 samples, 0.14%)</title><rect x="6.8883%" y="533" width="0.1364%" height="15" fill="rgb(206,193,49)" fg:x="808" fg:w="16"/><text x="7.1026%" y="543.50"></text></g><g><title>update_load_avg (4 samples, 0.03%)</title><rect x="6.9906%" y="517" width="0.0341%" height="15" fill="rgb(222,111,24)" fg:x="820" fg:w="4"/><text x="7.2049%" y="527.50"></text></g><g><title>ttwu_do_activate (25 samples, 0.21%)</title><rect x="6.8457%" y="565" width="0.2131%" height="15" fill="rgb(244,166,49)" fg:x="803" fg:w="25"/><text x="7.0600%" y="575.50"></text></g><g><title>psi_task_change (4 samples, 0.03%)</title><rect x="7.0247%" y="549" width="0.0341%" height="15" fill="rgb(214,87,45)" fg:x="824" fg:w="4"/><text x="7.2390%" y="559.50"></text></g><g><title>ttwu_do_wakeup (5 samples, 0.04%)</title><rect x="7.0588%" y="565" width="0.0426%" height="15" fill="rgb(220,201,44)" fg:x="828" fg:w="5"/><text x="7.2731%" y="575.50"></text></g><g><title>check_preempt_curr (4 samples, 0.03%)</title><rect x="7.0673%" y="549" width="0.0341%" height="15" fill="rgb(253,116,22)" fg:x="829" fg:w="4"/><text x="7.2816%" y="559.50"></text></g><g><title>check_preempt_wakeup (3 samples, 0.03%)</title><rect x="7.0759%" y="533" width="0.0256%" height="15" fill="rgb(225,77,38)" fg:x="830" fg:w="3"/><text x="7.2902%" y="543.50"></text></g><g><title>__queue_work (41 samples, 0.35%)</title><rect x="6.7775%" y="597" width="0.3495%" height="15" fill="rgb(228,111,53)" fg:x="795" fg:w="41"/><text x="6.9918%" y="607.50"></text></g><g><title>try_to_wake_up (39 samples, 0.33%)</title><rect x="6.7945%" y="581" width="0.3325%" height="15" fill="rgb(251,124,39)" fg:x="797" fg:w="39"/><text x="7.0088%" y="591.50"></text></g><g><title>update_rq_clock (2 samples, 0.02%)</title><rect x="7.1100%" y="565" width="0.0171%" height="15" fill="rgb(248,207,48)" fg:x="834" fg:w="2"/><text x="7.3243%" y="575.50"></text></g><g><title>queue_work_on (44 samples, 0.38%)</title><rect x="6.7775%" y="613" width="0.3751%" height="15" fill="rgb(224,62,31)" fg:x="795" fg:w="44"/><text x="6.9918%" y="623.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="7.1270%" y="597" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="836" fg:w="3"/><text x="7.3413%" y="607.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="7.1270%" y="581" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="836" fg:w="3"/><text x="7.3413%" y="591.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="7.1270%" y="565" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="836" fg:w="3"/><text x="7.3413%" y="575.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="7.1270%" y="549" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="836" fg:w="3"/><text x="7.3413%" y="559.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="7.1270%" y="533" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="836" fg:w="3"/><text x="7.3413%" y="543.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="7.1270%" y="517" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="836" fg:w="3"/><text x="7.3413%" y="527.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="7.1270%" y="501" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="836" fg:w="3"/><text x="7.3413%" y="511.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="7.1355%" y="485" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="837" fg:w="2"/><text x="7.3498%" y="495.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="7.1355%" y="469" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="837" fg:w="2"/><text x="7.3498%" y="479.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="7.1355%" y="453" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="837" fg:w="2"/><text x="7.3498%" y="463.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="7.1355%" y="437" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="837" fg:w="2"/><text x="7.3498%" y="447.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="7.1355%" y="421" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="837" fg:w="2"/><text x="7.3498%" y="431.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="7.1355%" y="405" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="837" fg:w="2"/><text x="7.3498%" y="415.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="7.1355%" y="389" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="837" fg:w="2"/><text x="7.3498%" y="399.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="7.1355%" y="373" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="837" fg:w="2"/><text x="7.3498%" y="383.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="7.1355%" y="357" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="837" fg:w="2"/><text x="7.3498%" y="367.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="7.1355%" y="341" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="837" fg:w="2"/><text x="7.3498%" y="351.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="7.1355%" y="325" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="837" fg:w="2"/><text x="7.3498%" y="335.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="7.1355%" y="309" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="837" fg:w="2"/><text x="7.3498%" y="319.50"></text></g><g><title>do_output_char (50 samples, 0.43%)</title><rect x="6.7434%" y="645" width="0.4263%" height="15" fill="rgb(228,220,0)" fg:x="791" fg:w="50"/><text x="6.9577%" y="655.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (48 samples, 0.41%)</title><rect x="6.7604%" y="629" width="0.4092%" height="15" fill="rgb(229,98,5)" fg:x="793" fg:w="48"/><text x="6.9747%" y="639.50"></text></g><g><title>tty_insert_flip_string_fixed_flag (2 samples, 0.02%)</title><rect x="7.1526%" y="613" width="0.0171%" height="15" fill="rgb(227,10,10)" fg:x="839" fg:w="2"/><text x="7.3669%" y="623.50"></text></g><g><title>native_read_msr (38 samples, 0.32%)</title><rect x="7.2549%" y="549" width="0.3240%" height="15" fill="rgb(218,43,9)" fg:x="851" fg:w="38"/><text x="7.4692%" y="559.50"></text></g><g><title>amd_pmu_disable_all (48 samples, 0.41%)</title><rect x="7.2464%" y="581" width="0.4092%" height="15" fill="rgb(224,0,7)" fg:x="850" fg:w="48"/><text x="7.4607%" y="591.50"></text></g><g><title>x86_pmu_disable_all (48 samples, 0.41%)</title><rect x="7.2464%" y="565" width="0.4092%" height="15" fill="rgb(235,111,43)" fg:x="850" fg:w="48"/><text x="7.4607%" y="575.50"></text></g><g><title>native_write_msr (9 samples, 0.08%)</title><rect x="7.5789%" y="549" width="0.0767%" height="15" fill="rgb(220,53,36)" fg:x="889" fg:w="9"/><text x="7.7931%" y="559.50"></text></g><g><title>__perf_event_task_sched_out (51 samples, 0.43%)</title><rect x="7.2293%" y="597" width="0.4348%" height="15" fill="rgb(206,30,45)" fg:x="848" fg:w="51"/><text x="7.4436%" y="607.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="7.6982%" y="581" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="903" fg:w="2"/><text x="7.9125%" y="591.50"></text></g><g><title>__handle_irq_event_percpu (3 samples, 0.03%)</title><rect x="7.7153%" y="501" width="0.0256%" height="15" fill="rgb(239,110,26)" fg:x="905" fg:w="3"/><text x="7.9295%" y="511.50"></text></g><g><title>vring_interrupt (3 samples, 0.03%)</title><rect x="7.7153%" y="485" width="0.0256%" height="15" fill="rgb(206,212,41)" fg:x="905" fg:w="3"/><text x="7.9295%" y="495.50"></text></g><g><title>handle_irq_event (5 samples, 0.04%)</title><rect x="7.7153%" y="517" width="0.0426%" height="15" fill="rgb(209,73,52)" fg:x="905" fg:w="5"/><text x="7.9295%" y="527.50"></text></g><g><title>asm_call_sysvec_on_stack (6 samples, 0.05%)</title><rect x="7.7153%" y="549" width="0.0512%" height="15" fill="rgb(208,184,36)" fg:x="905" fg:w="6"/><text x="7.9295%" y="559.50"></text></g><g><title>handle_edge_irq (6 samples, 0.05%)</title><rect x="7.7153%" y="533" width="0.0512%" height="15" fill="rgb(219,15,9)" fg:x="905" fg:w="6"/><text x="7.9295%" y="543.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.02%)</title><rect x="7.8261%" y="373" width="0.0171%" height="15" fill="rgb(246,15,53)" fg:x="918" fg:w="2"/><text x="8.0404%" y="383.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.03%)</title><rect x="7.8687%" y="229" width="0.0341%" height="15" fill="rgb(224,11,5)" fg:x="923" fg:w="4"/><text x="8.0830%" y="239.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.03%)</title><rect x="7.8687%" y="213" width="0.0341%" height="15" fill="rgb(219,227,11)" fg:x="923" fg:w="4"/><text x="8.0830%" y="223.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.03%)</title><rect x="7.8687%" y="197" width="0.0341%" height="15" fill="rgb(232,116,37)" fg:x="923" fg:w="4"/><text x="8.0830%" y="207.50"></text></g><g><title>__qdisc_run (4 samples, 0.03%)</title><rect x="7.8687%" y="181" width="0.0341%" height="15" fill="rgb(252,144,25)" fg:x="923" fg:w="4"/><text x="8.0830%" y="191.50"></text></g><g><title>sch_direct_xmit (3 samples, 0.03%)</title><rect x="7.8772%" y="165" width="0.0256%" height="15" fill="rgb(222,128,44)" fg:x="924" fg:w="3"/><text x="8.0915%" y="175.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.03%)</title><rect x="7.8772%" y="149" width="0.0256%" height="15" fill="rgb(251,86,39)" fg:x="924" fg:w="3"/><text x="8.0915%" y="159.50"></text></g><g><title>start_xmit (2 samples, 0.02%)</title><rect x="7.8858%" y="133" width="0.0171%" height="15" fill="rgb(211,140,13)" fg:x="925" fg:w="2"/><text x="8.1000%" y="143.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.05%)</title><rect x="7.8602%" y="245" width="0.0512%" height="15" fill="rgb(238,106,36)" fg:x="922" fg:w="6"/><text x="8.0745%" y="255.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.04%)</title><rect x="7.9113%" y="245" width="0.0426%" height="15" fill="rgb(225,2,28)" fg:x="928" fg:w="5"/><text x="8.1256%" y="255.50"></text></g><g><title>__alloc_skb (4 samples, 0.03%)</title><rect x="7.9199%" y="229" width="0.0341%" height="15" fill="rgb(237,90,40)" fg:x="929" fg:w="4"/><text x="8.1341%" y="239.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.03%)</title><rect x="7.9284%" y="213" width="0.0256%" height="15" fill="rgb(228,161,44)" fg:x="930" fg:w="3"/><text x="8.1427%" y="223.50"></text></g><g><title>__tcp_push_pending_frames (13 samples, 0.11%)</title><rect x="7.8602%" y="277" width="0.1108%" height="15" fill="rgb(226,88,38)" fg:x="922" fg:w="13"/><text x="8.0745%" y="287.50"></text></g><g><title>tcp_write_xmit (13 samples, 0.11%)</title><rect x="7.8602%" y="261" width="0.1108%" height="15" fill="rgb(236,72,36)" fg:x="922" fg:w="13"/><text x="8.0745%" y="271.50"></text></g><g><title>tcp_ack (6 samples, 0.05%)</title><rect x="7.9710%" y="277" width="0.0512%" height="15" fill="rgb(213,228,3)" fg:x="935" fg:w="6"/><text x="8.1853%" y="287.50"></text></g><g><title>napi_complete_done (28 samples, 0.24%)</title><rect x="7.8005%" y="453" width="0.2387%" height="15" fill="rgb(226,216,13)" fg:x="915" fg:w="28"/><text x="8.0148%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (28 samples, 0.24%)</title><rect x="7.8005%" y="437" width="0.2387%" height="15" fill="rgb(216,153,44)" fg:x="915" fg:w="28"/><text x="8.0148%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (28 samples, 0.24%)</title><rect x="7.8005%" y="421" width="0.2387%" height="15" fill="rgb(227,176,26)" fg:x="915" fg:w="28"/><text x="8.0148%" y="431.50"></text></g><g><title>ip_list_rcv (26 samples, 0.22%)</title><rect x="7.8176%" y="405" width="0.2217%" height="15" fill="rgb(215,38,16)" fg:x="917" fg:w="26"/><text x="8.0318%" y="415.50"></text></g><g><title>ip_sublist_rcv (25 samples, 0.21%)</title><rect x="7.8261%" y="389" width="0.2131%" height="15" fill="rgb(207,166,9)" fg:x="918" fg:w="25"/><text x="8.0404%" y="399.50"></text></g><g><title>ip_sublist_rcv_finish (23 samples, 0.20%)</title><rect x="7.8431%" y="373" width="0.1961%" height="15" fill="rgb(223,178,14)" fg:x="920" fg:w="23"/><text x="8.0574%" y="383.50"></text></g><g><title>ip_local_deliver_finish (23 samples, 0.20%)</title><rect x="7.8431%" y="357" width="0.1961%" height="15" fill="rgb(220,94,29)" fg:x="920" fg:w="23"/><text x="8.0574%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (23 samples, 0.20%)</title><rect x="7.8431%" y="341" width="0.1961%" height="15" fill="rgb(207,19,13)" fg:x="920" fg:w="23"/><text x="8.0574%" y="351.50"></text></g><g><title>tcp_v4_rcv (23 samples, 0.20%)</title><rect x="7.8431%" y="325" width="0.1961%" height="15" fill="rgb(224,38,0)" fg:x="920" fg:w="23"/><text x="8.0574%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (22 samples, 0.19%)</title><rect x="7.8517%" y="309" width="0.1876%" height="15" fill="rgb(228,220,18)" fg:x="921" fg:w="22"/><text x="8.0659%" y="319.50"></text></g><g><title>tcp_rcv_established (22 samples, 0.19%)</title><rect x="7.8517%" y="293" width="0.1876%" height="15" fill="rgb(224,50,47)" fg:x="921" fg:w="22"/><text x="8.0659%" y="303.50"></text></g><g><title>napi_gro_receive (2 samples, 0.02%)</title><rect x="8.0392%" y="453" width="0.0171%" height="15" fill="rgb(248,45,29)" fg:x="943" fg:w="2"/><text x="8.2535%" y="463.50"></text></g><g><title>__napi_alloc_skb (3 samples, 0.03%)</title><rect x="8.0904%" y="421" width="0.0256%" height="15" fill="rgb(236,121,11)" fg:x="949" fg:w="3"/><text x="8.3047%" y="431.50"></text></g><g><title>__alloc_skb (3 samples, 0.03%)</title><rect x="8.0904%" y="405" width="0.0256%" height="15" fill="rgb(237,90,40)" fg:x="949" fg:w="3"/><text x="8.3047%" y="415.50"></text></g><g><title>kmem_cache_alloc_node (3 samples, 0.03%)</title><rect x="8.0904%" y="389" width="0.0256%" height="15" fill="rgb(227,94,12)" fg:x="949" fg:w="3"/><text x="8.3047%" y="399.50"></text></g><g><title>receive_buf (8 samples, 0.07%)</title><rect x="8.0563%" y="453" width="0.0682%" height="15" fill="rgb(233,111,44)" fg:x="945" fg:w="8"/><text x="8.2706%" y="463.50"></text></g><g><title>page_to_skb (5 samples, 0.04%)</title><rect x="8.0818%" y="437" width="0.0426%" height="15" fill="rgb(243,180,22)" fg:x="948" fg:w="5"/><text x="8.2961%" y="447.50"></text></g><g><title>try_fill_recv (2 samples, 0.02%)</title><rect x="8.1245%" y="453" width="0.0171%" height="15" fill="rgb(209,67,13)" fg:x="953" fg:w="2"/><text x="8.3388%" y="463.50"></text></g><g><title>virtnet_poll (41 samples, 0.35%)</title><rect x="7.8005%" y="469" width="0.3495%" height="15" fill="rgb(213,187,12)" fg:x="915" fg:w="41"/><text x="8.0148%" y="479.50"></text></g><g><title>napi_consume_skb (4 samples, 0.03%)</title><rect x="8.1586%" y="437" width="0.0341%" height="15" fill="rgb(244,99,54)" fg:x="957" fg:w="4"/><text x="8.3729%" y="447.50"></text></g><g><title>skb_release_head_state (3 samples, 0.03%)</title><rect x="8.1671%" y="421" width="0.0256%" height="15" fill="rgb(221,1,22)" fg:x="958" fg:w="3"/><text x="8.3814%" y="431.50"></text></g><g><title>tcp_wfree (3 samples, 0.03%)</title><rect x="8.1671%" y="405" width="0.0256%" height="15" fill="rgb(250,102,28)" fg:x="958" fg:w="3"/><text x="8.3814%" y="415.50"></text></g><g><title>free_old_xmit_skbs (14 samples, 0.12%)</title><rect x="8.1586%" y="453" width="0.1194%" height="15" fill="rgb(235,178,6)" fg:x="957" fg:w="14"/><text x="8.3729%" y="463.50"></text></g><g><title>virtqueue_get_buf_ctx_split (10 samples, 0.09%)</title><rect x="8.1927%" y="437" width="0.0853%" height="15" fill="rgb(235,34,35)" fg:x="961" fg:w="10"/><text x="8.4070%" y="447.50"></text></g><g><title>detach_buf_split (6 samples, 0.05%)</title><rect x="8.2268%" y="421" width="0.0512%" height="15" fill="rgb(228,101,1)" fg:x="965" fg:w="6"/><text x="8.4411%" y="431.50"></text></g><g><title>kfree (5 samples, 0.04%)</title><rect x="8.2353%" y="405" width="0.0426%" height="15" fill="rgb(222,6,37)" fg:x="966" fg:w="5"/><text x="8.4496%" y="415.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (2 samples, 0.02%)</title><rect x="8.2609%" y="389" width="0.0171%" height="15" fill="rgb(208,166,34)" fg:x="969" fg:w="2"/><text x="8.4752%" y="399.50"></text></g><g><title>net_rx_action (60 samples, 0.51%)</title><rect x="7.7835%" y="485" width="0.5115%" height="15" fill="rgb(231,11,52)" fg:x="913" fg:w="60"/><text x="7.9977%" y="495.50"></text></g><g><title>virtnet_poll_tx (17 samples, 0.14%)</title><rect x="8.1500%" y="469" width="0.1449%" height="15" fill="rgb(251,188,47)" fg:x="956" fg:w="17"/><text x="8.3643%" y="479.50"></text></g><g><title>asm_common_interrupt (69 samples, 0.59%)</title><rect x="7.7153%" y="581" width="0.5882%" height="15" fill="rgb(248,227,45)" fg:x="905" fg:w="69"/><text x="7.9295%" y="591.50"></text></g><g><title>common_interrupt (69 samples, 0.59%)</title><rect x="7.7153%" y="565" width="0.5882%" height="15" fill="rgb(250,67,32)" fg:x="905" fg:w="69"/><text x="7.9295%" y="575.50"></text></g><g><title>irq_exit_rcu (63 samples, 0.54%)</title><rect x="7.7664%" y="549" width="0.5371%" height="15" fill="rgb(240,18,12)" fg:x="911" fg:w="63"/><text x="7.9807%" y="559.50"></text></g><g><title>do_softirq_own_stack (63 samples, 0.54%)</title><rect x="7.7664%" y="533" width="0.5371%" height="15" fill="rgb(223,89,53)" fg:x="911" fg:w="63"/><text x="7.9807%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (63 samples, 0.54%)</title><rect x="7.7664%" y="517" width="0.5371%" height="15" fill="rgb(208,184,36)" fg:x="911" fg:w="63"/><text x="7.9807%" y="527.50"></text></g><g><title>__softirqentry_text_start (63 samples, 0.54%)</title><rect x="7.7664%" y="501" width="0.5371%" height="15" fill="rgb(249,91,22)" fg:x="911" fg:w="63"/><text x="7.9807%" y="511.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="8.3035%" y="581" width="0.0171%" height="15" fill="rgb(209,17,43)" fg:x="974" fg:w="2"/><text x="8.5178%" y="591.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="8.3035%" y="565" width="0.0171%" height="15" fill="rgb(218,44,13)" fg:x="974" fg:w="2"/><text x="8.5178%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="8.3035%" y="549" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="974" fg:w="2"/><text x="8.5178%" y="559.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="8.3035%" y="533" width="0.0171%" height="15" fill="rgb(221,147,0)" fg:x="974" fg:w="2"/><text x="8.5178%" y="543.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="8.3035%" y="517" width="0.0171%" height="15" fill="rgb(212,109,30)" fg:x="974" fg:w="2"/><text x="8.5178%" y="527.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="8.3035%" y="501" width="0.0171%" height="15" fill="rgb(232,211,54)" fg:x="974" fg:w="2"/><text x="8.5178%" y="511.50"></text></g><g><title>finish_task_switch (77 samples, 0.66%)</title><rect x="7.6726%" y="597" width="0.6564%" height="15" fill="rgb(214,214,33)" fg:x="900" fg:w="77"/><text x="7.8869%" y="607.50"></text></g><g><title>pick_next_entity (2 samples, 0.02%)</title><rect x="8.3632%" y="581" width="0.0171%" height="15" fill="rgb(242,166,54)" fg:x="981" fg:w="2"/><text x="8.5775%" y="591.50"></text></g><g><title>update_curr (2 samples, 0.02%)</title><rect x="8.3887%" y="565" width="0.0171%" height="15" fill="rgb(242,65,24)" fg:x="984" fg:w="2"/><text x="8.6030%" y="575.50"></text></g><g><title>put_prev_entity (5 samples, 0.04%)</title><rect x="8.3802%" y="581" width="0.0426%" height="15" fill="rgb(223,18,39)" fg:x="983" fg:w="5"/><text x="8.5945%" y="591.50"></text></g><g><title>update_load_avg (2 samples, 0.02%)</title><rect x="8.4058%" y="565" width="0.0171%" height="15" fill="rgb(222,111,24)" fg:x="986" fg:w="2"/><text x="8.6201%" y="575.50"></text></g><g><title>set_next_entity (5 samples, 0.04%)</title><rect x="8.4228%" y="581" width="0.0426%" height="15" fill="rgb(246,169,49)" fg:x="988" fg:w="5"/><text x="8.6371%" y="591.50"></text></g><g><title>pick_next_task_fair (18 samples, 0.15%)</title><rect x="8.3291%" y="597" width="0.1535%" height="15" fill="rgb(247,213,54)" fg:x="977" fg:w="18"/><text x="8.5434%" y="607.50"></text></g><g><title>update_curr (2 samples, 0.02%)</title><rect x="8.4655%" y="581" width="0.0171%" height="15" fill="rgb(242,65,24)" fg:x="993" fg:w="2"/><text x="8.6798%" y="591.50"></text></g><g><title>mutex_lock (174 samples, 1.48%)</title><rect x="7.1697%" y="645" width="1.4834%" height="15" fill="rgb(218,205,15)" fg:x="841" fg:w="174"/><text x="7.3839%" y="655.50"></text></g><g><title>_cond_resched (174 samples, 1.48%)</title><rect x="7.1697%" y="629" width="1.4834%" height="15" fill="rgb(240,228,18)" fg:x="841" fg:w="174"/><text x="7.3839%" y="639.50"></text></g><g><title>__schedule (172 samples, 1.47%)</title><rect x="7.1867%" y="613" width="1.4663%" height="15" fill="rgb(207,40,26)" fg:x="843" fg:w="172"/><text x="7.4010%" y="623.50"></text></g><g><title>psi_task_switch (20 samples, 0.17%)</title><rect x="8.4825%" y="597" width="0.1705%" height="15" fill="rgb(233,176,51)" fg:x="995" fg:w="20"/><text x="8.6968%" y="607.50"></text></g><g><title>psi_group_change (13 samples, 0.11%)</title><rect x="8.5422%" y="581" width="0.1108%" height="15" fill="rgb(214,74,3)" fg:x="1002" fg:w="13"/><text x="8.7565%" y="591.50"></text></g><g><title>record_times (9 samples, 0.08%)</title><rect x="8.5763%" y="565" width="0.0767%" height="15" fill="rgb(235,137,9)" fg:x="1006" fg:w="9"/><text x="8.7906%" y="575.50"></text></g><g><title>sched_clock_cpu (8 samples, 0.07%)</title><rect x="8.5848%" y="549" width="0.0682%" height="15" fill="rgb(217,142,15)" fg:x="1007" fg:w="8"/><text x="8.7991%" y="559.50"></text></g><g><title>sched_clock (5 samples, 0.04%)</title><rect x="8.6104%" y="533" width="0.0426%" height="15" fill="rgb(234,150,37)" fg:x="1010" fg:w="5"/><text x="8.8247%" y="543.50"></text></g><g><title>kvm_sched_clock_read (5 samples, 0.04%)</title><rect x="8.6104%" y="517" width="0.0426%" height="15" fill="rgb(248,187,27)" fg:x="1010" fg:w="5"/><text x="8.8247%" y="527.50"></text></g><g><title>pvclock_clocksource_read (5 samples, 0.04%)</title><rect x="8.6104%" y="501" width="0.0426%" height="15" fill="rgb(246,59,10)" fg:x="1010" fg:w="5"/><text x="8.8247%" y="511.50"></text></g><g><title>insert_work (2 samples, 0.02%)</title><rect x="8.7127%" y="597" width="0.0171%" height="15" fill="rgb(229,34,9)" fg:x="1022" fg:w="2"/><text x="8.9270%" y="607.50"></text></g><g><title>__list_add_valid (2 samples, 0.02%)</title><rect x="8.7127%" y="581" width="0.0171%" height="15" fill="rgb(206,79,8)" fg:x="1022" fg:w="2"/><text x="8.9270%" y="591.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="8.7383%" y="581" width="0.0171%" height="15" fill="rgb(206,213,41)" fg:x="1025" fg:w="2"/><text x="8.9526%" y="591.50"></text></g><g><title>update_curr (4 samples, 0.03%)</title><rect x="8.8065%" y="533" width="0.0341%" height="15" fill="rgb(242,65,24)" fg:x="1033" fg:w="4"/><text x="9.0208%" y="543.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.02%)</title><rect x="8.8491%" y="517" width="0.0171%" height="15" fill="rgb(206,162,20)" fg:x="1038" fg:w="2"/><text x="9.0634%" y="527.50"></text></g><g><title>enqueue_task_fair (13 samples, 0.11%)</title><rect x="8.7724%" y="565" width="0.1108%" height="15" fill="rgb(252,79,15)" fg:x="1029" fg:w="13"/><text x="8.9867%" y="575.50"></text></g><g><title>enqueue_entity (13 samples, 0.11%)</title><rect x="8.7724%" y="549" width="0.1108%" height="15" fill="rgb(206,193,49)" fg:x="1029" fg:w="13"/><text x="8.9867%" y="559.50"></text></g><g><title>update_load_avg (5 samples, 0.04%)</title><rect x="8.8406%" y="533" width="0.0426%" height="15" fill="rgb(222,111,24)" fg:x="1037" fg:w="5"/><text x="9.0549%" y="543.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.02%)</title><rect x="8.8662%" y="517" width="0.0171%" height="15" fill="rgb(209,63,2)" fg:x="1040" fg:w="2"/><text x="9.0804%" y="527.50"></text></g><g><title>ttwu_do_activate (18 samples, 0.15%)</title><rect x="8.7639%" y="581" width="0.1535%" height="15" fill="rgb(244,166,49)" fg:x="1028" fg:w="18"/><text x="8.9781%" y="591.50"></text></g><g><title>psi_task_change (4 samples, 0.03%)</title><rect x="8.8832%" y="565" width="0.0341%" height="15" fill="rgb(214,87,45)" fg:x="1042" fg:w="4"/><text x="9.0975%" y="575.50"></text></g><g><title>psi_group_change (3 samples, 0.03%)</title><rect x="8.8917%" y="549" width="0.0256%" height="15" fill="rgb(214,74,3)" fg:x="1043" fg:w="3"/><text x="9.1060%" y="559.50"></text></g><g><title>ttwu_do_wakeup (6 samples, 0.05%)</title><rect x="8.9173%" y="581" width="0.0512%" height="15" fill="rgb(220,201,44)" fg:x="1046" fg:w="6"/><text x="9.1316%" y="591.50"></text></g><g><title>check_preempt_curr (5 samples, 0.04%)</title><rect x="8.9258%" y="565" width="0.0426%" height="15" fill="rgb(253,116,22)" fg:x="1047" fg:w="5"/><text x="9.1401%" y="575.50"></text></g><g><title>check_preempt_wakeup (4 samples, 0.03%)</title><rect x="8.9344%" y="549" width="0.0341%" height="15" fill="rgb(225,77,38)" fg:x="1048" fg:w="4"/><text x="9.1486%" y="559.50"></text></g><g><title>try_to_wake_up (29 samples, 0.25%)</title><rect x="8.7298%" y="597" width="0.2472%" height="15" fill="rgb(251,124,39)" fg:x="1024" fg:w="29"/><text x="8.9440%" y="607.50"></text></g><g><title>__queue_work (35 samples, 0.30%)</title><rect x="8.6957%" y="613" width="0.2984%" height="15" fill="rgb(228,111,53)" fg:x="1020" fg:w="35"/><text x="8.9099%" y="623.50"></text></g><g><title>wake_up_process (2 samples, 0.02%)</title><rect x="8.9770%" y="597" width="0.0171%" height="15" fill="rgb(208,170,21)" fg:x="1053" fg:w="2"/><text x="9.1913%" y="607.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="9.0026%" y="277" width="0.0171%" height="15" fill="rgb(238,106,36)" fg:x="1056" fg:w="2"/><text x="9.2168%" y="287.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="9.0026%" y="261" width="0.0171%" height="15" fill="rgb(224,11,5)" fg:x="1056" fg:w="2"/><text x="9.2168%" y="271.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="9.0026%" y="245" width="0.0171%" height="15" fill="rgb(219,227,11)" fg:x="1056" fg:w="2"/><text x="9.2168%" y="255.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="9.0026%" y="229" width="0.0171%" height="15" fill="rgb(232,116,37)" fg:x="1056" fg:w="2"/><text x="9.2168%" y="239.50"></text></g><g><title>__qdisc_run (2 samples, 0.02%)</title><rect x="9.0026%" y="213" width="0.0171%" height="15" fill="rgb(252,144,25)" fg:x="1056" fg:w="2"/><text x="9.2168%" y="223.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.02%)</title><rect x="9.0026%" y="197" width="0.0171%" height="15" fill="rgb(222,128,44)" fg:x="1056" fg:w="2"/><text x="9.2168%" y="207.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="9.0026%" y="181" width="0.0171%" height="15" fill="rgb(251,86,39)" fg:x="1056" fg:w="2"/><text x="9.2168%" y="191.50"></text></g><g><title>start_xmit (2 samples, 0.02%)</title><rect x="9.0026%" y="165" width="0.0171%" height="15" fill="rgb(211,140,13)" fg:x="1056" fg:w="2"/><text x="9.2168%" y="175.50"></text></g><g><title>virtqueue_notify (2 samples, 0.02%)</title><rect x="9.0026%" y="149" width="0.0171%" height="15" fill="rgb(219,119,18)" fg:x="1056" fg:w="2"/><text x="9.2168%" y="159.50"></text></g><g><title>vp_notify (2 samples, 0.02%)</title><rect x="9.0026%" y="133" width="0.0171%" height="15" fill="rgb(230,193,37)" fg:x="1056" fg:w="2"/><text x="9.2168%" y="143.50"></text></g><g><title>iowrite16 (2 samples, 0.02%)</title><rect x="9.0026%" y="117" width="0.0171%" height="15" fill="rgb(218,139,37)" fg:x="1056" fg:w="2"/><text x="9.2168%" y="127.50"></text></g><g><title>queue_work_on (40 samples, 0.34%)</title><rect x="8.6871%" y="629" width="0.3410%" height="15" fill="rgb(224,62,31)" fg:x="1019" fg:w="40"/><text x="8.9014%" y="639.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.03%)</title><rect x="8.9940%" y="613" width="0.0341%" height="15" fill="rgb(248,227,45)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="623.50"></text></g><g><title>common_interrupt (4 samples, 0.03%)</title><rect x="8.9940%" y="597" width="0.0341%" height="15" fill="rgb(250,67,32)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="607.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="8.9940%" y="581" width="0.0341%" height="15" fill="rgb(240,18,12)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="591.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.03%)</title><rect x="8.9940%" y="565" width="0.0341%" height="15" fill="rgb(223,89,53)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="8.9940%" y="549" width="0.0341%" height="15" fill="rgb(208,184,36)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="559.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="8.9940%" y="533" width="0.0341%" height="15" fill="rgb(249,91,22)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="543.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="8.9940%" y="517" width="0.0341%" height="15" fill="rgb(231,11,52)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="527.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="8.9940%" y="501" width="0.0341%" height="15" fill="rgb(213,187,12)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="511.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="8.9940%" y="485" width="0.0341%" height="15" fill="rgb(226,216,13)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="495.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="8.9940%" y="469" width="0.0341%" height="15" fill="rgb(216,153,44)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="479.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="8.9940%" y="453" width="0.0341%" height="15" fill="rgb(227,176,26)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="463.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="8.9940%" y="437" width="0.0341%" height="15" fill="rgb(215,38,16)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="447.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="8.9940%" y="421" width="0.0341%" height="15" fill="rgb(207,166,9)" fg:x="1055" fg:w="4"/><text x="9.2083%" y="431.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.03%)</title><rect x="9.0026%" y="405" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="1056" fg:w="3"/><text x="9.2168%" y="415.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.03%)</title><rect x="9.0026%" y="389" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="1056" fg:w="3"/><text x="9.2168%" y="399.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="9.0026%" y="373" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="1056" fg:w="3"/><text x="9.2168%" y="383.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="9.0026%" y="357" width="0.0256%" height="15" fill="rgb(224,38,0)" fg:x="1056" fg:w="3"/><text x="9.2168%" y="367.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="9.0026%" y="341" width="0.0256%" height="15" fill="rgb(228,220,18)" fg:x="1056" fg:w="3"/><text x="9.2168%" y="351.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.03%)</title><rect x="9.0026%" y="325" width="0.0256%" height="15" fill="rgb(224,50,47)" fg:x="1056" fg:w="3"/><text x="9.2168%" y="335.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.03%)</title><rect x="9.0026%" y="309" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="1056" fg:w="3"/><text x="9.2168%" y="319.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.03%)</title><rect x="9.0026%" y="293" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="1056" fg:w="3"/><text x="9.2168%" y="303.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (43 samples, 0.37%)</title><rect x="8.6786%" y="645" width="0.3666%" height="15" fill="rgb(229,98,5)" fg:x="1018" fg:w="43"/><text x="8.8929%" y="655.50"></text></g><g><title>tty_insert_flip_string_fixed_flag (2 samples, 0.02%)</title><rect x="9.0281%" y="629" width="0.0171%" height="15" fill="rgb(227,10,10)" fg:x="1059" fg:w="2"/><text x="9.2424%" y="639.50"></text></g><g><title>n_tty_write (282 samples, 2.40%)</title><rect x="6.6496%" y="661" width="2.4041%" height="15" fill="rgb(240,0,6)" fg:x="780" fg:w="282"/><text x="6.8639%" y="671.50">n_..</text></g><g><title>new_sync_write (290 samples, 2.47%)</title><rect x="6.5985%" y="693" width="2.4723%" height="15" fill="rgb(220,167,51)" fg:x="774" fg:w="290"/><text x="6.8128%" y="703.50">ne..</text></g><g><title>file_tty_write.constprop.0 (290 samples, 2.47%)</title><rect x="6.5985%" y="677" width="2.4723%" height="15" fill="rgb(225,84,50)" fg:x="774" fg:w="290"/><text x="6.8128%" y="687.50">fi..</text></g><g><title>tty_ldisc_ref_wait (2 samples, 0.02%)</title><rect x="9.0537%" y="661" width="0.0171%" height="15" fill="rgb(209,153,28)" fg:x="1062" fg:w="2"/><text x="9.2680%" y="671.50"></text></g><g><title>ldsem_down_read (2 samples, 0.02%)</title><rect x="9.0537%" y="645" width="0.0171%" height="15" fill="rgb(251,110,46)" fg:x="1062" fg:w="2"/><text x="9.2680%" y="655.50"></text></g><g><title>do_syscall_64 (296 samples, 2.52%)</title><rect x="6.5558%" y="741" width="2.5234%" height="15" fill="rgb(220,74,14)" fg:x="769" fg:w="296"/><text x="6.7701%" y="751.50">do..</text></g><g><title>ksys_write (295 samples, 2.51%)</title><rect x="6.5644%" y="725" width="2.5149%" height="15" fill="rgb(223,155,43)" fg:x="770" fg:w="295"/><text x="6.7787%" y="735.50">ks..</text></g><g><title>vfs_write (293 samples, 2.50%)</title><rect x="6.5814%" y="709" width="2.4979%" height="15" fill="rgb(216,184,13)" fg:x="772" fg:w="293"/><text x="6.7957%" y="719.50">vf..</text></g><g><title>amd_pmu_disable_all (2 samples, 0.02%)</title><rect x="9.0793%" y="661" width="0.0171%" height="15" fill="rgb(224,0,7)" fg:x="1065" fg:w="2"/><text x="9.2936%" y="671.50"></text></g><g><title>x86_pmu_disable_all (2 samples, 0.02%)</title><rect x="9.0793%" y="645" width="0.0171%" height="15" fill="rgb(235,111,43)" fg:x="1065" fg:w="2"/><text x="9.2936%" y="655.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.03%)</title><rect x="9.0793%" y="677" width="0.0256%" height="15" fill="rgb(206,30,45)" fg:x="1065" fg:w="3"/><text x="9.2936%" y="687.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="9.1134%" y="533" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="1069" fg:w="2"/><text x="9.3277%" y="543.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="9.1134%" y="517" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="1069" fg:w="2"/><text x="9.3277%" y="527.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="9.1134%" y="501" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="1069" fg:w="2"/><text x="9.3277%" y="511.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="9.1134%" y="485" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="1069" fg:w="2"/><text x="9.3277%" y="495.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="9.1134%" y="469" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="1069" fg:w="2"/><text x="9.3277%" y="479.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="9.1134%" y="549" width="0.0341%" height="15" fill="rgb(213,187,12)" fg:x="1069" fg:w="4"/><text x="9.3277%" y="559.50"></text></g><g><title>receive_buf (2 samples, 0.02%)</title><rect x="9.1304%" y="533" width="0.0171%" height="15" fill="rgb(233,111,44)" fg:x="1071" fg:w="2"/><text x="9.3447%" y="543.50"></text></g><g><title>page_to_skb (2 samples, 0.02%)</title><rect x="9.1304%" y="517" width="0.0171%" height="15" fill="rgb(243,180,22)" fg:x="1071" fg:w="2"/><text x="9.3447%" y="527.50"></text></g><g><title>__napi_alloc_skb (2 samples, 0.02%)</title><rect x="9.1304%" y="501" width="0.0171%" height="15" fill="rgb(236,121,11)" fg:x="1071" fg:w="2"/><text x="9.3447%" y="511.50"></text></g><g><title>__alloc_skb (2 samples, 0.02%)</title><rect x="9.1304%" y="485" width="0.0171%" height="15" fill="rgb(237,90,40)" fg:x="1071" fg:w="2"/><text x="9.3447%" y="495.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="9.1304%" y="469" width="0.0171%" height="15" fill="rgb(227,94,12)" fg:x="1071" fg:w="2"/><text x="9.3447%" y="479.50"></text></g><g><title>finish_task_switch (7 samples, 0.06%)</title><rect x="9.1049%" y="677" width="0.0597%" height="15" fill="rgb(214,214,33)" fg:x="1068" fg:w="7"/><text x="9.3191%" y="687.50"></text></g><g><title>asm_common_interrupt (7 samples, 0.06%)</title><rect x="9.1049%" y="661" width="0.0597%" height="15" fill="rgb(248,227,45)" fg:x="1068" fg:w="7"/><text x="9.3191%" y="671.50"></text></g><g><title>common_interrupt (7 samples, 0.06%)</title><rect x="9.1049%" y="645" width="0.0597%" height="15" fill="rgb(250,67,32)" fg:x="1068" fg:w="7"/><text x="9.3191%" y="655.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.06%)</title><rect x="9.1049%" y="629" width="0.0597%" height="15" fill="rgb(240,18,12)" fg:x="1068" fg:w="7"/><text x="9.3191%" y="639.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.06%)</title><rect x="9.1049%" y="613" width="0.0597%" height="15" fill="rgb(223,89,53)" fg:x="1068" fg:w="7"/><text x="9.3191%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (7 samples, 0.06%)</title><rect x="9.1049%" y="597" width="0.0597%" height="15" fill="rgb(208,184,36)" fg:x="1068" fg:w="7"/><text x="9.3191%" y="607.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.06%)</title><rect x="9.1049%" y="581" width="0.0597%" height="15" fill="rgb(249,91,22)" fg:x="1068" fg:w="7"/><text x="9.3191%" y="591.50"></text></g><g><title>net_rx_action (6 samples, 0.05%)</title><rect x="9.1134%" y="565" width="0.0512%" height="15" fill="rgb(231,11,52)" fg:x="1069" fg:w="6"/><text x="9.3277%" y="575.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.02%)</title><rect x="9.1475%" y="549" width="0.0171%" height="15" fill="rgb(251,188,47)" fg:x="1073" fg:w="2"/><text x="9.3618%" y="559.50"></text></g><g><title>free_old_xmit_skbs (2 samples, 0.02%)</title><rect x="9.1475%" y="533" width="0.0171%" height="15" fill="rgb(235,178,6)" fg:x="1073" fg:w="2"/><text x="9.3618%" y="543.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.02%)</title><rect x="9.1645%" y="677" width="0.0171%" height="15" fill="rgb(247,213,54)" fg:x="1075" fg:w="2"/><text x="9.3788%" y="687.50"></text></g><g><title>schedule (13 samples, 0.11%)</title><rect x="9.0793%" y="709" width="0.1108%" height="15" fill="rgb(213,215,35)" fg:x="1065" fg:w="13"/><text x="9.2936%" y="719.50"></text></g><g><title>__schedule (13 samples, 0.11%)</title><rect x="9.0793%" y="693" width="0.1108%" height="15" fill="rgb(207,40,26)" fg:x="1065" fg:w="13"/><text x="9.2936%" y="703.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (325 samples, 2.77%)</title><rect x="6.4450%" y="869" width="2.7707%" height="15" fill="rgb(222,170,8)" fg:x="756" fg:w="325"/><text x="6.6593%" y="879.50">std..</text></g><g><title>fwrite (322 samples, 2.75%)</title><rect x="6.4706%" y="853" width="2.7451%" height="15" fill="rgb(227,73,51)" fg:x="759" fg:w="322"/><text x="6.6849%" y="863.50">fwr..</text></g><g><title>_IO_file_xsputn (321 samples, 2.74%)</title><rect x="6.4791%" y="837" width="2.7366%" height="15" fill="rgb(212,187,30)" fg:x="760" fg:w="321"/><text x="6.6934%" y="847.50">_IO..</text></g><g><title>_IO_do_write (314 samples, 2.68%)</title><rect x="6.5388%" y="821" width="2.6769%" height="15" fill="rgb(247,226,32)" fg:x="767" fg:w="314"/><text x="6.7531%" y="831.50">_IO..</text></g><g><title>[libc-2.31.so] (313 samples, 2.67%)</title><rect x="6.5473%" y="805" width="2.6684%" height="15" fill="rgb(247,113,52)" fg:x="768" fg:w="313"/><text x="6.7616%" y="815.50">[li..</text></g><g><title>_IO_file_write (313 samples, 2.67%)</title><rect x="6.5473%" y="789" width="2.6684%" height="15" fill="rgb(222,148,11)" fg:x="768" fg:w="313"/><text x="6.7616%" y="799.50">_IO..</text></g><g><title>__write (313 samples, 2.67%)</title><rect x="6.5473%" y="773" width="2.6684%" height="15" fill="rgb(227,101,21)" fg:x="768" fg:w="313"/><text x="6.7616%" y="783.50">__w..</text></g><g><title>entry_SYSCALL_64_after_hwframe (312 samples, 2.66%)</title><rect x="6.5558%" y="757" width="2.6598%" height="15" fill="rgb(205,226,15)" fg:x="769" fg:w="312"/><text x="6.7701%" y="767.50">ent..</text></g><g><title>syscall_exit_to_user_mode (16 samples, 0.14%)</title><rect x="9.0793%" y="741" width="0.1364%" height="15" fill="rgb(215,101,28)" fg:x="1065" fg:w="16"/><text x="9.2936%" y="751.50"></text></g><g><title>exit_to_user_mode_prepare (16 samples, 0.14%)</title><rect x="9.0793%" y="725" width="0.1364%" height="15" fill="rgb(240,77,26)" fg:x="1065" fg:w="16"/><text x="9.2936%" y="735.50"></text></g><g><title>switch_fpu_return (3 samples, 0.03%)</title><rect x="9.1901%" y="709" width="0.0256%" height="15" fill="rgb(214,180,49)" fg:x="1078" fg:w="3"/><text x="9.4044%" y="719.50"></text></g><g><title>copy_kernel_to_fpregs (3 samples, 0.03%)</title><rect x="9.1901%" y="693" width="0.0256%" height="15" fill="rgb(219,9,27)" fg:x="1078" fg:w="3"/><text x="9.4044%" y="703.50"></text></g><g><title>__check_object_size (3 samples, 0.03%)</title><rect x="9.2413%" y="661" width="0.0256%" height="15" fill="rgb(218,1,22)" fg:x="1084" fg:w="3"/><text x="9.4555%" y="671.50"></text></g><g><title>ttwu_do_activate (3 samples, 0.03%)</title><rect x="9.3265%" y="565" width="0.0256%" height="15" fill="rgb(244,166,49)" fg:x="1094" fg:w="3"/><text x="9.5408%" y="575.50"></text></g><g><title>psi_task_change (2 samples, 0.02%)</title><rect x="9.3350%" y="549" width="0.0171%" height="15" fill="rgb(214,87,45)" fg:x="1095" fg:w="2"/><text x="9.5493%" y="559.50"></text></g><g><title>__queue_work (5 samples, 0.04%)</title><rect x="9.3180%" y="597" width="0.0426%" height="15" fill="rgb(228,111,53)" fg:x="1093" fg:w="5"/><text x="9.5323%" y="607.50"></text></g><g><title>try_to_wake_up (4 samples, 0.03%)</title><rect x="9.3265%" y="581" width="0.0341%" height="15" fill="rgb(251,124,39)" fg:x="1094" fg:w="4"/><text x="9.5408%" y="591.50"></text></g><g><title>do_output_char (8 samples, 0.07%)</title><rect x="9.3009%" y="645" width="0.0682%" height="15" fill="rgb(228,220,0)" fg:x="1091" fg:w="8"/><text x="9.5152%" y="655.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (7 samples, 0.06%)</title><rect x="9.3095%" y="629" width="0.0597%" height="15" fill="rgb(229,98,5)" fg:x="1092" fg:w="7"/><text x="9.5237%" y="639.50"></text></g><g><title>queue_work_on (6 samples, 0.05%)</title><rect x="9.3180%" y="613" width="0.0512%" height="15" fill="rgb(224,62,31)" fg:x="1093" fg:w="6"/><text x="9.5323%" y="623.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.03%)</title><rect x="9.3691%" y="597" width="0.0341%" height="15" fill="rgb(206,30,45)" fg:x="1099" fg:w="4"/><text x="9.5834%" y="607.50"></text></g><g><title>amd_pmu_disable_all (4 samples, 0.03%)</title><rect x="9.3691%" y="581" width="0.0341%" height="15" fill="rgb(224,0,7)" fg:x="1099" fg:w="4"/><text x="9.5834%" y="591.50"></text></g><g><title>x86_pmu_disable_all (4 samples, 0.03%)</title><rect x="9.3691%" y="565" width="0.0341%" height="15" fill="rgb(235,111,43)" fg:x="1099" fg:w="4"/><text x="9.5834%" y="575.50"></text></g><g><title>native_read_msr (4 samples, 0.03%)</title><rect x="9.3691%" y="549" width="0.0341%" height="15" fill="rgb(218,43,9)" fg:x="1099" fg:w="4"/><text x="9.5834%" y="559.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="9.4032%" y="469" width="0.0341%" height="15" fill="rgb(213,187,12)" fg:x="1103" fg:w="4"/><text x="9.6175%" y="479.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="9.4032%" y="453" width="0.0341%" height="15" fill="rgb(226,216,13)" fg:x="1103" fg:w="4"/><text x="9.6175%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="9.4032%" y="437" width="0.0341%" height="15" fill="rgb(216,153,44)" fg:x="1103" fg:w="4"/><text x="9.6175%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="9.4032%" y="421" width="0.0341%" height="15" fill="rgb(227,176,26)" fg:x="1103" fg:w="4"/><text x="9.6175%" y="431.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="9.4032%" y="405" width="0.0341%" height="15" fill="rgb(215,38,16)" fg:x="1103" fg:w="4"/><text x="9.6175%" y="415.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="9.4032%" y="389" width="0.0341%" height="15" fill="rgb(207,166,9)" fg:x="1103" fg:w="4"/><text x="9.6175%" y="399.50"></text></g><g><title>ip_sublist_rcv_finish (4 samples, 0.03%)</title><rect x="9.4032%" y="373" width="0.0341%" height="15" fill="rgb(223,178,14)" fg:x="1103" fg:w="4"/><text x="9.6175%" y="383.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="9.4032%" y="357" width="0.0341%" height="15" fill="rgb(220,94,29)" fg:x="1103" fg:w="4"/><text x="9.6175%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="9.4032%" y="341" width="0.0341%" height="15" fill="rgb(207,19,13)" fg:x="1103" fg:w="4"/><text x="9.6175%" y="351.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.03%)</title><rect x="9.4032%" y="325" width="0.0341%" height="15" fill="rgb(224,38,0)" fg:x="1103" fg:w="4"/><text x="9.6175%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.03%)</title><rect x="9.4032%" y="309" width="0.0341%" height="15" fill="rgb(228,220,18)" fg:x="1103" fg:w="4"/><text x="9.6175%" y="319.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.03%)</title><rect x="9.4032%" y="293" width="0.0341%" height="15" fill="rgb(224,50,47)" fg:x="1103" fg:w="4"/><text x="9.6175%" y="303.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.03%)</title><rect x="9.4118%" y="277" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="1104" fg:w="3"/><text x="9.6261%" y="287.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.03%)</title><rect x="9.4118%" y="261" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="1104" fg:w="3"/><text x="9.6261%" y="271.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.03%)</title><rect x="9.4118%" y="245" width="0.0256%" height="15" fill="rgb(238,106,36)" fg:x="1104" fg:w="3"/><text x="9.6261%" y="255.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="9.4203%" y="229" width="0.0171%" height="15" fill="rgb(224,11,5)" fg:x="1105" fg:w="2"/><text x="9.6346%" y="239.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.04%)</title><rect x="9.4032%" y="533" width="0.0426%" height="15" fill="rgb(223,89,53)" fg:x="1103" fg:w="5"/><text x="9.6175%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.04%)</title><rect x="9.4032%" y="517" width="0.0426%" height="15" fill="rgb(208,184,36)" fg:x="1103" fg:w="5"/><text x="9.6175%" y="527.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.04%)</title><rect x="9.4032%" y="501" width="0.0426%" height="15" fill="rgb(249,91,22)" fg:x="1103" fg:w="5"/><text x="9.6175%" y="511.50"></text></g><g><title>net_rx_action (5 samples, 0.04%)</title><rect x="9.4032%" y="485" width="0.0426%" height="15" fill="rgb(231,11,52)" fg:x="1103" fg:w="5"/><text x="9.6175%" y="495.50"></text></g><g><title>finish_task_switch (6 samples, 0.05%)</title><rect x="9.4032%" y="597" width="0.0512%" height="15" fill="rgb(214,214,33)" fg:x="1103" fg:w="6"/><text x="9.6175%" y="607.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.05%)</title><rect x="9.4032%" y="581" width="0.0512%" height="15" fill="rgb(248,227,45)" fg:x="1103" fg:w="6"/><text x="9.6175%" y="591.50"></text></g><g><title>common_interrupt (6 samples, 0.05%)</title><rect x="9.4032%" y="565" width="0.0512%" height="15" fill="rgb(250,67,32)" fg:x="1103" fg:w="6"/><text x="9.6175%" y="575.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.05%)</title><rect x="9.4032%" y="549" width="0.0512%" height="15" fill="rgb(240,18,12)" fg:x="1103" fg:w="6"/><text x="9.6175%" y="559.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.02%)</title><rect x="9.4544%" y="597" width="0.0171%" height="15" fill="rgb(247,213,54)" fg:x="1109" fg:w="2"/><text x="9.6687%" y="607.50"></text></g><g><title>set_next_entity (2 samples, 0.02%)</title><rect x="9.4544%" y="581" width="0.0171%" height="15" fill="rgb(246,169,49)" fg:x="1109" fg:w="2"/><text x="9.6687%" y="591.50"></text></g><g><title>pvclock_clocksource_read (2 samples, 0.02%)</title><rect x="9.4970%" y="501" width="0.0171%" height="15" fill="rgb(246,59,10)" fg:x="1114" fg:w="2"/><text x="9.7113%" y="511.50"></text></g><g><title>mutex_lock (18 samples, 0.15%)</title><rect x="9.3691%" y="645" width="0.1535%" height="15" fill="rgb(218,205,15)" fg:x="1099" fg:w="18"/><text x="9.5834%" y="655.50"></text></g><g><title>_cond_resched (18 samples, 0.15%)</title><rect x="9.3691%" y="629" width="0.1535%" height="15" fill="rgb(240,228,18)" fg:x="1099" fg:w="18"/><text x="9.5834%" y="639.50"></text></g><g><title>__schedule (18 samples, 0.15%)</title><rect x="9.3691%" y="613" width="0.1535%" height="15" fill="rgb(207,40,26)" fg:x="1099" fg:w="18"/><text x="9.5834%" y="623.50"></text></g><g><title>psi_task_switch (6 samples, 0.05%)</title><rect x="9.4714%" y="597" width="0.0512%" height="15" fill="rgb(233,176,51)" fg:x="1111" fg:w="6"/><text x="9.6857%" y="607.50"></text></g><g><title>psi_group_change (5 samples, 0.04%)</title><rect x="9.4800%" y="581" width="0.0426%" height="15" fill="rgb(214,74,3)" fg:x="1112" fg:w="5"/><text x="9.6943%" y="591.50"></text></g><g><title>record_times (3 samples, 0.03%)</title><rect x="9.4970%" y="565" width="0.0256%" height="15" fill="rgb(235,137,9)" fg:x="1114" fg:w="3"/><text x="9.7113%" y="575.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.03%)</title><rect x="9.4970%" y="549" width="0.0256%" height="15" fill="rgb(217,142,15)" fg:x="1114" fg:w="3"/><text x="9.7113%" y="559.50"></text></g><g><title>sched_clock (3 samples, 0.03%)</title><rect x="9.4970%" y="533" width="0.0256%" height="15" fill="rgb(234,150,37)" fg:x="1114" fg:w="3"/><text x="9.7113%" y="543.50"></text></g><g><title>kvm_sched_clock_read (3 samples, 0.03%)</title><rect x="9.4970%" y="517" width="0.0256%" height="15" fill="rgb(248,187,27)" fg:x="1114" fg:w="3"/><text x="9.7113%" y="527.50"></text></g><g><title>ttwu_do_activate (3 samples, 0.03%)</title><rect x="9.5482%" y="581" width="0.0256%" height="15" fill="rgb(244,166,49)" fg:x="1120" fg:w="3"/><text x="9.7625%" y="591.50"></text></g><g><title>psi_task_change (2 samples, 0.02%)</title><rect x="9.5567%" y="565" width="0.0171%" height="15" fill="rgb(214,87,45)" fg:x="1121" fg:w="2"/><text x="9.7710%" y="575.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.02%)</title><rect x="9.5737%" y="581" width="0.0171%" height="15" fill="rgb(220,201,44)" fg:x="1123" fg:w="2"/><text x="9.7880%" y="591.50"></text></g><g><title>do_syscall_64 (44 samples, 0.38%)</title><rect x="9.2242%" y="741" width="0.3751%" height="15" fill="rgb(220,74,14)" fg:x="1082" fg:w="44"/><text x="9.4385%" y="751.50"></text></g><g><title>ksys_write (44 samples, 0.38%)</title><rect x="9.2242%" y="725" width="0.3751%" height="15" fill="rgb(223,155,43)" fg:x="1082" fg:w="44"/><text x="9.4385%" y="735.50"></text></g><g><title>vfs_write (44 samples, 0.38%)</title><rect x="9.2242%" y="709" width="0.3751%" height="15" fill="rgb(216,184,13)" fg:x="1082" fg:w="44"/><text x="9.4385%" y="719.50"></text></g><g><title>new_sync_write (43 samples, 0.37%)</title><rect x="9.2327%" y="693" width="0.3666%" height="15" fill="rgb(220,167,51)" fg:x="1083" fg:w="43"/><text x="9.4470%" y="703.50"></text></g><g><title>file_tty_write.constprop.0 (43 samples, 0.37%)</title><rect x="9.2327%" y="677" width="0.3666%" height="15" fill="rgb(225,84,50)" fg:x="1083" fg:w="43"/><text x="9.4470%" y="687.50"></text></g><g><title>n_tty_write (38 samples, 0.32%)</title><rect x="9.2754%" y="661" width="0.3240%" height="15" fill="rgb(240,0,6)" fg:x="1088" fg:w="38"/><text x="9.4896%" y="671.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (8 samples, 0.07%)</title><rect x="9.5311%" y="645" width="0.0682%" height="15" fill="rgb(229,98,5)" fg:x="1118" fg:w="8"/><text x="9.7454%" y="655.50"></text></g><g><title>queue_work_on (8 samples, 0.07%)</title><rect x="9.5311%" y="629" width="0.0682%" height="15" fill="rgb(224,62,31)" fg:x="1118" fg:w="8"/><text x="9.7454%" y="639.50"></text></g><g><title>__queue_work (7 samples, 0.06%)</title><rect x="9.5396%" y="613" width="0.0597%" height="15" fill="rgb(228,111,53)" fg:x="1119" fg:w="7"/><text x="9.7539%" y="623.50"></text></g><g><title>try_to_wake_up (7 samples, 0.06%)</title><rect x="9.5396%" y="597" width="0.0597%" height="15" fill="rgb(251,124,39)" fg:x="1119" fg:w="7"/><text x="9.7539%" y="607.50"></text></g><g><title>native_read_msr (6 samples, 0.05%)</title><rect x="9.6334%" y="629" width="0.0512%" height="15" fill="rgb(218,43,9)" fg:x="1130" fg:w="6"/><text x="9.8477%" y="639.50"></text></g><g><title>__perf_event_task_sched_out (9 samples, 0.08%)</title><rect x="9.6164%" y="677" width="0.0767%" height="15" fill="rgb(206,30,45)" fg:x="1128" fg:w="9"/><text x="9.8307%" y="687.50"></text></g><g><title>amd_pmu_disable_all (7 samples, 0.06%)</title><rect x="9.6334%" y="661" width="0.0597%" height="15" fill="rgb(224,0,7)" fg:x="1130" fg:w="7"/><text x="9.8477%" y="671.50"></text></g><g><title>x86_pmu_disable_all (7 samples, 0.06%)</title><rect x="9.6334%" y="645" width="0.0597%" height="15" fill="rgb(235,111,43)" fg:x="1130" fg:w="7"/><text x="9.8477%" y="655.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="9.7101%" y="533" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="1139" fg:w="3"/><text x="9.9244%" y="543.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="9.7101%" y="517" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="1139" fg:w="3"/><text x="9.9244%" y="527.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="9.7101%" y="501" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="1139" fg:w="3"/><text x="9.9244%" y="511.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="9.7101%" y="485" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="1139" fg:w="3"/><text x="9.9244%" y="495.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="9.7187%" y="469" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="1140" fg:w="2"/><text x="9.9330%" y="479.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="9.7187%" y="453" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="1140" fg:w="2"/><text x="9.9330%" y="463.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="9.7187%" y="437" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="1140" fg:w="2"/><text x="9.9330%" y="447.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="9.7187%" y="421" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="1140" fg:w="2"/><text x="9.9330%" y="431.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="9.7187%" y="405" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="1140" fg:w="2"/><text x="9.9330%" y="415.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="9.7187%" y="389" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="1140" fg:w="2"/><text x="9.9330%" y="399.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="9.7187%" y="373" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="1140" fg:w="2"/><text x="9.9330%" y="383.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="9.7101%" y="549" width="0.0341%" height="15" fill="rgb(213,187,12)" fg:x="1139" fg:w="4"/><text x="9.9244%" y="559.50"></text></g><g><title>finish_task_switch (7 samples, 0.06%)</title><rect x="9.6931%" y="677" width="0.0597%" height="15" fill="rgb(214,214,33)" fg:x="1137" fg:w="7"/><text x="9.9074%" y="687.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.05%)</title><rect x="9.7016%" y="661" width="0.0512%" height="15" fill="rgb(248,227,45)" fg:x="1138" fg:w="6"/><text x="9.9159%" y="671.50"></text></g><g><title>common_interrupt (6 samples, 0.05%)</title><rect x="9.7016%" y="645" width="0.0512%" height="15" fill="rgb(250,67,32)" fg:x="1138" fg:w="6"/><text x="9.9159%" y="655.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.05%)</title><rect x="9.7016%" y="629" width="0.0512%" height="15" fill="rgb(240,18,12)" fg:x="1138" fg:w="6"/><text x="9.9159%" y="639.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.04%)</title><rect x="9.7101%" y="613" width="0.0426%" height="15" fill="rgb(223,89,53)" fg:x="1139" fg:w="5"/><text x="9.9244%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.04%)</title><rect x="9.7101%" y="597" width="0.0426%" height="15" fill="rgb(208,184,36)" fg:x="1139" fg:w="5"/><text x="9.9244%" y="607.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.04%)</title><rect x="9.7101%" y="581" width="0.0426%" height="15" fill="rgb(249,91,22)" fg:x="1139" fg:w="5"/><text x="9.9244%" y="591.50"></text></g><g><title>net_rx_action (5 samples, 0.04%)</title><rect x="9.7101%" y="565" width="0.0426%" height="15" fill="rgb(231,11,52)" fg:x="1139" fg:w="5"/><text x="9.9244%" y="575.50"></text></g><g><title>schedule (22 samples, 0.19%)</title><rect x="9.6078%" y="709" width="0.1876%" height="15" fill="rgb(213,215,35)" fg:x="1127" fg:w="22"/><text x="9.8221%" y="719.50"></text></g><g><title>__schedule (22 samples, 0.19%)</title><rect x="9.6078%" y="693" width="0.1876%" height="15" fill="rgb(207,40,26)" fg:x="1127" fg:w="22"/><text x="9.8221%" y="703.50"></text></g><g><title>pick_next_task_fair (5 samples, 0.04%)</title><rect x="9.7528%" y="677" width="0.0426%" height="15" fill="rgb(247,213,54)" fg:x="1144" fg:w="5"/><text x="9.9671%" y="687.50"></text></g><g><title>put_prev_entity (2 samples, 0.02%)</title><rect x="9.7783%" y="661" width="0.0171%" height="15" fill="rgb(223,18,39)" fg:x="1147" fg:w="2"/><text x="9.9926%" y="671.50"></text></g><g><title>update_load_avg (2 samples, 0.02%)</title><rect x="9.7783%" y="645" width="0.0171%" height="15" fill="rgb(222,111,24)" fg:x="1147" fg:w="2"/><text x="9.9926%" y="655.50"></text></g><g><title>_IO_file_overflow (69 samples, 0.59%)</title><rect x="9.2157%" y="837" width="0.5882%" height="15" fill="rgb(248,85,26)" fg:x="1081" fg:w="69"/><text x="9.4300%" y="847.50"></text></g><g><title>_IO_do_write (69 samples, 0.59%)</title><rect x="9.2157%" y="821" width="0.5882%" height="15" fill="rgb(247,226,32)" fg:x="1081" fg:w="69"/><text x="9.4300%" y="831.50"></text></g><g><title>[libc-2.31.so] (69 samples, 0.59%)</title><rect x="9.2157%" y="805" width="0.5882%" height="15" fill="rgb(247,113,52)" fg:x="1081" fg:w="69"/><text x="9.4300%" y="815.50"></text></g><g><title>_IO_file_write (69 samples, 0.59%)</title><rect x="9.2157%" y="789" width="0.5882%" height="15" fill="rgb(222,148,11)" fg:x="1081" fg:w="69"/><text x="9.4300%" y="799.50"></text></g><g><title>__write (69 samples, 0.59%)</title><rect x="9.2157%" y="773" width="0.5882%" height="15" fill="rgb(227,101,21)" fg:x="1081" fg:w="69"/><text x="9.4300%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (69 samples, 0.59%)</title><rect x="9.2157%" y="757" width="0.5882%" height="15" fill="rgb(205,226,15)" fg:x="1081" fg:w="69"/><text x="9.4300%" y="767.50"></text></g><g><title>syscall_exit_to_user_mode (24 samples, 0.20%)</title><rect x="9.5993%" y="741" width="0.2046%" height="15" fill="rgb(215,101,28)" fg:x="1126" fg:w="24"/><text x="9.8136%" y="751.50"></text></g><g><title>exit_to_user_mode_prepare (24 samples, 0.20%)</title><rect x="9.5993%" y="725" width="0.2046%" height="15" fill="rgb(240,77,26)" fg:x="1126" fg:w="24"/><text x="9.8136%" y="735.50"></text></g><g><title>std::endl&lt;char, std::char_traits&lt;char&gt; &gt; (71 samples, 0.61%)</title><rect x="9.2157%" y="869" width="0.6053%" height="15" fill="rgb(246,112,30)" fg:x="1081" fg:w="71"/><text x="9.4300%" y="879.50"></text></g><g><title>std::ostream::put (71 samples, 0.61%)</title><rect x="9.2157%" y="853" width="0.6053%" height="15" fill="rgb(226,61,44)" fg:x="1081" fg:w="71"/><text x="9.4300%" y="863.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="9.8380%" y="821" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="1154" fg:w="2"/><text x="10.0523%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (7 samples, 0.06%)</title><rect x="9.8210%" y="853" width="0.0597%" height="15" fill="rgb(216,50,33)" fg:x="1152" fg:w="7"/><text x="10.0353%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (5 samples, 0.04%)</title><rect x="9.8380%" y="837" width="0.0426%" height="15" fill="rgb(250,46,35)" fg:x="1154" fg:w="5"/><text x="10.0523%" y="847.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="9.8636%" y="821" width="0.0171%" height="15" fill="rgb(221,14,53)" fg:x="1157" fg:w="2"/><text x="10.0779%" y="831.50"></text></g><g><title>operator new (6 samples, 0.05%)</title><rect x="9.8892%" y="837" width="0.0512%" height="15" fill="rgb(214,91,1)" fg:x="1160" fg:w="6"/><text x="10.1035%" y="847.50"></text></g><g><title>__libc_malloc (5 samples, 0.04%)</title><rect x="9.8977%" y="821" width="0.0426%" height="15" fill="rgb(232,24,50)" fg:x="1161" fg:w="5"/><text x="10.1120%" y="831.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="9.9147%" y="805" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="1163" fg:w="3"/><text x="10.1290%" y="815.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="9.9233%" y="789" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="1164" fg:w="2"/><text x="10.1376%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (11 samples, 0.09%)</title><rect x="9.8806%" y="853" width="0.0938%" height="15" fill="rgb(254,182,12)" fg:x="1159" fg:w="11"/><text x="10.0949%" y="863.50"></text></g><g><title>std::distance&lt;char*&gt; (2 samples, 0.02%)</title><rect x="9.9574%" y="837" width="0.0171%" height="15" fill="rgb(213,138,18)" fg:x="1168" fg:w="2"/><text x="10.1717%" y="847.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (21 samples, 0.18%)</title><rect x="9.8210%" y="869" width="0.1790%" height="15" fill="rgb(226,32,40)" fg:x="1152" fg:w="21"/><text x="10.0353%" y="879.50"></text></g><g><title>fwrite (2 samples, 0.02%)</title><rect x="10.0085%" y="837" width="0.0171%" height="15" fill="rgb(227,73,51)" fg:x="1174" fg:w="2"/><text x="10.2228%" y="847.50"></text></g><g><title>_IO_file_xsputn (2 samples, 0.02%)</title><rect x="10.0085%" y="821" width="0.0171%" height="15" fill="rgb(212,187,30)" fg:x="1174" fg:w="2"/><text x="10.2228%" y="831.50"></text></g><g><title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (4 samples, 0.03%)</title><rect x="10.0000%" y="869" width="0.0341%" height="15" fill="rgb(221,154,13)" fg:x="1173" fg:w="4"/><text x="10.2143%" y="879.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.03%)</title><rect x="10.0085%" y="853" width="0.0256%" height="15" fill="rgb(222,170,8)" fg:x="1174" fg:w="3"/><text x="10.2228%" y="863.50"></text></g><g><title>Log::write (507 samples, 4.32%)</title><rect x="5.7204%" y="885" width="4.3223%" height="15" fill="rgb(230,27,54)" fg:x="671" fg:w="507"/><text x="5.9347%" y="895.50">Log::w..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (2 samples, 0.02%)</title><rect x="10.0767%" y="821" width="0.0171%" height="15" fill="rgb(206,58,30)" fg:x="1182" fg:w="2"/><text x="10.2910%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (4 samples, 0.03%)</title><rect x="10.0682%" y="837" width="0.0341%" height="15" fill="rgb(243,60,52)" fg:x="1181" fg:w="4"/><text x="10.2825%" y="847.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (9 samples, 0.08%)</title><rect x="10.0512%" y="869" width="0.0767%" height="15" fill="rgb(251,39,6)" fg:x="1179" fg:w="9"/><text x="10.2654%" y="879.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (9 samples, 0.08%)</title><rect x="10.0512%" y="853" width="0.0767%" height="15" fill="rgb(215,30,0)" fg:x="1179" fg:w="9"/><text x="10.2654%" y="863.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (3 samples, 0.03%)</title><rect x="10.1023%" y="837" width="0.0256%" height="15" fill="rgb(206,58,30)" fg:x="1185" fg:w="3"/><text x="10.3166%" y="847.50"></text></g><g><title>Request::getHeader (17 samples, 0.14%)</title><rect x="10.0426%" y="885" width="0.1449%" height="15" fill="rgb(238,121,14)" fg:x="1178" fg:w="17"/><text x="10.2569%" y="895.50"></text></g><g><title>std::transform&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int (*)(int)&gt; (7 samples, 0.06%)</title><rect x="10.1279%" y="869" width="0.0597%" height="15" fill="rgb(232,139,18)" fg:x="1188" fg:w="7"/><text x="10.3422%" y="879.50"></text></g><g><title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (6 samples, 0.05%)</title><rect x="10.1364%" y="853" width="0.0512%" height="15" fill="rgb(253,175,3)" fg:x="1189" fg:w="6"/><text x="10.3507%" y="863.50"></text></g><g><title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (3 samples, 0.03%)</title><rect x="10.1620%" y="837" width="0.0256%" height="15" fill="rgb(235,156,39)" fg:x="1192" fg:w="3"/><text x="10.3763%" y="847.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="10.1961%" y="869" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="1196" fg:w="2"/><text x="10.4104%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.02%)</title><rect x="10.2302%" y="869" width="0.0171%" height="15" fill="rgb(216,50,33)" fg:x="1200" fg:w="2"/><text x="10.4445%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.02%)</title><rect x="10.2302%" y="853" width="0.0171%" height="15" fill="rgb(250,46,35)" fg:x="1200" fg:w="2"/><text x="10.4445%" y="863.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="10.2302%" y="837" width="0.0171%" height="15" fill="rgb(214,91,1)" fg:x="1200" fg:w="2"/><text x="10.4445%" y="847.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="10.2302%" y="821" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="1200" fg:w="2"/><text x="10.4445%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (5 samples, 0.04%)</title><rect x="10.2643%" y="853" width="0.0426%" height="15" fill="rgb(216,50,33)" fg:x="1204" fg:w="5"/><text x="10.4786%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (3 samples, 0.03%)</title><rect x="10.2813%" y="837" width="0.0256%" height="15" fill="rgb(250,46,35)" fg:x="1206" fg:w="3"/><text x="10.4956%" y="847.50"></text></g><g><title>operator new (3 samples, 0.03%)</title><rect x="10.2813%" y="821" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="1206" fg:w="3"/><text x="10.4956%" y="831.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="10.2813%" y="805" width="0.0256%" height="15" fill="rgb(232,24,50)" fg:x="1206" fg:w="3"/><text x="10.4956%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.06%)</title><rect x="10.3069%" y="853" width="0.0597%" height="15" fill="rgb(254,182,12)" fg:x="1209" fg:w="7"/><text x="10.5212%" y="863.50"></text></g><g><title>std::distance&lt;char*&gt; (2 samples, 0.02%)</title><rect x="10.3495%" y="837" width="0.0171%" height="15" fill="rgb(213,138,18)" fg:x="1214" fg:w="2"/><text x="10.5638%" y="847.50"></text></g><g><title>Response::generateHead[abi:cxx11] (25 samples, 0.21%)</title><rect x="10.1876%" y="885" width="0.2131%" height="15" fill="rgb(210,158,47)" fg:x="1195" fg:w="25"/><text x="10.4018%" y="895.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (17 samples, 0.14%)</title><rect x="10.2558%" y="869" width="0.1449%" height="15" fill="rgb(226,32,40)" fg:x="1203" fg:w="17"/><text x="10.4700%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (4 samples, 0.03%)</title><rect x="10.3666%" y="853" width="0.0341%" height="15" fill="rgb(209,28,51)" fg:x="1216" fg:w="4"/><text x="10.5809%" y="863.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="10.3666%" y="837" width="0.0341%" height="15" fill="rgb(247,113,52)" fg:x="1216" fg:w="4"/><text x="10.5809%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="10.4177%" y="869" width="0.0171%" height="15" fill="rgb(254,182,12)" fg:x="1222" fg:w="2"/><text x="10.6320%" y="879.50"></text></g><g><title>Response::getHeader (7 samples, 0.06%)</title><rect x="10.4007%" y="885" width="0.0597%" height="15" fill="rgb(223,50,9)" fg:x="1220" fg:w="7"/><text x="10.6150%" y="895.50"></text></g><g><title>std::transform&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int (*)(int)&gt; (2 samples, 0.02%)</title><rect x="10.4433%" y="869" width="0.0171%" height="15" fill="rgb(232,139,18)" fg:x="1225" fg:w="2"/><text x="10.6576%" y="879.50"></text></g><g><title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="10.4433%" y="853" width="0.0171%" height="15" fill="rgb(253,175,3)" fg:x="1225" fg:w="2"/><text x="10.6576%" y="863.50"></text></g><g><title>Response::getVersion[abi:cxx11] (2 samples, 0.02%)</title><rect x="10.4604%" y="885" width="0.0171%" height="15" fill="rgb(236,222,3)" fg:x="1227" fg:w="2"/><text x="10.6746%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.03%)</title><rect x="10.4859%" y="709" width="0.0256%" height="15" fill="rgb(254,182,12)" fg:x="1230" fg:w="3"/><text x="10.7002%" y="719.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2 samples, 0.02%)</title><rect x="10.4945%" y="693" width="0.0171%" height="15" fill="rgb(237,198,2)" fg:x="1231" fg:w="2"/><text x="10.7087%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node (4 samples, 0.03%)</title><rect x="10.4859%" y="757" width="0.0341%" height="15" fill="rgb(241,70,20)" fg:x="1230" fg:w="4"/><text x="10.7002%" y="767.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct (4 samples, 0.03%)</title><rect x="10.4859%" y="741" width="0.0341%" height="15" fill="rgb(253,150,38)" fg:x="1230" fg:w="4"/><text x="10.7002%" y="751.50"></text></g><g><title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (4 samples, 0.03%)</title><rect x="10.4859%" y="725" width="0.0341%" height="15" fill="rgb(250,81,54)" fg:x="1230" fg:w="4"/><text x="10.7002%" y="735.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (7 samples, 0.06%)</title><rect x="10.4859%" y="789" width="0.0597%" height="15" fill="rgb(249,156,9)" fg:x="1230" fg:w="7"/><text x="10.7002%" y="799.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node (7 samples, 0.06%)</title><rect x="10.4859%" y="773" width="0.0597%" height="15" fill="rgb(223,17,51)" fg:x="1230" fg:w="7"/><text x="10.7002%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node (3 samples, 0.03%)</title><rect x="10.5200%" y="757" width="0.0256%" height="15" fill="rgb(240,154,39)" fg:x="1234" fg:w="3"/><text x="10.7343%" y="767.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (3 samples, 0.03%)</title><rect x="10.5200%" y="741" width="0.0256%" height="15" fill="rgb(232,149,36)" fg:x="1234" fg:w="3"/><text x="10.7343%" y="751.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (3 samples, 0.03%)</title><rect x="10.5200%" y="725" width="0.0256%" height="15" fill="rgb(205,50,19)" fg:x="1234" fg:w="3"/><text x="10.7343%" y="735.50"></text></g><g><title>operator new (3 samples, 0.03%)</title><rect x="10.5200%" y="709" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="1234" fg:w="3"/><text x="10.7343%" y="719.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="10.5200%" y="693" width="0.0256%" height="15" fill="rgb(232,24,50)" fg:x="1234" fg:w="3"/><text x="10.7343%" y="703.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::insert (8 samples, 0.07%)</title><rect x="10.4859%" y="853" width="0.0682%" height="15" fill="rgb(253,1,32)" fg:x="1230" fg:w="8"/><text x="10.7002%" y="863.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_ (8 samples, 0.07%)</title><rect x="10.4859%" y="837" width="0.0682%" height="15" fill="rgb(229,182,52)" fg:x="1230" fg:w="8"/><text x="10.7002%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (8 samples, 0.07%)</title><rect x="10.4859%" y="821" width="0.0682%" height="15" fill="rgb(227,197,36)" fg:x="1230" fg:w="8"/><text x="10.7002%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (8 samples, 0.07%)</title><rect x="10.4859%" y="805" width="0.0682%" height="15" fill="rgb(210,214,38)" fg:x="1230" fg:w="8"/><text x="10.7002%" y="815.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (10 samples, 0.09%)</title><rect x="10.4774%" y="869" width="0.0853%" height="15" fill="rgb(213,223,15)" fg:x="1229" fg:w="10"/><text x="10.6917%" y="879.50"></text></g><g><title>Response::setHeader (11 samples, 0.09%)</title><rect x="10.4774%" y="885" width="0.0938%" height="15" fill="rgb(253,98,0)" fg:x="1229" fg:w="11"/><text x="10.6917%" y="895.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="10.5797%" y="885" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="1241" fg:w="2"/><text x="10.7940%" y="895.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="10.5797%" y="869" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="1241" fg:w="2"/><text x="10.7940%" y="879.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="10.5797%" y="853" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="1241" fg:w="2"/><text x="10.7940%" y="863.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="10.5797%" y="837" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="1241" fg:w="2"/><text x="10.7940%" y="847.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="10.5797%" y="821" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="1241" fg:w="2"/><text x="10.7940%" y="831.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="10.5797%" y="805" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="1241" fg:w="2"/><text x="10.7940%" y="815.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="10.5797%" y="789" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="1241" fg:w="2"/><text x="10.7940%" y="799.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="10.5797%" y="773" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="1241" fg:w="2"/><text x="10.7940%" y="783.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="10.5797%" y="757" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="1241" fg:w="2"/><text x="10.7940%" y="767.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="10.5797%" y="741" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="1241" fg:w="2"/><text x="10.7940%" y="751.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="10.5797%" y="725" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="1241" fg:w="2"/><text x="10.7940%" y="735.50"></text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="10.5968%" y="885" width="0.0341%" height="15" fill="rgb(221,14,53)" fg:x="1243" fg:w="4"/><text x="10.8110%" y="895.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="10.6309%" y="869" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="1247" fg:w="2"/><text x="10.8451%" y="879.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="10.6309%" y="853" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="1247" fg:w="2"/><text x="10.8451%" y="863.50"></text></g><g><title>getTime (6 samples, 0.05%)</title><rect x="10.6309%" y="885" width="0.0512%" height="15" fill="rgb(245,134,19)" fg:x="1247" fg:w="6"/><text x="10.8451%" y="895.50"></text></g><g><title>operator new (3 samples, 0.03%)</title><rect x="10.6905%" y="885" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="1254" fg:w="3"/><text x="10.9048%" y="895.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="10.6991%" y="869" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="1255" fg:w="2"/><text x="10.9133%" y="879.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (2 samples, 0.02%)</title><rect x="10.7587%" y="853" width="0.0171%" height="15" fill="rgb(237,227,49)" fg:x="1262" fg:w="2"/><text x="10.9730%" y="863.50"></text></g><g><title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream (8 samples, 0.07%)</title><rect x="10.7161%" y="885" width="0.0682%" height="15" fill="rgb(252,210,43)" fg:x="1257" fg:w="8"/><text x="10.9304%" y="895.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (3 samples, 0.03%)</title><rect x="10.7587%" y="869" width="0.0256%" height="15" fill="rgb(223,206,25)" fg:x="1262" fg:w="3"/><text x="10.9730%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.03%)</title><rect x="10.7928%" y="885" width="0.0256%" height="15" fill="rgb(244,92,22)" fg:x="1266" fg:w="3"/><text x="11.0071%" y="895.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="10.8440%" y="837" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="1272" fg:w="2"/><text x="11.0583%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (11 samples, 0.09%)</title><rect x="10.8355%" y="869" width="0.0938%" height="15" fill="rgb(216,50,33)" fg:x="1271" fg:w="11"/><text x="11.0498%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (11 samples, 0.09%)</title><rect x="10.8355%" y="853" width="0.0938%" height="15" fill="rgb(250,46,35)" fg:x="1271" fg:w="11"/><text x="11.0498%" y="863.50"></text></g><g><title>operator new (7 samples, 0.06%)</title><rect x="10.8696%" y="837" width="0.0597%" height="15" fill="rgb(214,91,1)" fg:x="1275" fg:w="7"/><text x="11.0839%" y="847.50"></text></g><g><title>__libc_malloc (7 samples, 0.06%)</title><rect x="10.8696%" y="821" width="0.0597%" height="15" fill="rgb(232,24,50)" fg:x="1275" fg:w="7"/><text x="11.0839%" y="831.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="10.9378%" y="853" width="0.0341%" height="15" fill="rgb(247,113,52)" fg:x="1283" fg:w="4"/><text x="11.1521%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.06%)</title><rect x="10.9292%" y="869" width="0.0597%" height="15" fill="rgb(254,182,12)" fg:x="1282" fg:w="7"/><text x="11.1435%" y="879.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (20 samples, 0.17%)</title><rect x="10.8269%" y="885" width="0.1705%" height="15" fill="rgb(226,32,40)" fg:x="1270" fg:w="20"/><text x="11.0412%" y="895.50"></text></g><g><title>Http::sendResponse (633 samples, 5.40%)</title><rect x="5.6266%" y="901" width="5.3964%" height="15" fill="rgb(226,37,44)" fg:x="660" fg:w="633"/><text x="5.8409%" y="911.50">Http::se..</text></g><g><title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.03%)</title><rect x="10.9974%" y="885" width="0.0256%" height="15" fill="rgb(214,68,17)" fg:x="1290" fg:w="3"/><text x="11.2117%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.02%)</title><rect x="11.0060%" y="869" width="0.0171%" height="15" fill="rgb(212,2,49)" fg:x="1291" fg:w="2"/><text x="11.2203%" y="879.50"></text></g><g><title>Request::Request (8 samples, 0.07%)</title><rect x="11.0230%" y="901" width="0.0682%" height="15" fill="rgb(236,207,40)" fg:x="1293" fg:w="8"/><text x="11.2373%" y="911.50"></text></g><g><title>Uri::Uri (4 samples, 0.03%)</title><rect x="11.0571%" y="885" width="0.0341%" height="15" fill="rgb(239,171,0)" fg:x="1297" fg:w="4"/><text x="11.2714%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.02%)</title><rect x="11.0742%" y="869" width="0.0171%" height="15" fill="rgb(244,92,22)" fg:x="1299" fg:w="2"/><text x="11.2885%" y="879.50"></text></g><g><title>Request::getHeader (3 samples, 0.03%)</title><rect x="11.0912%" y="901" width="0.0256%" height="15" fill="rgb(238,121,14)" fg:x="1301" fg:w="3"/><text x="11.3055%" y="911.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (3 samples, 0.03%)</title><rect x="11.0912%" y="885" width="0.0256%" height="15" fill="rgb(251,39,6)" fg:x="1301" fg:w="3"/><text x="11.3055%" y="895.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (3 samples, 0.03%)</title><rect x="11.0912%" y="869" width="0.0256%" height="15" fill="rgb(215,30,0)" fg:x="1301" fg:w="3"/><text x="11.3055%" y="879.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (2 samples, 0.02%)</title><rect x="11.0997%" y="853" width="0.0171%" height="15" fill="rgb(243,60,52)" fg:x="1302" fg:w="2"/><text x="11.3140%" y="863.50"></text></g><g><title>Uri::operator= (3 samples, 0.03%)</title><rect x="11.1338%" y="885" width="0.0256%" height="15" fill="rgb(253,13,14)" fg:x="1306" fg:w="3"/><text x="11.3481%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.02%)</title><rect x="11.1424%" y="869" width="0.0171%" height="15" fill="rgb(233,7,30)" fg:x="1307" fg:w="2"/><text x="11.3567%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.02%)</title><rect x="11.1424%" y="853" width="0.0171%" height="15" fill="rgb(223,211,19)" fg:x="1307" fg:w="2"/><text x="11.3567%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.03%)</title><rect x="11.1594%" y="885" width="0.0256%" height="15" fill="rgb(233,7,30)" fg:x="1309" fg:w="3"/><text x="11.3737%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.03%)</title><rect x="11.1594%" y="869" width="0.0256%" height="15" fill="rgb(223,211,19)" fg:x="1309" fg:w="3"/><text x="11.3737%" y="879.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Reuse_or_alloc_node::_Reuse_or_alloc_node (2 samples, 0.02%)</title><rect x="11.2020%" y="853" width="0.0171%" height="15" fill="rgb(226,5,33)" fg:x="1314" fg:w="2"/><text x="11.4163%" y="863.50"></text></g><g><title>Request::operator= (12 samples, 0.10%)</title><rect x="11.1253%" y="901" width="0.1023%" height="15" fill="rgb(217,165,16)" fg:x="1305" fg:w="12"/><text x="11.3396%" y="911.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator= (5 samples, 0.04%)</title><rect x="11.1850%" y="885" width="0.0426%" height="15" fill="rgb(217,57,53)" fg:x="1312" fg:w="5"/><text x="11.3993%" y="895.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator= (3 samples, 0.03%)</title><rect x="11.2020%" y="869" width="0.0256%" height="15" fill="rgb(248,210,34)" fg:x="1314" fg:w="3"/><text x="11.4163%" y="879.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (4 samples, 0.03%)</title><rect x="11.2873%" y="821" width="0.0341%" height="15" fill="rgb(243,60,52)" fg:x="1324" fg:w="4"/><text x="11.5016%" y="831.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (6 samples, 0.05%)</title><rect x="11.2873%" y="853" width="0.0512%" height="15" fill="rgb(251,39,6)" fg:x="1324" fg:w="6"/><text x="11.5016%" y="863.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (6 samples, 0.05%)</title><rect x="11.2873%" y="837" width="0.0512%" height="15" fill="rgb(215,30,0)" fg:x="1324" fg:w="6"/><text x="11.5016%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (2 samples, 0.02%)</title><rect x="11.3214%" y="821" width="0.0171%" height="15" fill="rgb(218,33,48)" fg:x="1328" fg:w="2"/><text x="11.5357%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (2 samples, 0.02%)</title><rect x="11.3470%" y="789" width="0.0171%" height="15" fill="rgb(206,139,2)" fg:x="1331" fg:w="2"/><text x="11.5613%" y="799.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (7 samples, 0.06%)</title><rect x="11.3640%" y="773" width="0.0597%" height="15" fill="rgb(249,156,9)" fg:x="1333" fg:w="7"/><text x="11.5783%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node (7 samples, 0.06%)</title><rect x="11.3640%" y="757" width="0.0597%" height="15" fill="rgb(223,17,51)" fg:x="1333" fg:w="7"/><text x="11.5783%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node (6 samples, 0.05%)</title><rect x="11.3725%" y="741" width="0.0512%" height="15" fill="rgb(240,154,39)" fg:x="1334" fg:w="6"/><text x="11.5868%" y="751.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (6 samples, 0.05%)</title><rect x="11.3725%" y="725" width="0.0512%" height="15" fill="rgb(232,149,36)" fg:x="1334" fg:w="6"/><text x="11.5868%" y="735.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (6 samples, 0.05%)</title><rect x="11.3725%" y="709" width="0.0512%" height="15" fill="rgb(205,50,19)" fg:x="1334" fg:w="6"/><text x="11.5868%" y="719.50"></text></g><g><title>operator new (5 samples, 0.04%)</title><rect x="11.3811%" y="693" width="0.0426%" height="15" fill="rgb(214,91,1)" fg:x="1335" fg:w="5"/><text x="11.5954%" y="703.50"></text></g><g><title>__libc_malloc (5 samples, 0.04%)</title><rect x="11.3811%" y="677" width="0.0426%" height="15" fill="rgb(232,24,50)" fg:x="1335" fg:w="5"/><text x="11.5954%" y="687.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::insert (13 samples, 0.11%)</title><rect x="11.3470%" y="837" width="0.1108%" height="15" fill="rgb(253,1,32)" fg:x="1331" fg:w="13"/><text x="11.5613%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_ (13 samples, 0.11%)</title><rect x="11.3470%" y="821" width="0.1108%" height="15" fill="rgb(229,182,52)" fg:x="1331" fg:w="13"/><text x="11.5613%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (13 samples, 0.11%)</title><rect x="11.3470%" y="805" width="0.1108%" height="15" fill="rgb(227,197,36)" fg:x="1331" fg:w="13"/><text x="11.5613%" y="815.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (11 samples, 0.09%)</title><rect x="11.3640%" y="789" width="0.0938%" height="15" fill="rgb(210,214,38)" fg:x="1333" fg:w="11"/><text x="11.5783%" y="799.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (3 samples, 0.03%)</title><rect x="11.4322%" y="773" width="0.0256%" height="15" fill="rgb(216,64,20)" fg:x="1341" fg:w="3"/><text x="11.6465%" y="783.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (15 samples, 0.13%)</title><rect x="11.3384%" y="853" width="0.1279%" height="15" fill="rgb(213,223,15)" fg:x="1330" fg:w="15"/><text x="11.5527%" y="863.50"></text></g><g><title>std::transform&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, int (*)(int)&gt; (11 samples, 0.09%)</title><rect x="11.4663%" y="853" width="0.0938%" height="15" fill="rgb(232,139,18)" fg:x="1345" fg:w="11"/><text x="11.6806%" y="863.50"></text></g><g><title>tolower (10 samples, 0.09%)</title><rect x="11.4749%" y="837" width="0.0853%" height="15" fill="rgb(241,224,41)" fg:x="1346" fg:w="10"/><text x="11.6891%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::erase (2 samples, 0.02%)</title><rect x="11.5601%" y="837" width="0.0171%" height="15" fill="rgb(226,31,7)" fg:x="1356" fg:w="2"/><text x="11.7744%" y="847.50"></text></g><g><title>Request::setHeader (40 samples, 0.34%)</title><rect x="11.2447%" y="869" width="0.3410%" height="15" fill="rgb(246,210,30)" fg:x="1319" fg:w="40"/><text x="11.4590%" y="879.50"></text></g><g><title>trimStart (3 samples, 0.03%)</title><rect x="11.5601%" y="853" width="0.0256%" height="15" fill="rgb(251,136,50)" fg:x="1356" fg:w="3"/><text x="11.7744%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="11.5857%" y="869" width="0.0171%" height="15" fill="rgb(254,182,12)" fg:x="1359" fg:w="2"/><text x="11.8000%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::erase (2 samples, 0.02%)</title><rect x="11.6027%" y="869" width="0.0171%" height="15" fill="rgb(226,31,7)" fg:x="1361" fg:w="2"/><text x="11.8170%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_erase (2 samples, 0.02%)</title><rect x="11.6027%" y="853" width="0.0171%" height="15" fill="rgb(230,127,2)" fg:x="1361" fg:w="2"/><text x="11.8170%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (2 samples, 0.02%)</title><rect x="11.6198%" y="869" width="0.0171%" height="15" fill="rgb(217,130,49)" fg:x="1363" fg:w="2"/><text x="11.8341%" y="879.50"></text></g><g><title>Request::parseHeader (50 samples, 0.43%)</title><rect x="11.2276%" y="885" width="0.4263%" height="15" fill="rgb(217,141,20)" fg:x="1317" fg:w="50"/><text x="11.4419%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (2 samples, 0.02%)</title><rect x="11.6368%" y="869" width="0.0171%" height="15" fill="rgb(237,70,52)" fg:x="1365" fg:w="2"/><text x="11.8511%" y="879.50"></text></g><g><title>Uri::Uri (6 samples, 0.05%)</title><rect x="11.6539%" y="885" width="0.0512%" height="15" fill="rgb(239,171,0)" fg:x="1367" fg:w="6"/><text x="11.8682%" y="895.50"></text></g><g><title>Uri::load (5 samples, 0.04%)</title><rect x="11.6624%" y="869" width="0.0426%" height="15" fill="rgb(211,228,34)" fg:x="1368" fg:w="5"/><text x="11.8767%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.03%)</title><rect x="11.7732%" y="805" width="0.0256%" height="15" fill="rgb(254,182,12)" fg:x="1381" fg:w="3"/><text x="11.9875%" y="815.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (5 samples, 0.04%)</title><rect x="11.7647%" y="837" width="0.0426%" height="15" fill="rgb(242,20,7)" fg:x="1380" fg:w="5"/><text x="11.9790%" y="847.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct (5 samples, 0.04%)</title><rect x="11.7647%" y="821" width="0.0426%" height="15" fill="rgb(240,12,15)" fg:x="1380" fg:w="5"/><text x="11.9790%" y="831.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3 samples, 0.03%)</title><rect x="11.8414%" y="837" width="0.0256%" height="15" fill="rgb(246,158,6)" fg:x="1389" fg:w="3"/><text x="12.0557%" y="847.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3 samples, 0.03%)</title><rect x="11.8414%" y="821" width="0.0256%" height="15" fill="rgb(223,217,37)" fg:x="1389" fg:w="3"/><text x="12.0557%" y="831.50"></text></g><g><title>std::uninitialized_copy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (3 samples, 0.03%)</title><rect x="11.8414%" y="805" width="0.0256%" height="15" fill="rgb(230,46,51)" fg:x="1389" fg:w="3"/><text x="12.0557%" y="815.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_check_len (5 samples, 0.04%)</title><rect x="11.8670%" y="837" width="0.0426%" height="15" fill="rgb(222,5,51)" fg:x="1392" fg:w="5"/><text x="12.0813%" y="847.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (3 samples, 0.03%)</title><rect x="11.8841%" y="821" width="0.0256%" height="15" fill="rgb(229,204,43)" fg:x="1394" fg:w="3"/><text x="12.0983%" y="831.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (20 samples, 0.17%)</title><rect x="11.7477%" y="869" width="0.1705%" height="15" fill="rgb(228,192,54)" fg:x="1378" fg:w="20"/><text x="11.9619%" y="879.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert (20 samples, 0.17%)</title><rect x="11.7477%" y="853" width="0.1705%" height="15" fill="rgb(232,153,51)" fg:x="1378" fg:w="20"/><text x="11.9619%" y="863.50"></text></g><g><title>split (26 samples, 0.22%)</title><rect x="11.7221%" y="885" width="0.2217%" height="15" fill="rgb(229,86,52)" fg:x="1375" fg:w="26"/><text x="11.9364%" y="895.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (3 samples, 0.03%)</title><rect x="11.9182%" y="869" width="0.0256%" height="15" fill="rgb(238,104,0)" fg:x="1398" fg:w="3"/><text x="12.1324%" y="879.50"></text></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_base (3 samples, 0.03%)</title><rect x="11.9182%" y="853" width="0.0256%" height="15" fill="rgb(225,180,26)" fg:x="1398" fg:w="3"/><text x="12.1324%" y="863.50"></text></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (2 samples, 0.02%)</title><rect x="11.9267%" y="837" width="0.0171%" height="15" fill="rgb(226,149,33)" fg:x="1399" fg:w="2"/><text x="12.1410%" y="847.50"></text></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (2 samples, 0.02%)</title><rect x="11.9267%" y="821" width="0.0171%" height="15" fill="rgb(208,165,31)" fg:x="1399" fg:w="2"/><text x="12.1410%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (2 samples, 0.02%)</title><rect x="11.9608%" y="885" width="0.0171%" height="15" fill="rgb(237,70,52)" fg:x="1403" fg:w="2"/><text x="12.1751%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.02%)</title><rect x="11.9608%" y="869" width="0.0171%" height="15" fill="rgb(240,176,52)" fg:x="1403" fg:w="2"/><text x="12.1751%" y="879.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="11.9608%" y="853" width="0.0171%" height="15" fill="rgb(214,91,1)" fg:x="1403" fg:w="2"/><text x="12.1751%" y="863.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="11.9608%" y="837" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="1403" fg:w="2"/><text x="12.1751%" y="847.50"></text></g><g><title>Request::parseHead (91 samples, 0.78%)</title><rect x="11.2276%" y="901" width="0.7758%" height="15" fill="rgb(235,106,14)" fg:x="1317" fg:w="91"/><text x="11.4419%" y="911.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (2 samples, 0.02%)</title><rect x="11.9864%" y="885" width="0.0171%" height="15" fill="rgb(250,109,37)" fg:x="1406" fg:w="2"/><text x="12.2006%" y="895.50"></text></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (2 samples, 0.02%)</title><rect x="11.9864%" y="869" width="0.0171%" height="15" fill="rgb(231,160,5)" fg:x="1406" fg:w="2"/><text x="12.2006%" y="879.50"></text></g><g><title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.03%)</title><rect x="12.0801%" y="821" width="0.0256%" height="15" fill="rgb(215,60,9)" fg:x="1417" fg:w="3"/><text x="12.2944%" y="831.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (8 samples, 0.07%)</title><rect x="12.0801%" y="837" width="0.0682%" height="15" fill="rgb(237,227,49)" fg:x="1417" fg:w="8"/><text x="12.2944%" y="847.50"></text></g><g><title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="12.1313%" y="821" width="0.0171%" height="15" fill="rgb(207,56,42)" fg:x="1423" fg:w="2"/><text x="12.3456%" y="831.50"></text></g><g><title>__dynamic_cast (2 samples, 0.02%)</title><rect x="12.1313%" y="805" width="0.0171%" height="15" fill="rgb(214,65,42)" fg:x="1423" fg:w="2"/><text x="12.3456%" y="815.50"></text></g><g><title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (10 samples, 0.09%)</title><rect x="12.0716%" y="869" width="0.0853%" height="15" fill="rgb(249,22,27)" fg:x="1416" fg:w="10"/><text x="12.2859%" y="879.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (9 samples, 0.08%)</title><rect x="12.0801%" y="853" width="0.0767%" height="15" fill="rgb(223,206,25)" fg:x="1417" fg:w="9"/><text x="12.2944%" y="863.50"></text></g><g><title>Address::Address (12 samples, 0.10%)</title><rect x="12.0631%" y="885" width="0.1023%" height="15" fill="rgb(231,26,17)" fg:x="1415" fg:w="12"/><text x="12.2774%" y="895.50"></text></g><g><title>Address::operator== (7 samples, 0.06%)</title><rect x="12.1654%" y="885" width="0.0597%" height="15" fill="rgb(246,87,5)" fg:x="1427" fg:w="7"/><text x="12.3797%" y="895.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_lower_bound (3 samples, 0.03%)</title><rect x="12.2421%" y="837" width="0.0256%" height="15" fill="rgb(246,72,10)" fg:x="1436" fg:w="3"/><text x="12.4564%" y="847.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2 samples, 0.02%)</title><rect x="12.2506%" y="821" width="0.0171%" height="15" fill="rgb(228,56,32)" fg:x="1437" fg:w="2"/><text x="12.4649%" y="831.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.02%)</title><rect x="12.2506%" y="805" width="0.0171%" height="15" fill="rgb(241,103,2)" fg:x="1437" fg:w="2"/><text x="12.4649%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.02%)</title><rect x="12.2506%" y="789" width="0.0171%" height="15" fill="rgb(212,2,49)" fg:x="1437" fg:w="2"/><text x="12.4649%" y="799.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (6 samples, 0.05%)</title><rect x="12.2251%" y="869" width="0.0512%" height="15" fill="rgb(242,154,52)" fg:x="1434" fg:w="6"/><text x="12.4393%" y="879.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::find (5 samples, 0.04%)</title><rect x="12.2336%" y="853" width="0.0426%" height="15" fill="rgb(207,227,6)" fg:x="1435" fg:w="5"/><text x="12.4479%" y="863.50"></text></g><g><title>Context::exists (10 samples, 0.09%)</title><rect x="12.2251%" y="885" width="0.0853%" height="15" fill="rgb(247,57,9)" fg:x="1434" fg:w="10"/><text x="12.4393%" y="895.50"></text></g><g><title>std::operator!= (4 samples, 0.03%)</title><rect x="12.2762%" y="869" width="0.0341%" height="15" fill="rgb(233,67,40)" fg:x="1440" fg:w="4"/><text x="12.4905%" y="879.50"></text></g><g><title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator* (2 samples, 0.02%)</title><rect x="12.3444%" y="853" width="0.0171%" height="15" fill="rgb(236,128,17)" fg:x="1448" fg:w="2"/><text x="12.5587%" y="863.50"></text></g><g><title>Context::getDirective (13 samples, 0.11%)</title><rect x="12.3103%" y="885" width="0.1108%" height="15" fill="rgb(251,123,38)" fg:x="1444" fg:w="13"/><text x="12.5246%" y="895.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator[] (12 samples, 0.10%)</title><rect x="12.3188%" y="869" width="0.1023%" height="15" fill="rgb(241,90,24)" fg:x="1445" fg:w="12"/><text x="12.5331%" y="879.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::lower_bound (7 samples, 0.06%)</title><rect x="12.3615%" y="853" width="0.0597%" height="15" fill="rgb(236,33,33)" fg:x="1450" fg:w="7"/><text x="12.5758%" y="863.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::lower_bound (4 samples, 0.03%)</title><rect x="12.3870%" y="837" width="0.0341%" height="15" fill="rgb(234,73,1)" fg:x="1453" fg:w="4"/><text x="12.6013%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (3 samples, 0.03%)</title><rect x="12.3956%" y="821" width="0.0256%" height="15" fill="rgb(237,13,3)" fg:x="1454" fg:w="3"/><text x="12.6099%" y="831.50"></text></g><g><title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2 samples, 0.02%)</title><rect x="12.4041%" y="805" width="0.0171%" height="15" fill="rgb(228,56,32)" fg:x="1455" fg:w="2"/><text x="12.6184%" y="815.50"></text></g><g><title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.02%)</title><rect x="12.4041%" y="789" width="0.0171%" height="15" fill="rgb(241,103,2)" fg:x="1455" fg:w="2"/><text x="12.6184%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.02%)</title><rect x="12.4041%" y="773" width="0.0171%" height="15" fill="rgb(212,2,49)" fg:x="1455" fg:w="2"/><text x="12.6184%" y="783.50"></text></g><g><title>std::_Rb_tree_const_iterator&lt;Address&gt;::operator++ (4 samples, 0.03%)</title><rect x="12.4382%" y="885" width="0.0341%" height="15" fill="rgb(217,217,31)" fg:x="1459" fg:w="4"/><text x="12.6525%" y="895.50"></text></g><g><title>std::_Rb_tree_increment (4 samples, 0.03%)</title><rect x="12.4382%" y="869" width="0.0341%" height="15" fill="rgb(205,67,33)" fg:x="1459" fg:w="4"/><text x="12.6525%" y="879.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.02%)</title><rect x="12.4723%" y="885" width="0.0171%" height="15" fill="rgb(244,92,22)" fg:x="1463" fg:w="2"/><text x="12.6866%" y="895.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="12.4723%" y="869" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="1463" fg:w="2"/><text x="12.6866%" y="879.50"></text></g><g><title>std::set&lt;Address, std::less&lt;Address&gt;, std::allocator&lt;Address&gt; &gt;::begin (3 samples, 0.03%)</title><rect x="12.4893%" y="885" width="0.0256%" height="15" fill="rgb(227,118,18)" fg:x="1465" fg:w="3"/><text x="12.7036%" y="895.50"></text></g><g><title>std::_Rb_tree&lt;Address, Address, std::_Identity&lt;Address&gt;, std::less&lt;Address&gt;, std::allocator&lt;Address&gt; &gt;::begin (3 samples, 0.03%)</title><rect x="12.4893%" y="869" width="0.0256%" height="15" fill="rgb(217,118,20)" fg:x="1465" fg:w="3"/><text x="12.7036%" y="879.50"></text></g><g><title>std::vector&lt;VirtualHost*, std::allocator&lt;VirtualHost*&gt; &gt;::empty (2 samples, 0.02%)</title><rect x="12.5149%" y="885" width="0.0171%" height="15" fill="rgb(240,148,54)" fg:x="1468" fg:w="2"/><text x="12.7292%" y="895.50"></text></g><g><title>std::vector&lt;VirtualHost*, std::allocator&lt;VirtualHost*&gt; &gt;::push_back (4 samples, 0.03%)</title><rect x="12.5320%" y="885" width="0.0341%" height="15" fill="rgb(250,124,27)" fg:x="1470" fg:w="4"/><text x="12.7463%" y="895.50"></text></g><g><title>std::vector&lt;VirtualHost*, std::allocator&lt;VirtualHost*&gt; &gt;::_M_realloc_insert (3 samples, 0.03%)</title><rect x="12.5405%" y="869" width="0.0256%" height="15" fill="rgb(237,187,46)" fg:x="1471" fg:w="3"/><text x="12.7548%" y="879.50"></text></g><g><title>std::vector&lt;VirtualHost, std::allocator&lt;VirtualHost&gt; &gt;::begin (3 samples, 0.03%)</title><rect x="12.5831%" y="885" width="0.0256%" height="15" fill="rgb(208,141,49)" fg:x="1476" fg:w="3"/><text x="12.7974%" y="895.50"></text></g><g><title>__gnu_cxx::__normal_iterator&lt;VirtualHost*, std::vector&lt;VirtualHost, std::allocator&lt;VirtualHost&gt; &gt; &gt;::__normal_iterator (3 samples, 0.03%)</title><rect x="12.5831%" y="869" width="0.0256%" height="15" fill="rgb(240,179,2)" fg:x="1476" fg:w="3"/><text x="12.7974%" y="879.50"></text></g><g><title>VirtualHost::matchVirtualHost (73 samples, 0.62%)</title><rect x="12.0205%" y="901" width="0.6223%" height="15" fill="rgb(209,165,38)" fg:x="1410" fg:w="73"/><text x="12.2347%" y="911.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (4 samples, 0.03%)</title><rect x="12.6087%" y="885" width="0.0341%" height="15" fill="rgb(238,104,0)" fg:x="1479" fg:w="4"/><text x="12.8230%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.03%)</title><rect x="12.6598%" y="901" width="0.0256%" height="15" fill="rgb(254,182,12)" fg:x="1485" fg:w="3"/><text x="12.8741%" y="911.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.02%)</title><rect x="12.6854%" y="901" width="0.0171%" height="15" fill="rgb(244,92,22)" fg:x="1488" fg:w="2"/><text x="12.8997%" y="911.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (6 samples, 0.05%)</title><rect x="12.7025%" y="885" width="0.0512%" height="15" fill="rgb(216,50,33)" fg:x="1490" fg:w="6"/><text x="12.9168%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (6 samples, 0.05%)</title><rect x="12.7025%" y="869" width="0.0512%" height="15" fill="rgb(250,46,35)" fg:x="1490" fg:w="6"/><text x="12.9168%" y="879.50"></text></g><g><title>operator new (5 samples, 0.04%)</title><rect x="12.7110%" y="853" width="0.0426%" height="15" fill="rgb(214,91,1)" fg:x="1491" fg:w="5"/><text x="12.9253%" y="863.50"></text></g><g><title>__libc_malloc (5 samples, 0.04%)</title><rect x="12.7110%" y="837" width="0.0426%" height="15" fill="rgb(232,24,50)" fg:x="1491" fg:w="5"/><text x="12.9253%" y="847.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="12.7621%" y="869" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="1497" fg:w="2"/><text x="12.9764%" y="879.50"></text></g><g><title>operator new (3 samples, 0.03%)</title><rect x="12.7877%" y="869" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="1500" fg:w="3"/><text x="13.0020%" y="879.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="12.7877%" y="853" width="0.0256%" height="15" fill="rgb(232,24,50)" fg:x="1500" fg:w="3"/><text x="13.0020%" y="863.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (15 samples, 0.13%)</title><rect x="12.7025%" y="901" width="0.1279%" height="15" fill="rgb(226,32,40)" fg:x="1490" fg:w="15"/><text x="12.9168%" y="911.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (9 samples, 0.08%)</title><rect x="12.7536%" y="885" width="0.0767%" height="15" fill="rgb(254,182,12)" fg:x="1496" fg:w="9"/><text x="12.9679%" y="895.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.04%)</title><rect x="12.8900%" y="805" width="0.0426%" height="15" fill="rgb(247,113,52)" fg:x="1512" fg:w="5"/><text x="13.1043%" y="815.50"></text></g><g><title>inet_ntop (16 samples, 0.14%)</title><rect x="12.8303%" y="869" width="0.1364%" height="15" fill="rgb(221,131,48)" fg:x="1505" fg:w="16"/><text x="13.0446%" y="879.50"></text></g><g><title>sprintf (15 samples, 0.13%)</title><rect x="12.8389%" y="853" width="0.1279%" height="15" fill="rgb(213,81,41)" fg:x="1506" fg:w="15"/><text x="13.0532%" y="863.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.13%)</title><rect x="12.8389%" y="837" width="0.1279%" height="15" fill="rgb(247,113,52)" fg:x="1506" fg:w="15"/><text x="13.0532%" y="847.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.12%)</title><rect x="12.8474%" y="821" width="0.1194%" height="15" fill="rgb(247,113,52)" fg:x="1507" fg:w="14"/><text x="13.0617%" y="831.50"></text></g><g><title>_IO_default_xsputn (4 samples, 0.03%)</title><rect x="12.9327%" y="805" width="0.0341%" height="15" fill="rgb(222,74,13)" fg:x="1517" fg:w="4"/><text x="13.1469%" y="815.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="12.9497%" y="789" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="1519" fg:w="2"/><text x="13.1640%" y="799.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="12.9497%" y="773" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="1519" fg:w="2"/><text x="13.1640%" y="783.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="12.9497%" y="757" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="1519" fg:w="2"/><text x="13.1640%" y="767.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="12.9497%" y="741" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="1519" fg:w="2"/><text x="13.1640%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="12.9497%" y="725" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="1519" fg:w="2"/><text x="13.1640%" y="735.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="12.9497%" y="709" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="1519" fg:w="2"/><text x="13.1640%" y="719.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="12.9497%" y="693" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="1519" fg:w="2"/><text x="13.1640%" y="703.50"></text></g><g><title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (2 samples, 0.02%)</title><rect x="12.9668%" y="869" width="0.0171%" height="15" fill="rgb(221,154,13)" fg:x="1521" fg:w="2"/><text x="13.1810%" y="879.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.02%)</title><rect x="12.9668%" y="853" width="0.0171%" height="15" fill="rgb(222,170,8)" fg:x="1521" fg:w="2"/><text x="13.1810%" y="863.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2 samples, 0.02%)</title><rect x="12.9668%" y="837" width="0.0171%" height="15" fill="rgb(213,123,36)" fg:x="1521" fg:w="2"/><text x="13.1810%" y="847.50"></text></g><g><title>[libstdc++.so.6.0.28] (2 samples, 0.02%)</title><rect x="12.9923%" y="837" width="0.0171%" height="15" fill="rgb(226,148,0)" fg:x="1524" fg:w="2"/><text x="13.2066%" y="847.50"></text></g><g><title>std::ostream::_M_insert&lt;unsigned long&gt; (7 samples, 0.06%)</title><rect x="12.9838%" y="869" width="0.0597%" height="15" fill="rgb(226,22,13)" fg:x="1523" fg:w="7"/><text x="13.1981%" y="879.50"></text></g><g><title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (6 samples, 0.05%)</title><rect x="12.9923%" y="853" width="0.0512%" height="15" fill="rgb(244,144,25)" fg:x="1524" fg:w="6"/><text x="13.2066%" y="863.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (4 samples, 0.03%)</title><rect x="13.0094%" y="837" width="0.0341%" height="15" fill="rgb(213,123,36)" fg:x="1526" fg:w="4"/><text x="13.2237%" y="847.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (3 samples, 0.03%)</title><rect x="13.0179%" y="821" width="0.0256%" height="15" fill="rgb(226,199,5)" fg:x="1527" fg:w="3"/><text x="13.2322%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (2 samples, 0.02%)</title><rect x="13.0264%" y="805" width="0.0171%" height="15" fill="rgb(211,92,40)" fg:x="1528" fg:w="2"/><text x="13.2407%" y="815.50"></text></g><g><title>operator&lt;&lt; (26 samples, 0.22%)</title><rect x="12.8303%" y="885" width="0.2217%" height="15" fill="rgb(206,204,30)" fg:x="1505" fg:w="26"/><text x="13.0446%" y="895.50"></text></g><g><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (3 samples, 0.03%)</title><rect x="13.0776%" y="805" width="0.0256%" height="15" fill="rgb(228,90,48)" fg:x="1534" fg:w="3"/><text x="13.2919%" y="815.50"></text></g><g><title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.04%)</title><rect x="13.0691%" y="837" width="0.0426%" height="15" fill="rgb(215,60,9)" fg:x="1533" fg:w="5"/><text x="13.2833%" y="847.50"></text></g><g><title>__dynamic_cast (5 samples, 0.04%)</title><rect x="13.0691%" y="821" width="0.0426%" height="15" fill="rgb(214,65,42)" fg:x="1533" fg:w="5"/><text x="13.2833%" y="831.50"></text></g><g><title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="13.1117%" y="837" width="0.0171%" height="15" fill="rgb(243,107,3)" fg:x="1538" fg:w="2"/><text x="13.3260%" y="847.50"></text></g><g><title>__dynamic_cast (2 samples, 0.02%)</title><rect x="13.1117%" y="821" width="0.0171%" height="15" fill="rgb(214,65,42)" fg:x="1538" fg:w="2"/><text x="13.3260%" y="831.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (11 samples, 0.09%)</title><rect x="13.0520%" y="853" width="0.0938%" height="15" fill="rgb(237,227,49)" fg:x="1531" fg:w="11"/><text x="13.2663%" y="863.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (12 samples, 0.10%)</title><rect x="13.0520%" y="869" width="0.1023%" height="15" fill="rgb(223,206,25)" fg:x="1531" fg:w="12"/><text x="13.2663%" y="879.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (13 samples, 0.11%)</title><rect x="13.0520%" y="885" width="0.1108%" height="15" fill="rgb(230,13,26)" fg:x="1531" fg:w="13"/><text x="13.2663%" y="895.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (2 samples, 0.02%)</title><rect x="13.1628%" y="885" width="0.0171%" height="15" fill="rgb(254,26,48)" fg:x="1544" fg:w="2"/><text x="13.3771%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (2 samples, 0.02%)</title><rect x="13.1628%" y="869" width="0.0171%" height="15" fill="rgb(236,91,4)" fg:x="1544" fg:w="2"/><text x="13.3771%" y="879.50"></text></g><g><title>Http::OnHeadRecv (1,508 samples, 12.86%)</title><rect x="0.3325%" y="917" width="12.8559%" height="15" fill="rgb(217,223,8)" fg:x="39" fg:w="1508"/><text x="0.5468%" y="927.50">Http::OnHeadRecv</text></g><g><title>toString&lt;Address&amp;&gt; (42 samples, 0.36%)</title><rect x="12.8303%" y="901" width="0.3581%" height="15" fill="rgb(233,146,38)" fg:x="1505" fg:w="42"/><text x="13.0446%" y="911.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (3 samples, 0.03%)</title><rect x="13.1884%" y="917" width="0.0256%" height="15" fill="rgb(217,130,49)" fg:x="1547" fg:w="3"/><text x="13.4027%" y="927.50"></text></g><g><title>AConnection::passReadBuffer (1,512 samples, 12.89%)</title><rect x="0.3325%" y="933" width="12.8900%" height="15" fill="rgb(214,198,32)" fg:x="39" fg:w="1512"/><text x="0.5468%" y="943.50">AConnection::passReadBu..</text></g><g><title>__irqentry_text_start (26 samples, 0.22%)</title><rect x="13.2481%" y="917" width="0.2217%" height="15" fill="rgb(229,107,3)" fg:x="1554" fg:w="26"/><text x="13.4624%" y="927.50"></text></g><g><title>import_single_range (4 samples, 0.03%)</title><rect x="13.5294%" y="853" width="0.0341%" height="15" fill="rgb(208,154,40)" fg:x="1587" fg:w="4"/><text x="13.7437%" y="863.50"></text></g><g><title>__kfree_skb (3 samples, 0.03%)</title><rect x="13.5976%" y="821" width="0.0256%" height="15" fill="rgb(208,195,26)" fg:x="1595" fg:w="3"/><text x="13.8119%" y="831.50"></text></g><g><title>skb_release_data (2 samples, 0.02%)</title><rect x="13.6061%" y="805" width="0.0171%" height="15" fill="rgb(252,193,18)" fg:x="1596" fg:w="2"/><text x="13.8204%" y="815.50"></text></g><g><title>kmem_cache_free (3 samples, 0.03%)</title><rect x="13.6232%" y="821" width="0.0256%" height="15" fill="rgb(225,137,16)" fg:x="1598" fg:w="3"/><text x="13.8375%" y="831.50"></text></g><g><title>lock_sock_nested (2 samples, 0.02%)</title><rect x="13.6488%" y="821" width="0.0171%" height="15" fill="rgb(207,134,26)" fg:x="1601" fg:w="2"/><text x="13.8630%" y="831.50"></text></g><g><title>skb_copy_datagram_iter (5 samples, 0.04%)</title><rect x="13.6743%" y="821" width="0.0426%" height="15" fill="rgb(241,149,22)" fg:x="1604" fg:w="5"/><text x="13.8886%" y="831.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.04%)</title><rect x="13.6743%" y="805" width="0.0426%" height="15" fill="rgb(248,96,51)" fg:x="1604" fg:w="5"/><text x="13.8886%" y="815.50"></text></g><g><title>simple_copy_to_iter (3 samples, 0.03%)</title><rect x="13.6914%" y="789" width="0.0256%" height="15" fill="rgb(239,76,11)" fg:x="1606" fg:w="3"/><text x="13.9057%" y="799.50"></text></g><g><title>__check_object_size (3 samples, 0.03%)</title><rect x="13.6914%" y="773" width="0.0256%" height="15" fill="rgb(218,1,22)" fg:x="1606" fg:w="3"/><text x="13.9057%" y="783.50"></text></g><g><title>__virt_addr_valid (2 samples, 0.02%)</title><rect x="13.6999%" y="757" width="0.0171%" height="15" fill="rgb(216,204,49)" fg:x="1607" fg:w="2"/><text x="13.9142%" y="767.50"></text></g><g><title>inet_recvmsg (20 samples, 0.17%)</title><rect x="13.5635%" y="853" width="0.1705%" height="15" fill="rgb(247,19,13)" fg:x="1591" fg:w="20"/><text x="13.7778%" y="863.50"></text></g><g><title>tcp_recvmsg (19 samples, 0.16%)</title><rect x="13.5720%" y="837" width="0.1620%" height="15" fill="rgb(228,39,8)" fg:x="1592" fg:w="19"/><text x="13.7863%" y="847.50"></text></g><g><title>tcp_cleanup_rbuf (2 samples, 0.02%)</title><rect x="13.7170%" y="821" width="0.0171%" height="15" fill="rgb(223,19,39)" fg:x="1609" fg:w="2"/><text x="13.9313%" y="831.50"></text></g><g><title>aa_sk_perm (6 samples, 0.05%)</title><rect x="13.8193%" y="821" width="0.0512%" height="15" fill="rgb(235,5,54)" fg:x="1621" fg:w="6"/><text x="14.0336%" y="831.50"></text></g><g><title>sock_recvmsg (17 samples, 0.14%)</title><rect x="13.7340%" y="853" width="0.1449%" height="15" fill="rgb(241,13,25)" fg:x="1611" fg:w="17"/><text x="13.9483%" y="863.50"></text></g><g><title>security_socket_recvmsg (13 samples, 0.11%)</title><rect x="13.7681%" y="837" width="0.1108%" height="15" fill="rgb(251,47,32)" fg:x="1615" fg:w="13"/><text x="13.9824%" y="847.50"></text></g><g><title>do_syscall_64 (46 samples, 0.39%)</title><rect x="13.5038%" y="901" width="0.3922%" height="15" fill="rgb(220,74,14)" fg:x="1584" fg:w="46"/><text x="13.7181%" y="911.50"></text></g><g><title>__x64_sys_recvfrom (46 samples, 0.39%)</title><rect x="13.5038%" y="885" width="0.3922%" height="15" fill="rgb(244,149,45)" fg:x="1584" fg:w="46"/><text x="13.7181%" y="895.50"></text></g><g><title>__sys_recvfrom (45 samples, 0.38%)</title><rect x="13.5124%" y="869" width="0.3836%" height="15" fill="rgb(223,213,54)" fg:x="1585" fg:w="45"/><text x="13.7266%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (48 samples, 0.41%)</title><rect x="13.4953%" y="917" width="0.4092%" height="15" fill="rgb(205,226,15)" fg:x="1583" fg:w="48"/><text x="13.7096%" y="927.50"></text></g><g><title>__recv (81 samples, 0.69%)</title><rect x="13.2225%" y="933" width="0.6905%" height="15" fill="rgb(241,155,16)" fg:x="1551" fg:w="81"/><text x="13.4368%" y="943.50"></text></g><g><title>operator new (3 samples, 0.03%)</title><rect x="13.9216%" y="901" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="1633" fg:w="3"/><text x="14.1359%" y="911.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="13.9216%" y="885" width="0.0256%" height="15" fill="rgb(232,24,50)" fg:x="1633" fg:w="3"/><text x="14.1359%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (5 samples, 0.04%)</title><rect x="13.9130%" y="933" width="0.0426%" height="15" fill="rgb(216,50,33)" fg:x="1632" fg:w="5"/><text x="14.1273%" y="943.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.03%)</title><rect x="13.9216%" y="917" width="0.0341%" height="15" fill="rgb(250,46,35)" fg:x="1633" fg:w="4"/><text x="14.1359%" y="927.50"></text></g><g><title>AConnection::onPollIn (1,601 samples, 13.65%)</title><rect x="0.3240%" y="949" width="13.6488%" height="15" fill="rgb(238,25,4)" fg:x="38" fg:w="1601"/><text x="0.5382%" y="959.50">AConnection::onPollIn</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt; (2 samples, 0.02%)</title><rect x="13.9557%" y="933" width="0.0171%" height="15" fill="rgb(217,84,11)" fg:x="1637" fg:w="2"/><text x="14.1700%" y="943.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="13.9557%" y="917" width="0.0171%" height="15" fill="rgb(254,182,12)" fg:x="1637" fg:w="2"/><text x="14.1700%" y="927.50"></text></g><g><title>__close_nocancel (3 samples, 0.03%)</title><rect x="13.9812%" y="949" width="0.0256%" height="15" fill="rgb(214,210,37)" fg:x="1640" fg:w="3"/><text x="14.1955%" y="959.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.02%)</title><rect x="13.9898%" y="933" width="0.0171%" height="15" fill="rgb(234,224,53)" fg:x="1641" fg:w="2"/><text x="14.2041%" y="943.50"></text></g><g><title>__open64 (2 samples, 0.02%)</title><rect x="14.0068%" y="949" width="0.0171%" height="15" fill="rgb(239,156,4)" fg:x="1643" fg:w="2"/><text x="14.2211%" y="959.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="14.0068%" y="933" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="1643" fg:w="2"/><text x="14.2211%" y="943.50"></text></g><g><title>__read (4 samples, 0.03%)</title><rect x="14.0239%" y="949" width="0.0341%" height="15" fill="rgb(238,155,20)" fg:x="1645" fg:w="4"/><text x="14.2382%" y="959.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="14.0239%" y="933" width="0.0341%" height="15" fill="rgb(229,107,3)" fg:x="1645" fg:w="4"/><text x="14.2382%" y="943.50"></text></g><g><title>__irqentry_text_start (7 samples, 0.06%)</title><rect x="14.0580%" y="933" width="0.0597%" height="15" fill="rgb(229,107,3)" fg:x="1649" fg:w="7"/><text x="14.2723%" y="943.50"></text></g><g><title>__write (10 samples, 0.09%)</title><rect x="14.0580%" y="949" width="0.0853%" height="15" fill="rgb(227,101,21)" fg:x="1649" fg:w="10"/><text x="14.2723%" y="959.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.03%)</title><rect x="14.1176%" y="933" width="0.0256%" height="15" fill="rgb(234,224,53)" fg:x="1656" fg:w="3"/><text x="14.3319%" y="943.50"></text></g><g><title>close (4 samples, 0.03%)</title><rect x="14.1603%" y="949" width="0.0341%" height="15" fill="rgb(227,142,28)" fg:x="1661" fg:w="4"/><text x="14.3746%" y="959.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="14.1603%" y="933" width="0.0341%" height="15" fill="rgb(229,107,3)" fg:x="1661" fg:w="4"/><text x="14.3746%" y="943.50"></text></g><g><title>[unknown] (1,630 samples, 13.90%)</title><rect x="0.3240%" y="965" width="13.8960%" height="15" fill="rgb(227,28,50)" fg:x="38" fg:w="1630"/><text x="0.5382%" y="975.50">[unknown]</text></g><g><title>[webserv] (2 samples, 0.02%)</title><rect x="14.2199%" y="965" width="0.0171%" height="15" fill="rgb(234,9,30)" fg:x="1668" fg:w="2"/><text x="14.4342%" y="975.50"></text></g><g><title>std::ostream::put (2 samples, 0.02%)</title><rect x="14.2199%" y="949" width="0.0171%" height="15" fill="rgb(226,61,44)" fg:x="1668" fg:w="2"/><text x="14.4342%" y="959.50"></text></g><g><title>_IO_file_overflow (2 samples, 0.02%)</title><rect x="14.2199%" y="933" width="0.0171%" height="15" fill="rgb(248,85,26)" fg:x="1668" fg:w="2"/><text x="14.4342%" y="943.50"></text></g><g><title>_IO_do_write (2 samples, 0.02%)</title><rect x="14.2199%" y="917" width="0.0171%" height="15" fill="rgb(247,226,32)" fg:x="1668" fg:w="2"/><text x="14.4342%" y="927.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="14.2199%" y="901" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="1668" fg:w="2"/><text x="14.4342%" y="911.50"></text></g><g><title>_IO_file_write (2 samples, 0.02%)</title><rect x="14.2199%" y="885" width="0.0171%" height="15" fill="rgb(222,148,11)" fg:x="1668" fg:w="2"/><text x="14.4342%" y="895.50"></text></g><g><title>__write (2 samples, 0.02%)</title><rect x="14.2199%" y="869" width="0.0171%" height="15" fill="rgb(227,101,21)" fg:x="1668" fg:w="2"/><text x="14.4342%" y="879.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="14.2199%" y="853" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="1668" fg:w="2"/><text x="14.4342%" y="863.50"></text></g><g><title>__write (2 samples, 0.02%)</title><rect x="14.2370%" y="965" width="0.0171%" height="15" fill="rgb(227,101,21)" fg:x="1670" fg:w="2"/><text x="14.4513%" y="975.50"></text></g><g><title>Http::~Http (2 samples, 0.02%)</title><rect x="14.2626%" y="869" width="0.0171%" height="15" fill="rgb(211,174,25)" fg:x="1673" fg:w="2"/><text x="14.4769%" y="879.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="14.2626%" y="853" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="1673" fg:w="2"/><text x="14.4769%" y="863.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="14.2626%" y="837" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="1673" fg:w="2"/><text x="14.4769%" y="847.50"></text></g><g><title>Poll::~Poll (3 samples, 0.03%)</title><rect x="14.2626%" y="901" width="0.0256%" height="15" fill="rgb(229,202,19)" fg:x="1673" fg:w="3"/><text x="14.4769%" y="911.50"></text></g><g><title>Poll::cleanUp (3 samples, 0.03%)</title><rect x="14.2626%" y="885" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="1673" fg:w="3"/><text x="14.4769%" y="895.50"></text></g><g><title>exit (4 samples, 0.03%)</title><rect x="14.2626%" y="933" width="0.0341%" height="15" fill="rgb(239,208,3)" fg:x="1673" fg:w="4"/><text x="14.4769%" y="943.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="14.2626%" y="917" width="0.0341%" height="15" fill="rgb(247,113,52)" fg:x="1673" fg:w="4"/><text x="14.4769%" y="927.50"></text></g><g><title>Log::write (2 samples, 0.02%)</title><rect x="14.3223%" y="885" width="0.0171%" height="15" fill="rgb(230,27,54)" fg:x="1680" fg:w="2"/><text x="14.5365%" y="895.50"></text></g><g><title>Init::initLogDefaults (3 samples, 0.03%)</title><rect x="14.3223%" y="901" width="0.0256%" height="15" fill="rgb(214,19,12)" fg:x="1680" fg:w="3"/><text x="14.5365%" y="911.50"></text></g><g><title>Init::initMimeTypes (2 samples, 0.02%)</title><rect x="14.3478%" y="901" width="0.0171%" height="15" fill="rgb(208,152,48)" fg:x="1683" fg:w="2"/><text x="14.5621%" y="911.50"></text></g><g><title>Init::init (7 samples, 0.06%)</title><rect x="14.3223%" y="917" width="0.0597%" height="15" fill="rgb(209,120,41)" fg:x="1680" fg:w="7"/><text x="14.5365%" y="927.50"></text></g><g><title>Poll::setTimeout (10 samples, 0.09%)</title><rect x="16.7775%" y="853" width="0.0853%" height="15" fill="rgb(227,76,18)" fg:x="1968" fg:w="10"/><text x="16.9918%" y="863.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="16.8457%" y="837" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="1976" fg:w="2"/><text x="17.0600%" y="847.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="16.8457%" y="821" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="1976" fg:w="2"/><text x="17.0600%" y="831.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="16.8457%" y="805" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="1976" fg:w="2"/><text x="17.0600%" y="815.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="16.8457%" y="789" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="1976" fg:w="2"/><text x="17.0600%" y="799.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="16.8457%" y="773" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="1976" fg:w="2"/><text x="17.0600%" y="783.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="16.8457%" y="757" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="1976" fg:w="2"/><text x="17.0600%" y="767.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="16.8457%" y="741" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="1976" fg:w="2"/><text x="17.0600%" y="751.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="17.6471%" y="709" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="2070" fg:w="2"/><text x="17.8613%" y="719.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="17.6471%" y="693" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="2070" fg:w="2"/><text x="17.8613%" y="703.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="17.6471%" y="677" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="2070" fg:w="2"/><text x="17.8613%" y="687.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="17.6471%" y="661" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="2070" fg:w="2"/><text x="17.8613%" y="671.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="17.6471%" y="645" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="2070" fg:w="2"/><text x="17.8613%" y="655.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="17.6471%" y="629" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="2070" fg:w="2"/><text x="17.8613%" y="639.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="17.6471%" y="613" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="2070" fg:w="2"/><text x="17.8613%" y="623.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="17.6471%" y="597" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="2070" fg:w="2"/><text x="17.8613%" y="607.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="17.6471%" y="581" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="2070" fg:w="2"/><text x="17.8613%" y="591.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="17.6471%" y="565" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="2070" fg:w="2"/><text x="17.8613%" y="575.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="17.6471%" y="549" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="2070" fg:w="2"/><text x="17.8613%" y="559.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="17.6471%" y="533" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="2070" fg:w="2"/><text x="17.8613%" y="543.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="17.6385%" y="725" width="0.0341%" height="15" fill="rgb(231,11,52)" fg:x="2069" fg:w="4"/><text x="17.8528%" y="735.50"></text></g><g><title>[[vdso]] (67 samples, 0.57%)</title><rect x="17.1100%" y="837" width="0.5712%" height="15" fill="rgb(229,169,17)" fg:x="2007" fg:w="67"/><text x="17.3243%" y="847.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.05%)</title><rect x="17.6300%" y="821" width="0.0512%" height="15" fill="rgb(248,227,45)" fg:x="2068" fg:w="6"/><text x="17.8443%" y="831.50"></text></g><g><title>common_interrupt (6 samples, 0.05%)</title><rect x="17.6300%" y="805" width="0.0512%" height="15" fill="rgb(250,67,32)" fg:x="2068" fg:w="6"/><text x="17.8443%" y="815.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.04%)</title><rect x="17.6385%" y="789" width="0.0426%" height="15" fill="rgb(240,18,12)" fg:x="2069" fg:w="5"/><text x="17.8528%" y="799.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.04%)</title><rect x="17.6385%" y="773" width="0.0426%" height="15" fill="rgb(223,89,53)" fg:x="2069" fg:w="5"/><text x="17.8528%" y="783.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.04%)</title><rect x="17.6385%" y="757" width="0.0426%" height="15" fill="rgb(208,184,36)" fg:x="2069" fg:w="5"/><text x="17.8528%" y="767.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.04%)</title><rect x="17.6385%" y="741" width="0.0426%" height="15" fill="rgb(249,91,22)" fg:x="2069" fg:w="5"/><text x="17.8528%" y="751.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="17.6897%" y="837" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="2075" fg:w="3"/><text x="17.9040%" y="847.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="17.6897%" y="821" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="2075" fg:w="3"/><text x="17.9040%" y="831.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="17.6897%" y="805" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="2075" fg:w="3"/><text x="17.9040%" y="815.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="17.6897%" y="789" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="2075" fg:w="3"/><text x="17.9040%" y="799.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="17.6897%" y="773" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="2075" fg:w="3"/><text x="17.9040%" y="783.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="17.6897%" y="757" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="2075" fg:w="3"/><text x="17.9040%" y="767.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="17.6897%" y="741" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="2075" fg:w="3"/><text x="17.9040%" y="751.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.02%)</title><rect x="17.6982%" y="725" width="0.0171%" height="15" fill="rgb(251,188,47)" fg:x="2076" fg:w="2"/><text x="17.9125%" y="735.50"></text></g><g><title>__vdso_gettimeofday (101 samples, 0.86%)</title><rect x="16.8627%" y="853" width="0.8610%" height="15" fill="rgb(246,114,18)" fg:x="1978" fg:w="101"/><text x="17.0770%" y="863.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.03%)</title><rect x="17.7238%" y="853" width="0.0341%" height="15" fill="rgb(248,227,45)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="863.50"></text></g><g><title>common_interrupt (4 samples, 0.03%)</title><rect x="17.7238%" y="837" width="0.0341%" height="15" fill="rgb(250,67,32)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="847.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="17.7238%" y="821" width="0.0341%" height="15" fill="rgb(240,18,12)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="831.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.03%)</title><rect x="17.7238%" y="805" width="0.0341%" height="15" fill="rgb(223,89,53)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="815.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="17.7238%" y="789" width="0.0341%" height="15" fill="rgb(208,184,36)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="799.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="17.7238%" y="773" width="0.0341%" height="15" fill="rgb(249,91,22)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="783.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="17.7238%" y="757" width="0.0341%" height="15" fill="rgb(231,11,52)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="767.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="17.7238%" y="741" width="0.0341%" height="15" fill="rgb(213,187,12)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="751.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="17.7238%" y="725" width="0.0341%" height="15" fill="rgb(226,216,13)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="735.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="17.7238%" y="709" width="0.0341%" height="15" fill="rgb(216,153,44)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="719.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="17.7238%" y="693" width="0.0341%" height="15" fill="rgb(227,176,26)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="703.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="17.7238%" y="677" width="0.0341%" height="15" fill="rgb(215,38,16)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="687.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="17.7238%" y="661" width="0.0341%" height="15" fill="rgb(207,166,9)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="671.50"></text></g><g><title>ip_sublist_rcv_finish (4 samples, 0.03%)</title><rect x="17.7238%" y="645" width="0.0341%" height="15" fill="rgb(223,178,14)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="655.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="17.7238%" y="629" width="0.0341%" height="15" fill="rgb(220,94,29)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="639.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="17.7238%" y="613" width="0.0341%" height="15" fill="rgb(207,19,13)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="623.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.03%)</title><rect x="17.7238%" y="597" width="0.0341%" height="15" fill="rgb(224,38,0)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="607.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.03%)</title><rect x="17.7238%" y="581" width="0.0341%" height="15" fill="rgb(228,220,18)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="591.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.03%)</title><rect x="17.7238%" y="565" width="0.0341%" height="15" fill="rgb(224,50,47)" fg:x="2079" fg:w="4"/><text x="17.9381%" y="575.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="20.0341%" y="837" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="2350" fg:w="2"/><text x="20.2484%" y="847.50"></text></g><g><title>handle_edge_irq (3 samples, 0.03%)</title><rect x="20.0512%" y="805" width="0.0256%" height="15" fill="rgb(219,15,9)" fg:x="2352" fg:w="3"/><text x="20.2654%" y="815.50"></text></g><g><title>handle_irq_event (2 samples, 0.02%)</title><rect x="20.0597%" y="789" width="0.0171%" height="15" fill="rgb(209,73,52)" fg:x="2353" fg:w="2"/><text x="20.2740%" y="799.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.02%)</title><rect x="20.0597%" y="773" width="0.0171%" height="15" fill="rgb(239,110,26)" fg:x="2353" fg:w="2"/><text x="20.2740%" y="783.50"></text></g><g><title>__ip_finish_output (2 samples, 0.02%)</title><rect x="20.1449%" y="469" width="0.0171%" height="15" fill="rgb(252,12,27)" fg:x="2363" fg:w="2"/><text x="20.3592%" y="479.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.03%)</title><rect x="20.1449%" y="501" width="0.0256%" height="15" fill="rgb(238,106,36)" fg:x="2363" fg:w="3"/><text x="20.3592%" y="511.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.03%)</title><rect x="20.1449%" y="485" width="0.0256%" height="15" fill="rgb(224,11,5)" fg:x="2363" fg:w="3"/><text x="20.3592%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (6 samples, 0.05%)</title><rect x="20.1364%" y="533" width="0.0512%" height="15" fill="rgb(226,88,38)" fg:x="2362" fg:w="6"/><text x="20.3507%" y="543.50"></text></g><g><title>tcp_write_xmit (6 samples, 0.05%)</title><rect x="20.1364%" y="517" width="0.0512%" height="15" fill="rgb(236,72,36)" fg:x="2362" fg:w="6"/><text x="20.3507%" y="527.50"></text></g><g><title>napi_complete_done (16 samples, 0.14%)</title><rect x="20.0767%" y="709" width="0.1364%" height="15" fill="rgb(226,216,13)" fg:x="2355" fg:w="16"/><text x="20.2910%" y="719.50"></text></g><g><title>netif_receive_skb_list_internal (16 samples, 0.14%)</title><rect x="20.0767%" y="693" width="0.1364%" height="15" fill="rgb(216,153,44)" fg:x="2355" fg:w="16"/><text x="20.2910%" y="703.50"></text></g><g><title>__netif_receive_skb_list_core (16 samples, 0.14%)</title><rect x="20.0767%" y="677" width="0.1364%" height="15" fill="rgb(227,176,26)" fg:x="2355" fg:w="16"/><text x="20.2910%" y="687.50"></text></g><g><title>ip_list_rcv (15 samples, 0.13%)</title><rect x="20.0853%" y="661" width="0.1279%" height="15" fill="rgb(215,38,16)" fg:x="2356" fg:w="15"/><text x="20.2995%" y="671.50"></text></g><g><title>ip_sublist_rcv (13 samples, 0.11%)</title><rect x="20.1023%" y="645" width="0.1108%" height="15" fill="rgb(207,166,9)" fg:x="2358" fg:w="13"/><text x="20.3166%" y="655.50"></text></g><g><title>ip_sublist_rcv_finish (12 samples, 0.10%)</title><rect x="20.1108%" y="629" width="0.1023%" height="15" fill="rgb(223,178,14)" fg:x="2359" fg:w="12"/><text x="20.3251%" y="639.50"></text></g><g><title>ip_local_deliver_finish (12 samples, 0.10%)</title><rect x="20.1108%" y="613" width="0.1023%" height="15" fill="rgb(220,94,29)" fg:x="2359" fg:w="12"/><text x="20.3251%" y="623.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 0.09%)</title><rect x="20.1194%" y="597" width="0.0938%" height="15" fill="rgb(207,19,13)" fg:x="2360" fg:w="11"/><text x="20.3336%" y="607.50"></text></g><g><title>tcp_v4_rcv (10 samples, 0.09%)</title><rect x="20.1279%" y="581" width="0.0853%" height="15" fill="rgb(224,38,0)" fg:x="2361" fg:w="10"/><text x="20.3422%" y="591.50"></text></g><g><title>tcp_v4_do_rcv (10 samples, 0.09%)</title><rect x="20.1279%" y="565" width="0.0853%" height="15" fill="rgb(228,220,18)" fg:x="2361" fg:w="10"/><text x="20.3422%" y="575.50"></text></g><g><title>tcp_rcv_established (9 samples, 0.08%)</title><rect x="20.1364%" y="549" width="0.0767%" height="15" fill="rgb(224,50,47)" fg:x="2362" fg:w="9"/><text x="20.3507%" y="559.50"></text></g><g><title>tcp_ack (3 samples, 0.03%)</title><rect x="20.1876%" y="533" width="0.0256%" height="15" fill="rgb(213,228,3)" fg:x="2368" fg:w="3"/><text x="20.4018%" y="543.50"></text></g><g><title>virtnet_poll (19 samples, 0.16%)</title><rect x="20.0767%" y="725" width="0.1620%" height="15" fill="rgb(213,187,12)" fg:x="2355" fg:w="19"/><text x="20.2910%" y="735.50"></text></g><g><title>net_rx_action (21 samples, 0.18%)</title><rect x="20.0767%" y="741" width="0.1790%" height="15" fill="rgb(231,11,52)" fg:x="2355" fg:w="21"/><text x="20.2910%" y="751.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.02%)</title><rect x="20.2387%" y="725" width="0.0171%" height="15" fill="rgb(251,188,47)" fg:x="2374" fg:w="2"/><text x="20.4530%" y="735.50"></text></g><g><title>free_old_xmit_skbs (2 samples, 0.02%)</title><rect x="20.2387%" y="709" width="0.0171%" height="15" fill="rgb(235,178,6)" fg:x="2374" fg:w="2"/><text x="20.4530%" y="719.50"></text></g><g><title>napi_consume_skb (2 samples, 0.02%)</title><rect x="20.2387%" y="693" width="0.0171%" height="15" fill="rgb(244,99,54)" fg:x="2374" fg:w="2"/><text x="20.4530%" y="703.50"></text></g><g><title>skb_release_head_state (2 samples, 0.02%)</title><rect x="20.2387%" y="677" width="0.0171%" height="15" fill="rgb(221,1,22)" fg:x="2374" fg:w="2"/><text x="20.4530%" y="687.50"></text></g><g><title>tcp_wfree (2 samples, 0.02%)</title><rect x="20.2387%" y="661" width="0.0171%" height="15" fill="rgb(250,102,28)" fg:x="2374" fg:w="2"/><text x="20.4530%" y="671.50"></text></g><g><title>__qdisc_run (3 samples, 0.03%)</title><rect x="20.2558%" y="613" width="0.0256%" height="15" fill="rgb(252,144,25)" fg:x="2376" fg:w="3"/><text x="20.4700%" y="623.50"></text></g><g><title>sch_direct_xmit (3 samples, 0.03%)</title><rect x="20.2558%" y="597" width="0.0256%" height="15" fill="rgb(222,128,44)" fg:x="2376" fg:w="3"/><text x="20.4700%" y="607.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.03%)</title><rect x="20.2558%" y="581" width="0.0256%" height="15" fill="rgb(251,86,39)" fg:x="2376" fg:w="3"/><text x="20.4700%" y="591.50"></text></g><g><title>start_xmit (2 samples, 0.02%)</title><rect x="20.2643%" y="565" width="0.0171%" height="15" fill="rgb(211,140,13)" fg:x="2377" fg:w="2"/><text x="20.4786%" y="575.50"></text></g><g><title>asm_common_interrupt (28 samples, 0.24%)</title><rect x="20.0512%" y="837" width="0.2387%" height="15" fill="rgb(248,227,45)" fg:x="2352" fg:w="28"/><text x="20.2654%" y="847.50"></text></g><g><title>common_interrupt (28 samples, 0.24%)</title><rect x="20.0512%" y="821" width="0.2387%" height="15" fill="rgb(250,67,32)" fg:x="2352" fg:w="28"/><text x="20.2654%" y="831.50"></text></g><g><title>irq_exit_rcu (25 samples, 0.21%)</title><rect x="20.0767%" y="805" width="0.2131%" height="15" fill="rgb(240,18,12)" fg:x="2355" fg:w="25"/><text x="20.2910%" y="815.50"></text></g><g><title>do_softirq_own_stack (25 samples, 0.21%)</title><rect x="20.0767%" y="789" width="0.2131%" height="15" fill="rgb(223,89,53)" fg:x="2355" fg:w="25"/><text x="20.2910%" y="799.50"></text></g><g><title>asm_call_sysvec_on_stack (25 samples, 0.21%)</title><rect x="20.0767%" y="773" width="0.2131%" height="15" fill="rgb(208,184,36)" fg:x="2355" fg:w="25"/><text x="20.2910%" y="783.50"></text></g><g><title>__softirqentry_text_start (25 samples, 0.21%)</title><rect x="20.0767%" y="757" width="0.2131%" height="15" fill="rgb(249,91,22)" fg:x="2355" fg:w="25"/><text x="20.2910%" y="767.50"></text></g><g><title>tasklet_action_common.constprop.0 (4 samples, 0.03%)</title><rect x="20.2558%" y="741" width="0.0341%" height="15" fill="rgb(220,151,48)" fg:x="2376" fg:w="4"/><text x="20.4700%" y="751.50"></text></g><g><title>tcp_tasklet_func (4 samples, 0.03%)</title><rect x="20.2558%" y="725" width="0.0341%" height="15" fill="rgb(218,189,37)" fg:x="2376" fg:w="4"/><text x="20.4700%" y="735.50"></text></g><g><title>tcp_tsq_handler (4 samples, 0.03%)</title><rect x="20.2558%" y="709" width="0.0341%" height="15" fill="rgb(238,207,14)" fg:x="2376" fg:w="4"/><text x="20.4700%" y="719.50"></text></g><g><title>tcp_write_xmit (4 samples, 0.03%)</title><rect x="20.2558%" y="693" width="0.0341%" height="15" fill="rgb(236,72,36)" fg:x="2376" fg:w="4"/><text x="20.4700%" y="703.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.03%)</title><rect x="20.2558%" y="677" width="0.0341%" height="15" fill="rgb(238,106,36)" fg:x="2376" fg:w="4"/><text x="20.4700%" y="687.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.03%)</title><rect x="20.2558%" y="661" width="0.0341%" height="15" fill="rgb(224,11,5)" fg:x="2376" fg:w="4"/><text x="20.4700%" y="671.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.03%)</title><rect x="20.2558%" y="645" width="0.0341%" height="15" fill="rgb(219,227,11)" fg:x="2376" fg:w="4"/><text x="20.4700%" y="655.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.03%)</title><rect x="20.2558%" y="629" width="0.0341%" height="15" fill="rgb(232,116,37)" fg:x="2376" fg:w="4"/><text x="20.4700%" y="639.50"></text></g><g><title>AConnection::onNoPollEvent (431 samples, 3.67%)</title><rect x="16.6240%" y="869" width="3.6743%" height="15" fill="rgb(239,49,17)" fg:x="1950" fg:w="431"/><text x="16.8383%" y="879.50">AConn..</text></g><g><title>operator- (297 samples, 2.53%)</title><rect x="17.7664%" y="853" width="2.5320%" height="15" fill="rgb(208,63,48)" fg:x="2084" fg:w="297"/><text x="17.9807%" y="863.50">ope..</text></g><g><title>__irqentry_text_start (11 samples, 0.09%)</title><rect x="20.9122%" y="837" width="0.0938%" height="15" fill="rgb(229,107,3)" fg:x="2453" fg:w="11"/><text x="21.1265%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.03%)</title><rect x="21.0401%" y="837" width="0.0256%" height="15" fill="rgb(234,224,53)" fg:x="2468" fg:w="3"/><text x="21.2544%" y="847.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.02%)</title><rect x="21.3725%" y="773" width="0.0171%" height="15" fill="rgb(211,8,20)" fg:x="2507" fg:w="2"/><text x="21.5868%" y="783.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.02%)</title><rect x="21.3725%" y="757" width="0.0171%" height="15" fill="rgb(210,87,27)" fg:x="2507" fg:w="2"/><text x="21.5868%" y="767.50"></text></g><g><title>import_single_range (5 samples, 0.04%)</title><rect x="21.3981%" y="773" width="0.0426%" height="15" fill="rgb(208,154,40)" fg:x="2510" fg:w="5"/><text x="21.6124%" y="783.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="21.6795%" y="741" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="751.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="21.6795%" y="725" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="735.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="21.6795%" y="709" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="719.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="21.6795%" y="693" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="21.6795%" y="677" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="687.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="21.6795%" y="661" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="671.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="21.6795%" y="645" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="655.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="21.6795%" y="629" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="639.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="21.6795%" y="613" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="623.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="21.6795%" y="597" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="607.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="21.6795%" y="581" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="591.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="21.6795%" y="565" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="575.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="21.6795%" y="549" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="2543" fg:w="3"/><text x="21.8937%" y="559.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="21.6880%" y="533" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="2544" fg:w="2"/><text x="21.9023%" y="543.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="21.6880%" y="517" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="2544" fg:w="2"/><text x="21.9023%" y="527.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="21.6880%" y="501" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="2544" fg:w="2"/><text x="21.9023%" y="511.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="21.6880%" y="485" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="2544" fg:w="2"/><text x="21.9023%" y="495.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="21.6880%" y="469" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="2544" fg:w="2"/><text x="21.9023%" y="479.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="21.6880%" y="453" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="2544" fg:w="2"/><text x="21.9023%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="21.6880%" y="437" width="0.0171%" height="15" fill="rgb(226,88,38)" fg:x="2544" fg:w="2"/><text x="21.9023%" y="447.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="21.6880%" y="421" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="2544" fg:w="2"/><text x="21.9023%" y="431.50"></text></g><g><title>skb_split (2 samples, 0.02%)</title><rect x="21.6880%" y="405" width="0.0171%" height="15" fill="rgb(252,127,50)" fg:x="2544" fg:w="2"/><text x="21.9023%" y="415.50"></text></g><g><title>inet_sendmsg (29 samples, 0.25%)</title><rect x="21.5090%" y="757" width="0.2472%" height="15" fill="rgb(243,57,38)" fg:x="2523" fg:w="29"/><text x="21.7232%" y="767.50"></text></g><g><title>inet_send_prepare (6 samples, 0.05%)</title><rect x="21.7050%" y="741" width="0.0512%" height="15" fill="rgb(240,111,44)" fg:x="2546" fg:w="6"/><text x="21.9193%" y="751.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="22.0801%" y="725" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="2590" fg:w="2"/><text x="22.2944%" y="735.50"></text></g><g><title>aa_sk_perm (22 samples, 0.19%)</title><rect x="21.9182%" y="741" width="0.1876%" height="15" fill="rgb(235,5,54)" fg:x="2571" fg:w="22"/><text x="22.1324%" y="751.50"></text></g><g><title>apparmor_socket_sendmsg (4 samples, 0.03%)</title><rect x="22.1057%" y="741" width="0.0341%" height="15" fill="rgb(214,172,22)" fg:x="2593" fg:w="4"/><text x="22.3200%" y="751.50"></text></g><g><title>tomoyo_socket_sendmsg (7 samples, 0.06%)</title><rect x="22.1398%" y="741" width="0.0597%" height="15" fill="rgb(226,26,53)" fg:x="2597" fg:w="7"/><text x="22.3541%" y="751.50"></text></g><g><title>security_socket_sendmsg (60 samples, 0.51%)</title><rect x="21.7562%" y="757" width="0.5115%" height="15" fill="rgb(207,90,34)" fg:x="2552" fg:w="60"/><text x="21.9705%" y="767.50"></text></g><g><title>tomoyo_socket_sendmsg_permission (8 samples, 0.07%)</title><rect x="22.1995%" y="741" width="0.0682%" height="15" fill="rgb(250,22,27)" fg:x="2604" fg:w="8"/><text x="22.4138%" y="751.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.06%)</title><rect x="22.3274%" y="741" width="0.0597%" height="15" fill="rgb(252,29,18)" fg:x="2619" fg:w="7"/><text x="22.5417%" y="751.50"></text></g><g><title>lock_sock_nested (8 samples, 0.07%)</title><rect x="22.3956%" y="741" width="0.0682%" height="15" fill="rgb(207,134,26)" fg:x="2627" fg:w="8"/><text x="22.6099%" y="751.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="22.4467%" y="725" width="0.0171%" height="15" fill="rgb(217,35,53)" fg:x="2633" fg:w="2"/><text x="22.6610%" y="735.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="22.5746%" y="725" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="2648" fg:w="2"/><text x="22.7889%" y="735.50"></text></g><g><title>__ip_queue_xmit (5 samples, 0.04%)</title><rect x="22.6172%" y="629" width="0.0426%" height="15" fill="rgb(224,11,5)" fg:x="2653" fg:w="5"/><text x="22.8315%" y="639.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.04%)</title><rect x="22.6172%" y="613" width="0.0426%" height="15" fill="rgb(219,227,11)" fg:x="2653" fg:w="5"/><text x="22.8315%" y="623.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.03%)</title><rect x="22.6257%" y="597" width="0.0341%" height="15" fill="rgb(232,116,37)" fg:x="2654" fg:w="4"/><text x="22.8400%" y="607.50"></text></g><g><title>__qdisc_run (4 samples, 0.03%)</title><rect x="22.6257%" y="581" width="0.0341%" height="15" fill="rgb(252,144,25)" fg:x="2654" fg:w="4"/><text x="22.8400%" y="591.50"></text></g><g><title>sch_direct_xmit (4 samples, 0.03%)</title><rect x="22.6257%" y="565" width="0.0341%" height="15" fill="rgb(222,128,44)" fg:x="2654" fg:w="4"/><text x="22.8400%" y="575.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.03%)</title><rect x="22.6257%" y="549" width="0.0341%" height="15" fill="rgb(251,86,39)" fg:x="2654" fg:w="4"/><text x="22.8400%" y="559.50"></text></g><g><title>start_xmit (4 samples, 0.03%)</title><rect x="22.6257%" y="533" width="0.0341%" height="15" fill="rgb(211,140,13)" fg:x="2654" fg:w="4"/><text x="22.8400%" y="543.50"></text></g><g><title>virtqueue_notify (3 samples, 0.03%)</title><rect x="22.6343%" y="517" width="0.0256%" height="15" fill="rgb(219,119,18)" fg:x="2655" fg:w="3"/><text x="22.8486%" y="527.50"></text></g><g><title>vp_notify (3 samples, 0.03%)</title><rect x="22.6343%" y="501" width="0.0256%" height="15" fill="rgb(230,193,37)" fg:x="2655" fg:w="3"/><text x="22.8486%" y="511.50"></text></g><g><title>iowrite16 (2 samples, 0.02%)</title><rect x="22.6428%" y="485" width="0.0171%" height="15" fill="rgb(218,139,37)" fg:x="2656" fg:w="2"/><text x="22.8571%" y="495.50"></text></g><g><title>__tcp_transmit_skb (7 samples, 0.06%)</title><rect x="22.6087%" y="645" width="0.0597%" height="15" fill="rgb(238,106,36)" fg:x="2652" fg:w="7"/><text x="22.8230%" y="655.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.03%)</title><rect x="22.6684%" y="645" width="0.0341%" height="15" fill="rgb(225,2,28)" fg:x="2659" fg:w="4"/><text x="22.8827%" y="655.50"></text></g><g><title>__alloc_skb (3 samples, 0.03%)</title><rect x="22.6769%" y="629" width="0.0256%" height="15" fill="rgb(237,90,40)" fg:x="2660" fg:w="3"/><text x="22.8912%" y="639.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.03%)</title><rect x="22.6769%" y="613" width="0.0256%" height="15" fill="rgb(228,161,44)" fg:x="2660" fg:w="3"/><text x="22.8912%" y="623.50"></text></g><g><title>tcp_rbtree_insert (2 samples, 0.02%)</title><rect x="22.7025%" y="629" width="0.0171%" height="15" fill="rgb(239,95,6)" fg:x="2663" fg:w="2"/><text x="22.9168%" y="639.50"></text></g><g><title>__tcp_push_pending_frames (14 samples, 0.12%)</title><rect x="22.6087%" y="677" width="0.1194%" height="15" fill="rgb(226,88,38)" fg:x="2652" fg:w="14"/><text x="22.8230%" y="687.50"></text></g><g><title>tcp_write_xmit (14 samples, 0.12%)</title><rect x="22.6087%" y="661" width="0.1194%" height="15" fill="rgb(236,72,36)" fg:x="2652" fg:w="14"/><text x="22.8230%" y="671.50"></text></g><g><title>tcp_event_new_data_sent (3 samples, 0.03%)</title><rect x="22.7025%" y="645" width="0.0256%" height="15" fill="rgb(227,19,23)" fg:x="2663" fg:w="3"/><text x="22.9168%" y="655.50"></text></g><g><title>__kfree_skb (2 samples, 0.02%)</title><rect x="22.7366%" y="661" width="0.0171%" height="15" fill="rgb(208,195,26)" fg:x="2667" fg:w="2"/><text x="22.9509%" y="671.50"></text></g><g><title>kfree (2 samples, 0.02%)</title><rect x="22.7366%" y="645" width="0.0171%" height="15" fill="rgb(222,6,37)" fg:x="2667" fg:w="2"/><text x="22.9509%" y="655.50"></text></g><g><title>kmem_cache_free (2 samples, 0.02%)</title><rect x="22.7536%" y="661" width="0.0171%" height="15" fill="rgb(225,137,16)" fg:x="2669" fg:w="2"/><text x="22.9679%" y="671.50"></text></g><g><title>tcp_ack (6 samples, 0.05%)</title><rect x="22.7366%" y="677" width="0.0512%" height="15" fill="rgb(213,228,3)" fg:x="2667" fg:w="6"/><text x="22.9509%" y="687.50"></text></g><g><title>__release_sock (24 samples, 0.20%)</title><rect x="22.5916%" y="725" width="0.2046%" height="15" fill="rgb(211,114,53)" fg:x="2650" fg:w="24"/><text x="22.8059%" y="735.50"></text></g><g><title>tcp_v4_do_rcv (24 samples, 0.20%)</title><rect x="22.5916%" y="709" width="0.2046%" height="15" fill="rgb(228,220,18)" fg:x="2650" fg:w="24"/><text x="22.8059%" y="719.50"></text></g><g><title>tcp_rcv_established (24 samples, 0.20%)</title><rect x="22.5916%" y="693" width="0.2046%" height="15" fill="rgb(224,50,47)" fg:x="2650" fg:w="24"/><text x="22.8059%" y="703.50"></text></g><g><title>_raw_spin_lock_bh (5 samples, 0.04%)</title><rect x="22.7962%" y="725" width="0.0426%" height="15" fill="rgb(217,35,53)" fg:x="2674" fg:w="5"/><text x="23.0105%" y="735.50"></text></g><g><title>release_sock (51 samples, 0.43%)</title><rect x="22.4638%" y="741" width="0.4348%" height="15" fill="rgb(217,78,19)" fg:x="2635" fg:w="51"/><text x="22.6781%" y="751.50"></text></g><g><title>tcp_release_cb (7 samples, 0.06%)</title><rect x="22.8389%" y="725" width="0.0597%" height="15" fill="rgb(230,144,50)" fg:x="2679" fg:w="7"/><text x="23.0532%" y="735.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.03%)</title><rect x="23.6402%" y="725" width="0.0256%" height="15" fill="rgb(229,107,3)" fg:x="2773" fg:w="3"/><text x="23.8545%" y="735.50"></text></g><g><title>__mod_memcg_state.part.0 (26 samples, 0.22%)</title><rect x="23.8193%" y="677" width="0.2217%" height="15" fill="rgb(252,169,8)" fg:x="2794" fg:w="26"/><text x="24.0336%" y="687.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="24.1432%" y="661" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="2832" fg:w="2"/><text x="24.3575%" y="671.50"></text></g><g><title>page_counter_try_charge (8 samples, 0.07%)</title><rect x="24.1603%" y="661" width="0.0682%" height="15" fill="rgb(222,104,3)" fg:x="2834" fg:w="8"/><text x="24.3746%" y="671.50"></text></g><g><title>propagate_protected_usage (2 samples, 0.02%)</title><rect x="24.2114%" y="645" width="0.0171%" height="15" fill="rgb(246,0,33)" fg:x="2840" fg:w="2"/><text x="24.4257%" y="655.50"></text></g><g><title>mem_cgroup_charge_skmem (53 samples, 0.45%)</title><rect x="23.7852%" y="693" width="0.4518%" height="15" fill="rgb(248,15,41)" fg:x="2790" fg:w="53"/><text x="23.9995%" y="703.50"></text></g><g><title>try_charge (22 samples, 0.19%)</title><rect x="24.0494%" y="677" width="0.1876%" height="15" fill="rgb(208,116,22)" fg:x="2821" fg:w="22"/><text x="24.2637%" y="687.50"></text></g><g><title>__sk_mem_schedule (75 samples, 0.64%)</title><rect x="23.6658%" y="725" width="0.6394%" height="15" fill="rgb(219,50,38)" fg:x="2776" fg:w="75"/><text x="23.8801%" y="735.50"></text></g><g><title>__sk_mem_raise_allocated (75 samples, 0.64%)</title><rect x="23.6658%" y="709" width="0.6394%" height="15" fill="rgb(232,27,1)" fg:x="2776" fg:w="75"/><text x="23.8801%" y="719.50"></text></g><g><title>tcp_leave_memory_pressure (8 samples, 0.07%)</title><rect x="24.2370%" y="693" width="0.0682%" height="15" fill="rgb(250,176,35)" fg:x="2843" fg:w="8"/><text x="24.4513%" y="703.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="24.4331%" y="693" width="0.0341%" height="15" fill="rgb(229,107,3)" fg:x="2866" fg:w="4"/><text x="24.6474%" y="703.50"></text></g><g><title>pfifo_fast_dequeue (3 samples, 0.03%)</title><rect x="24.5951%" y="613" width="0.0256%" height="15" fill="rgb(208,20,32)" fg:x="2885" fg:w="3"/><text x="24.8093%" y="623.50"></text></g><g><title>free_old_xmit_skbs (4 samples, 0.03%)</title><rect x="24.6547%" y="565" width="0.0341%" height="15" fill="rgb(235,178,6)" fg:x="2892" fg:w="4"/><text x="24.8690%" y="575.50"></text></g><g><title>sg_init_table (3 samples, 0.03%)</title><rect x="24.6888%" y="565" width="0.0256%" height="15" fill="rgb(247,5,48)" fg:x="2896" fg:w="3"/><text x="24.9031%" y="575.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="24.7570%" y="517" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="2904" fg:w="2"/><text x="24.9713%" y="527.50"></text></g><g><title>virtqueue_add_outbuf (7 samples, 0.06%)</title><rect x="24.7229%" y="565" width="0.0597%" height="15" fill="rgb(207,208,9)" fg:x="2900" fg:w="7"/><text x="24.9372%" y="575.50"></text></g><g><title>virtqueue_add_split (6 samples, 0.05%)</title><rect x="24.7315%" y="549" width="0.0512%" height="15" fill="rgb(238,41,16)" fg:x="2901" fg:w="6"/><text x="24.9457%" y="559.50"></text></g><g><title>__kmalloc (5 samples, 0.04%)</title><rect x="24.7400%" y="533" width="0.0426%" height="15" fill="rgb(221,108,10)" fg:x="2902" fg:w="5"/><text x="24.9543%" y="543.50"></text></g><g><title>dev_hard_start_xmit (40 samples, 0.34%)</title><rect x="24.6206%" y="597" width="0.3410%" height="15" fill="rgb(251,86,39)" fg:x="2888" fg:w="40"/><text x="24.8349%" y="607.50"></text></g><g><title>start_xmit (40 samples, 0.34%)</title><rect x="24.6206%" y="581" width="0.3410%" height="15" fill="rgb(211,140,13)" fg:x="2888" fg:w="40"/><text x="24.8349%" y="591.50"></text></g><g><title>virtqueue_notify (20 samples, 0.17%)</title><rect x="24.7911%" y="565" width="0.1705%" height="15" fill="rgb(219,119,18)" fg:x="2908" fg:w="20"/><text x="25.0054%" y="575.50"></text></g><g><title>vp_notify (20 samples, 0.17%)</title><rect x="24.7911%" y="549" width="0.1705%" height="15" fill="rgb(230,193,37)" fg:x="2908" fg:w="20"/><text x="25.0054%" y="559.50"></text></g><g><title>iowrite16 (20 samples, 0.17%)</title><rect x="24.7911%" y="533" width="0.1705%" height="15" fill="rgb(218,139,37)" fg:x="2908" fg:w="20"/><text x="25.0054%" y="543.50"></text></g><g><title>__qdisc_run (48 samples, 0.41%)</title><rect x="24.5780%" y="629" width="0.4092%" height="15" fill="rgb(252,144,25)" fg:x="2883" fg:w="48"/><text x="24.7923%" y="639.50"></text></g><g><title>sch_direct_xmit (43 samples, 0.37%)</title><rect x="24.6206%" y="613" width="0.3666%" height="15" fill="rgb(222,128,44)" fg:x="2888" fg:w="43"/><text x="24.8349%" y="623.50"></text></g><g><title>validate_xmit_skb_list (3 samples, 0.03%)</title><rect x="24.9616%" y="597" width="0.0256%" height="15" fill="rgb(254,174,52)" fg:x="2928" fg:w="3"/><text x="25.1759%" y="607.50"></text></g><g><title>validate_xmit_skb (3 samples, 0.03%)</title><rect x="24.9616%" y="581" width="0.0256%" height="15" fill="rgb(240,104,40)" fg:x="2928" fg:w="3"/><text x="25.1759%" y="591.50"></text></g><g><title>netif_skb_features (2 samples, 0.02%)</title><rect x="24.9702%" y="565" width="0.0171%" height="15" fill="rgb(211,31,54)" fg:x="2929" fg:w="2"/><text x="25.1844%" y="575.50"></text></g><g><title>__dev_queue_xmit (53 samples, 0.45%)</title><rect x="24.5610%" y="645" width="0.4518%" height="15" fill="rgb(232,116,37)" fg:x="2881" fg:w="53"/><text x="24.7752%" y="655.50"></text></g><g><title>pfifo_fast_enqueue (2 samples, 0.02%)</title><rect x="24.9957%" y="629" width="0.0171%" height="15" fill="rgb(250,59,0)" fg:x="2932" fg:w="2"/><text x="25.2100%" y="639.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="25.0128%" y="645" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="2934" fg:w="2"/><text x="25.2271%" y="655.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="25.0384%" y="325" width="0.0171%" height="15" fill="rgb(238,106,36)" fg:x="2937" fg:w="2"/><text x="25.2526%" y="335.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="25.0384%" y="309" width="0.0171%" height="15" fill="rgb(224,11,5)" fg:x="2937" fg:w="2"/><text x="25.2526%" y="319.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="25.0384%" y="293" width="0.0171%" height="15" fill="rgb(219,227,11)" fg:x="2937" fg:w="2"/><text x="25.2526%" y="303.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="25.0384%" y="277" width="0.0171%" height="15" fill="rgb(232,116,37)" fg:x="2937" fg:w="2"/><text x="25.2526%" y="287.50"></text></g><g><title>__qdisc_run (2 samples, 0.02%)</title><rect x="25.0384%" y="261" width="0.0171%" height="15" fill="rgb(252,144,25)" fg:x="2937" fg:w="2"/><text x="25.2526%" y="271.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.02%)</title><rect x="25.0384%" y="245" width="0.0171%" height="15" fill="rgb(222,128,44)" fg:x="2937" fg:w="2"/><text x="25.2526%" y="255.50"></text></g><g><title>__tcp_push_pending_frames (5 samples, 0.04%)</title><rect x="25.0384%" y="357" width="0.0426%" height="15" fill="rgb(226,88,38)" fg:x="2937" fg:w="5"/><text x="25.2526%" y="367.50"></text></g><g><title>tcp_write_xmit (5 samples, 0.04%)</title><rect x="25.0384%" y="341" width="0.0426%" height="15" fill="rgb(236,72,36)" fg:x="2937" fg:w="5"/><text x="25.2526%" y="351.50"></text></g><g><title>virtnet_poll (7 samples, 0.06%)</title><rect x="25.0384%" y="549" width="0.0597%" height="15" fill="rgb(213,187,12)" fg:x="2937" fg:w="7"/><text x="25.2526%" y="559.50"></text></g><g><title>napi_complete_done (7 samples, 0.06%)</title><rect x="25.0384%" y="533" width="0.0597%" height="15" fill="rgb(226,216,13)" fg:x="2937" fg:w="7"/><text x="25.2526%" y="543.50"></text></g><g><title>netif_receive_skb_list_internal (7 samples, 0.06%)</title><rect x="25.0384%" y="517" width="0.0597%" height="15" fill="rgb(216,153,44)" fg:x="2937" fg:w="7"/><text x="25.2526%" y="527.50"></text></g><g><title>__netif_receive_skb_list_core (7 samples, 0.06%)</title><rect x="25.0384%" y="501" width="0.0597%" height="15" fill="rgb(227,176,26)" fg:x="2937" fg:w="7"/><text x="25.2526%" y="511.50"></text></g><g><title>ip_list_rcv (7 samples, 0.06%)</title><rect x="25.0384%" y="485" width="0.0597%" height="15" fill="rgb(215,38,16)" fg:x="2937" fg:w="7"/><text x="25.2526%" y="495.50"></text></g><g><title>ip_sublist_rcv (7 samples, 0.06%)</title><rect x="25.0384%" y="469" width="0.0597%" height="15" fill="rgb(207,166,9)" fg:x="2937" fg:w="7"/><text x="25.2526%" y="479.50"></text></g><g><title>ip_sublist_rcv_finish (7 samples, 0.06%)</title><rect x="25.0384%" y="453" width="0.0597%" height="15" fill="rgb(223,178,14)" fg:x="2937" fg:w="7"/><text x="25.2526%" y="463.50"></text></g><g><title>ip_local_deliver_finish (7 samples, 0.06%)</title><rect x="25.0384%" y="437" width="0.0597%" height="15" fill="rgb(220,94,29)" fg:x="2937" fg:w="7"/><text x="25.2526%" y="447.50"></text></g><g><title>ip_protocol_deliver_rcu (7 samples, 0.06%)</title><rect x="25.0384%" y="421" width="0.0597%" height="15" fill="rgb(207,19,13)" fg:x="2937" fg:w="7"/><text x="25.2526%" y="431.50"></text></g><g><title>tcp_v4_rcv (7 samples, 0.06%)</title><rect x="25.0384%" y="405" width="0.0597%" height="15" fill="rgb(224,38,0)" fg:x="2937" fg:w="7"/><text x="25.2526%" y="415.50"></text></g><g><title>tcp_v4_do_rcv (7 samples, 0.06%)</title><rect x="25.0384%" y="389" width="0.0597%" height="15" fill="rgb(228,220,18)" fg:x="2937" fg:w="7"/><text x="25.2526%" y="399.50"></text></g><g><title>tcp_rcv_established (7 samples, 0.06%)</title><rect x="25.0384%" y="373" width="0.0597%" height="15" fill="rgb(224,50,47)" fg:x="2937" fg:w="7"/><text x="25.2526%" y="383.50"></text></g><g><title>tcp_ack (2 samples, 0.02%)</title><rect x="25.0810%" y="357" width="0.0171%" height="15" fill="rgb(213,228,3)" fg:x="2942" fg:w="2"/><text x="25.2953%" y="367.50"></text></g><g><title>ip_finish_output2 (68 samples, 0.58%)</title><rect x="24.5524%" y="661" width="0.5797%" height="15" fill="rgb(219,227,11)" fg:x="2880" fg:w="68"/><text x="24.7667%" y="671.50"></text></g><g><title>__local_bh_enable_ip (12 samples, 0.10%)</title><rect x="25.0298%" y="645" width="0.1023%" height="15" fill="rgb(252,29,18)" fg:x="2936" fg:w="12"/><text x="25.2441%" y="655.50"></text></g><g><title>do_softirq (12 samples, 0.10%)</title><rect x="25.0298%" y="629" width="0.1023%" height="15" fill="rgb(239,215,27)" fg:x="2936" fg:w="12"/><text x="25.2441%" y="639.50"></text></g><g><title>do_softirq_own_stack (12 samples, 0.10%)</title><rect x="25.0298%" y="613" width="0.1023%" height="15" fill="rgb(223,89,53)" fg:x="2936" fg:w="12"/><text x="25.2441%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (12 samples, 0.10%)</title><rect x="25.0298%" y="597" width="0.1023%" height="15" fill="rgb(208,184,36)" fg:x="2936" fg:w="12"/><text x="25.2441%" y="607.50"></text></g><g><title>__softirqentry_text_start (12 samples, 0.10%)</title><rect x="25.0298%" y="581" width="0.1023%" height="15" fill="rgb(249,91,22)" fg:x="2936" fg:w="12"/><text x="25.2441%" y="591.50"></text></g><g><title>net_rx_action (11 samples, 0.09%)</title><rect x="25.0384%" y="565" width="0.0938%" height="15" fill="rgb(231,11,52)" fg:x="2937" fg:w="11"/><text x="25.2526%" y="575.50"></text></g><g><title>virtnet_poll_tx (4 samples, 0.03%)</title><rect x="25.0980%" y="549" width="0.0341%" height="15" fill="rgb(251,188,47)" fg:x="2944" fg:w="4"/><text x="25.3123%" y="559.50"></text></g><g><title>free_old_xmit_skbs (4 samples, 0.03%)</title><rect x="25.0980%" y="533" width="0.0341%" height="15" fill="rgb(235,178,6)" fg:x="2944" fg:w="4"/><text x="25.3123%" y="543.50"></text></g><g><title>virtqueue_get_buf_ctx_split (3 samples, 0.03%)</title><rect x="25.1066%" y="517" width="0.0256%" height="15" fill="rgb(235,34,35)" fg:x="2945" fg:w="3"/><text x="25.3209%" y="527.50"></text></g><g><title>ip_finish_output (3 samples, 0.03%)</title><rect x="25.1321%" y="661" width="0.0256%" height="15" fill="rgb(215,36,54)" fg:x="2948" fg:w="3"/><text x="25.3464%" y="671.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (3 samples, 0.03%)</title><rect x="25.1321%" y="645" width="0.0256%" height="15" fill="rgb(227,127,27)" fg:x="2948" fg:w="3"/><text x="25.3464%" y="655.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="25.1407%" y="629" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="2949" fg:w="2"/><text x="25.3550%" y="639.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="25.1662%" y="645" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="2952" fg:w="2"/><text x="25.3805%" y="655.50"></text></g><g><title>__ip_queue_xmit (81 samples, 0.69%)</title><rect x="24.5098%" y="677" width="0.6905%" height="15" fill="rgb(224,11,5)" fg:x="2875" fg:w="81"/><text x="24.7241%" y="687.50"></text></g><g><title>ip_output (5 samples, 0.04%)</title><rect x="25.1577%" y="661" width="0.0426%" height="15" fill="rgb(213,11,33)" fg:x="2951" fg:w="5"/><text x="25.3720%" y="671.50"></text></g><g><title>nf_hook_slow (2 samples, 0.02%)</title><rect x="25.1833%" y="645" width="0.0171%" height="15" fill="rgb(226,120,15)" fg:x="2954" fg:w="2"/><text x="25.3976%" y="655.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="25.2003%" y="677" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="2956" fg:w="2"/><text x="25.4146%" y="687.50"></text></g><g><title>__tcp_transmit_skb (91 samples, 0.78%)</title><rect x="24.4672%" y="693" width="0.7758%" height="15" fill="rgb(238,106,36)" fg:x="2870" fg:w="91"/><text x="24.6815%" y="703.50"></text></g><g><title>skb_clone (2 samples, 0.02%)</title><rect x="25.2259%" y="677" width="0.0171%" height="15" fill="rgb(253,39,17)" fg:x="2959" fg:w="2"/><text x="25.4402%" y="687.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="25.2430%" y="693" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="2961" fg:w="2"/><text x="25.4573%" y="703.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="25.2430%" y="677" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="2961" fg:w="2"/><text x="25.4573%" y="687.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="25.2430%" y="661" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="2961" fg:w="2"/><text x="25.4573%" y="671.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="25.2430%" y="645" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="2961" fg:w="2"/><text x="25.4573%" y="655.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="25.2430%" y="629" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="2961" fg:w="2"/><text x="25.4573%" y="639.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="25.2430%" y="613" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="2961" fg:w="2"/><text x="25.4573%" y="623.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="25.2430%" y="597" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="2961" fg:w="2"/><text x="25.4573%" y="607.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="25.2430%" y="581" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="2961" fg:w="2"/><text x="25.4573%" y="591.50"></text></g><g><title>ktime_get (27 samples, 0.23%)</title><rect x="25.2600%" y="693" width="0.2302%" height="15" fill="rgb(226,51,13)" fg:x="2963" fg:w="27"/><text x="25.4743%" y="703.50"></text></g><g><title>kvm_clock_get_cycles (19 samples, 0.16%)</title><rect x="25.3282%" y="677" width="0.1620%" height="15" fill="rgb(213,218,37)" fg:x="2971" fg:w="19"/><text x="25.5425%" y="687.50"></text></g><g><title>pvclock_clocksource_read (11 samples, 0.09%)</title><rect x="25.3964%" y="661" width="0.0938%" height="15" fill="rgb(246,59,10)" fg:x="2979" fg:w="11"/><text x="25.6107%" y="671.50"></text></g><g><title>rb_first (3 samples, 0.03%)</title><rect x="25.4902%" y="693" width="0.0256%" height="15" fill="rgb(214,194,51)" fg:x="2990" fg:w="3"/><text x="25.7045%" y="703.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="25.5328%" y="645" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="2995" fg:w="2"/><text x="25.7471%" y="655.50"></text></g><g><title>___slab_alloc (8 samples, 0.07%)</title><rect x="25.5499%" y="629" width="0.0682%" height="15" fill="rgb(224,215,35)" fg:x="2997" fg:w="8"/><text x="25.7642%" y="639.50"></text></g><g><title>allocate_slab (4 samples, 0.03%)</title><rect x="25.5840%" y="613" width="0.0341%" height="15" fill="rgb(222,145,35)" fg:x="3001" fg:w="4"/><text x="25.7983%" y="623.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.02%)</title><rect x="25.6010%" y="597" width="0.0171%" height="15" fill="rgb(245,49,10)" fg:x="3003" fg:w="2"/><text x="25.8153%" y="607.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.02%)</title><rect x="25.6010%" y="581" width="0.0171%" height="15" fill="rgb(246,35,53)" fg:x="3003" fg:w="2"/><text x="25.8153%" y="591.50"></text></g><g><title>__slab_alloc (9 samples, 0.08%)</title><rect x="25.5499%" y="645" width="0.0767%" height="15" fill="rgb(229,140,31)" fg:x="2997" fg:w="9"/><text x="25.7642%" y="655.50"></text></g><g><title>memset (3 samples, 0.03%)</title><rect x="25.6351%" y="645" width="0.0256%" height="15" fill="rgb(251,9,1)" fg:x="3007" fg:w="3"/><text x="25.8494%" y="655.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.03%)</title><rect x="25.6351%" y="629" width="0.0256%" height="15" fill="rgb(229,107,3)" fg:x="3007" fg:w="3"/><text x="25.8494%" y="639.50"></text></g><g><title>__kmalloc_node_track_caller (18 samples, 0.15%)</title><rect x="25.5243%" y="661" width="0.1535%" height="15" fill="rgb(228,161,44)" fg:x="2994" fg:w="18"/><text x="25.7386%" y="671.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.02%)</title><rect x="25.6607%" y="645" width="0.0171%" height="15" fill="rgb(212,11,50)" fg:x="3010" fg:w="2"/><text x="25.8750%" y="655.50"></text></g><g><title>__slab_alloc (2 samples, 0.02%)</title><rect x="25.6863%" y="645" width="0.0171%" height="15" fill="rgb(229,140,31)" fg:x="3013" fg:w="2"/><text x="25.9006%" y="655.50"></text></g><g><title>___slab_alloc (2 samples, 0.02%)</title><rect x="25.6863%" y="629" width="0.0171%" height="15" fill="rgb(224,215,35)" fg:x="3013" fg:w="2"/><text x="25.9006%" y="639.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.02%)</title><rect x="25.7033%" y="645" width="0.0171%" height="15" fill="rgb(211,8,20)" fg:x="3015" fg:w="2"/><text x="25.9176%" y="655.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.02%)</title><rect x="25.7033%" y="629" width="0.0171%" height="15" fill="rgb(210,87,27)" fg:x="3015" fg:w="2"/><text x="25.9176%" y="639.50"></text></g><g><title>__alloc_skb (27 samples, 0.23%)</title><rect x="25.5158%" y="677" width="0.2302%" height="15" fill="rgb(237,90,40)" fg:x="2993" fg:w="27"/><text x="25.7301%" y="687.50"></text></g><g><title>kmem_cache_alloc_node (7 samples, 0.06%)</title><rect x="25.6863%" y="661" width="0.0597%" height="15" fill="rgb(227,94,12)" fg:x="3013" fg:w="7"/><text x="25.9006%" y="671.50"></text></g><g><title>memset (3 samples, 0.03%)</title><rect x="25.7204%" y="645" width="0.0256%" height="15" fill="rgb(251,9,1)" fg:x="3017" fg:w="3"/><text x="25.9347%" y="655.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="25.7289%" y="629" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="3018" fg:w="2"/><text x="25.9432%" y="639.50"></text></g><g><title>mem_cgroup_charge_skmem (3 samples, 0.03%)</title><rect x="25.7545%" y="677" width="0.0256%" height="15" fill="rgb(248,15,41)" fg:x="3021" fg:w="3"/><text x="25.9688%" y="687.50"></text></g><g><title>try_charge (2 samples, 0.02%)</title><rect x="25.7630%" y="661" width="0.0171%" height="15" fill="rgb(208,116,22)" fg:x="3022" fg:w="2"/><text x="25.9773%" y="671.50"></text></g><g><title>sk_stream_alloc_skb (32 samples, 0.27%)</title><rect x="25.5158%" y="693" width="0.2728%" height="15" fill="rgb(225,2,28)" fg:x="2993" fg:w="32"/><text x="25.7301%" y="703.50"></text></g><g><title>enqueue_timer (2 samples, 0.02%)</title><rect x="25.8142%" y="645" width="0.0171%" height="15" fill="rgb(247,1,33)" fg:x="3028" fg:w="2"/><text x="26.0284%" y="655.50"></text></g><g><title>tcp_event_new_data_sent (5 samples, 0.04%)</title><rect x="25.8056%" y="693" width="0.0426%" height="15" fill="rgb(227,19,23)" fg:x="3027" fg:w="5"/><text x="26.0199%" y="703.50"></text></g><g><title>sk_reset_timer (5 samples, 0.04%)</title><rect x="25.8056%" y="677" width="0.0426%" height="15" fill="rgb(220,37,33)" fg:x="3027" fg:w="5"/><text x="26.0199%" y="687.50"></text></g><g><title>__mod_timer (5 samples, 0.04%)</title><rect x="25.8056%" y="661" width="0.0426%" height="15" fill="rgb(232,140,47)" fg:x="3027" fg:w="5"/><text x="26.0199%" y="671.50"></text></g><g><title>get_nohz_timer_target (2 samples, 0.02%)</title><rect x="25.8312%" y="645" width="0.0171%" height="15" fill="rgb(247,59,26)" fg:x="3030" fg:w="2"/><text x="26.0455%" y="655.50"></text></g><g><title>__tcp_push_pending_frames (184 samples, 1.57%)</title><rect x="24.3052%" y="725" width="1.5686%" height="15" fill="rgb(226,88,38)" fg:x="2851" fg:w="184"/><text x="24.5195%" y="735.50">_..</text></g><g><title>tcp_write_xmit (183 samples, 1.56%)</title><rect x="24.3137%" y="709" width="1.5601%" height="15" fill="rgb(236,72,36)" fg:x="2852" fg:w="183"/><text x="24.5280%" y="719.50">t..</text></g><g><title>tcp_schedule_loss_probe.part.0 (3 samples, 0.03%)</title><rect x="25.8483%" y="693" width="0.0256%" height="15" fill="rgb(213,104,8)" fg:x="3032" fg:w="3"/><text x="26.0625%" y="703.50"></text></g><g><title>__x86_return_thunk (3 samples, 0.03%)</title><rect x="25.8738%" y="725" width="0.0256%" height="15" fill="rgb(211,8,20)" fg:x="3035" fg:w="3"/><text x="26.0881%" y="735.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.05%)</title><rect x="25.8994%" y="725" width="0.0512%" height="15" fill="rgb(248,227,45)" fg:x="3038" fg:w="6"/><text x="26.1137%" y="735.50"></text></g><g><title>common_interrupt (6 samples, 0.05%)</title><rect x="25.8994%" y="709" width="0.0512%" height="15" fill="rgb(250,67,32)" fg:x="3038" fg:w="6"/><text x="26.1137%" y="719.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.04%)</title><rect x="25.9079%" y="693" width="0.0426%" height="15" fill="rgb(240,18,12)" fg:x="3039" fg:w="5"/><text x="26.1222%" y="703.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.04%)</title><rect x="25.9079%" y="677" width="0.0426%" height="15" fill="rgb(223,89,53)" fg:x="3039" fg:w="5"/><text x="26.1222%" y="687.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.04%)</title><rect x="25.9079%" y="661" width="0.0426%" height="15" fill="rgb(208,184,36)" fg:x="3039" fg:w="5"/><text x="26.1222%" y="671.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.04%)</title><rect x="25.9079%" y="645" width="0.0426%" height="15" fill="rgb(249,91,22)" fg:x="3039" fg:w="5"/><text x="26.1222%" y="655.50"></text></g><g><title>net_rx_action (5 samples, 0.04%)</title><rect x="25.9079%" y="629" width="0.0426%" height="15" fill="rgb(231,11,52)" fg:x="3039" fg:w="5"/><text x="26.1222%" y="639.50"></text></g><g><title>virtnet_poll (5 samples, 0.04%)</title><rect x="25.9079%" y="613" width="0.0426%" height="15" fill="rgb(213,187,12)" fg:x="3039" fg:w="5"/><text x="26.1222%" y="623.50"></text></g><g><title>napi_complete_done (5 samples, 0.04%)</title><rect x="25.9079%" y="597" width="0.0426%" height="15" fill="rgb(226,216,13)" fg:x="3039" fg:w="5"/><text x="26.1222%" y="607.50"></text></g><g><title>netif_receive_skb_list_internal (5 samples, 0.04%)</title><rect x="25.9079%" y="581" width="0.0426%" height="15" fill="rgb(216,153,44)" fg:x="3039" fg:w="5"/><text x="26.1222%" y="591.50"></text></g><g><title>__netif_receive_skb_list_core (5 samples, 0.04%)</title><rect x="25.9079%" y="565" width="0.0426%" height="15" fill="rgb(227,176,26)" fg:x="3039" fg:w="5"/><text x="26.1222%" y="575.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="25.9250%" y="549" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="3041" fg:w="3"/><text x="26.1393%" y="559.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="25.9250%" y="533" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="3041" fg:w="3"/><text x="26.1393%" y="543.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="25.9335%" y="517" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="3042" fg:w="2"/><text x="26.1478%" y="527.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="25.9335%" y="501" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="3042" fg:w="2"/><text x="26.1478%" y="511.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="25.9335%" y="485" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="3042" fg:w="2"/><text x="26.1478%" y="495.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="25.9335%" y="469" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="3042" fg:w="2"/><text x="26.1478%" y="479.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="25.9591%" y="645" width="0.0171%" height="15" fill="rgb(232,211,54)" fg:x="3045" fg:w="2"/><text x="26.1734%" y="655.50"></text></g><g><title>tick_sched_timer (2 samples, 0.02%)</title><rect x="25.9591%" y="629" width="0.0171%" height="15" fill="rgb(237,67,28)" fg:x="3045" fg:w="2"/><text x="26.1734%" y="639.50"></text></g><g><title>tick_sched_handle (2 samples, 0.02%)</title><rect x="25.9591%" y="613" width="0.0171%" height="15" fill="rgb(232,138,39)" fg:x="3045" fg:w="2"/><text x="26.1734%" y="623.50"></text></g><g><title>update_process_times (2 samples, 0.02%)</title><rect x="25.9591%" y="597" width="0.0171%" height="15" fill="rgb(236,132,35)" fg:x="3045" fg:w="2"/><text x="26.1734%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.03%)</title><rect x="25.9506%" y="725" width="0.0341%" height="15" fill="rgb(209,17,43)" fg:x="3044" fg:w="4"/><text x="26.1648%" y="735.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="25.9591%" y="709" width="0.0256%" height="15" fill="rgb(218,44,13)" fg:x="3045" fg:w="3"/><text x="26.1734%" y="719.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="25.9591%" y="693" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="3045" fg:w="3"/><text x="26.1734%" y="703.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="25.9591%" y="677" width="0.0256%" height="15" fill="rgb(221,147,0)" fg:x="3045" fg:w="3"/><text x="26.1734%" y="687.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.03%)</title><rect x="25.9591%" y="661" width="0.0256%" height="15" fill="rgb(212,109,30)" fg:x="3045" fg:w="3"/><text x="26.1734%" y="671.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.02%)</title><rect x="26.2234%" y="677" width="0.0171%" height="15" fill="rgb(211,8,20)" fg:x="3076" fg:w="2"/><text x="26.4376%" y="687.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.02%)</title><rect x="26.2234%" y="661" width="0.0171%" height="15" fill="rgb(210,87,27)" fg:x="3076" fg:w="2"/><text x="26.4376%" y="671.50"></text></g><g><title>__inc_numa_state (2 samples, 0.02%)</title><rect x="26.6070%" y="661" width="0.0171%" height="15" fill="rgb(213,57,28)" fg:x="3121" fg:w="2"/><text x="26.8213%" y="671.50"></text></g><g><title>__list_del_entry_valid (23 samples, 0.20%)</title><rect x="26.6326%" y="661" width="0.1961%" height="15" fill="rgb(224,110,12)" fg:x="3124" fg:w="23"/><text x="26.8469%" y="671.50"></text></g><g><title>__mod_zone_page_state (5 samples, 0.04%)</title><rect x="26.8286%" y="661" width="0.0426%" height="15" fill="rgb(241,16,32)" fg:x="3147" fg:w="5"/><text x="27.0429%" y="671.50"></text></g><g><title>__zone_watermark_ok (2 samples, 0.02%)</title><rect x="26.8713%" y="661" width="0.0171%" height="15" fill="rgb(205,141,19)" fg:x="3152" fg:w="2"/><text x="27.0856%" y="671.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="26.8968%" y="661" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="3155" fg:w="3"/><text x="27.1111%" y="671.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="26.8968%" y="645" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="3155" fg:w="3"/><text x="27.1111%" y="655.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="26.9054%" y="629" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="639.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="26.9054%" y="613" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="26.9054%" y="597" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="607.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="26.9054%" y="581" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="591.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="26.9054%" y="565" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="575.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="26.9054%" y="549" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="559.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="26.9054%" y="533" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="543.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="26.9054%" y="517" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="527.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="26.9054%" y="501" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="511.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="26.9054%" y="485" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="495.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="26.9054%" y="469" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="479.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="26.9054%" y="453" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="463.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="26.9054%" y="437" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="447.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="26.9054%" y="421" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="431.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="26.9054%" y="405" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="415.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="26.9054%" y="389" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="399.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="26.9054%" y="373" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="3156" fg:w="2"/><text x="27.1197%" y="383.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="27.0503%" y="629" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="3173" fg:w="2"/><text x="27.2646%" y="639.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="27.0503%" y="613" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="3173" fg:w="2"/><text x="27.2646%" y="623.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="27.0503%" y="597" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="3173" fg:w="2"/><text x="27.2646%" y="607.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="27.0503%" y="581" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="3173" fg:w="2"/><text x="27.2646%" y="591.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="27.0503%" y="565" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="3173" fg:w="2"/><text x="27.2646%" y="575.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="27.0503%" y="549" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="3173" fg:w="2"/><text x="27.2646%" y="559.50"></text></g><g><title>__irqentry_text_start (25 samples, 0.21%)</title><rect x="31.6368%" y="613" width="0.2131%" height="15" fill="rgb(229,107,3)" fg:x="3711" fg:w="25"/><text x="31.8511%" y="623.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.02%)</title><rect x="31.8670%" y="533" width="0.0171%" height="15" fill="rgb(239,110,26)" fg:x="3738" fg:w="2"/><text x="32.0813%" y="543.50"></text></g><g><title>vring_interrupt (2 samples, 0.02%)</title><rect x="31.8670%" y="517" width="0.0171%" height="15" fill="rgb(206,212,41)" fg:x="3738" fg:w="2"/><text x="32.0813%" y="527.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.04%)</title><rect x="31.8500%" y="581" width="0.0426%" height="15" fill="rgb(208,184,36)" fg:x="3736" fg:w="5"/><text x="32.0642%" y="591.50"></text></g><g><title>handle_edge_irq (4 samples, 0.03%)</title><rect x="31.8585%" y="565" width="0.0341%" height="15" fill="rgb(219,15,9)" fg:x="3737" fg:w="4"/><text x="32.0728%" y="575.50"></text></g><g><title>handle_irq_event (3 samples, 0.03%)</title><rect x="31.8670%" y="549" width="0.0256%" height="15" fill="rgb(209,73,52)" fg:x="3738" fg:w="3"/><text x="32.0813%" y="559.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.02%)</title><rect x="31.9352%" y="437" width="0.0171%" height="15" fill="rgb(214,210,17)" fg:x="3746" fg:w="2"/><text x="32.1495%" y="447.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.04%)</title><rect x="31.9608%" y="277" width="0.0426%" height="15" fill="rgb(238,106,36)" fg:x="3749" fg:w="5"/><text x="32.1751%" y="287.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.03%)</title><rect x="31.9693%" y="261" width="0.0341%" height="15" fill="rgb(224,11,5)" fg:x="3750" fg:w="4"/><text x="32.1836%" y="271.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="31.9864%" y="245" width="0.0171%" height="15" fill="rgb(219,227,11)" fg:x="3752" fg:w="2"/><text x="32.2006%" y="255.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="31.9864%" y="229" width="0.0171%" height="15" fill="rgb(232,116,37)" fg:x="3752" fg:w="2"/><text x="32.2006%" y="239.50"></text></g><g><title>__qdisc_run (2 samples, 0.02%)</title><rect x="31.9864%" y="213" width="0.0171%" height="15" fill="rgb(252,144,25)" fg:x="3752" fg:w="2"/><text x="32.2006%" y="223.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.02%)</title><rect x="31.9864%" y="197" width="0.0171%" height="15" fill="rgb(222,128,44)" fg:x="3752" fg:w="2"/><text x="32.2006%" y="207.50"></text></g><g><title>validate_xmit_skb_list (2 samples, 0.02%)</title><rect x="31.9864%" y="181" width="0.0171%" height="15" fill="rgb(254,174,52)" fg:x="3752" fg:w="2"/><text x="32.2006%" y="191.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.02%)</title><rect x="31.9864%" y="165" width="0.0171%" height="15" fill="rgb(240,104,40)" fg:x="3752" fg:w="2"/><text x="32.2006%" y="175.50"></text></g><g><title>netif_skb_features (2 samples, 0.02%)</title><rect x="31.9864%" y="149" width="0.0171%" height="15" fill="rgb(211,31,54)" fg:x="3752" fg:w="2"/><text x="32.2006%" y="159.50"></text></g><g><title>__tcp_push_pending_frames (6 samples, 0.05%)</title><rect x="31.9608%" y="309" width="0.0512%" height="15" fill="rgb(226,88,38)" fg:x="3749" fg:w="6"/><text x="32.1751%" y="319.50"></text></g><g><title>tcp_write_xmit (6 samples, 0.05%)</title><rect x="31.9608%" y="293" width="0.0512%" height="15" fill="rgb(236,72,36)" fg:x="3749" fg:w="6"/><text x="32.1751%" y="303.50"></text></g><g><title>kmem_cache_free (2 samples, 0.02%)</title><rect x="32.0205%" y="309" width="0.0171%" height="15" fill="rgb(225,137,16)" fg:x="3756" fg:w="2"/><text x="32.2347%" y="319.50"></text></g><g><title>rb_erase (2 samples, 0.02%)</title><rect x="32.0460%" y="293" width="0.0171%" height="15" fill="rgb(234,120,13)" fg:x="3759" fg:w="2"/><text x="32.2603%" y="303.50"></text></g><g><title>tcp_ack (6 samples, 0.05%)</title><rect x="32.0375%" y="309" width="0.0512%" height="15" fill="rgb(213,228,3)" fg:x="3758" fg:w="6"/><text x="32.2518%" y="319.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (2 samples, 0.02%)</title><rect x="32.0716%" y="293" width="0.0171%" height="15" fill="rgb(213,104,8)" fg:x="3762" fg:w="2"/><text x="32.2859%" y="303.50"></text></g><g><title>napi_complete_done (20 samples, 0.17%)</title><rect x="31.9267%" y="485" width="0.1705%" height="15" fill="rgb(226,216,13)" fg:x="3745" fg:w="20"/><text x="32.1410%" y="495.50"></text></g><g><title>netif_receive_skb_list_internal (20 samples, 0.17%)</title><rect x="31.9267%" y="469" width="0.1705%" height="15" fill="rgb(216,153,44)" fg:x="3745" fg:w="20"/><text x="32.1410%" y="479.50"></text></g><g><title>__netif_receive_skb_list_core (20 samples, 0.17%)</title><rect x="31.9267%" y="453" width="0.1705%" height="15" fill="rgb(227,176,26)" fg:x="3745" fg:w="20"/><text x="32.1410%" y="463.50"></text></g><g><title>ip_list_rcv (17 samples, 0.14%)</title><rect x="31.9523%" y="437" width="0.1449%" height="15" fill="rgb(215,38,16)" fg:x="3748" fg:w="17"/><text x="32.1665%" y="447.50"></text></g><g><title>ip_sublist_rcv (16 samples, 0.14%)</title><rect x="31.9608%" y="421" width="0.1364%" height="15" fill="rgb(207,166,9)" fg:x="3749" fg:w="16"/><text x="32.1751%" y="431.50"></text></g><g><title>ip_sublist_rcv_finish (16 samples, 0.14%)</title><rect x="31.9608%" y="405" width="0.1364%" height="15" fill="rgb(223,178,14)" fg:x="3749" fg:w="16"/><text x="32.1751%" y="415.50"></text></g><g><title>ip_local_deliver_finish (16 samples, 0.14%)</title><rect x="31.9608%" y="389" width="0.1364%" height="15" fill="rgb(220,94,29)" fg:x="3749" fg:w="16"/><text x="32.1751%" y="399.50"></text></g><g><title>ip_protocol_deliver_rcu (16 samples, 0.14%)</title><rect x="31.9608%" y="373" width="0.1364%" height="15" fill="rgb(207,19,13)" fg:x="3749" fg:w="16"/><text x="32.1751%" y="383.50"></text></g><g><title>tcp_v4_rcv (16 samples, 0.14%)</title><rect x="31.9608%" y="357" width="0.1364%" height="15" fill="rgb(224,38,0)" fg:x="3749" fg:w="16"/><text x="32.1751%" y="367.50"></text></g><g><title>tcp_v4_do_rcv (16 samples, 0.14%)</title><rect x="31.9608%" y="341" width="0.1364%" height="15" fill="rgb(228,220,18)" fg:x="3749" fg:w="16"/><text x="32.1751%" y="351.50"></text></g><g><title>tcp_rcv_established (16 samples, 0.14%)</title><rect x="31.9608%" y="325" width="0.1364%" height="15" fill="rgb(224,50,47)" fg:x="3749" fg:w="16"/><text x="32.1751%" y="335.50"></text></g><g><title>napi_gro_receive (2 samples, 0.02%)</title><rect x="32.0972%" y="485" width="0.0171%" height="15" fill="rgb(248,45,29)" fg:x="3765" fg:w="2"/><text x="32.3115%" y="495.50"></text></g><g><title>eth_type_trans (2 samples, 0.02%)</title><rect x="32.1228%" y="469" width="0.0171%" height="15" fill="rgb(233,178,39)" fg:x="3768" fg:w="2"/><text x="32.3370%" y="479.50"></text></g><g><title>receive_buf (5 samples, 0.04%)</title><rect x="32.1142%" y="485" width="0.0426%" height="15" fill="rgb(233,111,44)" fg:x="3767" fg:w="5"/><text x="32.3285%" y="495.50"></text></g><g><title>page_to_skb (2 samples, 0.02%)</title><rect x="32.1398%" y="469" width="0.0171%" height="15" fill="rgb(243,180,22)" fg:x="3770" fg:w="2"/><text x="32.3541%" y="479.50"></text></g><g><title>virtnet_poll (29 samples, 0.25%)</title><rect x="31.9267%" y="501" width="0.2472%" height="15" fill="rgb(213,187,12)" fg:x="3745" fg:w="29"/><text x="32.1410%" y="511.50"></text></g><g><title>napi_consume_skb (2 samples, 0.02%)</title><rect x="32.1824%" y="469" width="0.0171%" height="15" fill="rgb(244,99,54)" fg:x="3775" fg:w="2"/><text x="32.3967%" y="479.50"></text></g><g><title>net_rx_action (34 samples, 0.29%)</title><rect x="31.9182%" y="517" width="0.2899%" height="15" fill="rgb(231,11,52)" fg:x="3744" fg:w="34"/><text x="32.1324%" y="527.50"></text></g><g><title>virtnet_poll_tx (4 samples, 0.03%)</title><rect x="32.1739%" y="501" width="0.0341%" height="15" fill="rgb(251,188,47)" fg:x="3774" fg:w="4"/><text x="32.3882%" y="511.50"></text></g><g><title>free_old_xmit_skbs (3 samples, 0.03%)</title><rect x="32.1824%" y="485" width="0.0256%" height="15" fill="rgb(235,178,6)" fg:x="3775" fg:w="3"/><text x="32.3967%" y="495.50"></text></g><g><title>irq_exit_rcu (38 samples, 0.32%)</title><rect x="31.8926%" y="581" width="0.3240%" height="15" fill="rgb(240,18,12)" fg:x="3741" fg:w="38"/><text x="32.1069%" y="591.50"></text></g><g><title>do_softirq_own_stack (37 samples, 0.32%)</title><rect x="31.9011%" y="565" width="0.3154%" height="15" fill="rgb(223,89,53)" fg:x="3742" fg:w="37"/><text x="32.1154%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (37 samples, 0.32%)</title><rect x="31.9011%" y="549" width="0.3154%" height="15" fill="rgb(208,184,36)" fg:x="3742" fg:w="37"/><text x="32.1154%" y="559.50"></text></g><g><title>__softirqentry_text_start (36 samples, 0.31%)</title><rect x="31.9096%" y="533" width="0.3069%" height="15" fill="rgb(249,91,22)" fg:x="3743" fg:w="36"/><text x="32.1239%" y="543.50"></text></g><g><title>asm_common_interrupt (44 samples, 0.38%)</title><rect x="31.8500%" y="613" width="0.3751%" height="15" fill="rgb(248,227,45)" fg:x="3736" fg:w="44"/><text x="32.0642%" y="623.50"></text></g><g><title>common_interrupt (44 samples, 0.38%)</title><rect x="31.8500%" y="597" width="0.3751%" height="15" fill="rgb(250,67,32)" fg:x="3736" fg:w="44"/><text x="32.0642%" y="607.50"></text></g><g><title>kernel_init_free_pages (624 samples, 5.32%)</title><rect x="26.9480%" y="645" width="5.3197%" height="15" fill="rgb(253,165,35)" fg:x="3161" fg:w="624"/><text x="27.1623%" y="655.50">kernel_i..</text></g><g><title>clear_page_rep (610 samples, 5.20%)</title><rect x="27.0673%" y="629" width="5.2003%" height="15" fill="rgb(233,188,25)" fg:x="3175" fg:w="610"/><text x="27.2816%" y="639.50">clear_pa..</text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.04%)</title><rect x="32.2251%" y="613" width="0.0426%" height="15" fill="rgb(209,17,43)" fg:x="3780" fg:w="5"/><text x="32.4393%" y="623.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="32.2421%" y="597" width="0.0256%" height="15" fill="rgb(218,44,13)" fg:x="3782" fg:w="3"/><text x="32.4564%" y="607.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="32.2506%" y="581" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="3783" fg:w="2"/><text x="32.4649%" y="591.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="32.2506%" y="565" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="3783" fg:w="2"/><text x="32.4649%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="32.2506%" y="549" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="3783" fg:w="2"/><text x="32.4649%" y="559.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="32.2506%" y="533" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="3783" fg:w="2"/><text x="32.4649%" y="543.50"></text></g><g><title>rcu_core (2 samples, 0.02%)</title><rect x="32.2506%" y="517" width="0.0171%" height="15" fill="rgb(230,26,14)" fg:x="3783" fg:w="2"/><text x="32.4649%" y="527.50"></text></g><g><title>swake_up_one (2 samples, 0.02%)</title><rect x="32.2506%" y="501" width="0.0171%" height="15" fill="rgb(254,186,46)" fg:x="3783" fg:w="2"/><text x="32.4649%" y="511.50"></text></g><g><title>try_to_wake_up (2 samples, 0.02%)</title><rect x="32.2506%" y="485" width="0.0171%" height="15" fill="rgb(251,124,39)" fg:x="3783" fg:w="2"/><text x="32.4649%" y="495.50"></text></g><g><title>kernel_poison_pages (3 samples, 0.03%)</title><rect x="32.2677%" y="645" width="0.0256%" height="15" fill="rgb(240,82,29)" fg:x="3785" fg:w="3"/><text x="32.4820%" y="655.50"></text></g><g><title>page_poisoning_enabled (2 samples, 0.02%)</title><rect x="32.2933%" y="645" width="0.0171%" height="15" fill="rgb(210,88,43)" fg:x="3788" fg:w="2"/><text x="32.5076%" y="655.50"></text></g><g><title>get_page_from_freelist (724 samples, 6.17%)</title><rect x="26.2404%" y="677" width="6.1722%" height="15" fill="rgb(246,35,53)" fg:x="3078" fg:w="724"/><text x="26.4547%" y="687.50">get_page_f..</text></g><g><title>prep_new_page (644 samples, 5.49%)</title><rect x="26.9224%" y="661" width="5.4902%" height="15" fill="rgb(220,94,29)" fg:x="3158" fg:w="644"/><text x="27.1367%" y="671.50">prep_new..</text></g><g><title>prep_compound_page (12 samples, 0.10%)</title><rect x="32.3103%" y="645" width="0.1023%" height="15" fill="rgb(247,213,6)" fg:x="3790" fg:w="12"/><text x="32.5246%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (739 samples, 6.30%)</title><rect x="26.1296%" y="693" width="6.3001%" height="15" fill="rgb(245,49,10)" fg:x="3065" fg:w="739"/><text x="26.3439%" y="703.50">__alloc_pa..</text></g><g><title>alloc_pages_current (22 samples, 0.19%)</title><rect x="32.4382%" y="693" width="0.1876%" height="15" fill="rgb(250,171,52)" fg:x="3805" fg:w="22"/><text x="32.6525%" y="703.50"></text></g><g><title>sk_page_frag_refill (785 samples, 6.69%)</title><rect x="25.9847%" y="725" width="6.6922%" height="15" fill="rgb(244,13,30)" fg:x="3048" fg:w="785"/><text x="26.1989%" y="735.50">sk_page_fra..</text></g><g><title>skb_page_frag_refill (783 samples, 6.68%)</title><rect x="26.0017%" y="709" width="6.6752%" height="15" fill="rgb(240,178,22)" fg:x="3050" fg:w="783"/><text x="26.2160%" y="719.50">skb_page_fr..</text></g><g><title>get_order (5 samples, 0.04%)</title><rect x="32.6343%" y="693" width="0.0426%" height="15" fill="rgb(250,154,37)" fg:x="3828" fg:w="5"/><text x="32.8486%" y="703.50"></text></g><g><title>allocate_slab (10 samples, 0.09%)</title><rect x="33.1628%" y="645" width="0.0853%" height="15" fill="rgb(222,145,35)" fg:x="3890" fg:w="10"/><text x="33.3771%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.08%)</title><rect x="33.1714%" y="629" width="0.0767%" height="15" fill="rgb(245,49,10)" fg:x="3891" fg:w="9"/><text x="33.3856%" y="639.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.08%)</title><rect x="33.1714%" y="613" width="0.0767%" height="15" fill="rgb(246,35,53)" fg:x="3891" fg:w="9"/><text x="33.3856%" y="623.50"></text></g><g><title>prep_new_page (7 samples, 0.06%)</title><rect x="33.1884%" y="597" width="0.0597%" height="15" fill="rgb(220,94,29)" fg:x="3893" fg:w="7"/><text x="33.4027%" y="607.50"></text></g><g><title>kernel_init_free_pages (6 samples, 0.05%)</title><rect x="33.1969%" y="581" width="0.0512%" height="15" fill="rgb(253,165,35)" fg:x="3894" fg:w="6"/><text x="33.4112%" y="591.50"></text></g><g><title>clear_page_rep (6 samples, 0.05%)</title><rect x="33.1969%" y="565" width="0.0512%" height="15" fill="rgb(233,188,25)" fg:x="3894" fg:w="6"/><text x="33.4112%" y="575.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="33.2225%" y="549" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="3897" fg:w="3"/><text x="33.4368%" y="559.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="33.2225%" y="533" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="3897" fg:w="3"/><text x="33.4368%" y="543.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="33.2225%" y="517" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="3897" fg:w="3"/><text x="33.4368%" y="527.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="33.2225%" y="501" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="3897" fg:w="3"/><text x="33.4368%" y="511.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="33.2225%" y="485" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="3897" fg:w="3"/><text x="33.4368%" y="495.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="33.2225%" y="469" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="3897" fg:w="3"/><text x="33.4368%" y="479.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="33.2225%" y="453" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="3897" fg:w="3"/><text x="33.4368%" y="463.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="33.2225%" y="437" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="3897" fg:w="3"/><text x="33.4368%" y="447.50"></text></g><g><title>___slab_alloc (21 samples, 0.18%)</title><rect x="33.0946%" y="661" width="0.1790%" height="15" fill="rgb(224,215,35)" fg:x="3882" fg:w="21"/><text x="33.3089%" y="671.50"></text></g><g><title>get_partial_node.part.0 (3 samples, 0.03%)</title><rect x="33.2481%" y="645" width="0.0256%" height="15" fill="rgb(252,28,23)" fg:x="3900" fg:w="3"/><text x="33.4624%" y="655.50"></text></g><g><title>__list_del_entry_valid (2 samples, 0.02%)</title><rect x="33.2566%" y="629" width="0.0171%" height="15" fill="rgb(224,110,12)" fg:x="3901" fg:w="2"/><text x="33.4709%" y="639.50"></text></g><g><title>__slab_alloc (24 samples, 0.20%)</title><rect x="33.0946%" y="677" width="0.2046%" height="15" fill="rgb(229,140,31)" fg:x="3882" fg:w="24"/><text x="33.3089%" y="687.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="33.2737%" y="661" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="3903" fg:w="3"/><text x="33.4879%" y="671.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="33.2737%" y="645" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="3903" fg:w="3"/><text x="33.4879%" y="655.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="33.2822%" y="629" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="3904" fg:w="2"/><text x="33.4965%" y="639.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="33.2822%" y="613" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="3904" fg:w="2"/><text x="33.4965%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="33.2822%" y="597" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="3904" fg:w="2"/><text x="33.4965%" y="607.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="33.2822%" y="581" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="3904" fg:w="2"/><text x="33.4965%" y="591.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="33.2822%" y="565" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="3904" fg:w="2"/><text x="33.4965%" y="575.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="33.2822%" y="549" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="3904" fg:w="2"/><text x="33.4965%" y="559.50"></text></g><g><title>receive_buf (2 samples, 0.02%)</title><rect x="33.2822%" y="533" width="0.0171%" height="15" fill="rgb(233,111,44)" fg:x="3904" fg:w="2"/><text x="33.4965%" y="543.50"></text></g><g><title>page_to_skb (2 samples, 0.02%)</title><rect x="33.2822%" y="517" width="0.0171%" height="15" fill="rgb(243,180,22)" fg:x="3904" fg:w="2"/><text x="33.4965%" y="527.50"></text></g><g><title>__napi_alloc_skb (2 samples, 0.02%)</title><rect x="33.2822%" y="501" width="0.0171%" height="15" fill="rgb(236,121,11)" fg:x="3904" fg:w="2"/><text x="33.4965%" y="511.50"></text></g><g><title>__alloc_skb (2 samples, 0.02%)</title><rect x="33.2822%" y="485" width="0.0171%" height="15" fill="rgb(237,90,40)" fg:x="3904" fg:w="2"/><text x="33.4965%" y="495.50"></text></g><g><title>kmalloc_slab (3 samples, 0.03%)</title><rect x="33.2992%" y="677" width="0.0256%" height="15" fill="rgb(219,98,13)" fg:x="3906" fg:w="3"/><text x="33.5135%" y="687.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="33.3078%" y="661" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="3907" fg:w="2"/><text x="33.5220%" y="671.50"></text></g><g><title>memcg_slab_post_alloc_hook (3 samples, 0.03%)</title><rect x="33.3248%" y="677" width="0.0256%" height="15" fill="rgb(242,216,24)" fg:x="3909" fg:w="3"/><text x="33.5391%" y="687.50"></text></g><g><title>memset (9 samples, 0.08%)</title><rect x="33.3504%" y="677" width="0.0767%" height="15" fill="rgb(251,9,1)" fg:x="3912" fg:w="9"/><text x="33.5647%" y="687.50"></text></g><g><title>__kmalloc_node_track_caller (62 samples, 0.53%)</title><rect x="32.9668%" y="693" width="0.5286%" height="15" fill="rgb(228,161,44)" fg:x="3867" fg:w="62"/><text x="33.1810%" y="703.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (8 samples, 0.07%)</title><rect x="33.4271%" y="677" width="0.0682%" height="15" fill="rgb(212,11,50)" fg:x="3921" fg:w="8"/><text x="33.6414%" y="687.50"></text></g><g><title>__x86_return_thunk (6 samples, 0.05%)</title><rect x="33.5038%" y="693" width="0.0512%" height="15" fill="rgb(211,8,20)" fg:x="3930" fg:w="6"/><text x="33.7181%" y="703.50"></text></g><g><title>srso_safe_ret_alias (6 samples, 0.05%)</title><rect x="33.5038%" y="677" width="0.0512%" height="15" fill="rgb(210,87,27)" fg:x="3930" fg:w="6"/><text x="33.7181%" y="687.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.02%)</title><rect x="33.8193%" y="629" width="0.0171%" height="15" fill="rgb(245,49,10)" fg:x="3967" fg:w="2"/><text x="34.0336%" y="639.50"></text></g><g><title>get_random_u32 (5 samples, 0.04%)</title><rect x="33.8448%" y="629" width="0.0426%" height="15" fill="rgb(232,72,47)" fg:x="3970" fg:w="5"/><text x="34.0591%" y="639.50"></text></g><g><title>allocate_slab (11 samples, 0.09%)</title><rect x="33.8022%" y="645" width="0.0938%" height="15" fill="rgb(222,145,35)" fg:x="3965" fg:w="11"/><text x="34.0165%" y="655.50"></text></g><g><title>__slab_alloc (28 samples, 0.24%)</title><rect x="33.6658%" y="677" width="0.2387%" height="15" fill="rgb(229,140,31)" fg:x="3949" fg:w="28"/><text x="33.8801%" y="687.50"></text></g><g><title>___slab_alloc (24 samples, 0.20%)</title><rect x="33.6999%" y="661" width="0.2046%" height="15" fill="rgb(224,215,35)" fg:x="3953" fg:w="24"/><text x="33.9142%" y="671.50"></text></g><g><title>memcg_slab_post_alloc_hook (5 samples, 0.04%)</title><rect x="33.9130%" y="677" width="0.0426%" height="15" fill="rgb(242,216,24)" fg:x="3978" fg:w="5"/><text x="34.1273%" y="687.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="34.0239%" y="661" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="3991" fg:w="2"/><text x="34.2382%" y="671.50"></text></g><g><title>memset (11 samples, 0.09%)</title><rect x="33.9557%" y="677" width="0.0938%" height="15" fill="rgb(251,9,1)" fg:x="3983" fg:w="11"/><text x="34.1700%" y="687.50"></text></g><g><title>kmem_cache_alloc_node (68 samples, 0.58%)</title><rect x="33.5635%" y="693" width="0.5797%" height="15" fill="rgb(227,94,12)" fg:x="3937" fg:w="68"/><text x="33.7778%" y="703.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (11 samples, 0.09%)</title><rect x="34.0494%" y="677" width="0.0938%" height="15" fill="rgb(212,11,50)" fg:x="3994" fg:w="11"/><text x="34.2637%" y="687.50"></text></g><g><title>should_failslab (2 samples, 0.02%)</title><rect x="34.1262%" y="661" width="0.0171%" height="15" fill="rgb(253,72,6)" fg:x="4003" fg:w="2"/><text x="34.3405%" y="671.50"></text></g><g><title>__alloc_skb (153 samples, 1.30%)</title><rect x="32.8474%" y="709" width="1.3043%" height="15" fill="rgb(237,90,40)" fg:x="3853" fg:w="153"/><text x="33.0617%" y="719.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="34.1517%" y="709" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="4006" fg:w="2"/><text x="34.3660%" y="719.50"></text></g><g><title>__sk_mem_schedule (3 samples, 0.03%)</title><rect x="34.1688%" y="709" width="0.0256%" height="15" fill="rgb(219,50,38)" fg:x="4008" fg:w="3"/><text x="34.3831%" y="719.50"></text></g><g><title>__sk_mem_raise_allocated (3 samples, 0.03%)</title><rect x="34.1688%" y="693" width="0.0256%" height="15" fill="rgb(232,27,1)" fg:x="4008" fg:w="3"/><text x="34.3831%" y="703.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="34.1944%" y="581" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="4011" fg:w="2"/><text x="34.4087%" y="591.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="34.1944%" y="565" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="4011" fg:w="2"/><text x="34.4087%" y="575.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="34.1944%" y="549" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="4011" fg:w="2"/><text x="34.4087%" y="559.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="34.1944%" y="533" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="4011" fg:w="2"/><text x="34.4087%" y="543.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="34.1944%" y="517" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="4011" fg:w="2"/><text x="34.4087%" y="527.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="34.1944%" y="501" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="4011" fg:w="2"/><text x="34.4087%" y="511.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="34.1944%" y="485" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="4011" fg:w="2"/><text x="34.4087%" y="495.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="34.1944%" y="469" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="4011" fg:w="2"/><text x="34.4087%" y="479.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="34.1944%" y="453" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="4011" fg:w="2"/><text x="34.4087%" y="463.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="34.1944%" y="437" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="4011" fg:w="2"/><text x="34.4087%" y="447.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="34.1944%" y="421" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="4011" fg:w="2"/><text x="34.4087%" y="431.50"></text></g><g><title>sk_stream_alloc_skb (181 samples, 1.54%)</title><rect x="32.6769%" y="725" width="1.5431%" height="15" fill="rgb(225,2,28)" fg:x="3833" fg:w="181"/><text x="32.8912%" y="735.50">s..</text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="34.1944%" y="709" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="4011" fg:w="3"/><text x="34.4087%" y="719.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="34.1944%" y="693" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="4011" fg:w="3"/><text x="34.4087%" y="703.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="34.1944%" y="677" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="4011" fg:w="3"/><text x="34.4087%" y="687.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="34.1944%" y="661" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="4011" fg:w="3"/><text x="34.4087%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="34.1944%" y="645" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="4011" fg:w="3"/><text x="34.4087%" y="655.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="34.1944%" y="629" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="4011" fg:w="3"/><text x="34.4087%" y="639.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="34.1944%" y="613" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="4011" fg:w="3"/><text x="34.4087%" y="623.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="34.1944%" y="597" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="4011" fg:w="3"/><text x="34.4087%" y="607.50"></text></g><g><title>__virt_addr_valid (22 samples, 0.19%)</title><rect x="34.3564%" y="693" width="0.1876%" height="15" fill="rgb(216,204,49)" fg:x="4030" fg:w="22"/><text x="34.5706%" y="703.50"></text></g><g><title>__check_object_size (40 samples, 0.34%)</title><rect x="34.2711%" y="709" width="0.3410%" height="15" fill="rgb(218,1,22)" fg:x="4020" fg:w="40"/><text x="34.4854%" y="719.50"></text></g><g><title>check_stack_object (8 samples, 0.07%)</title><rect x="34.5439%" y="693" width="0.0682%" height="15" fill="rgb(244,30,26)" fg:x="4052" fg:w="8"/><text x="34.7582%" y="703.50"></text></g><g><title>__irqentry_text_start (18 samples, 0.15%)</title><rect x="36.9395%" y="677" width="0.1535%" height="15" fill="rgb(229,107,3)" fg:x="4333" fg:w="18"/><text x="37.1538%" y="687.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="37.0929%" y="645" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="4351" fg:w="2"/><text x="37.3072%" y="655.50"></text></g><g><title>handle_edge_irq (2 samples, 0.02%)</title><rect x="37.0929%" y="629" width="0.0171%" height="15" fill="rgb(219,15,9)" fg:x="4351" fg:w="2"/><text x="37.3072%" y="639.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="37.1270%" y="341" width="0.0171%" height="15" fill="rgb(238,106,36)" fg:x="4355" fg:w="2"/><text x="37.3413%" y="351.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="37.1270%" y="325" width="0.0171%" height="15" fill="rgb(224,11,5)" fg:x="4355" fg:w="2"/><text x="37.3413%" y="335.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="37.1270%" y="309" width="0.0171%" height="15" fill="rgb(219,227,11)" fg:x="4355" fg:w="2"/><text x="37.3413%" y="319.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="37.1270%" y="293" width="0.0171%" height="15" fill="rgb(232,116,37)" fg:x="4355" fg:w="2"/><text x="37.3413%" y="303.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.03%)</title><rect x="37.1270%" y="373" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="4355" fg:w="3"/><text x="37.3413%" y="383.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.03%)</title><rect x="37.1270%" y="357" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="4355" fg:w="3"/><text x="37.3413%" y="367.50"></text></g><g><title>tcp_v4_do_rcv (5 samples, 0.04%)</title><rect x="37.1270%" y="405" width="0.0426%" height="15" fill="rgb(228,220,18)" fg:x="4355" fg:w="5"/><text x="37.3413%" y="415.50"></text></g><g><title>tcp_rcv_established (5 samples, 0.04%)</title><rect x="37.1270%" y="389" width="0.0426%" height="15" fill="rgb(224,50,47)" fg:x="4355" fg:w="5"/><text x="37.3413%" y="399.50"></text></g><g><title>tcp_ack (2 samples, 0.02%)</title><rect x="37.1526%" y="373" width="0.0171%" height="15" fill="rgb(213,228,3)" fg:x="4358" fg:w="2"/><text x="37.3669%" y="383.50"></text></g><g><title>napi_complete_done (7 samples, 0.06%)</title><rect x="37.1185%" y="549" width="0.0597%" height="15" fill="rgb(226,216,13)" fg:x="4354" fg:w="7"/><text x="37.3328%" y="559.50"></text></g><g><title>netif_receive_skb_list_internal (7 samples, 0.06%)</title><rect x="37.1185%" y="533" width="0.0597%" height="15" fill="rgb(216,153,44)" fg:x="4354" fg:w="7"/><text x="37.3328%" y="543.50"></text></g><g><title>__netif_receive_skb_list_core (7 samples, 0.06%)</title><rect x="37.1185%" y="517" width="0.0597%" height="15" fill="rgb(227,176,26)" fg:x="4354" fg:w="7"/><text x="37.3328%" y="527.50"></text></g><g><title>ip_list_rcv (7 samples, 0.06%)</title><rect x="37.1185%" y="501" width="0.0597%" height="15" fill="rgb(215,38,16)" fg:x="4354" fg:w="7"/><text x="37.3328%" y="511.50"></text></g><g><title>ip_sublist_rcv (7 samples, 0.06%)</title><rect x="37.1185%" y="485" width="0.0597%" height="15" fill="rgb(207,166,9)" fg:x="4354" fg:w="7"/><text x="37.3328%" y="495.50"></text></g><g><title>ip_sublist_rcv_finish (6 samples, 0.05%)</title><rect x="37.1270%" y="469" width="0.0512%" height="15" fill="rgb(223,178,14)" fg:x="4355" fg:w="6"/><text x="37.3413%" y="479.50"></text></g><g><title>ip_local_deliver_finish (6 samples, 0.05%)</title><rect x="37.1270%" y="453" width="0.0512%" height="15" fill="rgb(220,94,29)" fg:x="4355" fg:w="6"/><text x="37.3413%" y="463.50"></text></g><g><title>ip_protocol_deliver_rcu (6 samples, 0.05%)</title><rect x="37.1270%" y="437" width="0.0512%" height="15" fill="rgb(207,19,13)" fg:x="4355" fg:w="6"/><text x="37.3413%" y="447.50"></text></g><g><title>tcp_v4_rcv (6 samples, 0.05%)</title><rect x="37.1270%" y="421" width="0.0512%" height="15" fill="rgb(224,38,0)" fg:x="4355" fg:w="6"/><text x="37.3413%" y="431.50"></text></g><g><title>receive_buf (3 samples, 0.03%)</title><rect x="37.1782%" y="549" width="0.0256%" height="15" fill="rgb(233,111,44)" fg:x="4361" fg:w="3"/><text x="37.3925%" y="559.50"></text></g><g><title>page_to_skb (3 samples, 0.03%)</title><rect x="37.1782%" y="533" width="0.0256%" height="15" fill="rgb(243,180,22)" fg:x="4361" fg:w="3"/><text x="37.3925%" y="543.50"></text></g><g><title>__napi_alloc_skb (2 samples, 0.02%)</title><rect x="37.1867%" y="517" width="0.0171%" height="15" fill="rgb(236,121,11)" fg:x="4362" fg:w="2"/><text x="37.4010%" y="527.50"></text></g><g><title>__alloc_skb (2 samples, 0.02%)</title><rect x="37.1867%" y="501" width="0.0171%" height="15" fill="rgb(237,90,40)" fg:x="4362" fg:w="2"/><text x="37.4010%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.02%)</title><rect x="37.1867%" y="485" width="0.0171%" height="15" fill="rgb(228,161,44)" fg:x="4362" fg:w="2"/><text x="37.4010%" y="495.50"></text></g><g><title>virtnet_poll (12 samples, 0.10%)</title><rect x="37.1185%" y="565" width="0.1023%" height="15" fill="rgb(213,187,12)" fg:x="4354" fg:w="12"/><text x="37.3328%" y="575.50"></text></g><g><title>asm_common_interrupt (19 samples, 0.16%)</title><rect x="37.0929%" y="677" width="0.1620%" height="15" fill="rgb(248,227,45)" fg:x="4351" fg:w="19"/><text x="37.3072%" y="687.50"></text></g><g><title>common_interrupt (19 samples, 0.16%)</title><rect x="37.0929%" y="661" width="0.1620%" height="15" fill="rgb(250,67,32)" fg:x="4351" fg:w="19"/><text x="37.3072%" y="671.50"></text></g><g><title>irq_exit_rcu (17 samples, 0.14%)</title><rect x="37.1100%" y="645" width="0.1449%" height="15" fill="rgb(240,18,12)" fg:x="4353" fg:w="17"/><text x="37.3243%" y="655.50"></text></g><g><title>do_softirq_own_stack (17 samples, 0.14%)</title><rect x="37.1100%" y="629" width="0.1449%" height="15" fill="rgb(223,89,53)" fg:x="4353" fg:w="17"/><text x="37.3243%" y="639.50"></text></g><g><title>asm_call_sysvec_on_stack (17 samples, 0.14%)</title><rect x="37.1100%" y="613" width="0.1449%" height="15" fill="rgb(208,184,36)" fg:x="4353" fg:w="17"/><text x="37.3243%" y="623.50"></text></g><g><title>__softirqentry_text_start (17 samples, 0.14%)</title><rect x="37.1100%" y="597" width="0.1449%" height="15" fill="rgb(249,91,22)" fg:x="4353" fg:w="17"/><text x="37.3243%" y="607.50"></text></g><g><title>net_rx_action (17 samples, 0.14%)</title><rect x="37.1100%" y="581" width="0.1449%" height="15" fill="rgb(231,11,52)" fg:x="4353" fg:w="17"/><text x="37.3243%" y="591.50"></text></g><g><title>virtnet_poll_tx (4 samples, 0.03%)</title><rect x="37.2208%" y="565" width="0.0341%" height="15" fill="rgb(251,188,47)" fg:x="4366" fg:w="4"/><text x="37.4351%" y="575.50"></text></g><g><title>free_old_xmit_skbs (4 samples, 0.03%)</title><rect x="37.2208%" y="549" width="0.0341%" height="15" fill="rgb(235,178,6)" fg:x="4366" fg:w="4"/><text x="37.4351%" y="559.50"></text></g><g><title>virtqueue_get_buf_ctx_split (3 samples, 0.03%)</title><rect x="37.2293%" y="533" width="0.0256%" height="15" fill="rgb(235,34,35)" fg:x="4367" fg:w="3"/><text x="37.4436%" y="543.50"></text></g><g><title>detach_buf_split (2 samples, 0.02%)</title><rect x="37.2379%" y="517" width="0.0171%" height="15" fill="rgb(228,101,1)" fg:x="4368" fg:w="2"/><text x="37.4521%" y="527.50"></text></g><g><title>copy_user_generic_string (296 samples, 2.52%)</title><rect x="34.7485%" y="693" width="2.5234%" height="15" fill="rgb(233,29,30)" fg:x="4076" fg:w="296"/><text x="34.9628%" y="703.50">co..</text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="37.2549%" y="677" width="0.0171%" height="15" fill="rgb(209,17,43)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="687.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="37.2549%" y="661" width="0.0171%" height="15" fill="rgb(218,44,13)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="37.2549%" y="645" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="37.2549%" y="629" width="0.0171%" height="15" fill="rgb(221,147,0)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="639.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="37.2549%" y="613" width="0.0171%" height="15" fill="rgb(212,109,30)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="623.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="37.2549%" y="597" width="0.0171%" height="15" fill="rgb(232,211,54)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="607.50"></text></g><g><title>tick_sched_timer (2 samples, 0.02%)</title><rect x="37.2549%" y="581" width="0.0171%" height="15" fill="rgb(237,67,28)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="591.50"></text></g><g><title>tick_sched_handle (2 samples, 0.02%)</title><rect x="37.2549%" y="565" width="0.0171%" height="15" fill="rgb(232,138,39)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="575.50"></text></g><g><title>update_process_times (2 samples, 0.02%)</title><rect x="37.2549%" y="549" width="0.0171%" height="15" fill="rgb(236,132,35)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="559.50"></text></g><g><title>scheduler_tick (2 samples, 0.02%)</title><rect x="37.2549%" y="533" width="0.0171%" height="15" fill="rgb(222,32,52)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="543.50"></text></g><g><title>perf_event_task_tick (2 samples, 0.02%)</title><rect x="37.2549%" y="517" width="0.0171%" height="15" fill="rgb(243,211,17)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="527.50"></text></g><g><title>amd_pmu_disable_all (2 samples, 0.02%)</title><rect x="37.2549%" y="501" width="0.0171%" height="15" fill="rgb(224,0,7)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="511.50"></text></g><g><title>x86_pmu_disable_all (2 samples, 0.02%)</title><rect x="37.2549%" y="485" width="0.0171%" height="15" fill="rgb(235,111,43)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="495.50"></text></g><g><title>native_read_msr (2 samples, 0.02%)</title><rect x="37.2549%" y="469" width="0.0171%" height="15" fill="rgb(218,43,9)" fg:x="4370" fg:w="2"/><text x="37.4692%" y="479.50"></text></g><g><title>iov_iter_advance (10 samples, 0.09%)</title><rect x="37.2720%" y="693" width="0.0853%" height="15" fill="rgb(250,37,39)" fg:x="4372" fg:w="10"/><text x="37.4862%" y="703.50"></text></g><g><title>_copy_from_iter_full (321 samples, 2.74%)</title><rect x="34.6292%" y="709" width="2.7366%" height="15" fill="rgb(227,219,53)" fg:x="4062" fg:w="321"/><text x="34.8434%" y="719.50">_co..</text></g><g><title>skb_do_copy_data_nocache (370 samples, 3.15%)</title><rect x="34.2199%" y="725" width="3.1543%" height="15" fill="rgb(209,134,15)" fg:x="4014" fg:w="370"/><text x="34.4342%" y="735.50">skb_..</text></g><g><title>skb_entail (11 samples, 0.09%)</title><rect x="37.3743%" y="725" width="0.0938%" height="15" fill="rgb(207,54,39)" fg:x="4384" fg:w="11"/><text x="37.5885%" y="735.50"></text></g><g><title>sock_zerocopy_put (2 samples, 0.02%)</title><rect x="37.4680%" y="725" width="0.0171%" height="15" fill="rgb(227,109,49)" fg:x="4395" fg:w="2"/><text x="37.6823%" y="735.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.02%)</title><rect x="37.4851%" y="725" width="0.0171%" height="15" fill="rgb(210,87,27)" fg:x="4397" fg:w="2"/><text x="37.6994%" y="735.50"></text></g><g><title>tcp_rate_check_app_limited (6 samples, 0.05%)</title><rect x="37.5021%" y="725" width="0.0512%" height="15" fill="rgb(254,8,23)" fg:x="4399" fg:w="6"/><text x="37.7164%" y="735.50"></text></g><g><title>ipv4_mtu (6 samples, 0.05%)</title><rect x="37.7323%" y="693" width="0.0512%" height="15" fill="rgb(232,85,13)" fg:x="4426" fg:w="6"/><text x="37.9466%" y="703.50"></text></g><g><title>tcp_send_mss (28 samples, 0.24%)</title><rect x="37.5533%" y="725" width="0.2387%" height="15" fill="rgb(220,146,16)" fg:x="4405" fg:w="28"/><text x="37.7676%" y="735.50"></text></g><g><title>tcp_current_mss (21 samples, 0.18%)</title><rect x="37.6130%" y="709" width="0.1790%" height="15" fill="rgb(247,207,19)" fg:x="4412" fg:w="21"/><text x="37.8272%" y="719.50"></text></g><g><title>tcp_stream_memory_free (6 samples, 0.05%)</title><rect x="37.7920%" y="725" width="0.0512%" height="15" fill="rgb(235,140,9)" fg:x="4433" fg:w="6"/><text x="38.0063%" y="735.50"></text></g><g><title>tcp_tx_timestamp (7 samples, 0.06%)</title><rect x="37.8431%" y="725" width="0.0597%" height="15" fill="rgb(227,26,29)" fg:x="4439" fg:w="7"/><text x="38.0574%" y="735.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="37.9113%" y="709" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="4447" fg:w="2"/><text x="38.1256%" y="719.50"></text></g><g><title>dev_hard_start_xmit (14 samples, 0.12%)</title><rect x="37.9625%" y="613" width="0.1194%" height="15" fill="rgb(251,86,39)" fg:x="4453" fg:w="14"/><text x="38.1768%" y="623.50"></text></g><g><title>start_xmit (14 samples, 0.12%)</title><rect x="37.9625%" y="597" width="0.1194%" height="15" fill="rgb(211,140,13)" fg:x="4453" fg:w="14"/><text x="38.1768%" y="607.50"></text></g><g><title>virtqueue_notify (11 samples, 0.09%)</title><rect x="37.9881%" y="581" width="0.0938%" height="15" fill="rgb(219,119,18)" fg:x="4456" fg:w="11"/><text x="38.2024%" y="591.50"></text></g><g><title>vp_notify (11 samples, 0.09%)</title><rect x="37.9881%" y="565" width="0.0938%" height="15" fill="rgb(230,193,37)" fg:x="4456" fg:w="11"/><text x="38.2024%" y="575.50"></text></g><g><title>iowrite16 (11 samples, 0.09%)</title><rect x="37.9881%" y="549" width="0.0938%" height="15" fill="rgb(218,139,37)" fg:x="4456" fg:w="11"/><text x="38.2024%" y="559.50"></text></g><g><title>__dev_queue_xmit (17 samples, 0.14%)</title><rect x="37.9540%" y="661" width="0.1449%" height="15" fill="rgb(232,116,37)" fg:x="4452" fg:w="17"/><text x="38.1682%" y="671.50"></text></g><g><title>__qdisc_run (16 samples, 0.14%)</title><rect x="37.9625%" y="645" width="0.1364%" height="15" fill="rgb(252,144,25)" fg:x="4453" fg:w="16"/><text x="38.1768%" y="655.50"></text></g><g><title>sch_direct_xmit (16 samples, 0.14%)</title><rect x="37.9625%" y="629" width="0.1364%" height="15" fill="rgb(222,128,44)" fg:x="4453" fg:w="16"/><text x="38.1768%" y="639.50"></text></g><g><title>validate_xmit_skb_list (2 samples, 0.02%)</title><rect x="38.0818%" y="613" width="0.0171%" height="15" fill="rgb(254,174,52)" fg:x="4467" fg:w="2"/><text x="38.2961%" y="623.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.02%)</title><rect x="38.0818%" y="597" width="0.0171%" height="15" fill="rgb(240,104,40)" fg:x="4467" fg:w="2"/><text x="38.2961%" y="607.50"></text></g><g><title>netif_skb_features (2 samples, 0.02%)</title><rect x="38.0818%" y="581" width="0.0171%" height="15" fill="rgb(211,31,54)" fg:x="4467" fg:w="2"/><text x="38.2961%" y="591.50"></text></g><g><title>passthru_features_check (2 samples, 0.02%)</title><rect x="38.0818%" y="565" width="0.0171%" height="15" fill="rgb(237,62,14)" fg:x="4467" fg:w="2"/><text x="38.2961%" y="575.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="38.0989%" y="341" width="0.0171%" height="15" fill="rgb(238,106,36)" fg:x="4469" fg:w="2"/><text x="38.3132%" y="351.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="38.0989%" y="325" width="0.0171%" height="15" fill="rgb(224,11,5)" fg:x="4469" fg:w="2"/><text x="38.3132%" y="335.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="38.0989%" y="309" width="0.0171%" height="15" fill="rgb(219,227,11)" fg:x="4469" fg:w="2"/><text x="38.3132%" y="319.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="38.0989%" y="293" width="0.0171%" height="15" fill="rgb(232,116,37)" fg:x="4469" fg:w="2"/><text x="38.3132%" y="303.50"></text></g><g><title>__qdisc_run (2 samples, 0.02%)</title><rect x="38.0989%" y="277" width="0.0171%" height="15" fill="rgb(252,144,25)" fg:x="4469" fg:w="2"/><text x="38.3132%" y="287.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.02%)</title><rect x="38.0989%" y="261" width="0.0171%" height="15" fill="rgb(222,128,44)" fg:x="4469" fg:w="2"/><text x="38.3132%" y="271.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="38.0989%" y="245" width="0.0171%" height="15" fill="rgb(251,86,39)" fg:x="4469" fg:w="2"/><text x="38.3132%" y="255.50"></text></g><g><title>start_xmit (2 samples, 0.02%)</title><rect x="38.0989%" y="229" width="0.0171%" height="15" fill="rgb(211,140,13)" fg:x="4469" fg:w="2"/><text x="38.3132%" y="239.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="38.0989%" y="549" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="559.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="38.0989%" y="533" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="543.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="38.0989%" y="517" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="527.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="38.0989%" y="501" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="511.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="38.0989%" y="485" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="495.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.03%)</title><rect x="38.0989%" y="469" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="479.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.03%)</title><rect x="38.0989%" y="453" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="463.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="38.0989%" y="437" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="447.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="38.0989%" y="421" width="0.0256%" height="15" fill="rgb(224,38,0)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="431.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="38.0989%" y="405" width="0.0256%" height="15" fill="rgb(228,220,18)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="415.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.03%)</title><rect x="38.0989%" y="389" width="0.0256%" height="15" fill="rgb(224,50,47)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.03%)</title><rect x="38.0989%" y="373" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="383.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.03%)</title><rect x="38.0989%" y="357" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="4469" fg:w="3"/><text x="38.3132%" y="367.50"></text></g><g><title>ip_finish_output2 (23 samples, 0.20%)</title><rect x="37.9369%" y="677" width="0.1961%" height="15" fill="rgb(219,227,11)" fg:x="4450" fg:w="23"/><text x="38.1512%" y="687.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.03%)</title><rect x="38.0989%" y="661" width="0.0341%" height="15" fill="rgb(252,29,18)" fg:x="4469" fg:w="4"/><text x="38.3132%" y="671.50"></text></g><g><title>do_softirq (4 samples, 0.03%)</title><rect x="38.0989%" y="645" width="0.0341%" height="15" fill="rgb(239,215,27)" fg:x="4469" fg:w="4"/><text x="38.3132%" y="655.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.03%)</title><rect x="38.0989%" y="629" width="0.0341%" height="15" fill="rgb(223,89,53)" fg:x="4469" fg:w="4"/><text x="38.3132%" y="639.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="38.0989%" y="613" width="0.0341%" height="15" fill="rgb(208,184,36)" fg:x="4469" fg:w="4"/><text x="38.3132%" y="623.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="38.0989%" y="597" width="0.0341%" height="15" fill="rgb(249,91,22)" fg:x="4469" fg:w="4"/><text x="38.3132%" y="607.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="38.0989%" y="581" width="0.0341%" height="15" fill="rgb(231,11,52)" fg:x="4469" fg:w="4"/><text x="38.3132%" y="591.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="38.0989%" y="565" width="0.0341%" height="15" fill="rgb(213,187,12)" fg:x="4469" fg:w="4"/><text x="38.3132%" y="575.50"></text></g><g><title>__ip_queue_xmit (27 samples, 0.23%)</title><rect x="37.9369%" y="693" width="0.2302%" height="15" fill="rgb(224,11,5)" fg:x="4450" fg:w="27"/><text x="38.1512%" y="703.50"></text></g><g><title>ip_output (4 samples, 0.03%)</title><rect x="38.1330%" y="677" width="0.0341%" height="15" fill="rgb(213,11,33)" fg:x="4473" fg:w="4"/><text x="38.3473%" y="687.50"></text></g><g><title>nf_hook_slow (2 samples, 0.02%)</title><rect x="38.1500%" y="661" width="0.0171%" height="15" fill="rgb(226,120,15)" fg:x="4475" fg:w="2"/><text x="38.3643%" y="671.50"></text></g><g><title>skb_clone (2 samples, 0.02%)</title><rect x="38.1756%" y="693" width="0.0171%" height="15" fill="rgb(253,39,17)" fg:x="4478" fg:w="2"/><text x="38.3899%" y="703.50"></text></g><g><title>__tcp_transmit_skb (33 samples, 0.28%)</title><rect x="37.9284%" y="709" width="0.2813%" height="15" fill="rgb(238,106,36)" fg:x="4449" fg:w="33"/><text x="38.1427%" y="719.50"></text></g><g><title>__slab_alloc (2 samples, 0.02%)</title><rect x="38.2182%" y="661" width="0.0171%" height="15" fill="rgb(229,140,31)" fg:x="4483" fg:w="2"/><text x="38.4325%" y="671.50"></text></g><g><title>___slab_alloc (2 samples, 0.02%)</title><rect x="38.2182%" y="645" width="0.0171%" height="15" fill="rgb(224,215,35)" fg:x="4483" fg:w="2"/><text x="38.4325%" y="655.50"></text></g><g><title>__kmalloc_node_track_caller (4 samples, 0.03%)</title><rect x="38.2182%" y="677" width="0.0341%" height="15" fill="rgb(228,161,44)" fg:x="4483" fg:w="4"/><text x="38.4325%" y="687.50"></text></g><g><title>memset (2 samples, 0.02%)</title><rect x="38.2609%" y="661" width="0.0171%" height="15" fill="rgb(251,9,1)" fg:x="4488" fg:w="2"/><text x="38.4752%" y="671.50"></text></g><g><title>sk_stream_alloc_skb (8 samples, 0.07%)</title><rect x="38.2182%" y="709" width="0.0682%" height="15" fill="rgb(225,2,28)" fg:x="4483" fg:w="8"/><text x="38.4325%" y="719.50"></text></g><g><title>__alloc_skb (8 samples, 0.07%)</title><rect x="38.2182%" y="693" width="0.0682%" height="15" fill="rgb(237,90,40)" fg:x="4483" fg:w="8"/><text x="38.4325%" y="703.50"></text></g><g><title>kmem_cache_alloc_node (4 samples, 0.03%)</title><rect x="38.2523%" y="677" width="0.0341%" height="15" fill="rgb(227,94,12)" fg:x="4487" fg:w="4"/><text x="38.4666%" y="687.50"></text></g><g><title>sock_sendmsg (1,981 samples, 16.89%)</title><rect x="21.4408%" y="773" width="16.8883%" height="15" fill="rgb(253,44,23)" fg:x="2515" fg:w="1981"/><text x="21.6550%" y="783.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (1,883 samples, 16.05%)</title><rect x="22.2762%" y="757" width="16.0529%" height="15" fill="rgb(214,140,26)" fg:x="2613" fg:w="1883"/><text x="22.4905%" y="767.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (1,810 samples, 15.43%)</title><rect x="22.8986%" y="741" width="15.4305%" height="15" fill="rgb(250,191,34)" fg:x="2686" fg:w="1810"/><text x="23.1128%" y="751.50">tcp_sendmsg_locked</text></g><g><title>tcp_write_xmit (50 samples, 0.43%)</title><rect x="37.9028%" y="725" width="0.4263%" height="15" fill="rgb(236,72,36)" fg:x="4446" fg:w="50"/><text x="38.1171%" y="735.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (4 samples, 0.03%)</title><rect x="38.2950%" y="709" width="0.0341%" height="15" fill="rgb(213,104,8)" fg:x="4492" fg:w="4"/><text x="38.5093%" y="719.50"></text></g><g><title>sk_reset_timer (2 samples, 0.02%)</title><rect x="38.3120%" y="693" width="0.0171%" height="15" fill="rgb(220,37,33)" fg:x="4494" fg:w="2"/><text x="38.5263%" y="703.50"></text></g><g><title>__mod_timer (2 samples, 0.02%)</title><rect x="38.3120%" y="677" width="0.0171%" height="15" fill="rgb(232,140,47)" fg:x="4494" fg:w="2"/><text x="38.5263%" y="687.50"></text></g><g><title>__sys_sendto (2,023 samples, 17.25%)</title><rect x="21.2106%" y="789" width="17.2464%" height="15" fill="rgb(241,223,3)" fg:x="2488" fg:w="2023"/><text x="21.4249%" y="799.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (15 samples, 0.13%)</title><rect x="38.3291%" y="773" width="0.1279%" height="15" fill="rgb(234,43,45)" fg:x="4496" fg:w="15"/><text x="38.5434%" y="783.50"></text></g><g><title>__fget_light (8 samples, 0.07%)</title><rect x="38.3887%" y="757" width="0.0682%" height="15" fill="rgb(243,103,32)" fg:x="4503" fg:w="8"/><text x="38.6030%" y="767.50"></text></g><g><title>__x64_sys_sendto (2,032 samples, 17.32%)</title><rect x="21.1424%" y="805" width="17.3231%" height="15" fill="rgb(244,224,44)" fg:x="2480" fg:w="2032"/><text x="21.3567%" y="815.50">__x64_sys_sendto</text></g><g><title>do_syscall_64 (2,041 samples, 17.40%)</title><rect x="21.0827%" y="821" width="17.3998%" height="15" fill="rgb(220,74,14)" fg:x="2473" fg:w="2041"/><text x="21.2970%" y="831.50">do_syscall_64</text></g><g><title>syscall_enter_from_user_mode (2 samples, 0.02%)</title><rect x="38.4655%" y="805" width="0.0171%" height="15" fill="rgb(224,163,22)" fg:x="4512" fg:w="2"/><text x="38.6798%" y="815.50"></text></g><g><title>fpregs_assert_state_consistent (2 samples, 0.02%)</title><rect x="38.5251%" y="789" width="0.0171%" height="15" fill="rgb(227,221,38)" fg:x="4519" fg:w="2"/><text x="38.7394%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,051 samples, 17.49%)</title><rect x="21.0656%" y="837" width="17.4851%" height="15" fill="rgb(205,226,15)" fg:x="2471" fg:w="2051"/><text x="21.2799%" y="847.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.06%)</title><rect x="38.4910%" y="821" width="0.0597%" height="15" fill="rgb(215,101,28)" fg:x="4515" fg:w="7"/><text x="38.7053%" y="831.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.03%)</title><rect x="38.5166%" y="805" width="0.0341%" height="15" fill="rgb(240,77,26)" fg:x="4518" fg:w="4"/><text x="38.7309%" y="815.50"></text></g><g><title>syscall_return_via_sysret (4 samples, 0.03%)</title><rect x="38.5592%" y="837" width="0.0341%" height="15" fill="rgb(230,222,6)" fg:x="4523" fg:w="4"/><text x="38.7735%" y="847.50"></text></g><g><title>__send (2,091 samples, 17.83%)</title><rect x="20.7843%" y="853" width="17.8261%" height="15" fill="rgb(240,101,39)" fg:x="2438" fg:w="2091"/><text x="20.9986%" y="863.50">__send</text></g><g><title>try_charge (2 samples, 0.02%)</title><rect x="38.5934%" y="837" width="0.0171%" height="15" fill="rgb(208,116,22)" fg:x="4527" fg:w="2"/><text x="38.8076%" y="847.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="38.6104%" y="725" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="4529" fg:w="2"/><text x="38.8247%" y="735.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="38.6104%" y="709" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="4529" fg:w="2"/><text x="38.8247%" y="719.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="38.6104%" y="693" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="4529" fg:w="2"/><text x="38.8247%" y="703.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="38.6104%" y="837" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="4529" fg:w="3"/><text x="38.8247%" y="847.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="38.6104%" y="821" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="4529" fg:w="3"/><text x="38.8247%" y="831.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="38.6104%" y="805" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="4529" fg:w="3"/><text x="38.8247%" y="815.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="38.6104%" y="789" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="4529" fg:w="3"/><text x="38.8247%" y="799.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="38.6104%" y="773" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="4529" fg:w="3"/><text x="38.8247%" y="783.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="38.6104%" y="757" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="4529" fg:w="3"/><text x="38.8247%" y="767.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="38.6104%" y="741" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="4529" fg:w="3"/><text x="38.8247%" y="751.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.03%)</title><rect x="38.6104%" y="853" width="0.0341%" height="15" fill="rgb(248,227,45)" fg:x="4529" fg:w="4"/><text x="38.8247%" y="863.50"></text></g><g><title>std::ios_base::_M_call_callbacks (2 samples, 0.02%)</title><rect x="38.6530%" y="821" width="0.0171%" height="15" fill="rgb(239,219,16)" fg:x="4534" fg:w="2"/><text x="38.8673%" y="831.50"></text></g><g><title>std::ios_base::~ios_base (4 samples, 0.03%)</title><rect x="38.6445%" y="837" width="0.0341%" height="15" fill="rgb(222,137,36)" fg:x="4533" fg:w="4"/><text x="38.8588%" y="847.50"></text></g><g><title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (6 samples, 0.05%)</title><rect x="38.6445%" y="853" width="0.0512%" height="15" fill="rgb(216,150,20)" fg:x="4533" fg:w="6"/><text x="38.8588%" y="863.50"></text></g><g><title>std::locale::~locale (2 samples, 0.02%)</title><rect x="38.6786%" y="837" width="0.0171%" height="15" fill="rgb(238,227,18)" fg:x="4537" fg:w="2"/><text x="38.8929%" y="847.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.14%)</title><rect x="38.7468%" y="789" width="0.1364%" height="15" fill="rgb(247,113,52)" fg:x="4545" fg:w="16"/><text x="38.9611%" y="799.50"></text></g><g><title>_IO_default_finish (2 samples, 0.02%)</title><rect x="38.8832%" y="789" width="0.0171%" height="15" fill="rgb(215,155,19)" fg:x="4561" fg:w="2"/><text x="39.0975%" y="799.50"></text></g><g><title>_IO_setb (2 samples, 0.02%)</title><rect x="38.9003%" y="773" width="0.0171%" height="15" fill="rgb(233,225,36)" fg:x="4563" fg:w="2"/><text x="39.1145%" y="783.50"></text></g><g><title>dnotify_flush (2 samples, 0.02%)</title><rect x="38.9344%" y="693" width="0.0171%" height="15" fill="rgb(230,207,42)" fg:x="4567" fg:w="2"/><text x="39.1486%" y="703.50"></text></g><g><title>do_syscall_64 (8 samples, 0.07%)</title><rect x="38.9173%" y="741" width="0.0682%" height="15" fill="rgb(220,74,14)" fg:x="4565" fg:w="8"/><text x="39.1316%" y="751.50"></text></g><g><title>__x64_sys_close (8 samples, 0.07%)</title><rect x="38.9173%" y="725" width="0.0682%" height="15" fill="rgb(207,163,1)" fg:x="4565" fg:w="8"/><text x="39.1316%" y="735.50"></text></g><g><title>filp_close (7 samples, 0.06%)</title><rect x="38.9258%" y="709" width="0.0597%" height="15" fill="rgb(233,173,24)" fg:x="4566" fg:w="7"/><text x="39.1401%" y="719.50"></text></g><g><title>fput_many (4 samples, 0.03%)</title><rect x="38.9514%" y="693" width="0.0341%" height="15" fill="rgb(223,66,3)" fg:x="4569" fg:w="4"/><text x="39.1657%" y="703.50"></text></g><g><title>task_work_add (4 samples, 0.03%)</title><rect x="38.9514%" y="677" width="0.0341%" height="15" fill="rgb(223,98,11)" fg:x="4569" fg:w="4"/><text x="39.1657%" y="687.50"></text></g><g><title>kick_process (3 samples, 0.03%)</title><rect x="38.9599%" y="661" width="0.0256%" height="15" fill="rgb(219,166,2)" fg:x="4570" fg:w="3"/><text x="39.1742%" y="671.50"></text></g><g><title>blkcg_maybe_throttle_current (3 samples, 0.03%)</title><rect x="38.9940%" y="709" width="0.0256%" height="15" fill="rgb(227,111,33)" fg:x="4574" fg:w="3"/><text x="39.2083%" y="719.50"></text></g><g><title>ext4_release_file (5 samples, 0.04%)</title><rect x="39.0708%" y="677" width="0.0426%" height="15" fill="rgb(218,101,52)" fg:x="4583" fg:w="5"/><text x="39.2850%" y="687.50"></text></g><g><title>mntput (2 samples, 0.02%)</title><rect x="39.1304%" y="677" width="0.0171%" height="15" fill="rgb(231,62,36)" fg:x="4590" fg:w="2"/><text x="39.3447%" y="687.50"></text></g><g><title>mntput_no_expire (2 samples, 0.02%)</title><rect x="39.1475%" y="677" width="0.0171%" height="15" fill="rgb(231,188,50)" fg:x="4592" fg:w="2"/><text x="39.3618%" y="687.50"></text></g><g><title>percpu_counter_add_batch (4 samples, 0.03%)</title><rect x="39.1645%" y="677" width="0.0341%" height="15" fill="rgb(219,106,45)" fg:x="4594" fg:w="4"/><text x="39.3788%" y="687.50"></text></g><g><title>__fput (20 samples, 0.17%)</title><rect x="39.0452%" y="693" width="0.1705%" height="15" fill="rgb(210,120,45)" fg:x="4580" fg:w="20"/><text x="39.2595%" y="703.50"></text></g><g><title>security_file_free (2 samples, 0.02%)</title><rect x="39.1986%" y="677" width="0.0171%" height="15" fill="rgb(254,220,0)" fg:x="4598" fg:w="2"/><text x="39.4129%" y="687.50"></text></g><g><title>__close_nocancel (36 samples, 0.31%)</title><rect x="38.9173%" y="773" width="0.3069%" height="15" fill="rgb(214,210,37)" fg:x="4565" fg:w="36"/><text x="39.1316%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (36 samples, 0.31%)</title><rect x="38.9173%" y="757" width="0.3069%" height="15" fill="rgb(205,226,15)" fg:x="4565" fg:w="36"/><text x="39.1316%" y="767.50"></text></g><g><title>syscall_exit_to_user_mode (28 samples, 0.24%)</title><rect x="38.9855%" y="741" width="0.2387%" height="15" fill="rgb(215,101,28)" fg:x="4573" fg:w="28"/><text x="39.1998%" y="751.50"></text></g><g><title>exit_to_user_mode_prepare (28 samples, 0.24%)</title><rect x="38.9855%" y="725" width="0.2387%" height="15" fill="rgb(240,77,26)" fg:x="4573" fg:w="28"/><text x="39.1998%" y="735.50"></text></g><g><title>task_work_run (22 samples, 0.19%)</title><rect x="39.0367%" y="709" width="0.1876%" height="15" fill="rgb(206,18,50)" fg:x="4579" fg:w="22"/><text x="39.2509%" y="719.50"></text></g><g><title>_IO_file_close_it (39 samples, 0.33%)</title><rect x="38.9003%" y="789" width="0.3325%" height="15" fill="rgb(225,62,18)" fg:x="4563" fg:w="39"/><text x="39.1145%" y="799.50"></text></g><g><title>std::__basic_file&lt;char&gt;::close (59 samples, 0.50%)</title><rect x="38.7383%" y="821" width="0.5030%" height="15" fill="rgb(238,94,30)" fg:x="4544" fg:w="59"/><text x="38.9526%" y="831.50"></text></g><g><title>fclose (59 samples, 0.50%)</title><rect x="38.7383%" y="805" width="0.5030%" height="15" fill="rgb(249,229,5)" fg:x="4544" fg:w="59"/><text x="38.9526%" y="815.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.04%)</title><rect x="39.2583%" y="805" width="0.0426%" height="15" fill="rgb(247,113,52)" fg:x="4605" fg:w="5"/><text x="39.4726%" y="815.50"></text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="39.3009%" y="805" width="0.0341%" height="15" fill="rgb(221,14,53)" fg:x="4610" fg:w="4"/><text x="39.5152%" y="815.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="39.3180%" y="789" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="4612" fg:w="2"/><text x="39.5323%" y="799.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="39.3180%" y="773" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="4612" fg:w="2"/><text x="39.5323%" y="783.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="39.3180%" y="757" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="4612" fg:w="2"/><text x="39.5323%" y="767.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="39.3180%" y="741" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="4612" fg:w="2"/><text x="39.5323%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="39.3180%" y="725" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="4612" fg:w="2"/><text x="39.5323%" y="735.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="39.3180%" y="709" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="4612" fg:w="2"/><text x="39.5323%" y="719.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="39.3180%" y="693" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="4612" fg:w="2"/><text x="39.5323%" y="703.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="39.3180%" y="677" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="4612" fg:w="2"/><text x="39.5323%" y="687.50"></text></g><g><title>free@plt (4 samples, 0.03%)</title><rect x="39.3350%" y="805" width="0.0341%" height="15" fill="rgb(250,84,38)" fg:x="4614" fg:w="4"/><text x="39.5493%" y="815.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_destroy_internal_buffer (18 samples, 0.15%)</title><rect x="39.2413%" y="821" width="0.1535%" height="15" fill="rgb(229,92,20)" fg:x="4603" fg:w="18"/><text x="39.4555%" y="831.50"></text></g><g><title>operator delete[] (2 samples, 0.02%)</title><rect x="39.3777%" y="805" width="0.0171%" height="15" fill="rgb(237,205,5)" fg:x="4619" fg:w="2"/><text x="39.5919%" y="815.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (83 samples, 0.71%)</title><rect x="38.7298%" y="837" width="0.7076%" height="15" fill="rgb(209,169,46)" fg:x="4543" fg:w="83"/><text x="38.9440%" y="847.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (5 samples, 0.04%)</title><rect x="39.3947%" y="821" width="0.0426%" height="15" fill="rgb(210,71,1)" fg:x="4621" fg:w="5"/><text x="39.6090%" y="831.50"></text></g><g><title>std::ios_base::~ios_base (3 samples, 0.03%)</title><rect x="39.4373%" y="837" width="0.0256%" height="15" fill="rgb(222,137,36)" fg:x="4626" fg:w="3"/><text x="39.6516%" y="847.50"></text></g><g><title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (92 samples, 0.78%)</title><rect x="38.6957%" y="853" width="0.7843%" height="15" fill="rgb(238,137,47)" fg:x="4539" fg:w="92"/><text x="38.9099%" y="863.50"></text></g><g><title>std::locale::~locale (2 samples, 0.02%)</title><rect x="39.4629%" y="837" width="0.0171%" height="15" fill="rgb(238,227,18)" fg:x="4629" fg:w="2"/><text x="39.6772%" y="847.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::eof (8 samples, 0.07%)</title><rect x="39.4800%" y="853" width="0.0682%" height="15" fill="rgb(228,109,10)" fg:x="4631" fg:w="8"/><text x="39.6943%" y="863.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::fail (8 samples, 0.07%)</title><rect x="39.5482%" y="853" width="0.0682%" height="15" fill="rgb(227,84,25)" fg:x="4639" fg:w="8"/><text x="39.7625%" y="863.50"></text></g><g><title>std::istream::gcount (10 samples, 0.09%)</title><rect x="39.6164%" y="853" width="0.0853%" height="15" fill="rgb(237,177,53)" fg:x="4647" fg:w="10"/><text x="39.8307%" y="863.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="39.6846%" y="837" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="847.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="39.6846%" y="821" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="831.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="39.6846%" y="805" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="815.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="39.6846%" y="789" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="799.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="39.6846%" y="773" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="783.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="39.6846%" y="757" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="767.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="39.6846%" y="741" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="751.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="39.6846%" y="725" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="735.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="39.6846%" y="709" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="719.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="39.6846%" y="693" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="703.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="39.6846%" y="677" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="687.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="39.6846%" y="661" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="671.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="39.6846%" y="645" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="655.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="39.6846%" y="629" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="639.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="39.6846%" y="613" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="623.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="39.6846%" y="597" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="607.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="39.6846%" y="581" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="591.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="39.6846%" y="565" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="575.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="39.6846%" y="549" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="4655" fg:w="2"/><text x="39.8989%" y="559.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="39.8636%" y="837" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="4676" fg:w="3"/><text x="40.0779%" y="847.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="39.8636%" y="821" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="4676" fg:w="3"/><text x="40.0779%" y="831.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="39.8636%" y="805" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="4676" fg:w="3"/><text x="40.0779%" y="815.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="39.8636%" y="789" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="4676" fg:w="3"/><text x="40.0779%" y="799.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="39.8636%" y="773" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="4676" fg:w="3"/><text x="40.0779%" y="783.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="39.8636%" y="757" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="4676" fg:w="3"/><text x="40.0779%" y="767.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="39.8636%" y="741" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="4676" fg:w="3"/><text x="40.0779%" y="751.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.02%)</title><rect x="39.8721%" y="725" width="0.0171%" height="15" fill="rgb(251,188,47)" fg:x="4677" fg:w="2"/><text x="40.0864%" y="735.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="40.3154%" y="821" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="831.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="40.3154%" y="805" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="815.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="40.3154%" y="789" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="799.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="40.3154%" y="773" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="783.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="40.3154%" y="757" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="767.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="40.3154%" y="741" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="751.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="40.3154%" y="725" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="735.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="40.3154%" y="709" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="719.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="40.3154%" y="693" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="703.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="40.3154%" y="677" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="687.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="40.3154%" y="661" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="671.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="40.3154%" y="645" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="655.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="40.3154%" y="629" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="4729" fg:w="3"/><text x="40.5297%" y="639.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="40.3240%" y="613" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="4730" fg:w="2"/><text x="40.5382%" y="623.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="40.3240%" y="597" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="4730" fg:w="2"/><text x="40.5382%" y="607.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="40.3240%" y="581" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="4730" fg:w="2"/><text x="40.5382%" y="591.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="40.3240%" y="565" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="4730" fg:w="2"/><text x="40.5382%" y="575.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="40.3240%" y="549" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="4730" fg:w="2"/><text x="40.5382%" y="559.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="40.3240%" y="533" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="4730" fg:w="2"/><text x="40.5382%" y="543.50"></text></g><g><title>tcp_ack (2 samples, 0.02%)</title><rect x="40.3240%" y="517" width="0.0171%" height="15" fill="rgb(213,228,3)" fg:x="4730" fg:w="2"/><text x="40.5382%" y="527.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="40.6820%" y="789" width="0.0341%" height="15" fill="rgb(229,107,3)" fg:x="4772" fg:w="4"/><text x="40.8963%" y="799.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="40.7161%" y="789" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="4776" fg:w="3"/><text x="40.9304%" y="799.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="40.7161%" y="773" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="4776" fg:w="3"/><text x="40.9304%" y="783.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="40.7161%" y="757" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="4776" fg:w="3"/><text x="40.9304%" y="767.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="40.7161%" y="741" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="4776" fg:w="3"/><text x="40.9304%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="40.7161%" y="725" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="4776" fg:w="3"/><text x="40.9304%" y="735.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="40.7161%" y="709" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="4776" fg:w="3"/><text x="40.9304%" y="719.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="40.7161%" y="693" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="4776" fg:w="3"/><text x="40.9304%" y="703.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="40.7161%" y="677" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="4776" fg:w="3"/><text x="40.9304%" y="687.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="40.7161%" y="661" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="4776" fg:w="3"/><text x="40.9304%" y="671.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="40.7161%" y="645" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="4776" fg:w="3"/><text x="40.9304%" y="655.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="40.7161%" y="629" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="4776" fg:w="3"/><text x="40.9304%" y="639.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="40.7161%" y="613" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="4776" fg:w="3"/><text x="40.9304%" y="623.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="40.7246%" y="597" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="4777" fg:w="2"/><text x="40.9389%" y="607.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="40.7246%" y="581" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="4777" fg:w="2"/><text x="40.9389%" y="591.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="40.7246%" y="565" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="4777" fg:w="2"/><text x="40.9389%" y="575.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="40.7246%" y="549" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="4777" fg:w="2"/><text x="40.9389%" y="559.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="40.7246%" y="533" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="4777" fg:w="2"/><text x="40.9389%" y="543.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="40.7246%" y="517" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="4777" fg:w="2"/><text x="40.9389%" y="527.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="40.7246%" y="501" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="4777" fg:w="2"/><text x="40.9389%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.03%)</title><rect x="40.7417%" y="789" width="0.0256%" height="15" fill="rgb(234,224,53)" fg:x="4779" fg:w="3"/><text x="40.9560%" y="799.50"></text></g><g><title>__x64_sys_read (7 samples, 0.06%)</title><rect x="40.9122%" y="757" width="0.0597%" height="15" fill="rgb(250,107,45)" fg:x="4799" fg:w="7"/><text x="41.1265%" y="767.50"></text></g><g><title>__fdget_pos (35 samples, 0.30%)</title><rect x="41.0742%" y="741" width="0.2984%" height="15" fill="rgb(205,61,45)" fg:x="4818" fg:w="35"/><text x="41.2885%" y="751.50"></text></g><g><title>__fget_light (18 samples, 0.15%)</title><rect x="41.2191%" y="725" width="0.1535%" height="15" fill="rgb(243,103,32)" fg:x="4835" fg:w="18"/><text x="41.4334%" y="735.50"></text></g><g><title>__fsnotify_parent (18 samples, 0.15%)</title><rect x="41.5090%" y="725" width="0.1535%" height="15" fill="rgb(232,3,50)" fg:x="4869" fg:w="18"/><text x="41.7232%" y="735.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="41.6624%" y="725" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="4887" fg:w="2"/><text x="41.8767%" y="735.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="41.6624%" y="709" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="4887" fg:w="2"/><text x="41.8767%" y="719.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="41.6624%" y="693" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="4887" fg:w="2"/><text x="41.8767%" y="703.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="41.6624%" y="677" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="4887" fg:w="2"/><text x="41.8767%" y="687.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="41.6624%" y="661" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="4887" fg:w="2"/><text x="41.8767%" y="671.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="41.6624%" y="645" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="4887" fg:w="2"/><text x="41.8767%" y="655.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="41.6624%" y="629" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="4887" fg:w="2"/><text x="41.8767%" y="639.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="41.6624%" y="613" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="4887" fg:w="2"/><text x="41.8767%" y="623.50"></text></g><g><title>ext4_file_read_iter (18 samples, 0.15%)</title><rect x="41.7647%" y="709" width="0.1535%" height="15" fill="rgb(246,166,2)" fg:x="4899" fg:w="18"/><text x="41.9790%" y="719.50"></text></g><g><title>__irqentry_text_start (5 samples, 0.04%)</title><rect x="42.4808%" y="693" width="0.0426%" height="15" fill="rgb(229,107,3)" fg:x="4983" fg:w="5"/><text x="42.6951%" y="703.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.02%)</title><rect x="42.5234%" y="693" width="0.0171%" height="15" fill="rgb(211,8,20)" fg:x="4988" fg:w="2"/><text x="42.7377%" y="703.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.02%)</title><rect x="42.5234%" y="677" width="0.0171%" height="15" fill="rgb(210,87,27)" fg:x="4988" fg:w="2"/><text x="42.7377%" y="687.50"></text></g><g><title>rcu_all_qs (3 samples, 0.03%)</title><rect x="42.5746%" y="677" width="0.0256%" height="15" fill="rgb(224,119,51)" fg:x="4994" fg:w="3"/><text x="42.7889%" y="687.50"></text></g><g><title>_cond_resched (9 samples, 0.08%)</title><rect x="42.5405%" y="693" width="0.0767%" height="15" fill="rgb(240,228,18)" fg:x="4990" fg:w="9"/><text x="42.7548%" y="703.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.02%)</title><rect x="42.6002%" y="677" width="0.0171%" height="15" fill="rgb(210,87,27)" fg:x="4997" fg:w="2"/><text x="42.8145%" y="687.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="42.6257%" y="581" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="591.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="42.6257%" y="565" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="575.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="42.6257%" y="549" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="559.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="42.6257%" y="533" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="543.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="42.6257%" y="517" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="527.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="42.6257%" y="501" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="511.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="42.6257%" y="485" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="495.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="42.6257%" y="469" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="479.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="42.6257%" y="453" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="463.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="42.6257%" y="437" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="447.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="42.6257%" y="421" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="431.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="42.6257%" y="405" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="42.6257%" y="389" width="0.0171%" height="15" fill="rgb(226,88,38)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="399.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="42.6257%" y="373" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="5000" fg:w="2"/><text x="42.8400%" y="383.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.03%)</title><rect x="42.6172%" y="693" width="0.0341%" height="15" fill="rgb(248,227,45)" fg:x="4999" fg:w="4"/><text x="42.8315%" y="703.50"></text></g><g><title>common_interrupt (4 samples, 0.03%)</title><rect x="42.6172%" y="677" width="0.0341%" height="15" fill="rgb(250,67,32)" fg:x="4999" fg:w="4"/><text x="42.8315%" y="687.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="42.6172%" y="661" width="0.0341%" height="15" fill="rgb(240,18,12)" fg:x="4999" fg:w="4"/><text x="42.8315%" y="671.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="42.6257%" y="645" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="5000" fg:w="3"/><text x="42.8400%" y="655.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="42.6257%" y="629" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="5000" fg:w="3"/><text x="42.8400%" y="639.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="42.6257%" y="613" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="5000" fg:w="3"/><text x="42.8400%" y="623.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="42.6257%" y="597" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="5000" fg:w="3"/><text x="42.8400%" y="607.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="42.9838%" y="677" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="5042" fg:w="2"/><text x="43.1981%" y="687.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.02%)</title><rect x="43.0009%" y="677" width="0.0171%" height="15" fill="rgb(211,8,20)" fg:x="5044" fg:w="2"/><text x="43.2151%" y="687.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.02%)</title><rect x="43.0009%" y="661" width="0.0171%" height="15" fill="rgb(210,87,27)" fg:x="5044" fg:w="2"/><text x="43.2151%" y="671.50"></text></g><g><title>_cond_resched (8 samples, 0.07%)</title><rect x="43.0179%" y="677" width="0.0682%" height="15" fill="rgb(240,228,18)" fg:x="5046" fg:w="8"/><text x="43.2322%" y="687.50"></text></g><g><title>rcu_all_qs (4 samples, 0.03%)</title><rect x="43.0520%" y="661" width="0.0341%" height="15" fill="rgb(224,119,51)" fg:x="5050" fg:w="4"/><text x="43.2663%" y="671.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="43.0946%" y="581" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="5055" fg:w="2"/><text x="43.3089%" y="591.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="43.0946%" y="565" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="5055" fg:w="2"/><text x="43.3089%" y="575.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.03%)</title><rect x="43.0861%" y="677" width="0.0341%" height="15" fill="rgb(248,227,45)" fg:x="5054" fg:w="4"/><text x="43.3004%" y="687.50"></text></g><g><title>common_interrupt (4 samples, 0.03%)</title><rect x="43.0861%" y="661" width="0.0341%" height="15" fill="rgb(250,67,32)" fg:x="5054" fg:w="4"/><text x="43.3004%" y="671.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="43.0946%" y="645" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="5055" fg:w="3"/><text x="43.3089%" y="655.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="43.0946%" y="629" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="5055" fg:w="3"/><text x="43.3089%" y="639.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="43.0946%" y="613" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="5055" fg:w="3"/><text x="43.3089%" y="623.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="43.0946%" y="597" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="5055" fg:w="3"/><text x="43.3089%" y="607.50"></text></g><g><title>__irqentry_text_start (34 samples, 0.29%)</title><rect x="51.6709%" y="661" width="0.2899%" height="15" fill="rgb(229,107,3)" fg:x="6061" fg:w="34"/><text x="51.8852%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="51.9608%" y="629" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="6095" fg:w="3"/><text x="52.1751%" y="639.50"></text></g><g><title>handle_edge_irq (3 samples, 0.03%)</title><rect x="51.9608%" y="613" width="0.0256%" height="15" fill="rgb(219,15,9)" fg:x="6095" fg:w="3"/><text x="52.1751%" y="623.50"></text></g><g><title>handle_irq_event (3 samples, 0.03%)</title><rect x="51.9608%" y="597" width="0.0256%" height="15" fill="rgb(209,73,52)" fg:x="6095" fg:w="3"/><text x="52.1751%" y="607.50"></text></g><g><title>__handle_irq_event_percpu (3 samples, 0.03%)</title><rect x="51.9608%" y="581" width="0.0256%" height="15" fill="rgb(239,110,26)" fg:x="6095" fg:w="3"/><text x="52.1751%" y="591.50"></text></g><g><title>vring_interrupt (3 samples, 0.03%)</title><rect x="51.9608%" y="565" width="0.0256%" height="15" fill="rgb(206,212,41)" fg:x="6095" fg:w="3"/><text x="52.1751%" y="575.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.02%)</title><rect x="52.0460%" y="453" width="0.0171%" height="15" fill="rgb(246,15,53)" fg:x="6105" fg:w="2"/><text x="52.2603%" y="463.50"></text></g><g><title>sk_filter_trim_cap (3 samples, 0.03%)</title><rect x="52.0801%" y="389" width="0.0256%" height="15" fill="rgb(247,83,44)" fg:x="6109" fg:w="3"/><text x="52.2944%" y="399.50"></text></g><g><title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="52.0887%" y="373" width="0.0171%" height="15" fill="rgb(241,95,48)" fg:x="6110" fg:w="2"/><text x="52.3029%" y="383.50"></text></g><g><title>dev_hard_start_xmit (7 samples, 0.06%)</title><rect x="52.1483%" y="229" width="0.0597%" height="15" fill="rgb(251,86,39)" fg:x="6117" fg:w="7"/><text x="52.3626%" y="239.50"></text></g><g><title>start_xmit (7 samples, 0.06%)</title><rect x="52.1483%" y="213" width="0.0597%" height="15" fill="rgb(211,140,13)" fg:x="6117" fg:w="7"/><text x="52.3626%" y="223.50"></text></g><g><title>virtqueue_notify (6 samples, 0.05%)</title><rect x="52.1569%" y="197" width="0.0512%" height="15" fill="rgb(219,119,18)" fg:x="6118" fg:w="6"/><text x="52.3711%" y="207.50"></text></g><g><title>vp_notify (6 samples, 0.05%)</title><rect x="52.1569%" y="181" width="0.0512%" height="15" fill="rgb(230,193,37)" fg:x="6118" fg:w="6"/><text x="52.3711%" y="191.50"></text></g><g><title>iowrite16 (6 samples, 0.05%)</title><rect x="52.1569%" y="165" width="0.0512%" height="15" fill="rgb(218,139,37)" fg:x="6118" fg:w="6"/><text x="52.3711%" y="175.50"></text></g><g><title>__qdisc_run (8 samples, 0.07%)</title><rect x="52.1483%" y="261" width="0.0682%" height="15" fill="rgb(252,144,25)" fg:x="6117" fg:w="8"/><text x="52.3626%" y="271.50"></text></g><g><title>sch_direct_xmit (8 samples, 0.07%)</title><rect x="52.1483%" y="245" width="0.0682%" height="15" fill="rgb(222,128,44)" fg:x="6117" fg:w="8"/><text x="52.3626%" y="255.50"></text></g><g><title>__tcp_transmit_skb (11 samples, 0.09%)</title><rect x="52.1313%" y="325" width="0.0938%" height="15" fill="rgb(238,106,36)" fg:x="6115" fg:w="11"/><text x="52.3456%" y="335.50"></text></g><g><title>__ip_queue_xmit (10 samples, 0.09%)</title><rect x="52.1398%" y="309" width="0.0853%" height="15" fill="rgb(224,11,5)" fg:x="6116" fg:w="10"/><text x="52.3541%" y="319.50"></text></g><g><title>ip_finish_output2 (9 samples, 0.08%)</title><rect x="52.1483%" y="293" width="0.0767%" height="15" fill="rgb(219,227,11)" fg:x="6117" fg:w="9"/><text x="52.3626%" y="303.50"></text></g><g><title>__dev_queue_xmit (9 samples, 0.08%)</title><rect x="52.1483%" y="277" width="0.0767%" height="15" fill="rgb(232,116,37)" fg:x="6117" fg:w="9"/><text x="52.3626%" y="287.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.02%)</title><rect x="52.2421%" y="293" width="0.0171%" height="15" fill="rgb(228,161,44)" fg:x="6128" fg:w="2"/><text x="52.4564%" y="303.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.04%)</title><rect x="52.2251%" y="325" width="0.0426%" height="15" fill="rgb(225,2,28)" fg:x="6126" fg:w="5"/><text x="52.4393%" y="335.50"></text></g><g><title>__alloc_skb (3 samples, 0.03%)</title><rect x="52.2421%" y="309" width="0.0256%" height="15" fill="rgb(237,90,40)" fg:x="6128" fg:w="3"/><text x="52.4564%" y="319.50"></text></g><g><title>__tcp_push_pending_frames (20 samples, 0.17%)</title><rect x="52.1142%" y="357" width="0.1705%" height="15" fill="rgb(226,88,38)" fg:x="6113" fg:w="20"/><text x="52.3285%" y="367.50"></text></g><g><title>tcp_write_xmit (20 samples, 0.17%)</title><rect x="52.1142%" y="341" width="0.1705%" height="15" fill="rgb(236,72,36)" fg:x="6113" fg:w="20"/><text x="52.3285%" y="351.50"></text></g><g><title>__kfree_skb (2 samples, 0.02%)</title><rect x="52.2933%" y="341" width="0.0171%" height="15" fill="rgb(208,195,26)" fg:x="6134" fg:w="2"/><text x="52.5076%" y="351.50"></text></g><g><title>kfree (2 samples, 0.02%)</title><rect x="52.2933%" y="325" width="0.0171%" height="15" fill="rgb(222,6,37)" fg:x="6134" fg:w="2"/><text x="52.5076%" y="335.50"></text></g><g><title>tcp_sacktag_write_queue (2 samples, 0.02%)</title><rect x="52.3359%" y="341" width="0.0171%" height="15" fill="rgb(251,92,9)" fg:x="6139" fg:w="2"/><text x="52.5502%" y="351.50"></text></g><g><title>tcp_sacktag_walk (2 samples, 0.02%)</title><rect x="52.3359%" y="325" width="0.0171%" height="15" fill="rgb(235,55,24)" fg:x="6139" fg:w="2"/><text x="52.5502%" y="335.50"></text></g><g><title>tcp_ack (10 samples, 0.09%)</title><rect x="52.2847%" y="357" width="0.0853%" height="15" fill="rgb(213,228,3)" fg:x="6133" fg:w="10"/><text x="52.4990%" y="367.50"></text></g><g><title>tcp_rcv_established (33 samples, 0.28%)</title><rect x="52.1057%" y="373" width="0.2813%" height="15" fill="rgb(224,50,47)" fg:x="6112" fg:w="33"/><text x="52.3200%" y="383.50"></text></g><g><title>napi_complete_done (45 samples, 0.38%)</title><rect x="52.0119%" y="533" width="0.3836%" height="15" fill="rgb(226,216,13)" fg:x="6101" fg:w="45"/><text x="52.2262%" y="543.50"></text></g><g><title>netif_receive_skb_list_internal (44 samples, 0.38%)</title><rect x="52.0205%" y="517" width="0.3751%" height="15" fill="rgb(216,153,44)" fg:x="6102" fg:w="44"/><text x="52.2347%" y="527.50"></text></g><g><title>__netif_receive_skb_list_core (44 samples, 0.38%)</title><rect x="52.0205%" y="501" width="0.3751%" height="15" fill="rgb(227,176,26)" fg:x="6102" fg:w="44"/><text x="52.2347%" y="511.50"></text></g><g><title>ip_list_rcv (43 samples, 0.37%)</title><rect x="52.0290%" y="485" width="0.3666%" height="15" fill="rgb(215,38,16)" fg:x="6103" fg:w="43"/><text x="52.2433%" y="495.50"></text></g><g><title>ip_sublist_rcv (43 samples, 0.37%)</title><rect x="52.0290%" y="469" width="0.3666%" height="15" fill="rgb(207,166,9)" fg:x="6103" fg:w="43"/><text x="52.2433%" y="479.50"></text></g><g><title>ip_sublist_rcv_finish (39 samples, 0.33%)</title><rect x="52.0631%" y="453" width="0.3325%" height="15" fill="rgb(223,178,14)" fg:x="6107" fg:w="39"/><text x="52.2774%" y="463.50"></text></g><g><title>ip_local_deliver_finish (38 samples, 0.32%)</title><rect x="52.0716%" y="437" width="0.3240%" height="15" fill="rgb(220,94,29)" fg:x="6108" fg:w="38"/><text x="52.2859%" y="447.50"></text></g><g><title>ip_protocol_deliver_rcu (38 samples, 0.32%)</title><rect x="52.0716%" y="421" width="0.3240%" height="15" fill="rgb(207,19,13)" fg:x="6108" fg:w="38"/><text x="52.2859%" y="431.50"></text></g><g><title>tcp_v4_rcv (37 samples, 0.32%)</title><rect x="52.0801%" y="405" width="0.3154%" height="15" fill="rgb(224,38,0)" fg:x="6109" fg:w="37"/><text x="52.2944%" y="415.50"></text></g><g><title>tcp_v4_do_rcv (34 samples, 0.29%)</title><rect x="52.1057%" y="389" width="0.2899%" height="15" fill="rgb(228,220,18)" fg:x="6112" fg:w="34"/><text x="52.3200%" y="399.50"></text></g><g><title>__napi_alloc_skb (2 samples, 0.02%)</title><rect x="52.4041%" y="501" width="0.0171%" height="15" fill="rgb(236,121,11)" fg:x="6147" fg:w="2"/><text x="52.6184%" y="511.50"></text></g><g><title>__alloc_skb (2 samples, 0.02%)</title><rect x="52.4041%" y="485" width="0.0171%" height="15" fill="rgb(237,90,40)" fg:x="6147" fg:w="2"/><text x="52.6184%" y="495.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="52.4041%" y="469" width="0.0171%" height="15" fill="rgb(227,94,12)" fg:x="6147" fg:w="2"/><text x="52.6184%" y="479.50"></text></g><g><title>receive_buf (4 samples, 0.03%)</title><rect x="52.3956%" y="533" width="0.0341%" height="15" fill="rgb(233,111,44)" fg:x="6146" fg:w="4"/><text x="52.6099%" y="543.50"></text></g><g><title>page_to_skb (3 samples, 0.03%)</title><rect x="52.4041%" y="517" width="0.0256%" height="15" fill="rgb(243,180,22)" fg:x="6147" fg:w="3"/><text x="52.6184%" y="527.50"></text></g><g><title>virtnet_poll (51 samples, 0.43%)</title><rect x="52.0034%" y="549" width="0.4348%" height="15" fill="rgb(213,187,12)" fg:x="6100" fg:w="51"/><text x="52.2177%" y="559.50"></text></g><g><title>free_old_xmit_skbs (5 samples, 0.04%)</title><rect x="52.4467%" y="533" width="0.0426%" height="15" fill="rgb(235,178,6)" fg:x="6152" fg:w="5"/><text x="52.6610%" y="543.50"></text></g><g><title>virtqueue_get_buf_ctx_split (5 samples, 0.04%)</title><rect x="52.4467%" y="517" width="0.0426%" height="15" fill="rgb(235,34,35)" fg:x="6152" fg:w="5"/><text x="52.6610%" y="527.50"></text></g><g><title>detach_buf_split (2 samples, 0.02%)</title><rect x="52.4723%" y="501" width="0.0171%" height="15" fill="rgb(228,101,1)" fg:x="6155" fg:w="2"/><text x="52.6866%" y="511.50"></text></g><g><title>kfree (2 samples, 0.02%)</title><rect x="52.4723%" y="485" width="0.0171%" height="15" fill="rgb(222,6,37)" fg:x="6155" fg:w="2"/><text x="52.6866%" y="495.50"></text></g><g><title>net_rx_action (58 samples, 0.49%)</title><rect x="52.0034%" y="565" width="0.4945%" height="15" fill="rgb(231,11,52)" fg:x="6100" fg:w="58"/><text x="52.2177%" y="575.50"></text></g><g><title>virtnet_poll_tx (7 samples, 0.06%)</title><rect x="52.4382%" y="549" width="0.0597%" height="15" fill="rgb(251,188,47)" fg:x="6151" fg:w="7"/><text x="52.6525%" y="559.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.05%)</title><rect x="52.5064%" y="501" width="0.0512%" height="15" fill="rgb(238,106,36)" fg:x="6159" fg:w="6"/><text x="52.7207%" y="511.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.05%)</title><rect x="52.5064%" y="485" width="0.0512%" height="15" fill="rgb(224,11,5)" fg:x="6159" fg:w="6"/><text x="52.7207%" y="495.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.05%)</title><rect x="52.5064%" y="469" width="0.0512%" height="15" fill="rgb(219,227,11)" fg:x="6159" fg:w="6"/><text x="52.7207%" y="479.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.05%)</title><rect x="52.5064%" y="453" width="0.0512%" height="15" fill="rgb(232,116,37)" fg:x="6159" fg:w="6"/><text x="52.7207%" y="463.50"></text></g><g><title>__qdisc_run (6 samples, 0.05%)</title><rect x="52.5064%" y="437" width="0.0512%" height="15" fill="rgb(252,144,25)" fg:x="6159" fg:w="6"/><text x="52.7207%" y="447.50"></text></g><g><title>sch_direct_xmit (6 samples, 0.05%)</title><rect x="52.5064%" y="421" width="0.0512%" height="15" fill="rgb(222,128,44)" fg:x="6159" fg:w="6"/><text x="52.7207%" y="431.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.05%)</title><rect x="52.5064%" y="405" width="0.0512%" height="15" fill="rgb(251,86,39)" fg:x="6159" fg:w="6"/><text x="52.7207%" y="415.50"></text></g><g><title>start_xmit (6 samples, 0.05%)</title><rect x="52.5064%" y="389" width="0.0512%" height="15" fill="rgb(211,140,13)" fg:x="6159" fg:w="6"/><text x="52.7207%" y="399.50"></text></g><g><title>virtqueue_notify (4 samples, 0.03%)</title><rect x="52.5234%" y="373" width="0.0341%" height="15" fill="rgb(219,119,18)" fg:x="6161" fg:w="4"/><text x="52.7377%" y="383.50"></text></g><g><title>vp_notify (4 samples, 0.03%)</title><rect x="52.5234%" y="357" width="0.0341%" height="15" fill="rgb(230,193,37)" fg:x="6161" fg:w="4"/><text x="52.7377%" y="367.50"></text></g><g><title>iowrite16 (4 samples, 0.03%)</title><rect x="52.5234%" y="341" width="0.0341%" height="15" fill="rgb(218,139,37)" fg:x="6161" fg:w="4"/><text x="52.7377%" y="351.50"></text></g><g><title>asm_common_interrupt (71 samples, 0.61%)</title><rect x="51.9608%" y="661" width="0.6053%" height="15" fill="rgb(248,227,45)" fg:x="6095" fg:w="71"/><text x="52.1751%" y="671.50"></text></g><g><title>common_interrupt (71 samples, 0.61%)</title><rect x="51.9608%" y="645" width="0.6053%" height="15" fill="rgb(250,67,32)" fg:x="6095" fg:w="71"/><text x="52.1751%" y="655.50"></text></g><g><title>irq_exit_rcu (68 samples, 0.58%)</title><rect x="51.9864%" y="629" width="0.5797%" height="15" fill="rgb(240,18,12)" fg:x="6098" fg:w="68"/><text x="52.2006%" y="639.50"></text></g><g><title>do_softirq_own_stack (66 samples, 0.56%)</title><rect x="52.0034%" y="613" width="0.5627%" height="15" fill="rgb(223,89,53)" fg:x="6100" fg:w="66"/><text x="52.2177%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (66 samples, 0.56%)</title><rect x="52.0034%" y="597" width="0.5627%" height="15" fill="rgb(208,184,36)" fg:x="6100" fg:w="66"/><text x="52.2177%" y="607.50"></text></g><g><title>__softirqentry_text_start (66 samples, 0.56%)</title><rect x="52.0034%" y="581" width="0.5627%" height="15" fill="rgb(249,91,22)" fg:x="6100" fg:w="66"/><text x="52.2177%" y="591.50"></text></g><g><title>tasklet_action_common.constprop.0 (8 samples, 0.07%)</title><rect x="52.4979%" y="565" width="0.0682%" height="15" fill="rgb(220,151,48)" fg:x="6158" fg:w="8"/><text x="52.7122%" y="575.50"></text></g><g><title>tcp_tasklet_func (8 samples, 0.07%)</title><rect x="52.4979%" y="549" width="0.0682%" height="15" fill="rgb(218,189,37)" fg:x="6158" fg:w="8"/><text x="52.7122%" y="559.50"></text></g><g><title>tcp_tsq_handler (8 samples, 0.07%)</title><rect x="52.4979%" y="533" width="0.0682%" height="15" fill="rgb(238,207,14)" fg:x="6158" fg:w="8"/><text x="52.7122%" y="543.50"></text></g><g><title>tcp_write_xmit (7 samples, 0.06%)</title><rect x="52.5064%" y="517" width="0.0597%" height="15" fill="rgb(236,72,36)" fg:x="6159" fg:w="7"/><text x="52.7207%" y="527.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.03%)</title><rect x="52.5661%" y="661" width="0.0256%" height="15" fill="rgb(208,26,13)" fg:x="6166" fg:w="3"/><text x="52.7804%" y="671.50"></text></g><g><title>exc_page_fault (2 samples, 0.02%)</title><rect x="52.5746%" y="645" width="0.0171%" height="15" fill="rgb(216,51,29)" fg:x="6167" fg:w="2"/><text x="52.7889%" y="655.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.02%)</title><rect x="52.5746%" y="629" width="0.0171%" height="15" fill="rgb(253,37,52)" fg:x="6167" fg:w="2"/><text x="52.7889%" y="639.50"></text></g><g><title>handle_mm_fault (2 samples, 0.02%)</title><rect x="52.5746%" y="613" width="0.0171%" height="15" fill="rgb(247,31,49)" fg:x="6167" fg:w="2"/><text x="52.7889%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="52.6002%" y="629" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="6170" fg:w="3"/><text x="52.8145%" y="639.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="52.6002%" y="613" width="0.0256%" height="15" fill="rgb(221,147,0)" fg:x="6170" fg:w="3"/><text x="52.8145%" y="623.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.03%)</title><rect x="52.6002%" y="597" width="0.0256%" height="15" fill="rgb(212,109,30)" fg:x="6170" fg:w="3"/><text x="52.8145%" y="607.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.03%)</title><rect x="52.6002%" y="581" width="0.0256%" height="15" fill="rgb(232,211,54)" fg:x="6170" fg:w="3"/><text x="52.8145%" y="591.50"></text></g><g><title>tick_sched_timer (3 samples, 0.03%)</title><rect x="52.6002%" y="565" width="0.0256%" height="15" fill="rgb(237,67,28)" fg:x="6170" fg:w="3"/><text x="52.8145%" y="575.50"></text></g><g><title>tick_sched_handle (2 samples, 0.02%)</title><rect x="52.6087%" y="549" width="0.0171%" height="15" fill="rgb(232,138,39)" fg:x="6171" fg:w="2"/><text x="52.8230%" y="559.50"></text></g><g><title>update_process_times (2 samples, 0.02%)</title><rect x="52.6087%" y="533" width="0.0171%" height="15" fill="rgb(236,132,35)" fg:x="6171" fg:w="2"/><text x="52.8230%" y="543.50"></text></g><g><title>rcu_sched_clock_irq (2 samples, 0.02%)</title><rect x="52.6087%" y="517" width="0.0171%" height="15" fill="rgb(215,77,44)" fg:x="6171" fg:w="2"/><text x="52.8230%" y="527.50"></text></g><g><title>copy_page_to_iter (1,170 samples, 9.97%)</title><rect x="42.6598%" y="693" width="9.9744%" height="15" fill="rgb(229,55,41)" fg:x="5004" fg:w="1170"/><text x="42.8741%" y="703.50">copy_page_to_iter</text></g><g><title>copy_user_generic_string (1,115 samples, 9.51%)</title><rect x="43.1287%" y="677" width="9.5055%" height="15" fill="rgb(233,29,30)" fg:x="5059" fg:w="1115"/><text x="43.3430%" y="687.50">copy_user_generi..</text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.04%)</title><rect x="52.5916%" y="661" width="0.0426%" height="15" fill="rgb(209,17,43)" fg:x="6169" fg:w="5"/><text x="52.8059%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (4 samples, 0.03%)</title><rect x="52.6002%" y="645" width="0.0341%" height="15" fill="rgb(218,44,13)" fg:x="6170" fg:w="4"/><text x="52.8145%" y="655.50"></text></g><g><title>mark_page_accessed (8 samples, 0.07%)</title><rect x="52.6343%" y="693" width="0.0682%" height="15" fill="rgb(226,84,51)" fg:x="6174" fg:w="8"/><text x="52.8486%" y="703.50"></text></g><g><title>PageHuge (4 samples, 0.03%)</title><rect x="52.7962%" y="677" width="0.0341%" height="15" fill="rgb(240,178,13)" fg:x="6193" fg:w="4"/><text x="53.0105%" y="687.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="52.8389%" y="677" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="6198" fg:w="2"/><text x="53.0532%" y="687.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="52.8389%" y="661" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="6198" fg:w="2"/><text x="53.0532%" y="671.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="52.8389%" y="645" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="6198" fg:w="2"/><text x="53.0532%" y="655.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="52.8389%" y="629" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="6198" fg:w="2"/><text x="53.0532%" y="639.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="52.8389%" y="613" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="6198" fg:w="2"/><text x="53.0532%" y="623.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="52.8389%" y="597" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="6198" fg:w="2"/><text x="53.0532%" y="607.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="52.8389%" y="581" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="6198" fg:w="2"/><text x="53.0532%" y="591.50"></text></g><g><title>__irqentry_text_start (12 samples, 0.10%)</title><rect x="55.4220%" y="661" width="0.1023%" height="15" fill="rgb(229,107,3)" fg:x="6501" fg:w="12"/><text x="55.6363%" y="671.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="55.5840%" y="229" width="0.0171%" height="15" fill="rgb(251,86,39)" fg:x="6520" fg:w="2"/><text x="55.7983%" y="239.50"></text></g><g><title>start_xmit (2 samples, 0.02%)</title><rect x="55.5840%" y="213" width="0.0171%" height="15" fill="rgb(211,140,13)" fg:x="6520" fg:w="2"/><text x="55.7983%" y="223.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.03%)</title><rect x="55.5754%" y="325" width="0.0341%" height="15" fill="rgb(238,106,36)" fg:x="6519" fg:w="4"/><text x="55.7897%" y="335.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.03%)</title><rect x="55.5754%" y="309" width="0.0341%" height="15" fill="rgb(224,11,5)" fg:x="6519" fg:w="4"/><text x="55.7897%" y="319.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.03%)</title><rect x="55.5840%" y="293" width="0.0256%" height="15" fill="rgb(219,227,11)" fg:x="6520" fg:w="3"/><text x="55.7983%" y="303.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.03%)</title><rect x="55.5840%" y="277" width="0.0256%" height="15" fill="rgb(232,116,37)" fg:x="6520" fg:w="3"/><text x="55.7983%" y="287.50"></text></g><g><title>__qdisc_run (3 samples, 0.03%)</title><rect x="55.5840%" y="261" width="0.0256%" height="15" fill="rgb(252,144,25)" fg:x="6520" fg:w="3"/><text x="55.7983%" y="271.50"></text></g><g><title>sch_direct_xmit (3 samples, 0.03%)</title><rect x="55.5840%" y="245" width="0.0256%" height="15" fill="rgb(222,128,44)" fg:x="6520" fg:w="3"/><text x="55.7983%" y="255.50"></text></g><g><title>__tcp_push_pending_frames (8 samples, 0.07%)</title><rect x="55.5669%" y="357" width="0.0682%" height="15" fill="rgb(226,88,38)" fg:x="6518" fg:w="8"/><text x="55.7812%" y="367.50"></text></g><g><title>tcp_write_xmit (8 samples, 0.07%)</title><rect x="55.5669%" y="341" width="0.0682%" height="15" fill="rgb(236,72,36)" fg:x="6518" fg:w="8"/><text x="55.7812%" y="351.50"></text></g><g><title>skb_split (2 samples, 0.02%)</title><rect x="55.6181%" y="325" width="0.0171%" height="15" fill="rgb(252,127,50)" fg:x="6524" fg:w="2"/><text x="55.8324%" y="335.50"></text></g><g><title>napi_complete_done (15 samples, 0.13%)</title><rect x="55.5413%" y="533" width="0.1279%" height="15" fill="rgb(226,216,13)" fg:x="6515" fg:w="15"/><text x="55.7556%" y="543.50"></text></g><g><title>netif_receive_skb_list_internal (15 samples, 0.13%)</title><rect x="55.5413%" y="517" width="0.1279%" height="15" fill="rgb(216,153,44)" fg:x="6515" fg:w="15"/><text x="55.7556%" y="527.50"></text></g><g><title>__netif_receive_skb_list_core (15 samples, 0.13%)</title><rect x="55.5413%" y="501" width="0.1279%" height="15" fill="rgb(227,176,26)" fg:x="6515" fg:w="15"/><text x="55.7556%" y="511.50"></text></g><g><title>ip_list_rcv (15 samples, 0.13%)</title><rect x="55.5413%" y="485" width="0.1279%" height="15" fill="rgb(215,38,16)" fg:x="6515" fg:w="15"/><text x="55.7556%" y="495.50"></text></g><g><title>ip_sublist_rcv (14 samples, 0.12%)</title><rect x="55.5499%" y="469" width="0.1194%" height="15" fill="rgb(207,166,9)" fg:x="6516" fg:w="14"/><text x="55.7642%" y="479.50"></text></g><g><title>ip_sublist_rcv_finish (13 samples, 0.11%)</title><rect x="55.5584%" y="453" width="0.1108%" height="15" fill="rgb(223,178,14)" fg:x="6517" fg:w="13"/><text x="55.7727%" y="463.50"></text></g><g><title>ip_local_deliver_finish (13 samples, 0.11%)</title><rect x="55.5584%" y="437" width="0.1108%" height="15" fill="rgb(220,94,29)" fg:x="6517" fg:w="13"/><text x="55.7727%" y="447.50"></text></g><g><title>ip_protocol_deliver_rcu (13 samples, 0.11%)</title><rect x="55.5584%" y="421" width="0.1108%" height="15" fill="rgb(207,19,13)" fg:x="6517" fg:w="13"/><text x="55.7727%" y="431.50"></text></g><g><title>tcp_v4_rcv (12 samples, 0.10%)</title><rect x="55.5669%" y="405" width="0.1023%" height="15" fill="rgb(224,38,0)" fg:x="6518" fg:w="12"/><text x="55.7812%" y="415.50"></text></g><g><title>tcp_v4_do_rcv (12 samples, 0.10%)</title><rect x="55.5669%" y="389" width="0.1023%" height="15" fill="rgb(228,220,18)" fg:x="6518" fg:w="12"/><text x="55.7812%" y="399.50"></text></g><g><title>tcp_rcv_established (12 samples, 0.10%)</title><rect x="55.5669%" y="373" width="0.1023%" height="15" fill="rgb(224,50,47)" fg:x="6518" fg:w="12"/><text x="55.7812%" y="383.50"></text></g><g><title>tcp_ack (4 samples, 0.03%)</title><rect x="55.6351%" y="357" width="0.0341%" height="15" fill="rgb(213,228,3)" fg:x="6526" fg:w="4"/><text x="55.8494%" y="367.50"></text></g><g><title>napi_gro_receive (2 samples, 0.02%)</title><rect x="55.6692%" y="533" width="0.0171%" height="15" fill="rgb(248,45,29)" fg:x="6530" fg:w="2"/><text x="55.8835%" y="543.50"></text></g><g><title>virtnet_poll (19 samples, 0.16%)</title><rect x="55.5328%" y="549" width="0.1620%" height="15" fill="rgb(213,187,12)" fg:x="6514" fg:w="19"/><text x="55.7471%" y="559.50"></text></g><g><title>net_rx_action (21 samples, 0.18%)</title><rect x="55.5328%" y="565" width="0.1790%" height="15" fill="rgb(231,11,52)" fg:x="6514" fg:w="21"/><text x="55.7471%" y="575.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.02%)</title><rect x="55.6948%" y="549" width="0.0171%" height="15" fill="rgb(251,188,47)" fg:x="6533" fg:w="2"/><text x="55.9091%" y="559.50"></text></g><g><title>asm_common_interrupt (24 samples, 0.20%)</title><rect x="55.5243%" y="661" width="0.2046%" height="15" fill="rgb(248,227,45)" fg:x="6513" fg:w="24"/><text x="55.7386%" y="671.50"></text></g><g><title>common_interrupt (24 samples, 0.20%)</title><rect x="55.5243%" y="645" width="0.2046%" height="15" fill="rgb(250,67,32)" fg:x="6513" fg:w="24"/><text x="55.7386%" y="655.50"></text></g><g><title>irq_exit_rcu (24 samples, 0.20%)</title><rect x="55.5243%" y="629" width="0.2046%" height="15" fill="rgb(240,18,12)" fg:x="6513" fg:w="24"/><text x="55.7386%" y="639.50"></text></g><g><title>do_softirq_own_stack (24 samples, 0.20%)</title><rect x="55.5243%" y="613" width="0.2046%" height="15" fill="rgb(223,89,53)" fg:x="6513" fg:w="24"/><text x="55.7386%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (24 samples, 0.20%)</title><rect x="55.5243%" y="597" width="0.2046%" height="15" fill="rgb(208,184,36)" fg:x="6513" fg:w="24"/><text x="55.7386%" y="607.50"></text></g><g><title>__softirqentry_text_start (24 samples, 0.20%)</title><rect x="55.5243%" y="581" width="0.2046%" height="15" fill="rgb(249,91,22)" fg:x="6513" fg:w="24"/><text x="55.7386%" y="591.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.02%)</title><rect x="55.7118%" y="565" width="0.0171%" height="15" fill="rgb(220,151,48)" fg:x="6535" fg:w="2"/><text x="55.9261%" y="575.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.02%)</title><rect x="55.7118%" y="549" width="0.0171%" height="15" fill="rgb(218,189,37)" fg:x="6535" fg:w="2"/><text x="55.9261%" y="559.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.02%)</title><rect x="55.7118%" y="533" width="0.0171%" height="15" fill="rgb(238,207,14)" fg:x="6535" fg:w="2"/><text x="55.9261%" y="543.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="55.7118%" y="517" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="6535" fg:w="2"/><text x="55.9261%" y="527.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="55.7289%" y="661" width="0.0171%" height="15" fill="rgb(209,17,43)" fg:x="6537" fg:w="2"/><text x="55.9432%" y="671.50"></text></g><g><title>rcu_read_unlock_strict (2 samples, 0.02%)</title><rect x="55.7460%" y="661" width="0.0171%" height="15" fill="rgb(251,95,14)" fg:x="6539" fg:w="2"/><text x="55.9602%" y="671.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="56.3853%" y="645" width="0.0341%" height="15" fill="rgb(229,107,3)" fg:x="6614" fg:w="4"/><text x="56.5996%" y="655.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="56.4280%" y="341" width="0.0171%" height="15" fill="rgb(226,88,38)" fg:x="6619" fg:w="2"/><text x="56.6422%" y="351.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="56.4280%" y="325" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="6619" fg:w="2"/><text x="56.6422%" y="335.50"></text></g><g><title>asm_common_interrupt (5 samples, 0.04%)</title><rect x="56.4194%" y="645" width="0.0426%" height="15" fill="rgb(248,227,45)" fg:x="6618" fg:w="5"/><text x="56.6337%" y="655.50"></text></g><g><title>common_interrupt (5 samples, 0.04%)</title><rect x="56.4194%" y="629" width="0.0426%" height="15" fill="rgb(250,67,32)" fg:x="6618" fg:w="5"/><text x="56.6337%" y="639.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.04%)</title><rect x="56.4194%" y="613" width="0.0426%" height="15" fill="rgb(240,18,12)" fg:x="6618" fg:w="5"/><text x="56.6337%" y="623.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.04%)</title><rect x="56.4194%" y="597" width="0.0426%" height="15" fill="rgb(223,89,53)" fg:x="6618" fg:w="5"/><text x="56.6337%" y="607.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.04%)</title><rect x="56.4194%" y="581" width="0.0426%" height="15" fill="rgb(208,184,36)" fg:x="6618" fg:w="5"/><text x="56.6337%" y="591.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.04%)</title><rect x="56.4194%" y="565" width="0.0426%" height="15" fill="rgb(249,91,22)" fg:x="6618" fg:w="5"/><text x="56.6337%" y="575.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="56.4280%" y="549" width="0.0341%" height="15" fill="rgb(231,11,52)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="559.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="56.4280%" y="533" width="0.0341%" height="15" fill="rgb(213,187,12)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="543.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="56.4280%" y="517" width="0.0341%" height="15" fill="rgb(226,216,13)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="527.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="56.4280%" y="501" width="0.0341%" height="15" fill="rgb(216,153,44)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="511.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="56.4280%" y="485" width="0.0341%" height="15" fill="rgb(227,176,26)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="495.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="56.4280%" y="469" width="0.0341%" height="15" fill="rgb(215,38,16)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="479.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="56.4280%" y="453" width="0.0341%" height="15" fill="rgb(207,166,9)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="463.50"></text></g><g><title>ip_sublist_rcv_finish (4 samples, 0.03%)</title><rect x="56.4280%" y="437" width="0.0341%" height="15" fill="rgb(223,178,14)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="447.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="56.4280%" y="421" width="0.0341%" height="15" fill="rgb(220,94,29)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="431.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="56.4280%" y="405" width="0.0341%" height="15" fill="rgb(207,19,13)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="415.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.03%)</title><rect x="56.4280%" y="389" width="0.0341%" height="15" fill="rgb(224,38,0)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="399.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.03%)</title><rect x="56.4280%" y="373" width="0.0341%" height="15" fill="rgb(228,220,18)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="383.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.03%)</title><rect x="56.4280%" y="357" width="0.0341%" height="15" fill="rgb(224,50,47)" fg:x="6619" fg:w="4"/><text x="56.6422%" y="367.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="56.5899%" y="629" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="6638" fg:w="2"/><text x="56.8042%" y="639.50"></text></g><g><title>pagecache_get_page (459 samples, 3.91%)</title><rect x="52.7025%" y="693" width="3.9130%" height="15" fill="rgb(254,146,25)" fg:x="6182" fg:w="459"/><text x="52.9168%" y="703.50">pagec..</text></g><g><title>find_get_entry (441 samples, 3.76%)</title><rect x="52.8559%" y="677" width="3.7596%" height="15" fill="rgb(232,175,34)" fg:x="6200" fg:w="441"/><text x="53.0702%" y="687.50">find_..</text></g><g><title>xas_load (99 samples, 0.84%)</title><rect x="55.7715%" y="661" width="0.8440%" height="15" fill="rgb(249,146,47)" fg:x="6542" fg:w="99"/><text x="55.9858%" y="671.50"></text></g><g><title>xas_start (18 samples, 0.15%)</title><rect x="56.4621%" y="645" width="0.1535%" height="15" fill="rgb(249,53,40)" fg:x="6623" fg:w="18"/><text x="56.6763%" y="655.50"></text></g><g><title>srso_safe_ret_alias (3 samples, 0.03%)</title><rect x="56.6155%" y="693" width="0.0256%" height="15" fill="rgb(210,87,27)" fg:x="6641" fg:w="3"/><text x="56.8298%" y="703.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="56.7604%" y="661" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="6658" fg:w="2"/><text x="56.9747%" y="671.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="56.7604%" y="645" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="6658" fg:w="2"/><text x="56.9747%" y="655.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="56.7604%" y="629" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="6658" fg:w="2"/><text x="56.9747%" y="639.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="56.7604%" y="613" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="6658" fg:w="2"/><text x="56.9747%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="56.7604%" y="597" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="6658" fg:w="2"/><text x="56.9747%" y="607.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="56.7604%" y="581" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="6658" fg:w="2"/><text x="56.9747%" y="591.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="56.7604%" y="565" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="6658" fg:w="2"/><text x="56.9747%" y="575.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="56.7604%" y="549" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="6658" fg:w="2"/><text x="56.9747%" y="559.50"></text></g><g><title>generic_file_buffered_read (1,753 samples, 14.94%)</title><rect x="41.9182%" y="709" width="14.9446%" height="15" fill="rgb(225,112,16)" fg:x="4917" fg:w="1753"/><text x="42.1324%" y="719.50">generic_file_buffered_read</text></g><g><title>touch_atime (26 samples, 0.22%)</title><rect x="56.6411%" y="693" width="0.2217%" height="15" fill="rgb(209,24,34)" fg:x="6644" fg:w="26"/><text x="56.8554%" y="703.50"></text></g><g><title>atime_needs_update (16 samples, 0.14%)</title><rect x="56.7263%" y="677" width="0.1364%" height="15" fill="rgb(209,136,34)" fg:x="6654" fg:w="16"/><text x="56.9406%" y="687.50"></text></g><g><title>current_time (10 samples, 0.09%)</title><rect x="56.7775%" y="661" width="0.0853%" height="15" fill="rgb(239,75,43)" fg:x="6660" fg:w="10"/><text x="56.9918%" y="671.50"></text></g><g><title>ktime_get_coarse_real_ts64 (4 samples, 0.03%)</title><rect x="56.8286%" y="645" width="0.0341%" height="15" fill="rgb(228,144,10)" fg:x="6666" fg:w="4"/><text x="57.0429%" y="655.50"></text></g><g><title>new_sync_read (1,788 samples, 15.24%)</title><rect x="41.6795%" y="725" width="15.2430%" height="15" fill="rgb(207,29,15)" fg:x="4889" fg:w="1788"/><text x="41.8937%" y="735.50">new_sync_read</text></g><g><title>generic_file_read_iter (7 samples, 0.06%)</title><rect x="56.8627%" y="709" width="0.0597%" height="15" fill="rgb(221,63,36)" fg:x="6670" fg:w="7"/><text x="57.0770%" y="719.50"></text></g><g><title>rw_verify_area (8 samples, 0.07%)</title><rect x="56.9224%" y="725" width="0.0682%" height="15" fill="rgb(249,222,17)" fg:x="6677" fg:w="8"/><text x="57.1367%" y="735.50"></text></g><g><title>aa_file_perm (3 samples, 0.03%)</title><rect x="57.4425%" y="693" width="0.0256%" height="15" fill="rgb(208,101,21)" fg:x="6738" fg:w="3"/><text x="57.6567%" y="703.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="57.4510%" y="677" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="6739" fg:w="2"/><text x="57.6653%" y="687.50"></text></g><g><title>apparmor_file_permission (42 samples, 0.36%)</title><rect x="57.1185%" y="709" width="0.3581%" height="15" fill="rgb(223,123,50)" fg:x="6700" fg:w="42"/><text x="57.3328%" y="719.50"></text></g><g><title>ksys_read (1,937 samples, 16.51%)</title><rect x="40.9804%" y="757" width="16.5132%" height="15" fill="rgb(233,96,2)" fg:x="4807" fg:w="1937"/><text x="41.1947%" y="767.50">ksys_read</text></g><g><title>vfs_read (1,889 samples, 16.10%)</title><rect x="41.3896%" y="741" width="16.1040%" height="15" fill="rgb(232,76,33)" fg:x="4855" fg:w="1889"/><text x="41.6039%" y="751.50">vfs_read</text></g><g><title>security_file_permission (59 samples, 0.50%)</title><rect x="56.9906%" y="725" width="0.5030%" height="15" fill="rgb(224,58,37)" fg:x="6685" fg:w="59"/><text x="57.2049%" y="735.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="57.4766%" y="709" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="6742" fg:w="2"/><text x="57.6908%" y="719.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="57.4766%" y="693" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="6742" fg:w="2"/><text x="57.6908%" y="703.50"></text></g><g><title>do_syscall_64 (1,960 samples, 16.71%)</title><rect x="40.8014%" y="773" width="16.7093%" height="15" fill="rgb(220,74,14)" fg:x="4786" fg:w="1960"/><text x="41.0156%" y="783.50">do_syscall_64</text></g><g><title>syscall_enter_from_user_mode (2 samples, 0.02%)</title><rect x="57.4936%" y="757" width="0.0171%" height="15" fill="rgb(224,163,22)" fg:x="6744" fg:w="2"/><text x="57.7079%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,974 samples, 16.83%)</title><rect x="40.7673%" y="789" width="16.8286%" height="15" fill="rgb(205,226,15)" fg:x="4782" fg:w="1974"/><text x="40.9815%" y="799.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>syscall_exit_to_user_mode (9 samples, 0.08%)</title><rect x="57.5192%" y="773" width="0.0767%" height="15" fill="rgb(215,101,28)" fg:x="6747" fg:w="9"/><text x="57.7335%" y="783.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.03%)</title><rect x="57.5703%" y="757" width="0.0256%" height="15" fill="rgb(240,77,26)" fg:x="6753" fg:w="3"/><text x="57.7846%" y="767.50"></text></g><g><title>__read (2,004 samples, 17.08%)</title><rect x="40.5286%" y="805" width="17.0844%" height="15" fill="rgb(238,155,20)" fg:x="4754" fg:w="2004"/><text x="40.7428%" y="815.50">__read</text></g><g><title>syscall_return_via_sysret (2 samples, 0.02%)</title><rect x="57.5959%" y="789" width="0.0171%" height="15" fill="rgb(230,222,6)" fg:x="6756" fg:w="2"/><text x="57.8102%" y="799.50"></text></g><g><title>fileno_unlocked (40 samples, 0.34%)</title><rect x="57.6215%" y="805" width="0.3410%" height="15" fill="rgb(253,80,42)" fg:x="6759" fg:w="40"/><text x="57.8358%" y="815.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="57.9454%" y="789" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="799.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="57.9454%" y="773" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="783.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="57.9454%" y="757" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="767.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="57.9454%" y="741" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="57.9454%" y="725" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="735.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="57.9454%" y="709" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="719.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="57.9454%" y="693" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="703.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="57.9454%" y="677" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="687.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="57.9454%" y="661" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="671.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="57.9454%" y="645" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="655.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="57.9454%" y="629" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="639.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="57.9454%" y="613" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="623.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="57.9454%" y="597" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="607.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="57.9454%" y="581" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="591.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="57.9454%" y="565" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="575.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="57.9454%" y="549" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="559.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="57.9454%" y="533" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="543.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="57.9454%" y="517" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="527.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="57.9454%" y="501" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="6797" fg:w="2"/><text x="58.1597%" y="511.50"></text></g><g><title>std::__basic_file&lt;char&gt;::xsgetn (2,084 samples, 17.77%)</title><rect x="40.3410%" y="821" width="17.7664%" height="15" fill="rgb(236,174,8)" fg:x="4732" fg:w="2084"/><text x="40.5553%" y="831.50">std::__basic_file&lt;char&gt;::xsgetn</text></g><g><title>std::__basic_file&lt;char&gt;::fd (17 samples, 0.14%)</title><rect x="57.9625%" y="805" width="0.1449%" height="15" fill="rgb(229,110,20)" fg:x="6799" fg:w="17"/><text x="58.1768%" y="815.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (2,172 samples, 18.52%)</title><rect x="39.8892%" y="837" width="18.5166%" height="15" fill="rgb(211,72,33)" fg:x="4679" fg:w="2172"/><text x="40.1035%" y="847.50">std::basic_filebuf&lt;char, std::char..</text></g><g><title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (34 samples, 0.29%)</title><rect x="58.1159%" y="821" width="0.2899%" height="15" fill="rgb(230,95,20)" fg:x="6817" fg:w="34"/><text x="58.3302%" y="831.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (5 samples, 0.04%)</title><rect x="58.4058%" y="837" width="0.0426%" height="15" fill="rgb(206,71,40)" fg:x="6851" fg:w="5"/><text x="58.6201%" y="847.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (3 samples, 0.03%)</title><rect x="58.4484%" y="837" width="0.0256%" height="15" fill="rgb(207,181,27)" fg:x="6856" fg:w="3"/><text x="58.6627%" y="847.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="58.9514%" y="693" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="6915" fg:w="2"/><text x="59.1657%" y="703.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="58.9514%" y="677" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="6915" fg:w="2"/><text x="59.1657%" y="687.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="58.9514%" y="661" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="6915" fg:w="2"/><text x="59.1657%" y="671.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="58.9514%" y="645" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="6915" fg:w="2"/><text x="59.1657%" y="655.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="58.9514%" y="629" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="6915" fg:w="2"/><text x="59.1657%" y="639.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="58.9514%" y="613" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="6915" fg:w="2"/><text x="59.1657%" y="623.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="58.9514%" y="597" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="6915" fg:w="2"/><text x="59.1657%" y="607.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="58.9514%" y="581" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="6915" fg:w="2"/><text x="59.1657%" y="591.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="58.9514%" y="565" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="6915" fg:w="2"/><text x="59.1657%" y="575.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="58.9514%" y="549" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="6915" fg:w="2"/><text x="59.1657%" y="559.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="58.9514%" y="533" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="6915" fg:w="2"/><text x="59.1657%" y="543.50"></text></g><g><title>std::istream::read (2,261 samples, 19.28%)</title><rect x="39.7016%" y="853" width="19.2754%" height="15" fill="rgb(248,197,32)" fg:x="4657" fg:w="2261"/><text x="39.9159%" y="863.50">std::istream::read</text></g><g><title>std::istream::sentry::sentry (59 samples, 0.50%)</title><rect x="58.4740%" y="837" width="0.5030%" height="15" fill="rgb(232,168,44)" fg:x="6859" fg:w="59"/><text x="58.6883%" y="847.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="58.9514%" y="821" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="6915" fg:w="3"/><text x="59.1657%" y="831.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="58.9514%" y="805" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="6915" fg:w="3"/><text x="59.1657%" y="815.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="58.9514%" y="789" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="6915" fg:w="3"/><text x="59.1657%" y="799.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="58.9514%" y="773" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="6915" fg:w="3"/><text x="59.1657%" y="783.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="58.9514%" y="757" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="6915" fg:w="3"/><text x="59.1657%" y="767.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="58.9514%" y="741" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="6915" fg:w="3"/><text x="59.1657%" y="751.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="58.9514%" y="725" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="6915" fg:w="3"/><text x="59.1657%" y="735.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="58.9514%" y="709" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="6915" fg:w="3"/><text x="59.1657%" y="719.50"></text></g><g><title>std::queue&lt;std::istream*, std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt; &gt;::empty (6 samples, 0.05%)</title><rect x="58.9770%" y="853" width="0.0512%" height="15" fill="rgb(215,109,46)" fg:x="6918" fg:w="6"/><text x="59.1913%" y="863.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::empty (4 samples, 0.03%)</title><rect x="58.9940%" y="837" width="0.0341%" height="15" fill="rgb(248,132,21)" fg:x="6920" fg:w="4"/><text x="59.2083%" y="847.50"></text></g><g><title>std::operator== (2 samples, 0.02%)</title><rect x="59.0111%" y="821" width="0.0171%" height="15" fill="rgb(230,67,18)" fg:x="6922" fg:w="2"/><text x="59.2254%" y="831.50"></text></g><g><title>std::queue&lt;std::istream*, std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt; &gt;::front (20 samples, 0.17%)</title><rect x="59.0281%" y="853" width="0.1705%" height="15" fill="rgb(228,85,38)" fg:x="6924" fg:w="20"/><text x="59.2424%" y="863.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::front (18 samples, 0.15%)</title><rect x="59.0452%" y="837" width="0.1535%" height="15" fill="rgb(205,23,33)" fg:x="6926" fg:w="18"/><text x="59.2595%" y="847.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::begin (11 samples, 0.09%)</title><rect x="59.1049%" y="821" width="0.0938%" height="15" fill="rgb(244,184,36)" fg:x="6933" fg:w="11"/><text x="59.3191%" y="831.50"></text></g><g><title>std::_Deque_iterator&lt;std::istream*, std::istream*&amp;, std::istream**&gt;::_Deque_iterator (7 samples, 0.06%)</title><rect x="59.1390%" y="805" width="0.0597%" height="15" fill="rgb(229,229,48)" fg:x="6937" fg:w="7"/><text x="59.3532%" y="815.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="59.1731%" y="789" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="6941" fg:w="3"/><text x="59.3873%" y="799.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="59.1731%" y="773" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="6941" fg:w="3"/><text x="59.3873%" y="783.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="59.1816%" y="757" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="6942" fg:w="2"/><text x="59.3959%" y="767.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="59.1816%" y="741" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="6942" fg:w="2"/><text x="59.3959%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="59.1816%" y="725" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="6942" fg:w="2"/><text x="59.3959%" y="735.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="59.1816%" y="709" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="6942" fg:w="2"/><text x="59.3959%" y="719.50"></text></g><g><title>AConnection::onPollOut (4,564 samples, 38.91%)</title><rect x="20.2984%" y="869" width="38.9088%" height="15" fill="rgb(247,1,19)" fg:x="2381" fg:w="4564"/><text x="20.5127%" y="879.50">AConnection::onPollOut</text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="59.2072%" y="869" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="6945" fg:w="2"/><text x="59.4214%" y="879.50"></text></g><g><title>[[vdso]] (4 samples, 0.03%)</title><rect x="59.3521%" y="853" width="0.0341%" height="15" fill="rgb(229,169,17)" fg:x="6962" fg:w="4"/><text x="59.5664%" y="863.50"></text></g><g><title>__vdso_gettimeofday (20 samples, 0.17%)</title><rect x="59.2242%" y="869" width="0.1705%" height="15" fill="rgb(246,114,18)" fg:x="6947" fg:w="20"/><text x="59.4385%" y="879.50"></text></g><g><title>AConnection::onPollEvent (5,051 samples, 43.06%)</title><rect x="16.3598%" y="885" width="43.0605%" height="15" fill="rgb(240,200,10)" fg:x="1919" fg:w="5051"/><text x="16.5740%" y="895.50">AConnection::onPollEvent</text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="59.3947%" y="869" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="6967" fg:w="3"/><text x="59.6090%" y="879.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="59.3947%" y="853" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="6967" fg:w="3"/><text x="59.6090%" y="863.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="59.3947%" y="837" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="6967" fg:w="3"/><text x="59.6090%" y="847.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="59.3947%" y="821" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="6967" fg:w="3"/><text x="59.6090%" y="831.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="59.4032%" y="805" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="815.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="59.4032%" y="789" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="799.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="59.4032%" y="773" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="783.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="59.4032%" y="757" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="767.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="59.4032%" y="741" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="751.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="59.4032%" y="725" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="735.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="59.4032%" y="709" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="719.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="59.4032%" y="693" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="703.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="59.4032%" y="677" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="687.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="59.4032%" y="661" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="671.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="59.4032%" y="645" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="655.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="59.4032%" y="629" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="639.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="59.4032%" y="613" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="623.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="59.4032%" y="597" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="607.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="59.4032%" y="581" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="591.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="59.4032%" y="565" width="0.0171%" height="15" fill="rgb(226,88,38)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="575.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="59.4032%" y="549" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="6968" fg:w="2"/><text x="59.6175%" y="559.50"></text></g><g><title>Address::Address (11 samples, 0.09%)</title><rect x="59.6164%" y="869" width="0.0938%" height="15" fill="rgb(231,26,17)" fg:x="6993" fg:w="11"/><text x="59.8307%" y="879.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="59.6931%" y="853" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7002" fg:w="2"/><text x="59.9074%" y="863.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="59.6931%" y="837" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7002" fg:w="2"/><text x="59.9074%" y="847.50"></text></g><g><title>Address::data (3 samples, 0.03%)</title><rect x="59.7101%" y="869" width="0.0256%" height="15" fill="rgb(247,90,31)" fg:x="7004" fg:w="3"/><text x="59.9244%" y="879.50"></text></g><g><title>Address::~Address (9 samples, 0.08%)</title><rect x="59.7357%" y="869" width="0.0767%" height="15" fill="rgb(211,197,29)" fg:x="7007" fg:w="9"/><text x="59.9500%" y="879.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="59.8636%" y="837" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7022" fg:w="2"/><text x="60.0779%" y="847.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="59.8636%" y="821" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7022" fg:w="2"/><text x="60.0779%" y="831.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="59.8636%" y="805" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="7022" fg:w="2"/><text x="60.0779%" y="815.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="59.8636%" y="789" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="7022" fg:w="2"/><text x="60.0779%" y="799.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="59.8636%" y="773" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="7022" fg:w="2"/><text x="60.0779%" y="783.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="59.8636%" y="757" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="7022" fg:w="2"/><text x="60.0779%" y="767.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="59.8636%" y="741" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="7022" fg:w="2"/><text x="60.0779%" y="751.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="59.8636%" y="725" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="7022" fg:w="2"/><text x="60.0779%" y="735.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="59.8636%" y="709" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="7022" fg:w="2"/><text x="60.0779%" y="719.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="59.8636%" y="693" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="7022" fg:w="2"/><text x="60.0779%" y="703.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="59.8636%" y="677" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="7022" fg:w="2"/><text x="60.0779%" y="687.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="59.8636%" y="661" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="7022" fg:w="2"/><text x="60.0779%" y="671.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.04%)</title><rect x="59.8806%" y="837" width="0.0426%" height="15" fill="rgb(244,92,22)" fg:x="7024" fg:w="5"/><text x="60.0949%" y="847.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::istream**&gt;, std::istream**&gt;::allocate (3 samples, 0.03%)</title><rect x="59.9403%" y="773" width="0.0256%" height="15" fill="rgb(252,63,4)" fg:x="7031" fg:w="3"/><text x="60.1546%" y="783.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::istream**&gt;::allocate (3 samples, 0.03%)</title><rect x="59.9403%" y="757" width="0.0256%" height="15" fill="rgb(243,119,12)" fg:x="7031" fg:w="3"/><text x="60.1546%" y="767.50"></text></g><g><title>operator new (3 samples, 0.03%)</title><rect x="59.9403%" y="741" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="7031" fg:w="3"/><text x="60.1546%" y="751.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="59.9403%" y="725" width="0.0256%" height="15" fill="rgb(232,24,50)" fg:x="7031" fg:w="3"/><text x="60.1546%" y="735.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_allocate_map (4 samples, 0.03%)</title><rect x="59.9403%" y="789" width="0.0341%" height="15" fill="rgb(205,38,48)" fg:x="7031" fg:w="4"/><text x="60.1546%" y="799.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::deque (10 samples, 0.09%)</title><rect x="59.9233%" y="837" width="0.0853%" height="15" fill="rgb(214,189,43)" fg:x="7029" fg:w="10"/><text x="60.1376%" y="847.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_Deque_base (10 samples, 0.09%)</title><rect x="59.9233%" y="821" width="0.0853%" height="15" fill="rgb(219,110,47)" fg:x="7029" fg:w="10"/><text x="60.1376%" y="831.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_initialize_map (8 samples, 0.07%)</title><rect x="59.9403%" y="805" width="0.0682%" height="15" fill="rgb(218,34,14)" fg:x="7031" fg:w="8"/><text x="60.1546%" y="815.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_create_nodes (4 samples, 0.03%)</title><rect x="59.9744%" y="789" width="0.0341%" height="15" fill="rgb(250,9,24)" fg:x="7035" fg:w="4"/><text x="60.1887%" y="799.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_allocate_node (4 samples, 0.03%)</title><rect x="59.9744%" y="773" width="0.0341%" height="15" fill="rgb(219,164,11)" fg:x="7035" fg:w="4"/><text x="60.1887%" y="783.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::istream*&gt;, std::istream*&gt;::allocate (4 samples, 0.03%)</title><rect x="59.9744%" y="757" width="0.0341%" height="15" fill="rgb(207,221,17)" fg:x="7035" fg:w="4"/><text x="60.1887%" y="767.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::istream*&gt;::allocate (4 samples, 0.03%)</title><rect x="59.9744%" y="741" width="0.0341%" height="15" fill="rgb(223,1,8)" fg:x="7035" fg:w="4"/><text x="60.1887%" y="751.50"></text></g><g><title>operator new (4 samples, 0.03%)</title><rect x="59.9744%" y="725" width="0.0341%" height="15" fill="rgb(214,91,1)" fg:x="7035" fg:w="4"/><text x="60.1887%" y="735.50"></text></g><g><title>__libc_malloc (4 samples, 0.03%)</title><rect x="59.9744%" y="709" width="0.0341%" height="15" fill="rgb(232,24,50)" fg:x="7035" fg:w="4"/><text x="60.1887%" y="719.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::~deque (5 samples, 0.04%)</title><rect x="60.0085%" y="837" width="0.0426%" height="15" fill="rgb(205,72,24)" fg:x="7039" fg:w="5"/><text x="60.2228%" y="847.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::~_Deque_base (5 samples, 0.04%)</title><rect x="60.0085%" y="821" width="0.0426%" height="15" fill="rgb(206,190,42)" fg:x="7039" fg:w="5"/><text x="60.2228%" y="831.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_destroy_nodes (4 samples, 0.03%)</title><rect x="60.0171%" y="805" width="0.0341%" height="15" fill="rgb(235,186,7)" fg:x="7040" fg:w="4"/><text x="60.2313%" y="815.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_deallocate_node (4 samples, 0.03%)</title><rect x="60.0171%" y="789" width="0.0341%" height="15" fill="rgb(210,125,6)" fg:x="7040" fg:w="4"/><text x="60.2313%" y="799.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::istream*&gt;, std::istream*&gt;::deallocate (4 samples, 0.03%)</title><rect x="60.0171%" y="773" width="0.0341%" height="15" fill="rgb(243,30,27)" fg:x="7040" fg:w="4"/><text x="60.2313%" y="783.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::istream*&gt;::deallocate (4 samples, 0.03%)</title><rect x="60.0171%" y="757" width="0.0341%" height="15" fill="rgb(225,209,3)" fg:x="7040" fg:w="4"/><text x="60.2313%" y="767.50"></text></g><g><title>free@plt (3 samples, 0.03%)</title><rect x="60.0256%" y="741" width="0.0256%" height="15" fill="rgb(250,84,38)" fg:x="7041" fg:w="3"/><text x="60.2399%" y="751.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_allocate_map (4 samples, 0.03%)</title><rect x="60.0682%" y="773" width="0.0341%" height="15" fill="rgb(205,38,48)" fg:x="7046" fg:w="4"/><text x="60.2825%" y="783.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::istream**&gt;, std::istream**&gt;::allocate (4 samples, 0.03%)</title><rect x="60.0682%" y="757" width="0.0341%" height="15" fill="rgb(252,63,4)" fg:x="7046" fg:w="4"/><text x="60.2825%" y="767.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::istream**&gt;::allocate (4 samples, 0.03%)</title><rect x="60.0682%" y="741" width="0.0341%" height="15" fill="rgb(243,119,12)" fg:x="7046" fg:w="4"/><text x="60.2825%" y="751.50"></text></g><g><title>operator new (4 samples, 0.03%)</title><rect x="60.0682%" y="725" width="0.0341%" height="15" fill="rgb(214,91,1)" fg:x="7046" fg:w="4"/><text x="60.2825%" y="735.50"></text></g><g><title>__libc_malloc (4 samples, 0.03%)</title><rect x="60.0682%" y="709" width="0.0341%" height="15" fill="rgb(232,24,50)" fg:x="7046" fg:w="4"/><text x="60.2825%" y="719.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_Deque_base (8 samples, 0.07%)</title><rect x="60.0597%" y="805" width="0.0682%" height="15" fill="rgb(219,110,47)" fg:x="7045" fg:w="8"/><text x="60.2740%" y="815.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_initialize_map (8 samples, 0.07%)</title><rect x="60.0597%" y="789" width="0.0682%" height="15" fill="rgb(218,34,14)" fg:x="7045" fg:w="8"/><text x="60.2740%" y="799.50"></text></g><g><title>std::_Deque_iterator&lt;std::istream*, std::istream*&amp;, std::istream**&gt;::_Deque_iterator (2 samples, 0.02%)</title><rect x="60.1364%" y="757" width="0.0171%" height="15" fill="rgb(229,229,48)" fg:x="7054" fg:w="2"/><text x="60.3507%" y="767.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::_Deque_iterator&lt;std::istream*, std::istream* const&amp;, std::istream* const*&gt;, std::_Deque_iterator&lt;std::istream*, std::istream*&amp;, std::istream**&gt;, std::istream*&gt; (8 samples, 0.07%)</title><rect x="60.1279%" y="805" width="0.0682%" height="15" fill="rgb(242,106,44)" fg:x="7053" fg:w="8"/><text x="60.3422%" y="815.50"></text></g><g><title>std::uninitialized_copy&lt;std::_Deque_iterator&lt;std::istream*, std::istream* const&amp;, std::istream* const*&gt;, std::_Deque_iterator&lt;std::istream*, std::istream*&amp;, std::istream**&gt; &gt; (7 samples, 0.06%)</title><rect x="60.1364%" y="789" width="0.0597%" height="15" fill="rgb(230,68,7)" fg:x="7054" fg:w="7"/><text x="60.3507%" y="799.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::_Deque_iterator&lt;std::istream*, std::istream* const&amp;, std::istream* const*&gt;, std::_Deque_iterator&lt;std::istream*, std::istream*&amp;, std::istream**&gt; &gt; (7 samples, 0.06%)</title><rect x="60.1364%" y="773" width="0.0597%" height="15" fill="rgb(212,209,5)" fg:x="7054" fg:w="7"/><text x="60.3507%" y="783.50"></text></g><g><title>std::copy&lt;std::_Deque_iterator&lt;std::istream*, std::istream* const&amp;, std::istream* const*&gt;, std::_Deque_iterator&lt;std::istream*, std::istream*&amp;, std::istream**&gt; &gt; (5 samples, 0.04%)</title><rect x="60.1535%" y="757" width="0.0426%" height="15" fill="rgb(251,8,3)" fg:x="7056" fg:w="5"/><text x="60.3677%" y="767.50"></text></g><g><title>std::__copy_move_a&lt;false, std::_Deque_iterator&lt;std::istream*, std::istream* const&amp;, std::istream* const*&gt;, std::_Deque_iterator&lt;std::istream*, std::istream*&amp;, std::istream**&gt; &gt; (5 samples, 0.04%)</title><rect x="60.1535%" y="741" width="0.0426%" height="15" fill="rgb(250,142,4)" fg:x="7056" fg:w="5"/><text x="60.3677%" y="751.50"></text></g><g><title>std::__copy_move_a1&lt;false, std::istream*, std::istream* const&amp;, std::istream* const*, std::istream*&gt; (3 samples, 0.03%)</title><rect x="60.1705%" y="725" width="0.0256%" height="15" fill="rgb(206,81,18)" fg:x="7058" fg:w="3"/><text x="60.3848%" y="735.50"></text></g><g><title>std::__copy_move_dit&lt;false, std::istream*, std::istream* const&amp;, std::istream* const*, std::_Deque_iterator&lt;std::istream*, std::istream*&amp;, std::istream**&gt; &gt; (3 samples, 0.03%)</title><rect x="60.1705%" y="709" width="0.0256%" height="15" fill="rgb(236,49,26)" fg:x="7058" fg:w="3"/><text x="60.3848%" y="719.50"></text></g><g><title>std::__copy_move_a1&lt;false, std::istream**, std::istream*&gt; (2 samples, 0.02%)</title><rect x="60.1790%" y="693" width="0.0171%" height="15" fill="rgb(236,101,27)" fg:x="7059" fg:w="2"/><text x="60.3933%" y="703.50"></text></g><g><title>AConnection::AConnection (48 samples, 0.41%)</title><rect x="59.8124%" y="853" width="0.4092%" height="15" fill="rgb(220,125,44)" fg:x="7016" fg:w="48"/><text x="60.0267%" y="863.50"></text></g><g><title>std::queue&lt;std::istream*, std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt; &gt;::queue (20 samples, 0.17%)</title><rect x="60.0512%" y="837" width="0.1705%" height="15" fill="rgb(210,14,43)" fg:x="7044" fg:w="20"/><text x="60.2654%" y="847.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::deque (20 samples, 0.17%)</title><rect x="60.0512%" y="821" width="0.1705%" height="15" fill="rgb(214,189,43)" fg:x="7044" fg:w="20"/><text x="60.2654%" y="831.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::size (2 samples, 0.02%)</title><rect x="60.2046%" y="805" width="0.0171%" height="15" fill="rgb(240,148,44)" fg:x="7062" fg:w="2"/><text x="60.4189%" y="815.50"></text></g><g><title>std::operator- (2 samples, 0.02%)</title><rect x="60.2046%" y="789" width="0.0171%" height="15" fill="rgb(248,187,16)" fg:x="7062" fg:w="2"/><text x="60.4189%" y="799.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="60.2046%" y="773" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7062" fg:w="2"/><text x="60.4189%" y="783.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="60.2046%" y="757" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7062" fg:w="2"/><text x="60.4189%" y="767.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="60.2046%" y="741" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="7062" fg:w="2"/><text x="60.4189%" y="751.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="60.2046%" y="725" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="7062" fg:w="2"/><text x="60.4189%" y="735.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="60.2046%" y="709" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="7062" fg:w="2"/><text x="60.4189%" y="719.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="60.2046%" y="693" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="7062" fg:w="2"/><text x="60.4189%" y="703.50"></text></g><g><title>__fdget_pos (3 samples, 0.03%)</title><rect x="60.2558%" y="757" width="0.0256%" height="15" fill="rgb(205,61,45)" fg:x="7068" fg:w="3"/><text x="60.4700%" y="767.50"></text></g><g><title>ext4_generic_write_checks (4 samples, 0.03%)</title><rect x="60.3069%" y="709" width="0.0341%" height="15" fill="rgb(212,86,33)" fg:x="7074" fg:w="4"/><text x="60.5212%" y="719.50"></text></g><g><title>generic_write_checks (3 samples, 0.03%)</title><rect x="60.3154%" y="693" width="0.0256%" height="15" fill="rgb(220,18,45)" fg:x="7075" fg:w="3"/><text x="60.5297%" y="703.50"></text></g><g><title>generic_write_check_limits (2 samples, 0.02%)</title><rect x="60.3240%" y="677" width="0.0171%" height="15" fill="rgb(237,191,43)" fg:x="7076" fg:w="2"/><text x="60.5382%" y="687.50"></text></g><g><title>jbd2_log_start_commit (2 samples, 0.02%)</title><rect x="60.4007%" y="629" width="0.0171%" height="15" fill="rgb(251,46,24)" fg:x="7085" fg:w="2"/><text x="60.6150%" y="639.50"></text></g><g><title>__ext4_journal_stop (4 samples, 0.03%)</title><rect x="60.3922%" y="661" width="0.0341%" height="15" fill="rgb(225,40,54)" fg:x="7084" fg:w="4"/><text x="60.6064%" y="671.50"></text></g><g><title>jbd2_journal_stop (4 samples, 0.03%)</title><rect x="60.3922%" y="645" width="0.0341%" height="15" fill="rgb(229,91,7)" fg:x="7084" fg:w="4"/><text x="60.6064%" y="655.50"></text></g><g><title>ext4_journal_check_start (2 samples, 0.02%)</title><rect x="60.4774%" y="629" width="0.0171%" height="15" fill="rgb(220,195,41)" fg:x="7094" fg:w="2"/><text x="60.6917%" y="639.50"></text></g><g><title>kmem_cache_alloc (7 samples, 0.06%)</title><rect x="60.5200%" y="613" width="0.0597%" height="15" fill="rgb(223,51,51)" fg:x="7099" fg:w="7"/><text x="60.7343%" y="623.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (3 samples, 0.03%)</title><rect x="60.5541%" y="597" width="0.0256%" height="15" fill="rgb(212,11,50)" fg:x="7103" fg:w="3"/><text x="60.7684%" y="607.50"></text></g><g><title>__ext4_journal_start_sb (19 samples, 0.16%)</title><rect x="60.4689%" y="645" width="0.1620%" height="15" fill="rgb(251,66,45)" fg:x="7093" fg:w="19"/><text x="60.6832%" y="655.50"></text></g><g><title>jbd2__journal_start (16 samples, 0.14%)</title><rect x="60.4945%" y="629" width="0.1364%" height="15" fill="rgb(212,174,30)" fg:x="7096" fg:w="16"/><text x="60.7087%" y="639.50"></text></g><g><title>start_this_handle (6 samples, 0.05%)</title><rect x="60.5797%" y="613" width="0.0512%" height="15" fill="rgb(247,124,24)" fg:x="7106" fg:w="6"/><text x="60.7940%" y="623.50"></text></g><g><title>add_transaction_credits (4 samples, 0.03%)</title><rect x="60.5968%" y="597" width="0.0341%" height="15" fill="rgb(225,129,44)" fg:x="7108" fg:w="4"/><text x="60.8110%" y="607.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="60.6138%" y="581" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="7110" fg:w="2"/><text x="60.8281%" y="591.50"></text></g><g><title>__brelse (3 samples, 0.03%)</title><rect x="60.6650%" y="613" width="0.0256%" height="15" fill="rgb(229,49,17)" fg:x="7116" fg:w="3"/><text x="60.8792%" y="623.50"></text></g><g><title>__ext4_handle_dirty_metadata (3 samples, 0.03%)</title><rect x="60.6905%" y="613" width="0.0256%" height="15" fill="rgb(236,9,12)" fg:x="7119" fg:w="3"/><text x="60.9048%" y="623.50"></text></g><g><title>ext4_fc_track_inode (3 samples, 0.03%)</title><rect x="60.7332%" y="613" width="0.0256%" height="15" fill="rgb(206,21,50)" fg:x="7124" fg:w="3"/><text x="60.9474%" y="623.50"></text></g><g><title>ext4_mark_iloc_dirty (16 samples, 0.14%)</title><rect x="60.6394%" y="629" width="0.1364%" height="15" fill="rgb(236,133,21)" fg:x="7113" fg:w="16"/><text x="60.8537%" y="639.50"></text></g><g><title>__ext4_journal_get_write_access (3 samples, 0.03%)</title><rect x="60.7843%" y="613" width="0.0256%" height="15" fill="rgb(219,28,3)" fg:x="7130" fg:w="3"/><text x="60.9986%" y="623.50"></text></g><g><title>__getblk_gfp (6 samples, 0.05%)</title><rect x="60.8355%" y="581" width="0.0512%" height="15" fill="rgb(223,110,34)" fg:x="7136" fg:w="6"/><text x="61.0498%" y="591.50"></text></g><g><title>__find_get_block (5 samples, 0.04%)</title><rect x="60.8440%" y="565" width="0.0426%" height="15" fill="rgb(254,214,1)" fg:x="7137" fg:w="5"/><text x="61.0583%" y="575.50"></text></g><g><title>mark_page_accessed (3 samples, 0.03%)</title><rect x="60.8610%" y="549" width="0.0256%" height="15" fill="rgb(226,84,51)" fg:x="7139" fg:w="3"/><text x="61.0753%" y="559.50"></text></g><g><title>ext4_get_group_desc (5 samples, 0.04%)</title><rect x="60.8866%" y="581" width="0.0426%" height="15" fill="rgb(222,172,27)" fg:x="7142" fg:w="5"/><text x="61.1009%" y="591.50"></text></g><g><title>__ext4_get_inode_loc (15 samples, 0.13%)</title><rect x="60.8184%" y="597" width="0.1279%" height="15" fill="rgb(231,98,31)" fg:x="7134" fg:w="15"/><text x="61.0327%" y="607.50"></text></g><g><title>ext4_inode_table (2 samples, 0.02%)</title><rect x="60.9292%" y="581" width="0.0171%" height="15" fill="rgb(226,189,26)" fg:x="7147" fg:w="2"/><text x="61.1435%" y="591.50"></text></g><g><title>file_update_time (71 samples, 0.61%)</title><rect x="60.3495%" y="709" width="0.6053%" height="15" fill="rgb(237,12,27)" fg:x="7079" fg:w="71"/><text x="60.5638%" y="719.50"></text></g><g><title>generic_update_time (71 samples, 0.61%)</title><rect x="60.3495%" y="693" width="0.6053%" height="15" fill="rgb(212,0,0)" fg:x="7079" fg:w="71"/><text x="60.5638%" y="703.50"></text></g><g><title>__mark_inode_dirty (69 samples, 0.59%)</title><rect x="60.3666%" y="677" width="0.5882%" height="15" fill="rgb(212,91,54)" fg:x="7081" fg:w="69"/><text x="60.5809%" y="687.50"></text></g><g><title>ext4_dirty_inode (62 samples, 0.53%)</title><rect x="60.4263%" y="661" width="0.5286%" height="15" fill="rgb(235,194,15)" fg:x="7088" fg:w="62"/><text x="60.6405%" y="671.50"></text></g><g><title>__ext4_mark_inode_dirty (38 samples, 0.32%)</title><rect x="60.6309%" y="645" width="0.3240%" height="15" fill="rgb(250,159,10)" fg:x="7112" fg:w="38"/><text x="60.8451%" y="655.50"></text></g><g><title>ext4_reserve_inode_write (21 samples, 0.18%)</title><rect x="60.7758%" y="629" width="0.1790%" height="15" fill="rgb(232,18,0)" fg:x="7129" fg:w="21"/><text x="60.9901%" y="639.50"></text></g><g><title>ext4_get_inode_loc (17 samples, 0.14%)</title><rect x="60.8099%" y="613" width="0.1449%" height="15" fill="rgb(251,31,11)" fg:x="7133" fg:w="17"/><text x="61.0242%" y="623.50"></text></g><g><title>__radix_tree_lookup (6 samples, 0.05%)</title><rect x="60.9719%" y="677" width="0.0512%" height="15" fill="rgb(250,213,26)" fg:x="7152" fg:w="6"/><text x="61.1862%" y="687.50"></text></g><g><title>balance_dirty_pages_ratelimited (8 samples, 0.07%)</title><rect x="60.9633%" y="693" width="0.0682%" height="15" fill="rgb(221,121,40)" fg:x="7151" fg:w="8"/><text x="61.1776%" y="703.50"></text></g><g><title>__ext4_journal_start_sb (5 samples, 0.04%)</title><rect x="61.0401%" y="677" width="0.0426%" height="15" fill="rgb(251,66,45)" fg:x="7160" fg:w="5"/><text x="61.2544%" y="687.50"></text></g><g><title>jbd2__journal_start (5 samples, 0.04%)</title><rect x="61.0401%" y="661" width="0.0426%" height="15" fill="rgb(212,174,30)" fg:x="7160" fg:w="5"/><text x="61.2544%" y="671.50"></text></g><g><title>start_this_handle (3 samples, 0.03%)</title><rect x="61.0571%" y="645" width="0.0256%" height="15" fill="rgb(247,124,24)" fg:x="7162" fg:w="3"/><text x="61.2714%" y="655.50"></text></g><g><title>ext4_block_write_begin (3 samples, 0.03%)</title><rect x="61.0912%" y="677" width="0.0256%" height="15" fill="rgb(218,63,41)" fg:x="7166" fg:w="3"/><text x="61.3055%" y="687.50"></text></g><g><title>ext4_nonda_switch (4 samples, 0.03%)</title><rect x="61.1168%" y="677" width="0.0341%" height="15" fill="rgb(254,54,14)" fg:x="7169" fg:w="4"/><text x="61.3311%" y="687.50"></text></g><g><title>add_to_page_cache_lru (3 samples, 0.03%)</title><rect x="61.1509%" y="645" width="0.0256%" height="15" fill="rgb(223,55,45)" fg:x="7173" fg:w="3"/><text x="61.3652%" y="655.50"></text></g><g><title>__add_to_page_cache_locked (3 samples, 0.03%)</title><rect x="61.1509%" y="629" width="0.0256%" height="15" fill="rgb(229,179,48)" fg:x="7173" fg:w="3"/><text x="61.3652%" y="639.50"></text></g><g><title>pagecache_get_page (4 samples, 0.03%)</title><rect x="61.1509%" y="661" width="0.0341%" height="15" fill="rgb(254,146,25)" fg:x="7173" fg:w="4"/><text x="61.3652%" y="671.50"></text></g><g><title>ext4_da_write_begin (19 samples, 0.16%)</title><rect x="61.0315%" y="693" width="0.1620%" height="15" fill="rgb(235,31,43)" fg:x="7159" fg:w="19"/><text x="61.2458%" y="703.50"></text></g><g><title>grab_cache_page_write_begin (5 samples, 0.04%)</title><rect x="61.1509%" y="677" width="0.0426%" height="15" fill="rgb(221,143,40)" fg:x="7173" fg:w="5"/><text x="61.3652%" y="687.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (2 samples, 0.02%)</title><rect x="61.2106%" y="661" width="0.0171%" height="15" fill="rgb(249,65,48)" fg:x="7180" fg:w="2"/><text x="61.4249%" y="671.50"></text></g><g><title>ext4_mark_iloc_dirty (2 samples, 0.02%)</title><rect x="61.2361%" y="613" width="0.0171%" height="15" fill="rgb(236,133,21)" fg:x="7183" fg:w="2"/><text x="61.4504%" y="623.50"></text></g><g><title>__ext4_journal_get_write_access (2 samples, 0.02%)</title><rect x="61.2532%" y="597" width="0.0171%" height="15" fill="rgb(219,28,3)" fg:x="7185" fg:w="2"/><text x="61.4675%" y="607.50"></text></g><g><title>ext4_da_write_end (11 samples, 0.09%)</title><rect x="61.1935%" y="693" width="0.0938%" height="15" fill="rgb(230,92,14)" fg:x="7178" fg:w="11"/><text x="61.4078%" y="703.50"></text></g><g><title>generic_write_end (10 samples, 0.09%)</title><rect x="61.2020%" y="677" width="0.0853%" height="15" fill="rgb(207,107,21)" fg:x="7179" fg:w="10"/><text x="61.4163%" y="687.50"></text></g><g><title>__mark_inode_dirty (7 samples, 0.06%)</title><rect x="61.2276%" y="661" width="0.0597%" height="15" fill="rgb(212,91,54)" fg:x="7182" fg:w="7"/><text x="61.4419%" y="671.50"></text></g><g><title>ext4_dirty_inode (6 samples, 0.05%)</title><rect x="61.2361%" y="645" width="0.0512%" height="15" fill="rgb(235,194,15)" fg:x="7183" fg:w="6"/><text x="61.4504%" y="655.50"></text></g><g><title>__ext4_mark_inode_dirty (6 samples, 0.05%)</title><rect x="61.2361%" y="629" width="0.0512%" height="15" fill="rgb(250,159,10)" fg:x="7183" fg:w="6"/><text x="61.4504%" y="639.50"></text></g><g><title>ext4_reserve_inode_write (4 samples, 0.03%)</title><rect x="61.2532%" y="613" width="0.0341%" height="15" fill="rgb(232,18,0)" fg:x="7185" fg:w="4"/><text x="61.4675%" y="623.50"></text></g><g><title>iov_iter_copy_from_user_atomic (6 samples, 0.05%)</title><rect x="61.2873%" y="693" width="0.0512%" height="15" fill="rgb(233,17,49)" fg:x="7189" fg:w="6"/><text x="61.5016%" y="703.50"></text></g><g><title>copy_user_generic_string (5 samples, 0.04%)</title><rect x="61.2958%" y="677" width="0.0426%" height="15" fill="rgb(233,29,30)" fg:x="7190" fg:w="5"/><text x="61.5101%" y="687.50"></text></g><g><title>generic_perform_write (48 samples, 0.41%)</title><rect x="60.9548%" y="709" width="0.4092%" height="15" fill="rgb(218,161,27)" fg:x="7150" fg:w="48"/><text x="61.1691%" y="719.50"></text></g><g><title>iov_iter_fault_in_readable (3 samples, 0.03%)</title><rect x="61.3384%" y="693" width="0.0256%" height="15" fill="rgb(223,182,1)" fg:x="7195" fg:w="3"/><text x="61.5527%" y="703.50"></text></g><g><title>ext4_buffered_write_iter (126 samples, 1.07%)</title><rect x="60.2984%" y="725" width="1.0742%" height="15" fill="rgb(214,47,26)" fg:x="7073" fg:w="126"/><text x="60.5127%" y="735.50"></text></g><g><title>new_sync_write (127 samples, 1.08%)</title><rect x="60.2984%" y="741" width="1.0827%" height="15" fill="rgb(220,167,51)" fg:x="7073" fg:w="127"/><text x="60.5127%" y="751.50"></text></g><g><title>__write (135 samples, 1.15%)</title><rect x="60.2387%" y="821" width="1.1509%" height="15" fill="rgb(227,101,21)" fg:x="7066" fg:w="135"/><text x="60.4530%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (135 samples, 1.15%)</title><rect x="60.2387%" y="805" width="1.1509%" height="15" fill="rgb(205,226,15)" fg:x="7066" fg:w="135"/><text x="60.4530%" y="815.50"></text></g><g><title>do_syscall_64 (135 samples, 1.15%)</title><rect x="60.2387%" y="789" width="1.1509%" height="15" fill="rgb(220,74,14)" fg:x="7066" fg:w="135"/><text x="60.4530%" y="799.50"></text></g><g><title>ksys_write (133 samples, 1.13%)</title><rect x="60.2558%" y="773" width="1.1338%" height="15" fill="rgb(223,155,43)" fg:x="7068" fg:w="133"/><text x="60.4700%" y="783.50"></text></g><g><title>vfs_write (130 samples, 1.11%)</title><rect x="60.2813%" y="757" width="1.1083%" height="15" fill="rgb(216,184,13)" fg:x="7071" fg:w="130"/><text x="60.4956%" y="767.50"></text></g><g><title>File::write (138 samples, 1.18%)</title><rect x="60.2302%" y="837" width="1.1765%" height="15" fill="rgb(221,56,14)" fg:x="7065" fg:w="138"/><text x="60.4445%" y="847.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="61.4066%" y="837" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="7203" fg:w="2"/><text x="61.6209%" y="847.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.06%)</title><rect x="61.4749%" y="821" width="0.0597%" height="15" fill="rgb(247,113,52)" fg:x="7211" fg:w="7"/><text x="61.6891%" y="831.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="61.5090%" y="805" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="7215" fg:w="3"/><text x="61.7232%" y="815.50"></text></g><g><title>endsWith (3 samples, 0.03%)</title><rect x="61.5345%" y="821" width="0.0256%" height="15" fill="rgb(245,132,52)" fg:x="7218" fg:w="3"/><text x="61.7488%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.02%)</title><rect x="61.5431%" y="805" width="0.0171%" height="15" fill="rgb(212,2,49)" fg:x="7219" fg:w="2"/><text x="61.7573%" y="815.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="61.5431%" y="789" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="7219" fg:w="2"/><text x="61.7573%" y="799.50"></text></g><g><title>gmtime (2 samples, 0.02%)</title><rect x="61.5601%" y="821" width="0.0171%" height="15" fill="rgb(211,141,50)" fg:x="7221" fg:w="2"/><text x="61.7744%" y="831.50"></text></g><g><title>strftime (2 samples, 0.02%)</title><rect x="61.5772%" y="821" width="0.0171%" height="15" fill="rgb(212,94,34)" fg:x="7223" fg:w="2"/><text x="61.7914%" y="831.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="61.6624%" y="789" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="7233" fg:w="2"/><text x="61.8767%" y="799.50"></text></g><g><title>getTime (29 samples, 0.25%)</title><rect x="61.4408%" y="837" width="0.2472%" height="15" fill="rgb(245,134,19)" fg:x="7207" fg:w="29"/><text x="61.6550%" y="847.50"></text></g><g><title>strftime_l (11 samples, 0.09%)</title><rect x="61.5942%" y="821" width="0.0938%" height="15" fill="rgb(247,36,6)" fg:x="7225" fg:w="11"/><text x="61.8085%" y="831.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.09%)</title><rect x="61.5942%" y="805" width="0.0938%" height="15" fill="rgb(247,113,52)" fg:x="7225" fg:w="11"/><text x="61.8085%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="61.6880%" y="821" width="0.0171%" height="15" fill="rgb(254,182,12)" fg:x="7236" fg:w="2"/><text x="61.9023%" y="831.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="61.6880%" y="805" width="0.0171%" height="15" fill="rgb(214,91,1)" fg:x="7236" fg:w="2"/><text x="61.9023%" y="815.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="61.6880%" y="789" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="7236" fg:w="2"/><text x="61.9023%" y="799.50"></text></g><g><title>highlight (5 samples, 0.04%)</title><rect x="61.6880%" y="837" width="0.0426%" height="15" fill="rgb(225,68,2)" fg:x="7236" fg:w="5"/><text x="61.9023%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_of (3 samples, 0.03%)</title><rect x="61.7050%" y="821" width="0.0256%" height="15" fill="rgb(212,119,18)" fg:x="7238" fg:w="3"/><text x="61.9193%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="61.7306%" y="837" width="0.0171%" height="15" fill="rgb(254,182,12)" fg:x="7241" fg:w="2"/><text x="61.9449%" y="847.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="61.7306%" y="821" width="0.0171%" height="15" fill="rgb(214,91,1)" fg:x="7241" fg:w="2"/><text x="61.9449%" y="831.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="61.7306%" y="805" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="7241" fg:w="2"/><text x="61.9449%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.02%)</title><rect x="61.7477%" y="837" width="0.0171%" height="15" fill="rgb(244,92,22)" fg:x="7243" fg:w="2"/><text x="61.9619%" y="847.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="61.7477%" y="821" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="7243" fg:w="2"/><text x="61.9619%" y="831.50"></text></g><g><title>__gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (3 samples, 0.03%)</title><rect x="61.7647%" y="821" width="0.0256%" height="15" fill="rgb(236,16,53)" fg:x="7245" fg:w="3"/><text x="61.9790%" y="831.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (6 samples, 0.05%)</title><rect x="61.7647%" y="837" width="0.0512%" height="15" fill="rgb(222,170,8)" fg:x="7245" fg:w="6"/><text x="61.9790%" y="847.50"></text></g><g><title>fwrite (2 samples, 0.02%)</title><rect x="61.7988%" y="821" width="0.0171%" height="15" fill="rgb(227,73,51)" fg:x="7249" fg:w="2"/><text x="62.0131%" y="831.50"></text></g><g><title>__x64_sys_write (3 samples, 0.03%)</title><rect x="61.9011%" y="693" width="0.0256%" height="15" fill="rgb(242,206,33)" fg:x="7261" fg:w="3"/><text x="62.1154%" y="703.50"></text></g><g><title>__fget_light (7 samples, 0.06%)</title><rect x="61.9437%" y="661" width="0.0597%" height="15" fill="rgb(243,103,32)" fg:x="7266" fg:w="7"/><text x="62.1580%" y="671.50"></text></g><g><title>__fdget_pos (8 samples, 0.07%)</title><rect x="61.9437%" y="677" width="0.0682%" height="15" fill="rgb(205,61,45)" fg:x="7266" fg:w="8"/><text x="62.1580%" y="687.50"></text></g><g><title>_copy_from_iter (4 samples, 0.03%)</title><rect x="62.1483%" y="629" width="0.0341%" height="15" fill="rgb(237,96,30)" fg:x="7290" fg:w="4"/><text x="62.3626%" y="639.50"></text></g><g><title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="62.1569%" y="613" width="0.0256%" height="15" fill="rgb(233,29,30)" fg:x="7291" fg:w="3"/><text x="62.3711%" y="623.50"></text></g><g><title>__queue_work (4 samples, 0.03%)</title><rect x="62.2592%" y="565" width="0.0341%" height="15" fill="rgb(228,111,53)" fg:x="7303" fg:w="4"/><text x="62.4735%" y="575.50"></text></g><g><title>try_to_wake_up (2 samples, 0.02%)</title><rect x="62.2762%" y="549" width="0.0171%" height="15" fill="rgb(251,124,39)" fg:x="7305" fg:w="2"/><text x="62.4905%" y="559.50"></text></g><g><title>queue_work_on (6 samples, 0.05%)</title><rect x="62.2592%" y="581" width="0.0512%" height="15" fill="rgb(224,62,31)" fg:x="7303" fg:w="6"/><text x="62.4735%" y="591.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="62.2933%" y="565" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7307" fg:w="2"/><text x="62.5076%" y="575.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="62.2933%" y="549" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7307" fg:w="2"/><text x="62.5076%" y="559.50"></text></g><g><title>do_output_char (13 samples, 0.11%)</title><rect x="62.2421%" y="613" width="0.1108%" height="15" fill="rgb(228,220,0)" fg:x="7301" fg:w="13"/><text x="62.4564%" y="623.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (12 samples, 0.10%)</title><rect x="62.2506%" y="597" width="0.1023%" height="15" fill="rgb(229,98,5)" fg:x="7302" fg:w="12"/><text x="62.4649%" y="607.50"></text></g><g><title>tty_insert_flip_string_fixed_flag (5 samples, 0.04%)</title><rect x="62.3103%" y="581" width="0.0426%" height="15" fill="rgb(227,10,10)" fg:x="7309" fg:w="5"/><text x="62.5246%" y="591.50"></text></g><g><title>memcpy (5 samples, 0.04%)</title><rect x="62.3103%" y="565" width="0.0426%" height="15" fill="rgb(232,135,4)" fg:x="7309" fg:w="5"/><text x="62.5246%" y="575.50"></text></g><g><title>down_read (3 samples, 0.03%)</title><rect x="62.3529%" y="613" width="0.0256%" height="15" fill="rgb(208,214,33)" fg:x="7314" fg:w="3"/><text x="62.5672%" y="623.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.03%)</title><rect x="62.4126%" y="565" width="0.0341%" height="15" fill="rgb(206,30,45)" fg:x="7321" fg:w="4"/><text x="62.6269%" y="575.50"></text></g><g><title>amd_pmu_disable_all (3 samples, 0.03%)</title><rect x="62.4211%" y="549" width="0.0256%" height="15" fill="rgb(224,0,7)" fg:x="7322" fg:w="3"/><text x="62.6354%" y="559.50"></text></g><g><title>x86_pmu_disable_all (3 samples, 0.03%)</title><rect x="62.4211%" y="533" width="0.0256%" height="15" fill="rgb(235,111,43)" fg:x="7322" fg:w="3"/><text x="62.6354%" y="543.50"></text></g><g><title>native_read_msr (3 samples, 0.03%)</title><rect x="62.4211%" y="517" width="0.0256%" height="15" fill="rgb(218,43,9)" fg:x="7322" fg:w="3"/><text x="62.6354%" y="527.50"></text></g><g><title>handle_irq_event (2 samples, 0.02%)</title><rect x="62.4638%" y="485" width="0.0171%" height="15" fill="rgb(209,73,52)" fg:x="7327" fg:w="2"/><text x="62.6781%" y="495.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="62.4552%" y="517" width="0.0341%" height="15" fill="rgb(208,184,36)" fg:x="7326" fg:w="4"/><text x="62.6695%" y="527.50"></text></g><g><title>handle_edge_irq (4 samples, 0.03%)</title><rect x="62.4552%" y="501" width="0.0341%" height="15" fill="rgb(219,15,9)" fg:x="7326" fg:w="4"/><text x="62.6695%" y="511.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.02%)</title><rect x="62.5320%" y="341" width="0.0171%" height="15" fill="rgb(246,15,53)" fg:x="7335" fg:w="2"/><text x="62.7463%" y="351.50"></text></g><g><title>tcp_v4_early_demux (2 samples, 0.02%)</title><rect x="62.5320%" y="325" width="0.0171%" height="15" fill="rgb(225,190,1)" fg:x="7335" fg:w="2"/><text x="62.7463%" y="335.50"></text></g><g><title>napi_complete_done (12 samples, 0.10%)</title><rect x="62.5064%" y="421" width="0.1023%" height="15" fill="rgb(226,216,13)" fg:x="7332" fg:w="12"/><text x="62.7207%" y="431.50"></text></g><g><title>netif_receive_skb_list_internal (11 samples, 0.09%)</title><rect x="62.5149%" y="405" width="0.0938%" height="15" fill="rgb(216,153,44)" fg:x="7333" fg:w="11"/><text x="62.7292%" y="415.50"></text></g><g><title>__netif_receive_skb_list_core (11 samples, 0.09%)</title><rect x="62.5149%" y="389" width="0.0938%" height="15" fill="rgb(227,176,26)" fg:x="7333" fg:w="11"/><text x="62.7292%" y="399.50"></text></g><g><title>ip_list_rcv (9 samples, 0.08%)</title><rect x="62.5320%" y="373" width="0.0767%" height="15" fill="rgb(215,38,16)" fg:x="7335" fg:w="9"/><text x="62.7463%" y="383.50"></text></g><g><title>ip_sublist_rcv (9 samples, 0.08%)</title><rect x="62.5320%" y="357" width="0.0767%" height="15" fill="rgb(207,166,9)" fg:x="7335" fg:w="9"/><text x="62.7463%" y="367.50"></text></g><g><title>ip_sublist_rcv_finish (7 samples, 0.06%)</title><rect x="62.5490%" y="341" width="0.0597%" height="15" fill="rgb(223,178,14)" fg:x="7337" fg:w="7"/><text x="62.7633%" y="351.50"></text></g><g><title>ip_local_deliver_finish (7 samples, 0.06%)</title><rect x="62.5490%" y="325" width="0.0597%" height="15" fill="rgb(220,94,29)" fg:x="7337" fg:w="7"/><text x="62.7633%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (7 samples, 0.06%)</title><rect x="62.5490%" y="309" width="0.0597%" height="15" fill="rgb(207,19,13)" fg:x="7337" fg:w="7"/><text x="62.7633%" y="319.50"></text></g><g><title>tcp_v4_rcv (7 samples, 0.06%)</title><rect x="62.5490%" y="293" width="0.0597%" height="15" fill="rgb(224,38,0)" fg:x="7337" fg:w="7"/><text x="62.7633%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (7 samples, 0.06%)</title><rect x="62.5490%" y="277" width="0.0597%" height="15" fill="rgb(228,220,18)" fg:x="7337" fg:w="7"/><text x="62.7633%" y="287.50"></text></g><g><title>tcp_rcv_established (7 samples, 0.06%)</title><rect x="62.5490%" y="261" width="0.0597%" height="15" fill="rgb(224,50,47)" fg:x="7337" fg:w="7"/><text x="62.7633%" y="271.50"></text></g><g><title>tcp_ack (5 samples, 0.04%)</title><rect x="62.5661%" y="245" width="0.0426%" height="15" fill="rgb(213,228,3)" fg:x="7339" fg:w="5"/><text x="62.7804%" y="255.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (2 samples, 0.02%)</title><rect x="62.5916%" y="229" width="0.0171%" height="15" fill="rgb(213,104,8)" fg:x="7342" fg:w="2"/><text x="62.8059%" y="239.50"></text></g><g><title>virtnet_poll (13 samples, 0.11%)</title><rect x="62.5064%" y="437" width="0.1108%" height="15" fill="rgb(213,187,12)" fg:x="7332" fg:w="13"/><text x="62.7207%" y="447.50"></text></g><g><title>napi_consume_skb (2 samples, 0.02%)</title><rect x="62.6343%" y="405" width="0.0171%" height="15" fill="rgb(244,99,54)" fg:x="7347" fg:w="2"/><text x="62.8486%" y="415.50"></text></g><g><title>skb_release_head_state (2 samples, 0.02%)</title><rect x="62.6343%" y="389" width="0.0171%" height="15" fill="rgb(221,1,22)" fg:x="7347" fg:w="2"/><text x="62.8486%" y="399.50"></text></g><g><title>tcp_wfree (2 samples, 0.02%)</title><rect x="62.6343%" y="373" width="0.0171%" height="15" fill="rgb(250,102,28)" fg:x="7347" fg:w="2"/><text x="62.8486%" y="383.50"></text></g><g><title>common_interrupt (26 samples, 0.22%)</title><rect x="62.4552%" y="533" width="0.2217%" height="15" fill="rgb(250,67,32)" fg:x="7326" fg:w="26"/><text x="62.6695%" y="543.50"></text></g><g><title>irq_exit_rcu (22 samples, 0.19%)</title><rect x="62.4893%" y="517" width="0.1876%" height="15" fill="rgb(240,18,12)" fg:x="7330" fg:w="22"/><text x="62.7036%" y="527.50"></text></g><g><title>do_softirq_own_stack (22 samples, 0.19%)</title><rect x="62.4893%" y="501" width="0.1876%" height="15" fill="rgb(223,89,53)" fg:x="7330" fg:w="22"/><text x="62.7036%" y="511.50"></text></g><g><title>asm_call_sysvec_on_stack (22 samples, 0.19%)</title><rect x="62.4893%" y="485" width="0.1876%" height="15" fill="rgb(208,184,36)" fg:x="7330" fg:w="22"/><text x="62.7036%" y="495.50"></text></g><g><title>__softirqentry_text_start (22 samples, 0.19%)</title><rect x="62.4893%" y="469" width="0.1876%" height="15" fill="rgb(249,91,22)" fg:x="7330" fg:w="22"/><text x="62.7036%" y="479.50"></text></g><g><title>net_rx_action (21 samples, 0.18%)</title><rect x="62.4979%" y="453" width="0.1790%" height="15" fill="rgb(231,11,52)" fg:x="7331" fg:w="21"/><text x="62.7122%" y="463.50"></text></g><g><title>virtnet_poll_tx (7 samples, 0.06%)</title><rect x="62.6172%" y="437" width="0.0597%" height="15" fill="rgb(251,188,47)" fg:x="7345" fg:w="7"/><text x="62.8315%" y="447.50"></text></g><g><title>free_old_xmit_skbs (5 samples, 0.04%)</title><rect x="62.6343%" y="421" width="0.0426%" height="15" fill="rgb(235,178,6)" fg:x="7347" fg:w="5"/><text x="62.8486%" y="431.50"></text></g><g><title>virtqueue_get_buf_ctx_split (3 samples, 0.03%)</title><rect x="62.6513%" y="405" width="0.0256%" height="15" fill="rgb(235,34,35)" fg:x="7349" fg:w="3"/><text x="62.8656%" y="415.50"></text></g><g><title>detach_buf_split (3 samples, 0.03%)</title><rect x="62.6513%" y="389" width="0.0256%" height="15" fill="rgb(228,101,1)" fg:x="7349" fg:w="3"/><text x="62.8656%" y="399.50"></text></g><g><title>asm_common_interrupt (27 samples, 0.23%)</title><rect x="62.4552%" y="549" width="0.2302%" height="15" fill="rgb(248,227,45)" fg:x="7326" fg:w="27"/><text x="62.6695%" y="559.50"></text></g><g><title>finish_task_switch (29 samples, 0.25%)</title><rect x="62.4467%" y="565" width="0.2472%" height="15" fill="rgb(214,214,33)" fg:x="7325" fg:w="29"/><text x="62.6610%" y="575.50"></text></g><g><title>mutex_lock (40 samples, 0.34%)</title><rect x="62.3785%" y="613" width="0.3410%" height="15" fill="rgb(218,205,15)" fg:x="7317" fg:w="40"/><text x="62.5928%" y="623.50"></text></g><g><title>_cond_resched (40 samples, 0.34%)</title><rect x="62.3785%" y="597" width="0.3410%" height="15" fill="rgb(240,228,18)" fg:x="7317" fg:w="40"/><text x="62.5928%" y="607.50"></text></g><g><title>__schedule (40 samples, 0.34%)</title><rect x="62.3785%" y="581" width="0.3410%" height="15" fill="rgb(207,40,26)" fg:x="7317" fg:w="40"/><text x="62.5928%" y="591.50"></text></g><g><title>psi_task_switch (2 samples, 0.02%)</title><rect x="62.7025%" y="565" width="0.0171%" height="15" fill="rgb(233,176,51)" fg:x="7355" fg:w="2"/><text x="62.9168%" y="575.50"></text></g><g><title>psi_group_change (2 samples, 0.02%)</title><rect x="62.7025%" y="549" width="0.0171%" height="15" fill="rgb(214,74,3)" fg:x="7355" fg:w="2"/><text x="62.9168%" y="559.50"></text></g><g><title>process_echoes (4 samples, 0.03%)</title><rect x="62.7280%" y="613" width="0.0341%" height="15" fill="rgb(227,159,10)" fg:x="7358" fg:w="4"/><text x="62.9423%" y="623.50"></text></g><g><title>tty_hung_up_p (2 samples, 0.02%)</title><rect x="62.7877%" y="613" width="0.0171%" height="15" fill="rgb(223,215,9)" fg:x="7365" fg:w="2"/><text x="63.0020%" y="623.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="62.8218%" y="597" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7369" fg:w="2"/><text x="63.0361%" y="607.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="62.8218%" y="581" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7369" fg:w="2"/><text x="63.0361%" y="591.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="62.8218%" y="565" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="7369" fg:w="2"/><text x="63.0361%" y="575.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="62.8218%" y="549" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="7369" fg:w="2"/><text x="63.0361%" y="559.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="62.8218%" y="533" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="7369" fg:w="2"/><text x="63.0361%" y="543.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="62.8218%" y="517" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="7369" fg:w="2"/><text x="63.0361%" y="527.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="62.8218%" y="501" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="7369" fg:w="2"/><text x="63.0361%" y="511.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="62.8218%" y="485" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="7369" fg:w="2"/><text x="63.0361%" y="495.50"></text></g><g><title>__radix_tree_lookup (2 samples, 0.02%)</title><rect x="62.8815%" y="565" width="0.0171%" height="15" fill="rgb(250,213,26)" fg:x="7376" fg:w="2"/><text x="63.0958%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.03%)</title><rect x="62.9241%" y="549" width="0.0256%" height="15" fill="rgb(206,213,41)" fg:x="7381" fg:w="3"/><text x="63.1384%" y="559.50"></text></g><g><title>__cgroup_account_cputime (2 samples, 0.02%)</title><rect x="63.0094%" y="485" width="0.0171%" height="15" fill="rgb(222,47,19)" fg:x="7391" fg:w="2"/><text x="63.2237%" y="495.50"></text></g><g><title>update_curr (7 samples, 0.06%)</title><rect x="62.9838%" y="501" width="0.0597%" height="15" fill="rgb(242,65,24)" fg:x="7388" fg:w="7"/><text x="63.1981%" y="511.50"></text></g><g><title>cpuacct_charge (2 samples, 0.02%)</title><rect x="63.0264%" y="485" width="0.0171%" height="15" fill="rgb(217,144,43)" fg:x="7393" fg:w="2"/><text x="63.2407%" y="495.50"></text></g><g><title>ttwu_do_activate (12 samples, 0.10%)</title><rect x="62.9582%" y="549" width="0.1023%" height="15" fill="rgb(244,166,49)" fg:x="7385" fg:w="12"/><text x="63.1725%" y="559.50"></text></g><g><title>enqueue_task_fair (12 samples, 0.10%)</title><rect x="62.9582%" y="533" width="0.1023%" height="15" fill="rgb(252,79,15)" fg:x="7385" fg:w="12"/><text x="63.1725%" y="543.50"></text></g><g><title>enqueue_entity (11 samples, 0.09%)</title><rect x="62.9668%" y="517" width="0.0938%" height="15" fill="rgb(206,193,49)" fg:x="7386" fg:w="11"/><text x="63.1810%" y="527.50"></text></g><g><title>update_load_avg (2 samples, 0.02%)</title><rect x="63.0435%" y="501" width="0.0171%" height="15" fill="rgb(222,111,24)" fg:x="7395" fg:w="2"/><text x="63.2578%" y="511.50"></text></g><g><title>__queue_work (25 samples, 0.21%)</title><rect x="62.8645%" y="581" width="0.2131%" height="15" fill="rgb(228,111,53)" fg:x="7374" fg:w="25"/><text x="63.0787%" y="591.50"></text></g><g><title>try_to_wake_up (20 samples, 0.17%)</title><rect x="62.9071%" y="565" width="0.1705%" height="15" fill="rgb(251,124,39)" fg:x="7379" fg:w="20"/><text x="63.1214%" y="575.50"></text></g><g><title>queue_work_on (30 samples, 0.26%)</title><rect x="62.8389%" y="597" width="0.2558%" height="15" fill="rgb(224,62,31)" fg:x="7371" fg:w="30"/><text x="63.0532%" y="607.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="63.0776%" y="581" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="591.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="63.0776%" y="565" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="575.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="63.0776%" y="549" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="559.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="63.0776%" y="533" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="543.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="63.0776%" y="517" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="527.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="63.0776%" y="501" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="511.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="63.0776%" y="485" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="495.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="63.0776%" y="469" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="479.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="63.0776%" y="453" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="463.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="63.0776%" y="437" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="447.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="63.0776%" y="421" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="431.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="63.0776%" y="405" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="415.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="63.0776%" y="389" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="7399" fg:w="2"/><text x="63.2919%" y="399.50"></text></g><g><title>n_tty_write (109 samples, 0.93%)</title><rect x="62.1824%" y="629" width="0.9292%" height="15" fill="rgb(240,0,6)" fg:x="7294" fg:w="109"/><text x="62.3967%" y="639.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (36 samples, 0.31%)</title><rect x="62.8048%" y="613" width="0.3069%" height="15" fill="rgb(229,98,5)" fg:x="7367" fg:w="36"/><text x="63.0191%" y="623.50"></text></g><g><title>tty_insert_flip_string_fixed_flag (2 samples, 0.02%)</title><rect x="63.0946%" y="597" width="0.0171%" height="15" fill="rgb(227,10,10)" fg:x="7401" fg:w="2"/><text x="63.3089%" y="607.50"></text></g><g><title>file_tty_write.constprop.0 (123 samples, 1.05%)</title><rect x="62.0887%" y="645" width="1.0486%" height="15" fill="rgb(225,84,50)" fg:x="7283" fg:w="123"/><text x="62.3029%" y="655.50"></text></g><g><title>tty_paranoia_check (2 samples, 0.02%)</title><rect x="63.1202%" y="629" width="0.0171%" height="15" fill="rgb(218,36,31)" fg:x="7404" fg:w="2"/><text x="63.3345%" y="639.50"></text></g><g><title>new_sync_write (129 samples, 1.10%)</title><rect x="62.0460%" y="661" width="1.0997%" height="15" fill="rgb(220,167,51)" fg:x="7278" fg:w="129"/><text x="62.2603%" y="671.50"></text></g><g><title>rw_verify_area (2 samples, 0.02%)</title><rect x="63.1458%" y="661" width="0.0171%" height="15" fill="rgb(249,222,17)" fg:x="7407" fg:w="2"/><text x="63.3601%" y="671.50"></text></g><g><title>ksys_write (148 samples, 1.26%)</title><rect x="61.9267%" y="693" width="1.2617%" height="15" fill="rgb(223,155,43)" fg:x="7264" fg:w="148"/><text x="62.1410%" y="703.50"></text></g><g><title>vfs_write (138 samples, 1.18%)</title><rect x="62.0119%" y="677" width="1.1765%" height="15" fill="rgb(216,184,13)" fg:x="7274" fg:w="138"/><text x="62.2262%" y="687.50"></text></g><g><title>security_file_permission (3 samples, 0.03%)</title><rect x="63.1628%" y="661" width="0.0256%" height="15" fill="rgb(224,58,37)" fg:x="7409" fg:w="3"/><text x="63.3771%" y="671.50"></text></g><g><title>apparmor_file_permission (3 samples, 0.03%)</title><rect x="63.1628%" y="645" width="0.0256%" height="15" fill="rgb(223,123,50)" fg:x="7409" fg:w="3"/><text x="63.3771%" y="655.50"></text></g><g><title>do_syscall_64 (152 samples, 1.30%)</title><rect x="61.9011%" y="709" width="1.2958%" height="15" fill="rgb(220,74,14)" fg:x="7261" fg:w="152"/><text x="62.1154%" y="719.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.02%)</title><rect x="63.2140%" y="645" width="0.0171%" height="15" fill="rgb(206,30,45)" fg:x="7415" fg:w="2"/><text x="63.4283%" y="655.50"></text></g><g><title>amd_pmu_disable_all (2 samples, 0.02%)</title><rect x="63.2140%" y="629" width="0.0171%" height="15" fill="rgb(224,0,7)" fg:x="7415" fg:w="2"/><text x="63.4283%" y="639.50"></text></g><g><title>x86_pmu_disable_all (2 samples, 0.02%)</title><rect x="63.2140%" y="613" width="0.0171%" height="15" fill="rgb(235,111,43)" fg:x="7415" fg:w="2"/><text x="63.4283%" y="623.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.03%)</title><rect x="63.2566%" y="325" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="7420" fg:w="3"/><text x="63.4709%" y="335.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.03%)</title><rect x="63.2566%" y="309" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="7420" fg:w="3"/><text x="63.4709%" y="319.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.03%)</title><rect x="63.2566%" y="293" width="0.0256%" height="15" fill="rgb(238,106,36)" fg:x="7420" fg:w="3"/><text x="63.4709%" y="303.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.03%)</title><rect x="63.2566%" y="277" width="0.0256%" height="15" fill="rgb(224,11,5)" fg:x="7420" fg:w="3"/><text x="63.4709%" y="287.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.03%)</title><rect x="63.2566%" y="261" width="0.0256%" height="15" fill="rgb(219,227,11)" fg:x="7420" fg:w="3"/><text x="63.4709%" y="271.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.03%)</title><rect x="63.2566%" y="245" width="0.0256%" height="15" fill="rgb(232,116,37)" fg:x="7420" fg:w="3"/><text x="63.4709%" y="255.50"></text></g><g><title>__qdisc_run (3 samples, 0.03%)</title><rect x="63.2566%" y="229" width="0.0256%" height="15" fill="rgb(252,144,25)" fg:x="7420" fg:w="3"/><text x="63.4709%" y="239.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.02%)</title><rect x="63.2651%" y="213" width="0.0171%" height="15" fill="rgb(222,128,44)" fg:x="7421" fg:w="2"/><text x="63.4794%" y="223.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="63.2651%" y="197" width="0.0171%" height="15" fill="rgb(251,86,39)" fg:x="7421" fg:w="2"/><text x="63.4794%" y="207.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="63.2566%" y="501" width="0.0341%" height="15" fill="rgb(226,216,13)" fg:x="7420" fg:w="4"/><text x="63.4709%" y="511.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="63.2566%" y="485" width="0.0341%" height="15" fill="rgb(216,153,44)" fg:x="7420" fg:w="4"/><text x="63.4709%" y="495.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="63.2566%" y="469" width="0.0341%" height="15" fill="rgb(227,176,26)" fg:x="7420" fg:w="4"/><text x="63.4709%" y="479.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="63.2566%" y="453" width="0.0341%" height="15" fill="rgb(215,38,16)" fg:x="7420" fg:w="4"/><text x="63.4709%" y="463.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="63.2566%" y="437" width="0.0341%" height="15" fill="rgb(207,166,9)" fg:x="7420" fg:w="4"/><text x="63.4709%" y="447.50"></text></g><g><title>ip_sublist_rcv_finish (4 samples, 0.03%)</title><rect x="63.2566%" y="421" width="0.0341%" height="15" fill="rgb(223,178,14)" fg:x="7420" fg:w="4"/><text x="63.4709%" y="431.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="63.2566%" y="405" width="0.0341%" height="15" fill="rgb(220,94,29)" fg:x="7420" fg:w="4"/><text x="63.4709%" y="415.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="63.2566%" y="389" width="0.0341%" height="15" fill="rgb(207,19,13)" fg:x="7420" fg:w="4"/><text x="63.4709%" y="399.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.03%)</title><rect x="63.2566%" y="373" width="0.0341%" height="15" fill="rgb(224,38,0)" fg:x="7420" fg:w="4"/><text x="63.4709%" y="383.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.03%)</title><rect x="63.2566%" y="357" width="0.0341%" height="15" fill="rgb(228,220,18)" fg:x="7420" fg:w="4"/><text x="63.4709%" y="367.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.03%)</title><rect x="63.2566%" y="341" width="0.0341%" height="15" fill="rgb(224,50,47)" fg:x="7420" fg:w="4"/><text x="63.4709%" y="351.50"></text></g><g><title>virtnet_poll (5 samples, 0.04%)</title><rect x="63.2566%" y="517" width="0.0426%" height="15" fill="rgb(213,187,12)" fg:x="7420" fg:w="5"/><text x="63.4709%" y="527.50"></text></g><g><title>net_rx_action (6 samples, 0.05%)</title><rect x="63.2566%" y="533" width="0.0512%" height="15" fill="rgb(231,11,52)" fg:x="7420" fg:w="6"/><text x="63.4709%" y="543.50"></text></g><g><title>finish_task_switch (10 samples, 0.09%)</title><rect x="63.2310%" y="645" width="0.0853%" height="15" fill="rgb(214,214,33)" fg:x="7417" fg:w="10"/><text x="63.4453%" y="655.50"></text></g><g><title>asm_common_interrupt (10 samples, 0.09%)</title><rect x="63.2310%" y="629" width="0.0853%" height="15" fill="rgb(248,227,45)" fg:x="7417" fg:w="10"/><text x="63.4453%" y="639.50"></text></g><g><title>common_interrupt (10 samples, 0.09%)</title><rect x="63.2310%" y="613" width="0.0853%" height="15" fill="rgb(250,67,32)" fg:x="7417" fg:w="10"/><text x="63.4453%" y="623.50"></text></g><g><title>irq_exit_rcu (8 samples, 0.07%)</title><rect x="63.2481%" y="597" width="0.0682%" height="15" fill="rgb(240,18,12)" fg:x="7419" fg:w="8"/><text x="63.4624%" y="607.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.06%)</title><rect x="63.2566%" y="581" width="0.0597%" height="15" fill="rgb(223,89,53)" fg:x="7420" fg:w="7"/><text x="63.4709%" y="591.50"></text></g><g><title>asm_call_sysvec_on_stack (7 samples, 0.06%)</title><rect x="63.2566%" y="565" width="0.0597%" height="15" fill="rgb(208,184,36)" fg:x="7420" fg:w="7"/><text x="63.4709%" y="575.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.06%)</title><rect x="63.2566%" y="549" width="0.0597%" height="15" fill="rgb(249,91,22)" fg:x="7420" fg:w="7"/><text x="63.4709%" y="559.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.02%)</title><rect x="63.3163%" y="645" width="0.0171%" height="15" fill="rgb(247,213,54)" fg:x="7427" fg:w="2"/><text x="63.5306%" y="655.50"></text></g><g><title>schedule (16 samples, 0.14%)</title><rect x="63.2055%" y="677" width="0.1364%" height="15" fill="rgb(213,215,35)" fg:x="7414" fg:w="16"/><text x="63.4197%" y="687.50"></text></g><g><title>__schedule (16 samples, 0.14%)</title><rect x="63.2055%" y="661" width="0.1364%" height="15" fill="rgb(207,40,26)" fg:x="7414" fg:w="16"/><text x="63.4197%" y="671.50"></text></g><g><title>__write (171 samples, 1.46%)</title><rect x="61.8926%" y="741" width="1.4578%" height="15" fill="rgb(227,101,21)" fg:x="7260" fg:w="171"/><text x="62.1069%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (170 samples, 1.45%)</title><rect x="61.9011%" y="725" width="1.4493%" height="15" fill="rgb(205,226,15)" fg:x="7261" fg:w="170"/><text x="62.1154%" y="735.50"></text></g><g><title>syscall_exit_to_user_mode (18 samples, 0.15%)</title><rect x="63.1969%" y="709" width="0.1535%" height="15" fill="rgb(215,101,28)" fg:x="7413" fg:w="18"/><text x="63.4112%" y="719.50"></text></g><g><title>exit_to_user_mode_prepare (18 samples, 0.15%)</title><rect x="63.1969%" y="693" width="0.1535%" height="15" fill="rgb(240,77,26)" fg:x="7413" fg:w="18"/><text x="63.4112%" y="703.50"></text></g><g><title>_IO_file_overflow (178 samples, 1.52%)</title><rect x="61.8414%" y="805" width="1.5175%" height="15" fill="rgb(248,85,26)" fg:x="7254" fg:w="178"/><text x="62.0557%" y="815.50">_..</text></g><g><title>_IO_do_write (177 samples, 1.51%)</title><rect x="61.8500%" y="789" width="1.5090%" height="15" fill="rgb(247,226,32)" fg:x="7255" fg:w="177"/><text x="62.0642%" y="799.50"></text></g><g><title>[libc-2.31.so] (177 samples, 1.51%)</title><rect x="61.8500%" y="773" width="1.5090%" height="15" fill="rgb(247,113,52)" fg:x="7255" fg:w="177"/><text x="62.0642%" y="783.50"></text></g><g><title>_IO_file_write (173 samples, 1.47%)</title><rect x="61.8841%" y="757" width="1.4749%" height="15" fill="rgb(222,148,11)" fg:x="7259" fg:w="173"/><text x="62.0983%" y="767.50"></text></g><g><title>_IO_putc (2 samples, 0.02%)</title><rect x="63.3589%" y="805" width="0.0171%" height="15" fill="rgb(219,57,35)" fg:x="7432" fg:w="2"/><text x="63.5732%" y="815.50"></text></g><g><title>std::ostream::put (183 samples, 1.56%)</title><rect x="61.8244%" y="821" width="1.5601%" height="15" fill="rgb(226,61,44)" fg:x="7252" fg:w="183"/><text x="62.0387%" y="831.50">s..</text></g><g><title>std::endl&lt;char, std::char_traits&lt;char&gt; &gt; (185 samples, 1.58%)</title><rect x="61.8159%" y="837" width="1.5772%" height="15" fill="rgb(246,112,30)" fg:x="7251" fg:w="185"/><text x="62.0301%" y="847.50">s..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (6 samples, 0.05%)</title><rect x="63.4015%" y="821" width="0.0512%" height="15" fill="rgb(216,50,33)" fg:x="7437" fg:w="6"/><text x="63.6158%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.02%)</title><rect x="63.4356%" y="805" width="0.0171%" height="15" fill="rgb(250,46,35)" fg:x="7441" fg:w="2"/><text x="63.6499%" y="815.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="63.4356%" y="789" width="0.0171%" height="15" fill="rgb(214,91,1)" fg:x="7441" fg:w="2"/><text x="63.6499%" y="799.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="63.4356%" y="773" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="7441" fg:w="2"/><text x="63.6499%" y="783.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="63.4697%" y="805" width="0.0171%" height="15" fill="rgb(214,91,1)" fg:x="7445" fg:w="2"/><text x="63.6840%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.04%)</title><rect x="63.4527%" y="821" width="0.0426%" height="15" fill="rgb(254,182,12)" fg:x="7443" fg:w="5"/><text x="63.6670%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.03%)</title><rect x="63.4953%" y="821" width="0.0256%" height="15" fill="rgb(244,92,22)" fg:x="7448" fg:w="3"/><text x="63.7096%" y="831.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (16 samples, 0.14%)</title><rect x="63.4015%" y="837" width="0.1364%" height="15" fill="rgb(226,32,40)" fg:x="7437" fg:w="16"/><text x="63.6158%" y="847.50"></text></g><g><title>__gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::sync (2 samples, 0.02%)</title><rect x="63.5379%" y="821" width="0.0171%" height="15" fill="rgb(253,40,40)" fg:x="7453" fg:w="2"/><text x="63.7522%" y="831.50"></text></g><g><title>Log::write (395 samples, 3.37%)</title><rect x="60.2302%" y="853" width="3.3674%" height="15" fill="rgb(230,27,54)" fg:x="7065" fg:w="395"/><text x="60.4445%" y="863.50">Log:..</text></g><g><title>std::ostream::flush (7 samples, 0.06%)</title><rect x="63.5379%" y="837" width="0.0597%" height="15" fill="rgb(232,177,40)" fg:x="7453" fg:w="7"/><text x="63.7522%" y="847.50"></text></g><g><title>fflush (5 samples, 0.04%)</title><rect x="63.5550%" y="821" width="0.0426%" height="15" fill="rgb(252,87,49)" fg:x="7455" fg:w="5"/><text x="63.7693%" y="831.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="63.5806%" y="805" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7458" fg:w="2"/><text x="63.7948%" y="815.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="63.5806%" y="789" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7458" fg:w="2"/><text x="63.7948%" y="799.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="63.5806%" y="773" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="7458" fg:w="2"/><text x="63.7948%" y="783.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="63.5806%" y="757" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="7458" fg:w="2"/><text x="63.7948%" y="767.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="63.5806%" y="741" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="7458" fg:w="2"/><text x="63.7948%" y="751.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="63.5806%" y="725" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="7458" fg:w="2"/><text x="63.7948%" y="735.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.02%)</title><rect x="63.6232%" y="821" width="0.0171%" height="15" fill="rgb(244,92,22)" fg:x="7463" fg:w="2"/><text x="63.8375%" y="831.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="63.6232%" y="805" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="7463" fg:w="2"/><text x="63.8375%" y="815.50"></text></g><g><title>std::allocator&lt;char&gt;::allocator (2 samples, 0.02%)</title><rect x="63.6402%" y="821" width="0.0171%" height="15" fill="rgb(215,89,36)" fg:x="7465" fg:w="2"/><text x="63.8545%" y="831.50"></text></g><g><title>Uri::Uri (7 samples, 0.06%)</title><rect x="63.6061%" y="837" width="0.0597%" height="15" fill="rgb(239,171,0)" fg:x="7461" fg:w="7"/><text x="63.8204%" y="847.50"></text></g><g><title>Request::Request (14 samples, 0.12%)</title><rect x="63.5976%" y="853" width="0.1194%" height="15" fill="rgb(236,207,40)" fg:x="7460" fg:w="14"/><text x="63.8119%" y="863.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map (6 samples, 0.05%)</title><rect x="63.6658%" y="837" width="0.0512%" height="15" fill="rgb(235,99,43)" fg:x="7468" fg:w="6"/><text x="63.8801%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree (4 samples, 0.03%)</title><rect x="63.6829%" y="821" width="0.0341%" height="15" fill="rgb(232,136,19)" fg:x="7470" fg:w="4"/><text x="63.8972%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;::_Rb_tree_impl (2 samples, 0.02%)</title><rect x="63.6999%" y="805" width="0.0171%" height="15" fill="rgb(249,6,43)" fg:x="7472" fg:w="2"/><text x="63.9142%" y="815.50"></text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="63.7255%" y="853" width="0.0341%" height="15" fill="rgb(221,14,53)" fg:x="7475" fg:w="4"/><text x="63.9398%" y="863.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="63.7766%" y="837" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="7481" fg:w="2"/><text x="63.9909%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (6 samples, 0.05%)</title><rect x="63.7596%" y="853" width="0.0512%" height="15" fill="rgb(236,91,4)" fg:x="7479" fg:w="6"/><text x="63.9739%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.02%)</title><rect x="63.8107%" y="853" width="0.0171%" height="15" fill="rgb(233,7,30)" fg:x="7485" fg:w="2"/><text x="64.0250%" y="863.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.02%)</title><rect x="63.8363%" y="837" width="0.0171%" height="15" fill="rgb(216,50,33)" fg:x="7488" fg:w="2"/><text x="64.0506%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.03%)</title><rect x="63.8534%" y="837" width="0.0341%" height="15" fill="rgb(254,182,12)" fg:x="7490" fg:w="4"/><text x="64.0677%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (3 samples, 0.03%)</title><rect x="63.8875%" y="837" width="0.0256%" height="15" fill="rgb(209,28,51)" fg:x="7494" fg:w="3"/><text x="64.1018%" y="847.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11 samples, 0.09%)</title><rect x="63.8278%" y="853" width="0.0938%" height="15" fill="rgb(226,32,40)" fg:x="7487" fg:w="11"/><text x="64.0421%" y="863.50"></text></g><g><title>Address::port (2 samples, 0.02%)</title><rect x="63.9301%" y="821" width="0.0171%" height="15" fill="rgb(212,229,12)" fg:x="7499" fg:w="2"/><text x="64.1444%" y="831.50"></text></g><g><title>htons (2 samples, 0.02%)</title><rect x="63.9301%" y="805" width="0.0171%" height="15" fill="rgb(216,5,52)" fg:x="7499" fg:w="2"/><text x="64.1444%" y="815.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.08%)</title><rect x="64.1091%" y="757" width="0.0767%" height="15" fill="rgb(247,113,52)" fg:x="7520" fg:w="9"/><text x="64.3234%" y="767.50"></text></g><g><title>_IO_default_xsputn (4 samples, 0.03%)</title><rect x="64.1858%" y="757" width="0.0341%" height="15" fill="rgb(222,74,13)" fg:x="7529" fg:w="4"/><text x="64.4001%" y="767.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="64.2029%" y="741" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7531" fg:w="2"/><text x="64.4172%" y="751.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="64.2029%" y="725" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7531" fg:w="2"/><text x="64.4172%" y="735.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="64.2029%" y="709" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="7531" fg:w="2"/><text x="64.4172%" y="719.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="64.2029%" y="693" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="7531" fg:w="2"/><text x="64.4172%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="64.2029%" y="677" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="7531" fg:w="2"/><text x="64.4172%" y="687.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="64.2029%" y="661" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="7531" fg:w="2"/><text x="64.4172%" y="671.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="64.2029%" y="645" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="7531" fg:w="2"/><text x="64.4172%" y="655.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="64.2029%" y="629" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="7531" fg:w="2"/><text x="64.4172%" y="639.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="64.2029%" y="613" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="7531" fg:w="2"/><text x="64.4172%" y="623.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="64.2029%" y="597" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="7531" fg:w="2"/><text x="64.4172%" y="607.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="64.2029%" y="581" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="7531" fg:w="2"/><text x="64.4172%" y="591.50"></text></g><g><title>inet_ntop (33 samples, 0.28%)</title><rect x="63.9557%" y="821" width="0.2813%" height="15" fill="rgb(221,131,48)" fg:x="7502" fg:w="33"/><text x="64.1700%" y="831.50"></text></g><g><title>sprintf (29 samples, 0.25%)</title><rect x="63.9898%" y="805" width="0.2472%" height="15" fill="rgb(213,81,41)" fg:x="7506" fg:w="29"/><text x="64.2041%" y="815.50"></text></g><g><title>[libc-2.31.so] (28 samples, 0.24%)</title><rect x="63.9983%" y="789" width="0.2387%" height="15" fill="rgb(247,113,52)" fg:x="7507" fg:w="28"/><text x="64.2126%" y="799.50"></text></g><g><title>[libc-2.31.so] (26 samples, 0.22%)</title><rect x="64.0153%" y="773" width="0.2217%" height="15" fill="rgb(247,113,52)" fg:x="7509" fg:w="26"/><text x="64.2296%" y="783.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="64.2199%" y="757" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="767.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="64.2199%" y="741" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="751.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="64.2199%" y="725" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="735.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="64.2199%" y="709" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="719.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="64.2199%" y="693" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="703.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="64.2199%" y="677" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="687.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="64.2199%" y="661" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="671.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="64.2199%" y="645" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="655.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="64.2199%" y="629" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="639.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="64.2199%" y="613" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="623.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="64.2199%" y="597" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="607.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="64.2199%" y="581" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="591.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="64.2199%" y="565" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="575.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="64.2199%" y="549" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="559.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="64.2199%" y="533" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="543.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="64.2199%" y="517" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="527.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="64.2199%" y="501" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="511.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="64.2199%" y="485" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="495.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="64.2199%" y="469" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="64.2199%" y="453" width="0.0171%" height="15" fill="rgb(226,88,38)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="463.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="64.2199%" y="437" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="7533" fg:w="2"/><text x="64.4342%" y="447.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (3 samples, 0.03%)</title><rect x="64.2455%" y="789" width="0.0256%" height="15" fill="rgb(213,123,36)" fg:x="7536" fg:w="3"/><text x="64.4598%" y="799.50"></text></g><g><title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (6 samples, 0.05%)</title><rect x="64.2370%" y="821" width="0.0512%" height="15" fill="rgb(221,154,13)" fg:x="7535" fg:w="6"/><text x="64.4513%" y="831.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (5 samples, 0.04%)</title><rect x="64.2455%" y="805" width="0.0426%" height="15" fill="rgb(222,170,8)" fg:x="7536" fg:w="5"/><text x="64.4598%" y="815.50"></text></g><g><title>std::ostream::sentry::~sentry (2 samples, 0.02%)</title><rect x="64.2711%" y="789" width="0.0171%" height="15" fill="rgb(231,213,43)" fg:x="7539" fg:w="2"/><text x="64.4854%" y="799.50"></text></g><g><title>[libstdc++.so.6.0.28] (5 samples, 0.04%)</title><rect x="64.3052%" y="789" width="0.0426%" height="15" fill="rgb(226,148,0)" fg:x="7543" fg:w="5"/><text x="64.5195%" y="799.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="64.3649%" y="741" width="0.0171%" height="15" fill="rgb(214,91,1)" fg:x="7550" fg:w="2"/><text x="64.5792%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (5 samples, 0.04%)</title><rect x="64.3564%" y="757" width="0.0426%" height="15" fill="rgb(211,92,40)" fg:x="7549" fg:w="5"/><text x="64.5706%" y="767.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.02%)</title><rect x="64.3819%" y="741" width="0.0171%" height="15" fill="rgb(211,63,27)" fg:x="7552" fg:w="2"/><text x="64.5962%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (2 samples, 0.02%)</title><rect x="64.3990%" y="757" width="0.0171%" height="15" fill="rgb(253,78,32)" fg:x="7554" fg:w="2"/><text x="64.6133%" y="767.50"></text></g><g><title>operator&lt;&lt; (60 samples, 0.51%)</title><rect x="63.9216%" y="837" width="0.5115%" height="15" fill="rgb(206,204,30)" fg:x="7498" fg:w="60"/><text x="64.1359%" y="847.50"></text></g><g><title>std::ostream::_M_insert&lt;unsigned long&gt; (17 samples, 0.14%)</title><rect x="64.2882%" y="821" width="0.1449%" height="15" fill="rgb(226,22,13)" fg:x="7541" fg:w="17"/><text x="64.5024%" y="831.50"></text></g><g><title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (16 samples, 0.14%)</title><rect x="64.2967%" y="805" width="0.1364%" height="15" fill="rgb(244,144,25)" fg:x="7542" fg:w="16"/><text x="64.5110%" y="815.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (10 samples, 0.09%)</title><rect x="64.3478%" y="789" width="0.0853%" height="15" fill="rgb(213,123,36)" fg:x="7548" fg:w="10"/><text x="64.5621%" y="799.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (10 samples, 0.09%)</title><rect x="64.3478%" y="773" width="0.0853%" height="15" fill="rgb(226,199,5)" fg:x="7548" fg:w="10"/><text x="64.5621%" y="783.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (2 samples, 0.02%)</title><rect x="64.4160%" y="757" width="0.0171%" height="15" fill="rgb(219,58,21)" fg:x="7556" fg:w="2"/><text x="64.6303%" y="767.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.05%)</title><rect x="64.5695%" y="741" width="0.0512%" height="15" fill="rgb(247,113,52)" fg:x="7574" fg:w="6"/><text x="64.7838%" y="751.50"></text></g><g><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (11 samples, 0.09%)</title><rect x="64.5354%" y="757" width="0.0938%" height="15" fill="rgb(228,90,48)" fg:x="7570" fg:w="11"/><text x="64.7497%" y="767.50"></text></g><g><title>__dynamic_cast (16 samples, 0.14%)</title><rect x="64.5098%" y="773" width="0.1364%" height="15" fill="rgb(214,65,42)" fg:x="7567" fg:w="16"/><text x="64.7241%" y="783.50"></text></g><g><title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (20 samples, 0.17%)</title><rect x="64.4928%" y="789" width="0.1705%" height="15" fill="rgb(215,60,9)" fg:x="7565" fg:w="20"/><text x="64.7070%" y="799.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="64.6462%" y="773" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7583" fg:w="2"/><text x="64.8605%" y="783.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="64.6462%" y="757" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7583" fg:w="2"/><text x="64.8605%" y="767.50"></text></g><g><title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="64.6633%" y="789" width="0.0171%" height="15" fill="rgb(207,140,3)" fg:x="7585" fg:w="2"/><text x="64.8775%" y="799.50"></text></g><g><title>__dynamic_cast (2 samples, 0.02%)</title><rect x="64.6974%" y="773" width="0.0171%" height="15" fill="rgb(214,65,42)" fg:x="7589" fg:w="2"/><text x="64.9116%" y="783.50"></text></g><g><title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (7 samples, 0.06%)</title><rect x="64.6803%" y="789" width="0.0597%" height="15" fill="rgb(243,107,3)" fg:x="7587" fg:w="7"/><text x="64.8946%" y="799.50"></text></g><g><title>std::locale::id::_M_id (3 samples, 0.03%)</title><rect x="64.7144%" y="773" width="0.0256%" height="15" fill="rgb(241,7,48)" fg:x="7591" fg:w="3"/><text x="64.9287%" y="783.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (30 samples, 0.26%)</title><rect x="64.4928%" y="805" width="0.2558%" height="15" fill="rgb(237,227,49)" fg:x="7565" fg:w="30"/><text x="64.7070%" y="815.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (38 samples, 0.32%)</title><rect x="64.4587%" y="821" width="0.3240%" height="15" fill="rgb(223,206,25)" fg:x="7561" fg:w="38"/><text x="64.6729%" y="831.50"></text></g><g><title>std::ios_base::_M_init (4 samples, 0.03%)</title><rect x="64.7485%" y="805" width="0.0341%" height="15" fill="rgb(211,168,7)" fg:x="7595" fg:w="4"/><text x="64.9628%" y="815.50"></text></g><g><title>std::ios_base::ios_base (4 samples, 0.03%)</title><rect x="64.7826%" y="821" width="0.0341%" height="15" fill="rgb(227,77,35)" fg:x="7599" fg:w="4"/><text x="64.9969%" y="831.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (49 samples, 0.42%)</title><rect x="64.4331%" y="837" width="0.4177%" height="15" fill="rgb(230,13,26)" fg:x="7558" fg:w="49"/><text x="64.6474%" y="847.50"></text></g><g><title>std::locale::locale (4 samples, 0.03%)</title><rect x="64.8167%" y="821" width="0.0341%" height="15" fill="rgb(240,92,16)" fg:x="7603" fg:w="4"/><text x="65.0310%" y="831.50"></text></g><g><title>[libstdc++.so.6.0.28] (3 samples, 0.03%)</title><rect x="64.8252%" y="805" width="0.0256%" height="15" fill="rgb(226,148,0)" fg:x="7604" fg:w="3"/><text x="65.0395%" y="815.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (6 samples, 0.05%)</title><rect x="64.8508%" y="837" width="0.0512%" height="15" fill="rgb(254,26,48)" fg:x="7607" fg:w="6"/><text x="65.0651%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (4 samples, 0.03%)</title><rect x="64.8679%" y="821" width="0.0341%" height="15" fill="rgb(236,91,4)" fg:x="7609" fg:w="4"/><text x="65.0821%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.03%)</title><rect x="64.8679%" y="805" width="0.0341%" height="15" fill="rgb(250,46,35)" fg:x="7609" fg:w="4"/><text x="65.0821%" y="815.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="64.8849%" y="789" width="0.0171%" height="15" fill="rgb(214,91,1)" fg:x="7611" fg:w="2"/><text x="65.0992%" y="799.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="64.8849%" y="773" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="7611" fg:w="2"/><text x="65.0992%" y="783.50"></text></g><g><title>Http::Http (599 samples, 5.11%)</title><rect x="59.8124%" y="869" width="5.1066%" height="15" fill="rgb(216,154,36)" fg:x="7016" fg:w="599"/><text x="60.0267%" y="879.50">Http::Ht..</text></g><g><title>toString&lt;Address&amp;&gt; (117 samples, 1.00%)</title><rect x="63.9216%" y="853" width="0.9974%" height="15" fill="rgb(233,146,38)" fg:x="7498" fg:w="117"/><text x="64.1359%" y="863.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (2 samples, 0.02%)</title><rect x="64.9020%" y="837" width="0.0171%" height="15" fill="rgb(221,29,6)" fg:x="7613" fg:w="2"/><text x="65.1162%" y="847.50"></text></g><g><title>Poll::add (3 samples, 0.03%)</title><rect x="64.9190%" y="869" width="0.0256%" height="15" fill="rgb(234,140,27)" fg:x="7615" fg:w="3"/><text x="65.1333%" y="879.50"></text></g><g><title>std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt;::push_back (2 samples, 0.02%)</title><rect x="64.9275%" y="853" width="0.0171%" height="15" fill="rgb(254,127,21)" fg:x="7616" fg:w="2"/><text x="65.1418%" y="863.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="64.9616%" y="837" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7620" fg:w="2"/><text x="65.1759%" y="847.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="64.9616%" y="821" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7620" fg:w="2"/><text x="65.1759%" y="831.50"></text></g><g><title>do_fcntl (2 samples, 0.02%)</title><rect x="65.0213%" y="789" width="0.0171%" height="15" fill="rgb(252,30,2)" fg:x="7627" fg:w="2"/><text x="65.2356%" y="799.50"></text></g><g><title>__libc_fcntl64 (16 samples, 0.14%)</title><rect x="64.9446%" y="869" width="0.1364%" height="15" fill="rgb(246,163,4)" fg:x="7618" fg:w="16"/><text x="65.1589%" y="879.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.13%)</title><rect x="64.9531%" y="853" width="0.1279%" height="15" fill="rgb(247,113,52)" fg:x="7619" fg:w="15"/><text x="65.1674%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.10%)</title><rect x="64.9787%" y="837" width="0.1023%" height="15" fill="rgb(205,226,15)" fg:x="7622" fg:w="12"/><text x="65.1930%" y="847.50"></text></g><g><title>do_syscall_64 (11 samples, 0.09%)</title><rect x="64.9872%" y="821" width="0.0938%" height="15" fill="rgb(220,74,14)" fg:x="7623" fg:w="11"/><text x="65.2015%" y="831.50"></text></g><g><title>__x64_sys_fcntl (10 samples, 0.09%)</title><rect x="64.9957%" y="805" width="0.0853%" height="15" fill="rgb(244,199,51)" fg:x="7624" fg:w="10"/><text x="65.2100%" y="815.50"></text></g><g><title>security_file_fcntl (5 samples, 0.04%)</title><rect x="65.0384%" y="789" width="0.0426%" height="15" fill="rgb(233,47,29)" fg:x="7629" fg:w="5"/><text x="65.2526%" y="799.50"></text></g><g><title>tomoyo_file_fcntl (3 samples, 0.03%)</title><rect x="65.0554%" y="773" width="0.0256%" height="15" fill="rgb(228,165,45)" fg:x="7631" fg:w="3"/><text x="65.2697%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.02%)</title><rect x="65.1151%" y="853" width="0.0171%" height="15" fill="rgb(234,224,53)" fg:x="7638" fg:w="2"/><text x="65.3294%" y="863.50"></text></g><g><title>mem_cgroup_sk_alloc (3 samples, 0.03%)</title><rect x="65.2600%" y="725" width="0.0256%" height="15" fill="rgb(230,84,1)" fg:x="7655" fg:w="3"/><text x="65.4743%" y="735.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="65.2685%" y="709" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="7656" fg:w="2"/><text x="65.4828%" y="719.50"></text></g><g><title>inet_csk_accept (12 samples, 0.10%)</title><rect x="65.2089%" y="741" width="0.1023%" height="15" fill="rgb(209,163,35)" fg:x="7649" fg:w="12"/><text x="65.4232%" y="751.50"></text></g><g><title>release_sock (3 samples, 0.03%)</title><rect x="65.2856%" y="725" width="0.0256%" height="15" fill="rgb(217,78,19)" fg:x="7658" fg:w="3"/><text x="65.4999%" y="735.50"></text></g><g><title>inet_accept (15 samples, 0.13%)</title><rect x="65.1918%" y="757" width="0.1279%" height="15" fill="rgb(232,85,41)" fg:x="7647" fg:w="15"/><text x="65.4061%" y="767.50"></text></g><g><title>inet_getname (3 samples, 0.03%)</title><rect x="65.3197%" y="757" width="0.0256%" height="15" fill="rgb(213,10,46)" fg:x="7662" fg:w="3"/><text x="65.5340%" y="767.50"></text></g><g><title>move_addr_to_user (3 samples, 0.03%)</title><rect x="65.3453%" y="757" width="0.0256%" height="15" fill="rgb(240,75,31)" fg:x="7665" fg:w="3"/><text x="65.5596%" y="767.50"></text></g><g><title>__check_object_size (3 samples, 0.03%)</title><rect x="65.3453%" y="741" width="0.0256%" height="15" fill="rgb(218,1,22)" fg:x="7665" fg:w="3"/><text x="65.5596%" y="751.50"></text></g><g><title>check_stack_object (3 samples, 0.03%)</title><rect x="65.3453%" y="725" width="0.0256%" height="15" fill="rgb(244,30,26)" fg:x="7665" fg:w="3"/><text x="65.5596%" y="735.50"></text></g><g><title>security_socket_accept (3 samples, 0.03%)</title><rect x="65.3708%" y="757" width="0.0256%" height="15" fill="rgb(248,87,51)" fg:x="7668" fg:w="3"/><text x="65.5851%" y="767.50"></text></g><g><title>aa_sk_perm (3 samples, 0.03%)</title><rect x="65.3708%" y="741" width="0.0256%" height="15" fill="rgb(235,5,54)" fg:x="7668" fg:w="3"/><text x="65.5851%" y="751.50"></text></g><g><title>inode_init_always (8 samples, 0.07%)</title><rect x="65.4646%" y="709" width="0.0682%" height="15" fill="rgb(206,132,34)" fg:x="7679" fg:w="8"/><text x="65.6789%" y="719.50"></text></g><g><title>security_inode_alloc (2 samples, 0.02%)</title><rect x="65.5158%" y="693" width="0.0171%" height="15" fill="rgb(239,132,7)" fg:x="7685" fg:w="2"/><text x="65.7301%" y="703.50"></text></g><g><title>___slab_alloc (2 samples, 0.02%)</title><rect x="65.5840%" y="661" width="0.0171%" height="15" fill="rgb(224,215,35)" fg:x="7693" fg:w="2"/><text x="65.7983%" y="671.50"></text></g><g><title>__slab_alloc (4 samples, 0.03%)</title><rect x="65.5840%" y="677" width="0.0341%" height="15" fill="rgb(229,140,31)" fg:x="7693" fg:w="4"/><text x="65.7983%" y="687.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="65.6010%" y="661" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7695" fg:w="2"/><text x="65.8153%" y="671.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="65.6010%" y="645" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7695" fg:w="2"/><text x="65.8153%" y="655.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="65.6010%" y="629" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="7695" fg:w="2"/><text x="65.8153%" y="639.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="65.6010%" y="613" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="7695" fg:w="2"/><text x="65.8153%" y="623.50"></text></g><g><title>memcg_slab_post_alloc_hook (10 samples, 0.09%)</title><rect x="65.6181%" y="677" width="0.0853%" height="15" fill="rgb(242,216,24)" fg:x="7697" fg:w="10"/><text x="65.8324%" y="687.50"></text></g><g><title>sock_alloc (42 samples, 0.36%)</title><rect x="65.3964%" y="757" width="0.3581%" height="15" fill="rgb(231,183,35)" fg:x="7671" fg:w="42"/><text x="65.6107%" y="767.50"></text></g><g><title>new_inode_pseudo (37 samples, 0.32%)</title><rect x="65.4390%" y="741" width="0.3154%" height="15" fill="rgb(250,123,6)" fg:x="7676" fg:w="37"/><text x="65.6533%" y="751.50"></text></g><g><title>alloc_inode (37 samples, 0.32%)</title><rect x="65.4390%" y="725" width="0.3154%" height="15" fill="rgb(232,33,27)" fg:x="7676" fg:w="37"/><text x="65.6533%" y="735.50"></text></g><g><title>sock_alloc_inode (26 samples, 0.22%)</title><rect x="65.5328%" y="709" width="0.2217%" height="15" fill="rgb(214,180,47)" fg:x="7687" fg:w="26"/><text x="65.7471%" y="719.50"></text></g><g><title>kmem_cache_alloc (23 samples, 0.20%)</title><rect x="65.5584%" y="693" width="0.1961%" height="15" fill="rgb(223,51,51)" fg:x="7690" fg:w="23"/><text x="65.7727%" y="703.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (6 samples, 0.05%)</title><rect x="65.7033%" y="677" width="0.0512%" height="15" fill="rgb(212,11,50)" fg:x="7707" fg:w="6"/><text x="65.9176%" y="687.50"></text></g><g><title>obj_cgroup_charge (2 samples, 0.02%)</title><rect x="65.7374%" y="661" width="0.0171%" height="15" fill="rgb(236,185,43)" fg:x="7711" fg:w="2"/><text x="65.9517%" y="671.50"></text></g><g><title>kmem_cache_alloc (3 samples, 0.03%)</title><rect x="65.7886%" y="677" width="0.0256%" height="15" fill="rgb(223,51,51)" fg:x="7717" fg:w="3"/><text x="66.0029%" y="687.50"></text></g><g><title>memcg_slab_post_alloc_hook (2 samples, 0.02%)</title><rect x="65.7971%" y="661" width="0.0171%" height="15" fill="rgb(242,216,24)" fg:x="7718" fg:w="2"/><text x="66.0114%" y="671.50"></text></g><g><title>__alloc_file (9 samples, 0.08%)</title><rect x="65.7886%" y="693" width="0.0767%" height="15" fill="rgb(208,34,24)" fg:x="7717" fg:w="9"/><text x="66.0029%" y="703.50"></text></g><g><title>security_file_alloc (6 samples, 0.05%)</title><rect x="65.8142%" y="677" width="0.0512%" height="15" fill="rgb(251,33,6)" fg:x="7720" fg:w="6"/><text x="66.0284%" y="687.50"></text></g><g><title>kmem_cache_alloc (6 samples, 0.05%)</title><rect x="65.8142%" y="661" width="0.0512%" height="15" fill="rgb(223,51,51)" fg:x="7720" fg:w="6"/><text x="66.0284%" y="671.50"></text></g><g><title>alloc_file (15 samples, 0.13%)</title><rect x="65.7630%" y="725" width="0.1279%" height="15" fill="rgb(237,88,39)" fg:x="7714" fg:w="15"/><text x="65.9773%" y="735.50"></text></g><g><title>alloc_empty_file (13 samples, 0.11%)</title><rect x="65.7801%" y="709" width="0.1108%" height="15" fill="rgb(242,156,16)" fg:x="7716" fg:w="13"/><text x="65.9943%" y="719.50"></text></g><g><title>percpu_counter_add_batch (3 samples, 0.03%)</title><rect x="65.8653%" y="693" width="0.0256%" height="15" fill="rgb(219,106,45)" fg:x="7726" fg:w="3"/><text x="66.0796%" y="703.50"></text></g><g><title>__d_alloc (9 samples, 0.08%)</title><rect x="65.8994%" y="709" width="0.0767%" height="15" fill="rgb(233,104,16)" fg:x="7730" fg:w="9"/><text x="66.1137%" y="719.50"></text></g><g><title>kmem_cache_alloc (6 samples, 0.05%)</title><rect x="65.9250%" y="693" width="0.0512%" height="15" fill="rgb(223,51,51)" fg:x="7733" fg:w="6"/><text x="66.1393%" y="703.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (3 samples, 0.03%)</title><rect x="65.9506%" y="677" width="0.0256%" height="15" fill="rgb(212,11,50)" fg:x="7736" fg:w="3"/><text x="66.1648%" y="687.50"></text></g><g><title>obj_cgroup_charge (2 samples, 0.02%)</title><rect x="65.9591%" y="661" width="0.0171%" height="15" fill="rgb(236,185,43)" fg:x="7737" fg:w="2"/><text x="66.1734%" y="671.50"></text></g><g><title>d_alloc_pseudo (11 samples, 0.09%)</title><rect x="65.8909%" y="725" width="0.0938%" height="15" fill="rgb(214,193,13)" fg:x="7729" fg:w="11"/><text x="66.1052%" y="735.50"></text></g><g><title>d_instantiate (9 samples, 0.08%)</title><rect x="65.9847%" y="725" width="0.0767%" height="15" fill="rgb(244,51,15)" fg:x="7740" fg:w="9"/><text x="66.1989%" y="735.50"></text></g><g><title>security_d_instantiate (5 samples, 0.04%)</title><rect x="66.0188%" y="709" width="0.0426%" height="15" fill="rgb(249,49,41)" fg:x="7744" fg:w="5"/><text x="66.2330%" y="719.50"></text></g><g><title>alloc_file_pseudo (36 samples, 0.31%)</title><rect x="65.7630%" y="741" width="0.3069%" height="15" fill="rgb(226,92,4)" fg:x="7714" fg:w="36"/><text x="65.9773%" y="751.50"></text></g><g><title>__sys_accept4_file (106 samples, 0.90%)</title><rect x="65.1748%" y="789" width="0.9037%" height="15" fill="rgb(233,91,17)" fg:x="7645" fg:w="106"/><text x="65.3891%" y="799.50"></text></g><g><title>do_accept (105 samples, 0.90%)</title><rect x="65.1833%" y="773" width="0.8951%" height="15" fill="rgb(242,186,42)" fg:x="7646" fg:w="105"/><text x="65.3976%" y="783.50"></text></g><g><title>sock_alloc_file (38 samples, 0.32%)</title><rect x="65.7545%" y="757" width="0.3240%" height="15" fill="rgb(209,183,4)" fg:x="7713" fg:w="38"/><text x="65.9688%" y="767.50"></text></g><g><title>do_syscall_64 (111 samples, 0.95%)</title><rect x="65.1407%" y="837" width="0.9463%" height="15" fill="rgb(220,74,14)" fg:x="7641" fg:w="111"/><text x="65.3550%" y="847.50"></text></g><g><title>__x64_sys_accept (111 samples, 0.95%)</title><rect x="65.1407%" y="821" width="0.9463%" height="15" fill="rgb(239,196,49)" fg:x="7641" fg:w="111"/><text x="65.3550%" y="831.50"></text></g><g><title>__sys_accept4 (110 samples, 0.94%)</title><rect x="65.1492%" y="805" width="0.9378%" height="15" fill="rgb(249,193,36)" fg:x="7642" fg:w="110"/><text x="65.3635%" y="815.50"></text></g><g><title>accept (119 samples, 1.01%)</title><rect x="65.0810%" y="869" width="1.0145%" height="15" fill="rgb(244,113,2)" fg:x="7634" fg:w="119"/><text x="65.2953%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (113 samples, 0.96%)</title><rect x="65.1321%" y="853" width="0.9633%" height="15" fill="rgb(205,226,15)" fg:x="7640" fg:w="113"/><text x="65.3464%" y="863.50"></text></g><g><title>__irqentry_text_start (10 samples, 0.09%)</title><rect x="66.0955%" y="853" width="0.0853%" height="15" fill="rgb(229,107,3)" fg:x="7753" fg:w="10"/><text x="66.3098%" y="863.50"></text></g><g><title>inet_getname (3 samples, 0.03%)</title><rect x="66.1807%" y="789" width="0.0256%" height="15" fill="rgb(213,10,46)" fg:x="7763" fg:w="3"/><text x="66.3950%" y="799.50"></text></g><g><title>move_addr_to_user (3 samples, 0.03%)</title><rect x="66.2063%" y="789" width="0.0256%" height="15" fill="rgb(240,75,31)" fg:x="7766" fg:w="3"/><text x="66.4206%" y="799.50"></text></g><g><title>aa_sk_perm (2 samples, 0.02%)</title><rect x="66.2319%" y="773" width="0.0171%" height="15" fill="rgb(235,5,54)" fg:x="7769" fg:w="2"/><text x="66.4462%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.08%)</title><rect x="66.1807%" y="853" width="0.0767%" height="15" fill="rgb(205,226,15)" fg:x="7763" fg:w="9"/><text x="66.3950%" y="863.50"></text></g><g><title>do_syscall_64 (9 samples, 0.08%)</title><rect x="66.1807%" y="837" width="0.0767%" height="15" fill="rgb(220,74,14)" fg:x="7763" fg:w="9"/><text x="66.3950%" y="847.50"></text></g><g><title>__x64_sys_getsockname (9 samples, 0.08%)</title><rect x="66.1807%" y="821" width="0.0767%" height="15" fill="rgb(250,34,31)" fg:x="7763" fg:w="9"/><text x="66.3950%" y="831.50"></text></g><g><title>__sys_getsockname (9 samples, 0.08%)</title><rect x="66.1807%" y="805" width="0.0767%" height="15" fill="rgb(221,110,22)" fg:x="7763" fg:w="9"/><text x="66.3950%" y="815.50"></text></g><g><title>security_socket_getsockname (3 samples, 0.03%)</title><rect x="66.2319%" y="789" width="0.0256%" height="15" fill="rgb(211,124,31)" fg:x="7769" fg:w="3"/><text x="66.4462%" y="799.50"></text></g><g><title>getsockname (20 samples, 0.17%)</title><rect x="66.0955%" y="869" width="0.1705%" height="15" fill="rgb(243,188,17)" fg:x="7753" fg:w="20"/><text x="66.3098%" y="879.50"></text></g><g><title>do_brk_flags (3 samples, 0.03%)</title><rect x="66.4365%" y="709" width="0.0256%" height="15" fill="rgb(216,139,3)" fg:x="7793" fg:w="3"/><text x="66.6508%" y="719.50"></text></g><g><title>__do_sys_brk (4 samples, 0.03%)</title><rect x="66.4365%" y="725" width="0.0341%" height="15" fill="rgb(251,218,4)" fg:x="7793" fg:w="4"/><text x="66.6508%" y="735.50"></text></g><g><title>__default_morecore (5 samples, 0.04%)</title><rect x="66.4365%" y="805" width="0.0426%" height="15" fill="rgb(232,82,47)" fg:x="7793" fg:w="5"/><text x="66.6508%" y="815.50"></text></g><g><title>__sbrk (5 samples, 0.04%)</title><rect x="66.4365%" y="789" width="0.0426%" height="15" fill="rgb(243,78,47)" fg:x="7793" fg:w="5"/><text x="66.6508%" y="799.50"></text></g><g><title>brk (5 samples, 0.04%)</title><rect x="66.4365%" y="773" width="0.0426%" height="15" fill="rgb(207,0,13)" fg:x="7793" fg:w="5"/><text x="66.6508%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.04%)</title><rect x="66.4365%" y="757" width="0.0426%" height="15" fill="rgb(205,226,15)" fg:x="7793" fg:w="5"/><text x="66.6508%" y="767.50"></text></g><g><title>do_syscall_64 (5 samples, 0.04%)</title><rect x="66.4365%" y="741" width="0.0426%" height="15" fill="rgb(220,74,14)" fg:x="7793" fg:w="5"/><text x="66.6508%" y="751.50"></text></g><g><title>ListenSocket::onPollEvent (831 samples, 7.08%)</title><rect x="59.4203%" y="885" width="7.0844%" height="15" fill="rgb(234,106,36)" fg:x="6970" fg:w="831"/><text x="59.6346%" y="895.50">ListenSocket..</text></g><g><title>operator new (28 samples, 0.24%)</title><rect x="66.2660%" y="869" width="0.2387%" height="15" fill="rgb(214,91,1)" fg:x="7773" fg:w="28"/><text x="66.4803%" y="879.50"></text></g><g><title>__libc_malloc (25 samples, 0.21%)</title><rect x="66.2916%" y="853" width="0.2131%" height="15" fill="rgb(232,24,50)" fg:x="7776" fg:w="25"/><text x="66.5058%" y="863.50"></text></g><g><title>[libc-2.31.so] (19 samples, 0.16%)</title><rect x="66.3427%" y="837" width="0.1620%" height="15" fill="rgb(247,113,52)" fg:x="7782" fg:w="19"/><text x="66.5570%" y="847.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.09%)</title><rect x="66.4194%" y="821" width="0.0853%" height="15" fill="rgb(247,113,52)" fg:x="7791" fg:w="10"/><text x="66.6337%" y="831.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.02%)</title><rect x="66.4876%" y="805" width="0.0171%" height="15" fill="rgb(208,26,13)" fg:x="7799" fg:w="2"/><text x="66.7019%" y="815.50"></text></g><g><title>exc_page_fault (2 samples, 0.02%)</title><rect x="66.4876%" y="789" width="0.0171%" height="15" fill="rgb(216,51,29)" fg:x="7799" fg:w="2"/><text x="66.7019%" y="799.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.02%)</title><rect x="66.4876%" y="773" width="0.0171%" height="15" fill="rgb(253,37,52)" fg:x="7799" fg:w="2"/><text x="66.7019%" y="783.50"></text></g><g><title>handle_mm_fault (2 samples, 0.02%)</title><rect x="66.4876%" y="757" width="0.0171%" height="15" fill="rgb(247,31,49)" fg:x="7799" fg:w="2"/><text x="66.7019%" y="767.50"></text></g><g><title>std::queue&lt;std::istream*, std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt; &gt;::empty (3 samples, 0.03%)</title><rect x="66.5814%" y="821" width="0.0256%" height="15" fill="rgb(215,109,46)" fg:x="7810" fg:w="3"/><text x="66.7957%" y="831.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::empty (3 samples, 0.03%)</title><rect x="66.5814%" y="805" width="0.0256%" height="15" fill="rgb(248,132,21)" fg:x="7810" fg:w="3"/><text x="66.7957%" y="815.50"></text></g><g><title>std::operator== (2 samples, 0.02%)</title><rect x="66.5899%" y="789" width="0.0171%" height="15" fill="rgb(230,67,18)" fg:x="7811" fg:w="2"/><text x="66.8042%" y="799.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::istream**&gt;, std::istream**&gt;::deallocate (2 samples, 0.02%)</title><rect x="66.6155%" y="757" width="0.0171%" height="15" fill="rgb(231,145,7)" fg:x="7814" fg:w="2"/><text x="66.8298%" y="767.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::istream**&gt;::deallocate (2 samples, 0.02%)</title><rect x="66.6155%" y="741" width="0.0171%" height="15" fill="rgb(222,57,18)" fg:x="7814" fg:w="2"/><text x="66.8298%" y="751.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_deallocate_map (4 samples, 0.03%)</title><rect x="66.6070%" y="773" width="0.0341%" height="15" fill="rgb(223,184,23)" fg:x="7813" fg:w="4"/><text x="66.8213%" y="783.50"></text></g><g><title>AConnection::~AConnection (15 samples, 0.13%)</title><rect x="66.5558%" y="837" width="0.1279%" height="15" fill="rgb(218,45,33)" fg:x="7807" fg:w="15"/><text x="66.7701%" y="847.50"></text></g><g><title>std::queue&lt;std::istream*, std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt; &gt;::~queue (9 samples, 0.08%)</title><rect x="66.6070%" y="821" width="0.0767%" height="15" fill="rgb(223,40,52)" fg:x="7813" fg:w="9"/><text x="66.8213%" y="831.50"></text></g><g><title>std::deque&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::~deque (9 samples, 0.08%)</title><rect x="66.6070%" y="805" width="0.0767%" height="15" fill="rgb(205,72,24)" fg:x="7813" fg:w="9"/><text x="66.8213%" y="815.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::~_Deque_base (9 samples, 0.08%)</title><rect x="66.6070%" y="789" width="0.0767%" height="15" fill="rgb(206,190,42)" fg:x="7813" fg:w="9"/><text x="66.8213%" y="799.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_destroy_nodes (5 samples, 0.04%)</title><rect x="66.6411%" y="773" width="0.0426%" height="15" fill="rgb(235,186,7)" fg:x="7817" fg:w="5"/><text x="66.8554%" y="783.50"></text></g><g><title>std::_Deque_base&lt;std::istream*, std::allocator&lt;std::istream*&gt; &gt;::_M_deallocate_node (2 samples, 0.02%)</title><rect x="66.6667%" y="757" width="0.0171%" height="15" fill="rgb(210,125,6)" fg:x="7820" fg:w="2"/><text x="66.8810%" y="767.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::istream*&gt;, std::istream*&gt;::deallocate (2 samples, 0.02%)</title><rect x="66.6667%" y="741" width="0.0171%" height="15" fill="rgb(243,30,27)" fg:x="7820" fg:w="2"/><text x="66.8810%" y="751.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::istream*&gt;::deallocate (2 samples, 0.02%)</title><rect x="66.6667%" y="725" width="0.0171%" height="15" fill="rgb(225,209,3)" fg:x="7820" fg:w="2"/><text x="66.8810%" y="735.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="66.6667%" y="709" width="0.0171%" height="15" fill="rgb(221,14,53)" fg:x="7820" fg:w="2"/><text x="66.8810%" y="719.50"></text></g><g><title>File::isOpen (3 samples, 0.03%)</title><rect x="66.7178%" y="821" width="0.0256%" height="15" fill="rgb(222,123,46)" fg:x="7826" fg:w="3"/><text x="66.9321%" y="831.50"></text></g><g><title>__fdget_pos (2 samples, 0.02%)</title><rect x="66.7434%" y="741" width="0.0171%" height="15" fill="rgb(205,61,45)" fg:x="7829" fg:w="2"/><text x="66.9577%" y="751.50"></text></g><g><title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="66.7775%" y="725" width="0.0256%" height="15" fill="rgb(232,3,50)" fg:x="7833" fg:w="3"/><text x="66.9918%" y="735.50"></text></g><g><title>ext4_generic_write_checks (13 samples, 0.11%)</title><rect x="66.8201%" y="693" width="0.1108%" height="15" fill="rgb(212,86,33)" fg:x="7838" fg:w="13"/><text x="67.0344%" y="703.50"></text></g><g><title>generic_write_checks (12 samples, 0.10%)</title><rect x="66.8286%" y="677" width="0.1023%" height="15" fill="rgb(220,18,45)" fg:x="7839" fg:w="12"/><text x="67.0429%" y="687.50"></text></g><g><title>generic_write_check_limits (8 samples, 0.07%)</title><rect x="66.8627%" y="661" width="0.0682%" height="15" fill="rgb(237,191,43)" fg:x="7843" fg:w="8"/><text x="67.0770%" y="671.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="66.9139%" y="645" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7849" fg:w="2"/><text x="67.1282%" y="655.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="66.9139%" y="629" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7849" fg:w="2"/><text x="67.1282%" y="639.50"></text></g><g><title>jbd2_log_start_commit (2 samples, 0.02%)</title><rect x="67.0077%" y="613" width="0.0171%" height="15" fill="rgb(251,46,24)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="623.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="67.0077%" y="597" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="607.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="67.0077%" y="581" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="591.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="67.0077%" y="565" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="575.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="67.0077%" y="549" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="559.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="67.0077%" y="533" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="543.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="67.0077%" y="517" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="527.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="67.0077%" y="501" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="511.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="67.0077%" y="485" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="495.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="67.0077%" y="469" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="479.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="67.0077%" y="453" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="463.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="67.0077%" y="437" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="447.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="67.0077%" y="421" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="431.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="67.0077%" y="405" width="0.0171%" height="15" fill="rgb(207,166,9)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="415.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="67.0077%" y="389" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="399.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="67.0077%" y="373" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="383.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="67.0077%" y="357" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="367.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="67.0077%" y="341" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="351.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="67.0077%" y="325" width="0.0171%" height="15" fill="rgb(228,220,18)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="335.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="67.0077%" y="309" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="319.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="67.0077%" y="293" width="0.0171%" height="15" fill="rgb(226,88,38)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="303.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="67.0077%" y="277" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="7860" fg:w="2"/><text x="67.2220%" y="287.50"></text></g><g><title>kmem_cache_free (3 samples, 0.03%)</title><rect x="67.0247%" y="613" width="0.0256%" height="15" fill="rgb(225,137,16)" fg:x="7862" fg:w="3"/><text x="67.2390%" y="623.50"></text></g><g><title>__ext4_journal_stop (11 samples, 0.09%)</title><rect x="66.9736%" y="645" width="0.0938%" height="15" fill="rgb(225,40,54)" fg:x="7856" fg:w="11"/><text x="67.1879%" y="655.50"></text></g><g><title>jbd2_journal_stop (9 samples, 0.08%)</title><rect x="66.9906%" y="629" width="0.0767%" height="15" fill="rgb(229,91,7)" fg:x="7858" fg:w="9"/><text x="67.2049%" y="639.50"></text></g><g><title>stop_this_handle (2 samples, 0.02%)</title><rect x="67.0503%" y="613" width="0.0171%" height="15" fill="rgb(240,3,51)" fg:x="7865" fg:w="2"/><text x="67.2646%" y="623.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.02%)</title><rect x="67.0503%" y="597" width="0.0171%" height="15" fill="rgb(248,80,4)" fg:x="7865" fg:w="2"/><text x="67.2646%" y="607.50"></text></g><g><title>ext4_journal_check_start (3 samples, 0.03%)</title><rect x="67.1270%" y="613" width="0.0256%" height="15" fill="rgb(220,195,41)" fg:x="7874" fg:w="3"/><text x="67.3413%" y="623.50"></text></g><g><title>kmem_cache_alloc (3 samples, 0.03%)</title><rect x="67.2208%" y="597" width="0.0256%" height="15" fill="rgb(223,51,51)" fg:x="7885" fg:w="3"/><text x="67.4351%" y="607.50"></text></g><g><title>__ext4_journal_start_sb (20 samples, 0.17%)</title><rect x="67.0929%" y="629" width="0.1705%" height="15" fill="rgb(251,66,45)" fg:x="7870" fg:w="20"/><text x="67.3072%" y="639.50"></text></g><g><title>jbd2__journal_start (13 samples, 0.11%)</title><rect x="67.1526%" y="613" width="0.1108%" height="15" fill="rgb(212,174,30)" fg:x="7877" fg:w="13"/><text x="67.3669%" y="623.50"></text></g><g><title>start_this_handle (2 samples, 0.02%)</title><rect x="67.2464%" y="597" width="0.0171%" height="15" fill="rgb(247,124,24)" fg:x="7888" fg:w="2"/><text x="67.4607%" y="607.50"></text></g><g><title>ext4_mark_iloc_dirty (15 samples, 0.13%)</title><rect x="67.2720%" y="613" width="0.1279%" height="15" fill="rgb(236,133,21)" fg:x="7891" fg:w="15"/><text x="67.4862%" y="623.50"></text></g><g><title>ext4_fc_track_inode (4 samples, 0.03%)</title><rect x="67.3657%" y="597" width="0.0341%" height="15" fill="rgb(206,21,50)" fg:x="7902" fg:w="4"/><text x="67.5800%" y="607.50"></text></g><g><title>ext4_fc_track_template (2 samples, 0.02%)</title><rect x="67.3828%" y="581" width="0.0171%" height="15" fill="rgb(209,95,52)" fg:x="7904" fg:w="2"/><text x="67.5971%" y="591.50"></text></g><g><title>__ext4_journal_get_write_access (3 samples, 0.03%)</title><rect x="67.4254%" y="597" width="0.0256%" height="15" fill="rgb(219,28,3)" fg:x="7909" fg:w="3"/><text x="67.6397%" y="607.50"></text></g><g><title>__getblk_gfp (4 samples, 0.03%)</title><rect x="67.4680%" y="565" width="0.0341%" height="15" fill="rgb(223,110,34)" fg:x="7914" fg:w="4"/><text x="67.6823%" y="575.50"></text></g><g><title>__find_get_block (4 samples, 0.03%)</title><rect x="67.4680%" y="549" width="0.0341%" height="15" fill="rgb(254,214,1)" fg:x="7914" fg:w="4"/><text x="67.6823%" y="559.50"></text></g><g><title>ext4_get_group_desc (8 samples, 0.07%)</title><rect x="67.5107%" y="565" width="0.0682%" height="15" fill="rgb(222,172,27)" fg:x="7919" fg:w="8"/><text x="67.7249%" y="575.50"></text></g><g><title>generic_update_time (75 samples, 0.64%)</title><rect x="66.9480%" y="677" width="0.6394%" height="15" fill="rgb(212,0,0)" fg:x="7853" fg:w="75"/><text x="67.1623%" y="687.50"></text></g><g><title>__mark_inode_dirty (74 samples, 0.63%)</title><rect x="66.9565%" y="661" width="0.6309%" height="15" fill="rgb(212,91,54)" fg:x="7854" fg:w="74"/><text x="67.1708%" y="671.50"></text></g><g><title>ext4_dirty_inode (61 samples, 0.52%)</title><rect x="67.0673%" y="645" width="0.5200%" height="15" fill="rgb(235,194,15)" fg:x="7867" fg:w="61"/><text x="67.2816%" y="655.50"></text></g><g><title>__ext4_mark_inode_dirty (38 samples, 0.32%)</title><rect x="67.2634%" y="629" width="0.3240%" height="15" fill="rgb(250,159,10)" fg:x="7890" fg:w="38"/><text x="67.4777%" y="639.50"></text></g><g><title>ext4_reserve_inode_write (22 samples, 0.19%)</title><rect x="67.3998%" y="613" width="0.1876%" height="15" fill="rgb(232,18,0)" fg:x="7906" fg:w="22"/><text x="67.6141%" y="623.50"></text></g><g><title>ext4_get_inode_loc (16 samples, 0.14%)</title><rect x="67.4510%" y="597" width="0.1364%" height="15" fill="rgb(251,31,11)" fg:x="7912" fg:w="16"/><text x="67.6653%" y="607.50"></text></g><g><title>__ext4_get_inode_loc (15 samples, 0.13%)</title><rect x="67.4595%" y="581" width="0.1279%" height="15" fill="rgb(231,98,31)" fg:x="7913" fg:w="15"/><text x="67.6738%" y="591.50"></text></g><g><title>file_update_time (77 samples, 0.66%)</title><rect x="66.9395%" y="693" width="0.6564%" height="15" fill="rgb(237,12,27)" fg:x="7852" fg:w="77"/><text x="67.1538%" y="703.50"></text></g><g><title>__radix_tree_lookup (2 samples, 0.02%)</title><rect x="67.6300%" y="661" width="0.0171%" height="15" fill="rgb(250,213,26)" fg:x="7933" fg:w="2"/><text x="67.8443%" y="671.50"></text></g><g><title>balance_dirty_pages_ratelimited (6 samples, 0.05%)</title><rect x="67.6130%" y="677" width="0.0512%" height="15" fill="rgb(221,121,40)" fg:x="7931" fg:w="6"/><text x="67.8272%" y="687.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="67.6471%" y="661" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="7935" fg:w="2"/><text x="67.8613%" y="671.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="67.6471%" y="645" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="7935" fg:w="2"/><text x="67.8613%" y="655.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="67.6471%" y="629" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="7935" fg:w="2"/><text x="67.8613%" y="639.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="67.6471%" y="613" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="7935" fg:w="2"/><text x="67.8613%" y="623.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="67.6471%" y="597" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="7935" fg:w="2"/><text x="67.8613%" y="607.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="67.6471%" y="581" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="7935" fg:w="2"/><text x="67.8613%" y="591.50"></text></g><g><title>ext4_block_write_begin (3 samples, 0.03%)</title><rect x="67.6812%" y="661" width="0.0256%" height="15" fill="rgb(218,63,41)" fg:x="7939" fg:w="3"/><text x="67.8954%" y="671.50"></text></g><g><title>ext4_nonda_switch (2 samples, 0.02%)</title><rect x="67.7067%" y="661" width="0.0171%" height="15" fill="rgb(254,54,14)" fg:x="7942" fg:w="2"/><text x="67.9210%" y="671.50"></text></g><g><title>ext4_da_write_begin (17 samples, 0.14%)</title><rect x="67.6641%" y="677" width="0.1449%" height="15" fill="rgb(235,31,43)" fg:x="7937" fg:w="17"/><text x="67.8784%" y="687.50"></text></g><g><title>grab_cache_page_write_begin (10 samples, 0.09%)</title><rect x="67.7238%" y="661" width="0.0853%" height="15" fill="rgb(221,143,40)" fg:x="7944" fg:w="10"/><text x="67.9381%" y="671.50"></text></g><g><title>pagecache_get_page (8 samples, 0.07%)</title><rect x="67.7408%" y="645" width="0.0682%" height="15" fill="rgb(254,146,25)" fg:x="7946" fg:w="8"/><text x="67.9551%" y="655.50"></text></g><g><title>find_get_entry (6 samples, 0.05%)</title><rect x="67.7579%" y="629" width="0.0512%" height="15" fill="rgb(232,175,34)" fg:x="7948" fg:w="6"/><text x="67.9722%" y="639.50"></text></g><g><title>xas_load (6 samples, 0.05%)</title><rect x="67.7579%" y="613" width="0.0512%" height="15" fill="rgb(249,146,47)" fg:x="7948" fg:w="6"/><text x="67.9722%" y="623.50"></text></g><g><title>xas_start (2 samples, 0.02%)</title><rect x="67.7920%" y="597" width="0.0171%" height="15" fill="rgb(249,53,40)" fg:x="7952" fg:w="2"/><text x="68.0063%" y="607.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (3 samples, 0.03%)</title><rect x="67.8346%" y="645" width="0.0256%" height="15" fill="rgb(249,65,48)" fg:x="7957" fg:w="3"/><text x="68.0489%" y="655.50"></text></g><g><title>mark_buffer_dirty (2 samples, 0.02%)</title><rect x="67.8431%" y="629" width="0.0171%" height="15" fill="rgb(238,162,48)" fg:x="7958" fg:w="2"/><text x="68.0574%" y="639.50"></text></g><g><title>__mark_inode_dirty (4 samples, 0.03%)</title><rect x="67.8602%" y="645" width="0.0341%" height="15" fill="rgb(212,91,54)" fg:x="7960" fg:w="4"/><text x="68.0745%" y="655.50"></text></g><g><title>ext4_dirty_inode (4 samples, 0.03%)</title><rect x="67.8602%" y="629" width="0.0341%" height="15" fill="rgb(235,194,15)" fg:x="7960" fg:w="4"/><text x="68.0745%" y="639.50"></text></g><g><title>__ext4_mark_inode_dirty (4 samples, 0.03%)</title><rect x="67.8602%" y="613" width="0.0341%" height="15" fill="rgb(250,159,10)" fg:x="7960" fg:w="4"/><text x="68.0745%" y="623.50"></text></g><g><title>ext4_reserve_inode_write (3 samples, 0.03%)</title><rect x="67.8687%" y="597" width="0.0256%" height="15" fill="rgb(232,18,0)" fg:x="7961" fg:w="3"/><text x="68.0830%" y="607.50"></text></g><g><title>__ext4_journal_get_write_access (3 samples, 0.03%)</title><rect x="67.8687%" y="581" width="0.0256%" height="15" fill="rgb(219,28,3)" fg:x="7961" fg:w="3"/><text x="68.0830%" y="591.50"></text></g><g><title>jbd2_journal_get_write_access (2 samples, 0.02%)</title><rect x="67.8772%" y="565" width="0.0171%" height="15" fill="rgb(238,71,44)" fg:x="7962" fg:w="2"/><text x="68.0915%" y="575.50"></text></g><g><title>do_get_write_access (2 samples, 0.02%)</title><rect x="67.8772%" y="549" width="0.0171%" height="15" fill="rgb(249,66,7)" fg:x="7962" fg:w="2"/><text x="68.0915%" y="559.50"></text></g><g><title>out_of_line_wait_on_bit (2 samples, 0.02%)</title><rect x="67.8772%" y="533" width="0.0171%" height="15" fill="rgb(225,216,48)" fg:x="7962" fg:w="2"/><text x="68.0915%" y="543.50"></text></g><g><title>__wait_on_bit (2 samples, 0.02%)</title><rect x="67.8772%" y="517" width="0.0171%" height="15" fill="rgb(236,38,18)" fg:x="7962" fg:w="2"/><text x="68.0915%" y="527.50"></text></g><g><title>bit_wait_io (2 samples, 0.02%)</title><rect x="67.8772%" y="501" width="0.0171%" height="15" fill="rgb(250,143,40)" fg:x="7962" fg:w="2"/><text x="68.0915%" y="511.50"></text></g><g><title>io_schedule (2 samples, 0.02%)</title><rect x="67.8772%" y="485" width="0.0171%" height="15" fill="rgb(229,69,48)" fg:x="7962" fg:w="2"/><text x="68.0915%" y="495.50"></text></g><g><title>schedule (2 samples, 0.02%)</title><rect x="67.8772%" y="469" width="0.0171%" height="15" fill="rgb(213,215,35)" fg:x="7962" fg:w="2"/><text x="68.0915%" y="479.50"></text></g><g><title>__schedule (2 samples, 0.02%)</title><rect x="67.8772%" y="453" width="0.0171%" height="15" fill="rgb(207,40,26)" fg:x="7962" fg:w="2"/><text x="68.0915%" y="463.50"></text></g><g><title>ext4_da_write_end (11 samples, 0.09%)</title><rect x="67.8090%" y="677" width="0.0938%" height="15" fill="rgb(230,92,14)" fg:x="7954" fg:w="11"/><text x="68.0233%" y="687.50"></text></g><g><title>generic_write_end (9 samples, 0.08%)</title><rect x="67.8261%" y="661" width="0.0767%" height="15" fill="rgb(207,107,21)" fg:x="7956" fg:w="9"/><text x="68.0404%" y="671.50"></text></g><g><title>iov_iter_advance (2 samples, 0.02%)</title><rect x="67.9028%" y="677" width="0.0171%" height="15" fill="rgb(250,37,39)" fg:x="7965" fg:w="2"/><text x="68.1171%" y="687.50"></text></g><g><title>iov_iter_copy_from_user_atomic (5 samples, 0.04%)</title><rect x="67.9199%" y="677" width="0.0426%" height="15" fill="rgb(233,17,49)" fg:x="7967" fg:w="5"/><text x="68.1341%" y="687.50"></text></g><g><title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="67.9454%" y="661" width="0.0171%" height="15" fill="rgb(233,29,30)" fg:x="7970" fg:w="2"/><text x="68.1597%" y="671.50"></text></g><g><title>generic_perform_write (46 samples, 0.39%)</title><rect x="67.5959%" y="693" width="0.3922%" height="15" fill="rgb(218,161,27)" fg:x="7929" fg:w="46"/><text x="67.8102%" y="703.50"></text></g><g><title>iov_iter_fault_in_readable (3 samples, 0.03%)</title><rect x="67.9625%" y="677" width="0.0256%" height="15" fill="rgb(223,182,1)" fg:x="7972" fg:w="3"/><text x="68.1768%" y="687.50"></text></g><g><title>ext4_buffered_write_iter (139 samples, 1.18%)</title><rect x="66.8116%" y="709" width="1.1850%" height="15" fill="rgb(214,47,26)" fg:x="7837" fg:w="139"/><text x="67.0259%" y="719.50"></text></g><g><title>File::write (148 samples, 1.26%)</title><rect x="66.7434%" y="821" width="1.2617%" height="15" fill="rgb(221,56,14)" fg:x="7829" fg:w="148"/><text x="66.9577%" y="831.50"></text></g><g><title>__write (148 samples, 1.26%)</title><rect x="66.7434%" y="805" width="1.2617%" height="15" fill="rgb(227,101,21)" fg:x="7829" fg:w="148"/><text x="66.9577%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (148 samples, 1.26%)</title><rect x="66.7434%" y="789" width="1.2617%" height="15" fill="rgb(205,226,15)" fg:x="7829" fg:w="148"/><text x="66.9577%" y="799.50"></text></g><g><title>do_syscall_64 (148 samples, 1.26%)</title><rect x="66.7434%" y="773" width="1.2617%" height="15" fill="rgb(220,74,14)" fg:x="7829" fg:w="148"/><text x="66.9577%" y="783.50"></text></g><g><title>ksys_write (148 samples, 1.26%)</title><rect x="66.7434%" y="757" width="1.2617%" height="15" fill="rgb(223,155,43)" fg:x="7829" fg:w="148"/><text x="66.9577%" y="767.50"></text></g><g><title>vfs_write (146 samples, 1.24%)</title><rect x="66.7604%" y="741" width="1.2447%" height="15" fill="rgb(216,184,13)" fg:x="7831" fg:w="146"/><text x="66.9747%" y="751.50"></text></g><g><title>new_sync_write (140 samples, 1.19%)</title><rect x="66.8116%" y="725" width="1.1935%" height="15" fill="rgb(220,167,51)" fg:x="7837" fg:w="140"/><text x="67.0259%" y="735.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="68.0051%" y="821" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="7977" fg:w="2"/><text x="68.2194%" y="831.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.06%)</title><rect x="68.0563%" y="805" width="0.0597%" height="15" fill="rgb(247,113,52)" fg:x="7983" fg:w="7"/><text x="68.2706%" y="815.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="68.0904%" y="789" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="7987" fg:w="3"/><text x="68.3047%" y="799.50"></text></g><g><title>endsWith (3 samples, 0.03%)</title><rect x="68.1159%" y="805" width="0.0256%" height="15" fill="rgb(245,132,52)" fg:x="7990" fg:w="3"/><text x="68.3302%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3 samples, 0.03%)</title><rect x="68.1159%" y="789" width="0.0256%" height="15" fill="rgb(212,2,49)" fg:x="7990" fg:w="3"/><text x="68.3302%" y="799.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="68.1245%" y="773" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="7991" fg:w="2"/><text x="68.3388%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="68.1500%" y="805" width="0.0171%" height="15" fill="rgb(254,182,12)" fg:x="7994" fg:w="2"/><text x="68.3643%" y="815.50"></text></g><g><title>strftime (4 samples, 0.03%)</title><rect x="68.1756%" y="805" width="0.0341%" height="15" fill="rgb(212,94,34)" fg:x="7997" fg:w="4"/><text x="68.3899%" y="815.50"></text></g><g><title>getTime (27 samples, 0.23%)</title><rect x="68.0307%" y="821" width="0.2302%" height="15" fill="rgb(245,134,19)" fg:x="7980" fg:w="27"/><text x="68.2450%" y="831.50"></text></g><g><title>strftime_l (6 samples, 0.05%)</title><rect x="68.2097%" y="805" width="0.0512%" height="15" fill="rgb(247,36,6)" fg:x="8001" fg:w="6"/><text x="68.4240%" y="815.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.05%)</title><rect x="68.2097%" y="789" width="0.0512%" height="15" fill="rgb(247,113,52)" fg:x="8001" fg:w="6"/><text x="68.4240%" y="799.50"></text></g><g><title>highlight (5 samples, 0.04%)</title><rect x="68.2609%" y="821" width="0.0426%" height="15" fill="rgb(225,68,2)" fg:x="8007" fg:w="5"/><text x="68.4752%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_of (4 samples, 0.03%)</title><rect x="68.2694%" y="805" width="0.0341%" height="15" fill="rgb(212,119,18)" fg:x="8008" fg:w="4"/><text x="68.4837%" y="815.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="68.2694%" y="789" width="0.0341%" height="15" fill="rgb(247,113,52)" fg:x="8008" fg:w="4"/><text x="68.4837%" y="799.50"></text></g><g><title>__gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (8 samples, 0.07%)</title><rect x="68.3205%" y="805" width="0.0682%" height="15" fill="rgb(236,16,53)" fg:x="8014" fg:w="8"/><text x="68.5348%" y="815.50"></text></g><g><title>fwrite (5 samples, 0.04%)</title><rect x="68.3887%" y="805" width="0.0426%" height="15" fill="rgb(227,73,51)" fg:x="8022" fg:w="5"/><text x="68.6030%" y="815.50"></text></g><g><title>_IO_file_xsputn (3 samples, 0.03%)</title><rect x="68.4058%" y="789" width="0.0256%" height="15" fill="rgb(212,187,30)" fg:x="8024" fg:w="3"/><text x="68.6201%" y="799.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (16 samples, 0.14%)</title><rect x="68.3120%" y="821" width="0.1364%" height="15" fill="rgb(222,170,8)" fg:x="8013" fg:w="16"/><text x="68.5263%" y="831.50"></text></g><g><title>__check_object_size (4 samples, 0.03%)</title><rect x="68.6275%" y="613" width="0.0341%" height="15" fill="rgb(218,1,22)" fg:x="8050" fg:w="4"/><text x="68.8417%" y="623.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="68.6445%" y="597" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="8052" fg:w="2"/><text x="68.8588%" y="607.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="68.6445%" y="581" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="8052" fg:w="2"/><text x="68.8588%" y="591.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.02%)</title><rect x="68.6701%" y="613" width="0.0171%" height="15" fill="rgb(248,80,4)" fg:x="8055" fg:w="2"/><text x="68.8844%" y="623.50"></text></g><g><title>insert_work (2 samples, 0.02%)</title><rect x="68.7724%" y="533" width="0.0171%" height="15" fill="rgb(229,34,9)" fg:x="8067" fg:w="2"/><text x="68.9867%" y="543.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.02%)</title><rect x="68.7980%" y="501" width="0.0171%" height="15" fill="rgb(252,79,15)" fg:x="8070" fg:w="2"/><text x="69.0122%" y="511.50"></text></g><g><title>enqueue_entity (2 samples, 0.02%)</title><rect x="68.7980%" y="485" width="0.0171%" height="15" fill="rgb(206,193,49)" fg:x="8070" fg:w="2"/><text x="69.0122%" y="495.50"></text></g><g><title>ttwu_do_activate (7 samples, 0.06%)</title><rect x="68.7894%" y="517" width="0.0597%" height="15" fill="rgb(244,166,49)" fg:x="8069" fg:w="7"/><text x="69.0037%" y="527.50"></text></g><g><title>psi_task_change (4 samples, 0.03%)</title><rect x="68.8150%" y="501" width="0.0341%" height="15" fill="rgb(214,87,45)" fg:x="8072" fg:w="4"/><text x="69.0293%" y="511.50"></text></g><g><title>psi_group_change (3 samples, 0.03%)</title><rect x="68.8235%" y="485" width="0.0256%" height="15" fill="rgb(214,74,3)" fg:x="8073" fg:w="3"/><text x="69.0378%" y="495.50"></text></g><g><title>record_times (3 samples, 0.03%)</title><rect x="68.8235%" y="469" width="0.0256%" height="15" fill="rgb(235,137,9)" fg:x="8073" fg:w="3"/><text x="69.0378%" y="479.50"></text></g><g><title>__queue_work (11 samples, 0.09%)</title><rect x="68.7724%" y="549" width="0.0938%" height="15" fill="rgb(228,111,53)" fg:x="8067" fg:w="11"/><text x="68.9867%" y="559.50"></text></g><g><title>try_to_wake_up (9 samples, 0.08%)</title><rect x="68.7894%" y="533" width="0.0767%" height="15" fill="rgb(251,124,39)" fg:x="8069" fg:w="9"/><text x="69.0037%" y="543.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.02%)</title><rect x="68.8491%" y="517" width="0.0171%" height="15" fill="rgb(220,201,44)" fg:x="8076" fg:w="2"/><text x="69.0634%" y="527.50"></text></g><g><title>check_preempt_curr (2 samples, 0.02%)</title><rect x="68.8491%" y="501" width="0.0171%" height="15" fill="rgb(253,116,22)" fg:x="8076" fg:w="2"/><text x="69.0634%" y="511.50"></text></g><g><title>check_preempt_wakeup (2 samples, 0.02%)</title><rect x="68.8491%" y="485" width="0.0171%" height="15" fill="rgb(225,77,38)" fg:x="8076" fg:w="2"/><text x="69.0634%" y="495.50"></text></g><g><title>queue_work_on (13 samples, 0.11%)</title><rect x="68.7724%" y="565" width="0.1108%" height="15" fill="rgb(224,62,31)" fg:x="8067" fg:w="13"/><text x="68.9867%" y="575.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="68.8662%" y="549" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="8078" fg:w="2"/><text x="69.0804%" y="559.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="68.8662%" y="533" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="8078" fg:w="2"/><text x="69.0804%" y="543.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="68.8662%" y="517" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="8078" fg:w="2"/><text x="69.0804%" y="527.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="68.8662%" y="501" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="8078" fg:w="2"/><text x="69.0804%" y="511.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="68.8662%" y="485" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="8078" fg:w="2"/><text x="69.0804%" y="495.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="68.8662%" y="469" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="8078" fg:w="2"/><text x="69.0804%" y="479.50"></text></g><g><title>do_output_char (16 samples, 0.14%)</title><rect x="68.7553%" y="597" width="0.1364%" height="15" fill="rgb(228,220,0)" fg:x="8065" fg:w="16"/><text x="68.9696%" y="607.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (15 samples, 0.13%)</title><rect x="68.7639%" y="581" width="0.1279%" height="15" fill="rgb(229,98,5)" fg:x="8066" fg:w="15"/><text x="68.9781%" y="591.50"></text></g><g><title>native_read_msr (4 samples, 0.03%)</title><rect x="68.9173%" y="501" width="0.0341%" height="15" fill="rgb(218,43,9)" fg:x="8084" fg:w="4"/><text x="69.1316%" y="511.50"></text></g><g><title>__perf_event_task_sched_out (8 samples, 0.07%)</title><rect x="68.9088%" y="549" width="0.0682%" height="15" fill="rgb(206,30,45)" fg:x="8083" fg:w="8"/><text x="69.1231%" y="559.50"></text></g><g><title>amd_pmu_disable_all (7 samples, 0.06%)</title><rect x="68.9173%" y="533" width="0.0597%" height="15" fill="rgb(224,0,7)" fg:x="8084" fg:w="7"/><text x="69.1316%" y="543.50"></text></g><g><title>x86_pmu_disable_all (7 samples, 0.06%)</title><rect x="68.9173%" y="517" width="0.0597%" height="15" fill="rgb(235,111,43)" fg:x="8084" fg:w="7"/><text x="69.1316%" y="527.50"></text></g><g><title>native_write_msr (3 samples, 0.03%)</title><rect x="68.9514%" y="501" width="0.0256%" height="15" fill="rgb(220,53,36)" fg:x="8088" fg:w="3"/><text x="69.1657%" y="511.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="68.9770%" y="501" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="8091" fg:w="2"/><text x="69.1913%" y="511.50"></text></g><g><title>handle_edge_irq (2 samples, 0.02%)</title><rect x="68.9770%" y="485" width="0.0171%" height="15" fill="rgb(219,15,9)" fg:x="8091" fg:w="2"/><text x="69.1913%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="69.0452%" y="229" width="0.0171%" height="15" fill="rgb(226,88,38)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="239.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="69.0452%" y="213" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="223.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="69.0452%" y="197" width="0.0171%" height="15" fill="rgb(238,106,36)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="207.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="69.0452%" y="181" width="0.0171%" height="15" fill="rgb(224,11,5)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="191.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="69.0452%" y="165" width="0.0171%" height="15" fill="rgb(219,227,11)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="175.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="69.0452%" y="149" width="0.0171%" height="15" fill="rgb(232,116,37)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="159.50"></text></g><g><title>__qdisc_run (2 samples, 0.02%)</title><rect x="69.0452%" y="133" width="0.0171%" height="15" fill="rgb(252,144,25)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="143.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.02%)</title><rect x="69.0452%" y="117" width="0.0171%" height="15" fill="rgb(222,128,44)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="127.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="69.0452%" y="101" width="0.0171%" height="15" fill="rgb(251,86,39)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="111.50"></text></g><g><title>start_xmit (2 samples, 0.02%)</title><rect x="69.0452%" y="85" width="0.0171%" height="15" fill="rgb(211,140,13)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="95.50"></text></g><g><title>virtqueue_notify (2 samples, 0.02%)</title><rect x="69.0452%" y="69" width="0.0171%" height="15" fill="rgb(219,119,18)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="79.50"></text></g><g><title>vp_notify (2 samples, 0.02%)</title><rect x="69.0452%" y="53" width="0.0171%" height="15" fill="rgb(230,193,37)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="63.50"></text></g><g><title>iowrite16 (2 samples, 0.02%)</title><rect x="69.0452%" y="37" width="0.0171%" height="15" fill="rgb(218,139,37)" fg:x="8099" fg:w="2"/><text x="69.2595%" y="47.50"></text></g><g><title>napi_complete_done (5 samples, 0.04%)</title><rect x="69.0367%" y="405" width="0.0426%" height="15" fill="rgb(226,216,13)" fg:x="8098" fg:w="5"/><text x="69.2509%" y="415.50"></text></g><g><title>netif_receive_skb_list_internal (5 samples, 0.04%)</title><rect x="69.0367%" y="389" width="0.0426%" height="15" fill="rgb(216,153,44)" fg:x="8098" fg:w="5"/><text x="69.2509%" y="399.50"></text></g><g><title>__netif_receive_skb_list_core (5 samples, 0.04%)</title><rect x="69.0367%" y="373" width="0.0426%" height="15" fill="rgb(227,176,26)" fg:x="8098" fg:w="5"/><text x="69.2509%" y="383.50"></text></g><g><title>ip_list_rcv (5 samples, 0.04%)</title><rect x="69.0367%" y="357" width="0.0426%" height="15" fill="rgb(215,38,16)" fg:x="8098" fg:w="5"/><text x="69.2509%" y="367.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="69.0452%" y="341" width="0.0341%" height="15" fill="rgb(207,166,9)" fg:x="8099" fg:w="4"/><text x="69.2595%" y="351.50"></text></g><g><title>ip_sublist_rcv_finish (4 samples, 0.03%)</title><rect x="69.0452%" y="325" width="0.0341%" height="15" fill="rgb(223,178,14)" fg:x="8099" fg:w="4"/><text x="69.2595%" y="335.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="69.0452%" y="309" width="0.0341%" height="15" fill="rgb(220,94,29)" fg:x="8099" fg:w="4"/><text x="69.2595%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="69.0452%" y="293" width="0.0341%" height="15" fill="rgb(207,19,13)" fg:x="8099" fg:w="4"/><text x="69.2595%" y="303.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.03%)</title><rect x="69.0452%" y="277" width="0.0341%" height="15" fill="rgb(224,38,0)" fg:x="8099" fg:w="4"/><text x="69.2595%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.03%)</title><rect x="69.0452%" y="261" width="0.0341%" height="15" fill="rgb(228,220,18)" fg:x="8099" fg:w="4"/><text x="69.2595%" y="271.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.03%)</title><rect x="69.0452%" y="245" width="0.0341%" height="15" fill="rgb(224,50,47)" fg:x="8099" fg:w="4"/><text x="69.2595%" y="255.50"></text></g><g><title>tcp_ack (2 samples, 0.02%)</title><rect x="69.0622%" y="229" width="0.0171%" height="15" fill="rgb(213,228,3)" fg:x="8101" fg:w="2"/><text x="69.2765%" y="239.50"></text></g><g><title>virtnet_poll (6 samples, 0.05%)</title><rect x="69.0367%" y="421" width="0.0512%" height="15" fill="rgb(213,187,12)" fg:x="8098" fg:w="6"/><text x="69.2509%" y="431.50"></text></g><g><title>finish_task_switch (17 samples, 0.14%)</title><rect x="68.9770%" y="549" width="0.1449%" height="15" fill="rgb(214,214,33)" fg:x="8091" fg:w="17"/><text x="69.1913%" y="559.50"></text></g><g><title>asm_common_interrupt (17 samples, 0.14%)</title><rect x="68.9770%" y="533" width="0.1449%" height="15" fill="rgb(248,227,45)" fg:x="8091" fg:w="17"/><text x="69.1913%" y="543.50"></text></g><g><title>common_interrupt (17 samples, 0.14%)</title><rect x="68.9770%" y="517" width="0.1449%" height="15" fill="rgb(250,67,32)" fg:x="8091" fg:w="17"/><text x="69.1913%" y="527.50"></text></g><g><title>irq_exit_rcu (15 samples, 0.13%)</title><rect x="68.9940%" y="501" width="0.1279%" height="15" fill="rgb(240,18,12)" fg:x="8093" fg:w="15"/><text x="69.2083%" y="511.50"></text></g><g><title>do_softirq_own_stack (14 samples, 0.12%)</title><rect x="69.0026%" y="485" width="0.1194%" height="15" fill="rgb(223,89,53)" fg:x="8094" fg:w="14"/><text x="69.2168%" y="495.50"></text></g><g><title>asm_call_sysvec_on_stack (14 samples, 0.12%)</title><rect x="69.0026%" y="469" width="0.1194%" height="15" fill="rgb(208,184,36)" fg:x="8094" fg:w="14"/><text x="69.2168%" y="479.50"></text></g><g><title>__softirqentry_text_start (14 samples, 0.12%)</title><rect x="69.0026%" y="453" width="0.1194%" height="15" fill="rgb(249,91,22)" fg:x="8094" fg:w="14"/><text x="69.2168%" y="463.50"></text></g><g><title>net_rx_action (12 samples, 0.10%)</title><rect x="69.0196%" y="437" width="0.1023%" height="15" fill="rgb(231,11,52)" fg:x="8096" fg:w="12"/><text x="69.2339%" y="447.50"></text></g><g><title>virtnet_poll_tx (4 samples, 0.03%)</title><rect x="69.0878%" y="421" width="0.0341%" height="15" fill="rgb(251,188,47)" fg:x="8104" fg:w="4"/><text x="69.3021%" y="431.50"></text></g><g><title>free_old_xmit_skbs (3 samples, 0.03%)</title><rect x="69.0963%" y="405" width="0.0256%" height="15" fill="rgb(235,178,6)" fg:x="8105" fg:w="3"/><text x="69.3106%" y="415.50"></text></g><g><title>virtqueue_get_buf_ctx_split (2 samples, 0.02%)</title><rect x="69.1049%" y="389" width="0.0171%" height="15" fill="rgb(235,34,35)" fg:x="8106" fg:w="2"/><text x="69.3191%" y="399.50"></text></g><g><title>put_prev_entity (3 samples, 0.03%)</title><rect x="69.1219%" y="533" width="0.0256%" height="15" fill="rgb(223,18,39)" fg:x="8108" fg:w="3"/><text x="69.3362%" y="543.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.03%)</title><rect x="69.1219%" y="549" width="0.0341%" height="15" fill="rgb(247,213,54)" fg:x="8108" fg:w="4"/><text x="69.3362%" y="559.50"></text></g><g><title>mutex_lock (36 samples, 0.31%)</title><rect x="68.8917%" y="597" width="0.3069%" height="15" fill="rgb(218,205,15)" fg:x="8081" fg:w="36"/><text x="69.1060%" y="607.50"></text></g><g><title>_cond_resched (36 samples, 0.31%)</title><rect x="68.8917%" y="581" width="0.3069%" height="15" fill="rgb(240,228,18)" fg:x="8081" fg:w="36"/><text x="69.1060%" y="591.50"></text></g><g><title>__schedule (36 samples, 0.31%)</title><rect x="68.8917%" y="565" width="0.3069%" height="15" fill="rgb(207,40,26)" fg:x="8081" fg:w="36"/><text x="69.1060%" y="575.50"></text></g><g><title>psi_task_switch (5 samples, 0.04%)</title><rect x="69.1560%" y="549" width="0.0426%" height="15" fill="rgb(233,176,51)" fg:x="8112" fg:w="5"/><text x="69.3703%" y="559.50"></text></g><g><title>psi_group_change (4 samples, 0.03%)</title><rect x="69.1645%" y="533" width="0.0341%" height="15" fill="rgb(214,74,3)" fg:x="8113" fg:w="4"/><text x="69.3788%" y="543.50"></text></g><g><title>process_echoes (4 samples, 0.03%)</title><rect x="69.1986%" y="597" width="0.0341%" height="15" fill="rgb(227,159,10)" fg:x="8117" fg:w="4"/><text x="69.4129%" y="607.50"></text></g><g><title>tty_hung_up_p (2 samples, 0.02%)</title><rect x="69.2413%" y="597" width="0.0171%" height="15" fill="rgb(223,215,9)" fg:x="8122" fg:w="2"/><text x="69.4555%" y="607.50"></text></g><g><title>__radix_tree_lookup (2 samples, 0.02%)</title><rect x="69.3436%" y="549" width="0.0171%" height="15" fill="rgb(250,213,26)" fg:x="8134" fg:w="2"/><text x="69.5578%" y="559.50"></text></g><g><title>insert_work (2 samples, 0.02%)</title><rect x="69.3606%" y="549" width="0.0171%" height="15" fill="rgb(229,34,9)" fg:x="8136" fg:w="2"/><text x="69.5749%" y="559.50"></text></g><g><title>enqueue_task_fair (14 samples, 0.12%)</title><rect x="69.3862%" y="517" width="0.1194%" height="15" fill="rgb(252,79,15)" fg:x="8139" fg:w="14"/><text x="69.6005%" y="527.50"></text></g><g><title>enqueue_entity (9 samples, 0.08%)</title><rect x="69.4288%" y="501" width="0.0767%" height="15" fill="rgb(206,193,49)" fg:x="8144" fg:w="9"/><text x="69.6431%" y="511.50"></text></g><g><title>update_curr (6 samples, 0.05%)</title><rect x="69.4544%" y="485" width="0.0512%" height="15" fill="rgb(242,65,24)" fg:x="8147" fg:w="6"/><text x="69.6687%" y="495.50"></text></g><g><title>ttwu_do_activate (16 samples, 0.14%)</title><rect x="69.3862%" y="533" width="0.1364%" height="15" fill="rgb(244,166,49)" fg:x="8139" fg:w="16"/><text x="69.6005%" y="543.50"></text></g><g><title>psi_task_change (2 samples, 0.02%)</title><rect x="69.5055%" y="517" width="0.0171%" height="15" fill="rgb(214,87,45)" fg:x="8153" fg:w="2"/><text x="69.7198%" y="527.50"></text></g><g><title>__queue_work (29 samples, 0.25%)</title><rect x="69.3009%" y="565" width="0.2472%" height="15" fill="rgb(228,111,53)" fg:x="8129" fg:w="29"/><text x="69.5152%" y="575.50"></text></g><g><title>try_to_wake_up (20 samples, 0.17%)</title><rect x="69.3777%" y="549" width="0.1705%" height="15" fill="rgb(251,124,39)" fg:x="8138" fg:w="20"/><text x="69.5919%" y="559.50"></text></g><g><title>ttwu_do_wakeup (3 samples, 0.03%)</title><rect x="69.5226%" y="533" width="0.0256%" height="15" fill="rgb(220,201,44)" fg:x="8155" fg:w="3"/><text x="69.7369%" y="543.50"></text></g><g><title>check_preempt_curr (3 samples, 0.03%)</title><rect x="69.5226%" y="517" width="0.0256%" height="15" fill="rgb(253,116,22)" fg:x="8155" fg:w="3"/><text x="69.7369%" y="527.50"></text></g><g><title>check_preempt_wakeup (2 samples, 0.02%)</title><rect x="69.5311%" y="501" width="0.0171%" height="15" fill="rgb(225,77,38)" fg:x="8156" fg:w="2"/><text x="69.7454%" y="511.50"></text></g><g><title>queue_work_on (36 samples, 0.31%)</title><rect x="69.2754%" y="581" width="0.3069%" height="15" fill="rgb(224,62,31)" fg:x="8126" fg:w="36"/><text x="69.4896%" y="591.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.03%)</title><rect x="69.5482%" y="565" width="0.0341%" height="15" fill="rgb(248,227,45)" fg:x="8158" fg:w="4"/><text x="69.7625%" y="575.50"></text></g><g><title>common_interrupt (4 samples, 0.03%)</title><rect x="69.5482%" y="549" width="0.0341%" height="15" fill="rgb(250,67,32)" fg:x="8158" fg:w="4"/><text x="69.7625%" y="559.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="69.5482%" y="533" width="0.0341%" height="15" fill="rgb(240,18,12)" fg:x="8158" fg:w="4"/><text x="69.7625%" y="543.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.03%)</title><rect x="69.5482%" y="517" width="0.0341%" height="15" fill="rgb(223,89,53)" fg:x="8158" fg:w="4"/><text x="69.7625%" y="527.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="69.5482%" y="501" width="0.0341%" height="15" fill="rgb(208,184,36)" fg:x="8158" fg:w="4"/><text x="69.7625%" y="511.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="69.5482%" y="485" width="0.0341%" height="15" fill="rgb(249,91,22)" fg:x="8158" fg:w="4"/><text x="69.7625%" y="495.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="69.5567%" y="469" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="479.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="69.5567%" y="453" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="463.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="69.5567%" y="437" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="447.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="69.5567%" y="421" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="431.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="69.5567%" y="405" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="415.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="69.5567%" y="389" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="399.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="69.5567%" y="373" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="383.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.03%)</title><rect x="69.5567%" y="357" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="367.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.03%)</title><rect x="69.5567%" y="341" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="69.5567%" y="325" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="335.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="69.5567%" y="309" width="0.0256%" height="15" fill="rgb(224,38,0)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="319.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="69.5567%" y="293" width="0.0256%" height="15" fill="rgb(228,220,18)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="303.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.03%)</title><rect x="69.5567%" y="277" width="0.0256%" height="15" fill="rgb(224,50,47)" fg:x="8159" fg:w="3"/><text x="69.7710%" y="287.50"></text></g><g><title>tcp_ack (2 samples, 0.02%)</title><rect x="69.5652%" y="261" width="0.0171%" height="15" fill="rgb(213,228,3)" fg:x="8160" fg:w="2"/><text x="69.7795%" y="271.50"></text></g><g><title>__kfree_skb (2 samples, 0.02%)</title><rect x="69.5652%" y="245" width="0.0171%" height="15" fill="rgb(208,195,26)" fg:x="8160" fg:w="2"/><text x="69.7795%" y="255.50"></text></g><g><title>kfree (2 samples, 0.02%)</title><rect x="69.5652%" y="229" width="0.0171%" height="15" fill="rgb(222,6,37)" fg:x="8160" fg:w="2"/><text x="69.7795%" y="239.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (40 samples, 0.34%)</title><rect x="69.2583%" y="597" width="0.3410%" height="15" fill="rgb(229,98,5)" fg:x="8124" fg:w="40"/><text x="69.4726%" y="607.50"></text></g><g><title>tty_insert_flip_string_fixed_flag (2 samples, 0.02%)</title><rect x="69.5823%" y="581" width="0.0171%" height="15" fill="rgb(227,10,10)" fg:x="8162" fg:w="2"/><text x="69.7966%" y="591.50"></text></g><g><title>n_tty_write (106 samples, 0.90%)</title><rect x="68.7042%" y="613" width="0.9037%" height="15" fill="rgb(240,0,6)" fg:x="8059" fg:w="106"/><text x="68.9185%" y="623.50"></text></g><g><title>new_sync_write (126 samples, 1.07%)</title><rect x="68.5592%" y="645" width="1.0742%" height="15" fill="rgb(220,167,51)" fg:x="8042" fg:w="126"/><text x="68.7735%" y="655.50"></text></g><g><title>file_tty_write.constprop.0 (124 samples, 1.06%)</title><rect x="68.5763%" y="629" width="1.0571%" height="15" fill="rgb(225,84,50)" fg:x="8044" fg:w="124"/><text x="68.7906%" y="639.50"></text></g><g><title>tty_paranoia_check (3 samples, 0.03%)</title><rect x="69.6078%" y="613" width="0.0256%" height="15" fill="rgb(218,36,31)" fg:x="8165" fg:w="3"/><text x="69.8221%" y="623.50"></text></g><g><title>ksys_write (130 samples, 1.11%)</title><rect x="68.5337%" y="677" width="1.1083%" height="15" fill="rgb(223,155,43)" fg:x="8039" fg:w="130"/><text x="68.7480%" y="687.50"></text></g><g><title>vfs_write (130 samples, 1.11%)</title><rect x="68.5337%" y="661" width="1.1083%" height="15" fill="rgb(216,184,13)" fg:x="8039" fg:w="130"/><text x="68.7480%" y="671.50"></text></g><g><title>do_syscall_64 (132 samples, 1.13%)</title><rect x="68.5251%" y="693" width="1.1253%" height="15" fill="rgb(220,74,14)" fg:x="8038" fg:w="132"/><text x="68.7394%" y="703.50"></text></g><g><title>native_read_msr (4 samples, 0.03%)</title><rect x="69.6590%" y="581" width="0.0341%" height="15" fill="rgb(218,43,9)" fg:x="8171" fg:w="4"/><text x="69.8733%" y="591.50"></text></g><g><title>__perf_event_task_sched_out (5 samples, 0.04%)</title><rect x="69.6590%" y="629" width="0.0426%" height="15" fill="rgb(206,30,45)" fg:x="8171" fg:w="5"/><text x="69.8733%" y="639.50"></text></g><g><title>amd_pmu_disable_all (5 samples, 0.04%)</title><rect x="69.6590%" y="613" width="0.0426%" height="15" fill="rgb(224,0,7)" fg:x="8171" fg:w="5"/><text x="69.8733%" y="623.50"></text></g><g><title>x86_pmu_disable_all (5 samples, 0.04%)</title><rect x="69.6590%" y="597" width="0.0426%" height="15" fill="rgb(235,111,43)" fg:x="8171" fg:w="5"/><text x="69.8733%" y="607.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="69.7101%" y="581" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="8177" fg:w="2"/><text x="69.9244%" y="591.50"></text></g><g><title>handle_edge_irq (2 samples, 0.02%)</title><rect x="69.7101%" y="565" width="0.0171%" height="15" fill="rgb(219,15,9)" fg:x="8177" fg:w="2"/><text x="69.9244%" y="575.50"></text></g><g><title>handle_irq_event (2 samples, 0.02%)</title><rect x="69.7101%" y="549" width="0.0171%" height="15" fill="rgb(209,73,52)" fg:x="8177" fg:w="2"/><text x="69.9244%" y="559.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="69.7357%" y="325" width="0.0171%" height="15" fill="rgb(224,50,47)" fg:x="8180" fg:w="2"/><text x="69.9500%" y="335.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="69.7357%" y="501" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="8180" fg:w="3"/><text x="69.9500%" y="511.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="69.7357%" y="485" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="8180" fg:w="3"/><text x="69.9500%" y="495.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="69.7357%" y="469" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="8180" fg:w="3"/><text x="69.9500%" y="479.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="69.7357%" y="453" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="8180" fg:w="3"/><text x="69.9500%" y="463.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="69.7357%" y="437" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="8180" fg:w="3"/><text x="69.9500%" y="447.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="69.7357%" y="421" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="8180" fg:w="3"/><text x="69.9500%" y="431.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.03%)</title><rect x="69.7357%" y="405" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="8180" fg:w="3"/><text x="69.9500%" y="415.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.03%)</title><rect x="69.7357%" y="389" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="8180" fg:w="3"/><text x="69.9500%" y="399.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="69.7357%" y="373" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="8180" fg:w="3"/><text x="69.9500%" y="383.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="69.7357%" y="357" width="0.0256%" height="15" fill="rgb(224,38,0)" fg:x="8180" fg:w="3"/><text x="69.9500%" y="367.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="69.7357%" y="341" width="0.0256%" height="15" fill="rgb(228,220,18)" fg:x="8180" fg:w="3"/><text x="69.9500%" y="351.50"></text></g><g><title>finish_task_switch (10 samples, 0.09%)</title><rect x="69.7016%" y="629" width="0.0853%" height="15" fill="rgb(214,214,33)" fg:x="8176" fg:w="10"/><text x="69.9159%" y="639.50"></text></g><g><title>asm_common_interrupt (9 samples, 0.08%)</title><rect x="69.7101%" y="613" width="0.0767%" height="15" fill="rgb(248,227,45)" fg:x="8177" fg:w="9"/><text x="69.9244%" y="623.50"></text></g><g><title>common_interrupt (9 samples, 0.08%)</title><rect x="69.7101%" y="597" width="0.0767%" height="15" fill="rgb(250,67,32)" fg:x="8177" fg:w="9"/><text x="69.9244%" y="607.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.06%)</title><rect x="69.7272%" y="581" width="0.0597%" height="15" fill="rgb(240,18,12)" fg:x="8179" fg:w="7"/><text x="69.9415%" y="591.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.06%)</title><rect x="69.7272%" y="565" width="0.0597%" height="15" fill="rgb(223,89,53)" fg:x="8179" fg:w="7"/><text x="69.9415%" y="575.50"></text></g><g><title>asm_call_sysvec_on_stack (7 samples, 0.06%)</title><rect x="69.7272%" y="549" width="0.0597%" height="15" fill="rgb(208,184,36)" fg:x="8179" fg:w="7"/><text x="69.9415%" y="559.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.06%)</title><rect x="69.7272%" y="533" width="0.0597%" height="15" fill="rgb(249,91,22)" fg:x="8179" fg:w="7"/><text x="69.9415%" y="543.50"></text></g><g><title>net_rx_action (6 samples, 0.05%)</title><rect x="69.7357%" y="517" width="0.0512%" height="15" fill="rgb(231,11,52)" fg:x="8180" fg:w="6"/><text x="69.9500%" y="527.50"></text></g><g><title>virtnet_poll_tx (3 samples, 0.03%)</title><rect x="69.7613%" y="501" width="0.0256%" height="15" fill="rgb(251,188,47)" fg:x="8183" fg:w="3"/><text x="69.9756%" y="511.50"></text></g><g><title>free_old_xmit_skbs (3 samples, 0.03%)</title><rect x="69.7613%" y="485" width="0.0256%" height="15" fill="rgb(235,178,6)" fg:x="8183" fg:w="3"/><text x="69.9756%" y="495.50"></text></g><g><title>virtqueue_get_buf_ctx_split (2 samples, 0.02%)</title><rect x="69.7698%" y="469" width="0.0171%" height="15" fill="rgb(235,34,35)" fg:x="8184" fg:w="2"/><text x="69.9841%" y="479.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.03%)</title><rect x="69.7869%" y="629" width="0.0341%" height="15" fill="rgb(247,213,54)" fg:x="8186" fg:w="4"/><text x="70.0012%" y="639.50"></text></g><g><title>psi_task_switch (2 samples, 0.02%)</title><rect x="69.8210%" y="629" width="0.0171%" height="15" fill="rgb(233,176,51)" fg:x="8190" fg:w="2"/><text x="70.0353%" y="639.50"></text></g><g><title>psi_group_change (2 samples, 0.02%)</title><rect x="69.8210%" y="613" width="0.0171%" height="15" fill="rgb(214,74,3)" fg:x="8190" fg:w="2"/><text x="70.0353%" y="623.50"></text></g><g><title>[libc-2.31.so] (159 samples, 1.36%)</title><rect x="68.4910%" y="757" width="1.3555%" height="15" fill="rgb(247,113,52)" fg:x="8034" fg:w="159"/><text x="68.7053%" y="767.50"></text></g><g><title>_IO_file_write (159 samples, 1.36%)</title><rect x="68.4910%" y="741" width="1.3555%" height="15" fill="rgb(222,148,11)" fg:x="8034" fg:w="159"/><text x="68.7053%" y="751.50"></text></g><g><title>__write (158 samples, 1.35%)</title><rect x="68.4996%" y="725" width="1.3470%" height="15" fill="rgb(227,101,21)" fg:x="8035" fg:w="158"/><text x="68.7139%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (155 samples, 1.32%)</title><rect x="68.5251%" y="709" width="1.3214%" height="15" fill="rgb(205,226,15)" fg:x="8038" fg:w="155"/><text x="68.7394%" y="719.50"></text></g><g><title>syscall_exit_to_user_mode (23 samples, 0.20%)</title><rect x="69.6505%" y="693" width="0.1961%" height="15" fill="rgb(215,101,28)" fg:x="8170" fg:w="23"/><text x="69.8648%" y="703.50"></text></g><g><title>exit_to_user_mode_prepare (23 samples, 0.20%)</title><rect x="69.6505%" y="677" width="0.1961%" height="15" fill="rgb(240,77,26)" fg:x="8170" fg:w="23"/><text x="69.8648%" y="687.50"></text></g><g><title>schedule (23 samples, 0.20%)</title><rect x="69.6505%" y="661" width="0.1961%" height="15" fill="rgb(213,215,35)" fg:x="8170" fg:w="23"/><text x="69.8648%" y="671.50"></text></g><g><title>__schedule (23 samples, 0.20%)</title><rect x="69.6505%" y="645" width="0.1961%" height="15" fill="rgb(207,40,26)" fg:x="8170" fg:w="23"/><text x="69.8648%" y="655.50"></text></g><g><title>_IO_file_overflow (163 samples, 1.39%)</title><rect x="68.4655%" y="789" width="1.3896%" height="15" fill="rgb(248,85,26)" fg:x="8031" fg:w="163"/><text x="68.6798%" y="799.50"></text></g><g><title>_IO_do_write (162 samples, 1.38%)</title><rect x="68.4740%" y="773" width="1.3811%" height="15" fill="rgb(247,226,32)" fg:x="8032" fg:w="162"/><text x="68.6883%" y="783.50"></text></g><g><title>std::endl&lt;char, std::char_traits&lt;char&gt; &gt; (166 samples, 1.42%)</title><rect x="68.4484%" y="821" width="1.4152%" height="15" fill="rgb(246,112,30)" fg:x="8029" fg:w="166"/><text x="68.6627%" y="831.50"></text></g><g><title>std::ostream::put (165 samples, 1.41%)</title><rect x="68.4569%" y="805" width="1.4066%" height="15" fill="rgb(226,61,44)" fg:x="8030" fg:w="165"/><text x="68.6712%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (7 samples, 0.06%)</title><rect x="69.8977%" y="805" width="0.0597%" height="15" fill="rgb(216,50,33)" fg:x="8199" fg:w="7"/><text x="70.1120%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (6 samples, 0.05%)</title><rect x="69.9062%" y="789" width="0.0512%" height="15" fill="rgb(250,46,35)" fg:x="8200" fg:w="6"/><text x="70.1205%" y="799.50"></text></g><g><title>operator new (5 samples, 0.04%)</title><rect x="69.9147%" y="773" width="0.0426%" height="15" fill="rgb(214,91,1)" fg:x="8201" fg:w="5"/><text x="70.1290%" y="783.50"></text></g><g><title>__libc_malloc (5 samples, 0.04%)</title><rect x="69.9147%" y="757" width="0.0426%" height="15" fill="rgb(232,24,50)" fg:x="8201" fg:w="5"/><text x="70.1290%" y="767.50"></text></g><g><title>operator new (3 samples, 0.03%)</title><rect x="69.9744%" y="789" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="8208" fg:w="3"/><text x="70.1887%" y="799.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="69.9744%" y="773" width="0.0256%" height="15" fill="rgb(232,24,50)" fg:x="8208" fg:w="3"/><text x="70.1887%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.02%)</title><rect x="70.0000%" y="789" width="0.0171%" height="15" fill="rgb(246,68,35)" fg:x="8211" fg:w="2"/><text x="70.2143%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (8 samples, 0.07%)</title><rect x="69.9574%" y="805" width="0.0682%" height="15" fill="rgb(254,182,12)" fg:x="8206" fg:w="8"/><text x="70.1717%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (3 samples, 0.03%)</title><rect x="70.0256%" y="805" width="0.0256%" height="15" fill="rgb(209,28,51)" fg:x="8214" fg:w="3"/><text x="70.2399%" y="815.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="70.0341%" y="789" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="8215" fg:w="2"/><text x="70.2484%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (2 samples, 0.02%)</title><rect x="70.0512%" y="805" width="0.0171%" height="15" fill="rgb(211,92,40)" fg:x="8217" fg:w="2"/><text x="70.2654%" y="815.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="70.0512%" y="789" width="0.0171%" height="15" fill="rgb(214,91,1)" fg:x="8217" fg:w="2"/><text x="70.2654%" y="799.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="70.0512%" y="773" width="0.0171%" height="15" fill="rgb(232,24,50)" fg:x="8217" fg:w="2"/><text x="70.2654%" y="783.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="70.0512%" y="757" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="8217" fg:w="2"/><text x="70.2654%" y="767.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (25 samples, 0.21%)</title><rect x="69.8721%" y="821" width="0.2131%" height="15" fill="rgb(226,32,40)" fg:x="8196" fg:w="25"/><text x="70.0864%" y="831.50"></text></g><g><title>std::char_traits&lt;char&gt;::length (2 samples, 0.02%)</title><rect x="70.0682%" y="805" width="0.0171%" height="15" fill="rgb(231,225,8)" fg:x="8219" fg:w="2"/><text x="70.2825%" y="815.50"></text></g><g><title>Log::write (407 samples, 3.47%)</title><rect x="66.6837%" y="837" width="3.4697%" height="15" fill="rgb(230,27,54)" fg:x="7822" fg:w="407"/><text x="66.8980%" y="847.50">Log:..</text></g><g><title>std::ostream::flush (8 samples, 0.07%)</title><rect x="70.0853%" y="821" width="0.0682%" height="15" fill="rgb(232,177,40)" fg:x="8221" fg:w="8"/><text x="70.2995%" y="831.50"></text></g><g><title>fflush (5 samples, 0.04%)</title><rect x="70.1108%" y="805" width="0.0426%" height="15" fill="rgb(252,87,49)" fg:x="8224" fg:w="5"/><text x="70.3251%" y="815.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="70.1535%" y="805" width="0.0171%" height="15" fill="rgb(221,14,53)" fg:x="8229" fg:w="2"/><text x="70.3677%" y="815.50"></text></g><g><title>Uri::~Uri (3 samples, 0.03%)</title><rect x="70.1535%" y="821" width="0.0256%" height="15" fill="rgb(235,113,14)" fg:x="8229" fg:w="3"/><text x="70.3677%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (3 samples, 0.03%)</title><rect x="70.1961%" y="773" width="0.0256%" height="15" fill="rgb(232,77,52)" fg:x="8234" fg:w="3"/><text x="70.4104%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_put_node (2 samples, 0.02%)</title><rect x="70.2046%" y="757" width="0.0171%" height="15" fill="rgb(252,2,36)" fg:x="8235" fg:w="2"/><text x="70.4189%" y="767.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (2 samples, 0.02%)</title><rect x="70.2046%" y="741" width="0.0171%" height="15" fill="rgb(225,137,2)" fg:x="8235" fg:w="2"/><text x="70.4189%" y="751.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (2 samples, 0.02%)</title><rect x="70.2046%" y="725" width="0.0171%" height="15" fill="rgb(230,25,20)" fg:x="8235" fg:w="2"/><text x="70.4189%" y="735.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="70.2046%" y="709" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="8235" fg:w="2"/><text x="70.4189%" y="719.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy (2 samples, 0.02%)</title><rect x="70.2217%" y="725" width="0.0171%" height="15" fill="rgb(242,155,54)" fg:x="8237" fg:w="2"/><text x="70.4359%" y="735.50"></text></g><g><title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (2 samples, 0.02%)</title><rect x="70.2217%" y="709" width="0.0171%" height="15" fill="rgb(253,223,45)" fg:x="8237" fg:w="2"/><text x="70.4359%" y="719.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="70.2217%" y="693" width="0.0171%" height="15" fill="rgb(221,14,53)" fg:x="8237" fg:w="2"/><text x="70.4359%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (3 samples, 0.03%)</title><rect x="70.2217%" y="757" width="0.0256%" height="15" fill="rgb(232,77,52)" fg:x="8237" fg:w="3"/><text x="70.4359%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (3 samples, 0.03%)</title><rect x="70.2217%" y="741" width="0.0256%" height="15" fill="rgb(219,87,14)" fg:x="8237" fg:w="3"/><text x="70.4359%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (5 samples, 0.04%)</title><rect x="70.2217%" y="773" width="0.0426%" height="15" fill="rgb(253,113,26)" fg:x="8237" fg:w="5"/><text x="70.4359%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (2 samples, 0.02%)</title><rect x="70.2472%" y="757" width="0.0171%" height="15" fill="rgb(214,45,37)" fg:x="8240" fg:w="2"/><text x="70.4615%" y="767.50"></text></g><g><title>Request::~Request (15 samples, 0.13%)</title><rect x="70.1535%" y="837" width="0.1279%" height="15" fill="rgb(228,65,47)" fg:x="8229" fg:w="15"/><text x="70.3677%" y="847.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~map (11 samples, 0.09%)</title><rect x="70.1876%" y="821" width="0.0938%" height="15" fill="rgb(212,16,20)" fg:x="8233" fg:w="11"/><text x="70.4018%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (11 samples, 0.09%)</title><rect x="70.1876%" y="805" width="0.0938%" height="15" fill="rgb(248,132,45)" fg:x="8233" fg:w="11"/><text x="70.4018%" y="815.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (10 samples, 0.09%)</title><rect x="70.1961%" y="789" width="0.0853%" height="15" fill="rgb(253,113,26)" fg:x="8234" fg:w="10"/><text x="70.4104%" y="799.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (2 samples, 0.02%)</title><rect x="70.2643%" y="773" width="0.0171%" height="15" fill="rgb(214,45,37)" fg:x="8242" fg:w="2"/><text x="70.4786%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (4 samples, 0.03%)</title><rect x="70.2984%" y="757" width="0.0341%" height="15" fill="rgb(219,87,14)" fg:x="8246" fg:w="4"/><text x="70.5127%" y="767.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy (4 samples, 0.03%)</title><rect x="70.2984%" y="741" width="0.0341%" height="15" fill="rgb(242,155,54)" fg:x="8246" fg:w="4"/><text x="70.5127%" y="751.50"></text></g><g><title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (4 samples, 0.03%)</title><rect x="70.2984%" y="725" width="0.0341%" height="15" fill="rgb(253,223,45)" fg:x="8246" fg:w="4"/><text x="70.5127%" y="735.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3 samples, 0.03%)</title><rect x="70.3069%" y="709" width="0.0256%" height="15" fill="rgb(216,41,4)" fg:x="8247" fg:w="3"/><text x="70.5212%" y="719.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (6 samples, 0.05%)</title><rect x="70.2984%" y="773" width="0.0512%" height="15" fill="rgb(232,77,52)" fg:x="8246" fg:w="6"/><text x="70.5127%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_put_node (2 samples, 0.02%)</title><rect x="70.3325%" y="757" width="0.0171%" height="15" fill="rgb(252,2,36)" fg:x="8250" fg:w="2"/><text x="70.5468%" y="767.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (2 samples, 0.02%)</title><rect x="70.3325%" y="741" width="0.0171%" height="15" fill="rgb(225,137,2)" fg:x="8250" fg:w="2"/><text x="70.5468%" y="751.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (2 samples, 0.02%)</title><rect x="70.3325%" y="725" width="0.0171%" height="15" fill="rgb(230,25,20)" fg:x="8250" fg:w="2"/><text x="70.5468%" y="735.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (3 samples, 0.03%)</title><rect x="70.3495%" y="757" width="0.0256%" height="15" fill="rgb(232,77,52)" fg:x="8252" fg:w="3"/><text x="70.5638%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (3 samples, 0.03%)</title><rect x="70.3495%" y="741" width="0.0256%" height="15" fill="rgb(219,87,14)" fg:x="8252" fg:w="3"/><text x="70.5638%" y="751.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy (2 samples, 0.02%)</title><rect x="70.3581%" y="725" width="0.0171%" height="15" fill="rgb(242,155,54)" fg:x="8253" fg:w="2"/><text x="70.5723%" y="735.50"></text></g><g><title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (2 samples, 0.02%)</title><rect x="70.3581%" y="709" width="0.0171%" height="15" fill="rgb(253,223,45)" fg:x="8253" fg:w="2"/><text x="70.5723%" y="719.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="70.3581%" y="693" width="0.0171%" height="15" fill="rgb(221,14,53)" fg:x="8253" fg:w="2"/><text x="70.5723%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (2 samples, 0.02%)</title><rect x="70.3751%" y="725" width="0.0171%" height="15" fill="rgb(219,87,14)" fg:x="8255" fg:w="2"/><text x="70.5894%" y="735.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (4 samples, 0.03%)</title><rect x="70.3751%" y="757" width="0.0341%" height="15" fill="rgb(253,113,26)" fg:x="8255" fg:w="4"/><text x="70.5894%" y="767.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (4 samples, 0.03%)</title><rect x="70.3751%" y="741" width="0.0341%" height="15" fill="rgb(232,77,52)" fg:x="8255" fg:w="4"/><text x="70.5894%" y="751.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_put_node (2 samples, 0.02%)</title><rect x="70.3922%" y="725" width="0.0171%" height="15" fill="rgb(252,2,36)" fg:x="8257" fg:w="2"/><text x="70.6064%" y="735.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (2 samples, 0.02%)</title><rect x="70.3922%" y="709" width="0.0171%" height="15" fill="rgb(225,137,2)" fg:x="8257" fg:w="2"/><text x="70.6064%" y="719.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (2 samples, 0.02%)</title><rect x="70.3922%" y="693" width="0.0171%" height="15" fill="rgb(230,25,20)" fg:x="8257" fg:w="2"/><text x="70.6064%" y="703.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (9 samples, 0.08%)</title><rect x="70.3495%" y="773" width="0.0767%" height="15" fill="rgb(253,113,26)" fg:x="8252" fg:w="9"/><text x="70.5638%" y="783.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (2 samples, 0.02%)</title><rect x="70.4092%" y="757" width="0.0171%" height="15" fill="rgb(214,45,37)" fg:x="8259" fg:w="2"/><text x="70.6235%" y="767.50"></text></g><g><title>Response::~Response (20 samples, 0.17%)</title><rect x="70.2813%" y="837" width="0.1705%" height="15" fill="rgb(251,130,18)" fg:x="8244" fg:w="20"/><text x="70.4956%" y="847.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~map (20 samples, 0.17%)</title><rect x="70.2813%" y="821" width="0.1705%" height="15" fill="rgb(212,16,20)" fg:x="8244" fg:w="20"/><text x="70.4956%" y="831.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (19 samples, 0.16%)</title><rect x="70.2899%" y="805" width="0.1620%" height="15" fill="rgb(248,132,45)" fg:x="8245" fg:w="19"/><text x="70.5041%" y="815.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (18 samples, 0.15%)</title><rect x="70.2984%" y="789" width="0.1535%" height="15" fill="rgb(253,113,26)" fg:x="8246" fg:w="18"/><text x="70.5127%" y="799.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (3 samples, 0.03%)</title><rect x="70.4263%" y="773" width="0.0256%" height="15" fill="rgb(214,45,37)" fg:x="8261" fg:w="3"/><text x="70.6405%" y="783.50"></text></g><g><title>cfree (4 samples, 0.03%)</title><rect x="70.4604%" y="837" width="0.0341%" height="15" fill="rgb(221,14,53)" fg:x="8265" fg:w="4"/><text x="70.6746%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.02%)</title><rect x="70.5030%" y="837" width="0.0171%" height="15" fill="rgb(244,92,22)" fg:x="8270" fg:w="2"/><text x="70.7173%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (6 samples, 0.05%)</title><rect x="70.5200%" y="837" width="0.0512%" height="15" fill="rgb(216,41,4)" fg:x="8272" fg:w="6"/><text x="70.7343%" y="847.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (6 samples, 0.05%)</title><rect x="70.5882%" y="821" width="0.0512%" height="15" fill="rgb(216,50,33)" fg:x="8280" fg:w="6"/><text x="70.8025%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.03%)</title><rect x="70.6053%" y="805" width="0.0341%" height="15" fill="rgb(250,46,35)" fg:x="8282" fg:w="4"/><text x="70.8196%" y="815.50"></text></g><g><title>operator new (4 samples, 0.03%)</title><rect x="70.6053%" y="789" width="0.0341%" height="15" fill="rgb(214,91,1)" fg:x="8282" fg:w="4"/><text x="70.8196%" y="799.50"></text></g><g><title>__libc_malloc (4 samples, 0.03%)</title><rect x="70.6053%" y="773" width="0.0341%" height="15" fill="rgb(232,24,50)" fg:x="8282" fg:w="4"/><text x="70.8196%" y="783.50"></text></g><g><title>operator new (3 samples, 0.03%)</title><rect x="70.6820%" y="805" width="0.0256%" height="15" fill="rgb(214,91,1)" fg:x="8291" fg:w="3"/><text x="70.8963%" y="815.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="70.6820%" y="789" width="0.0256%" height="15" fill="rgb(232,24,50)" fg:x="8291" fg:w="3"/><text x="70.8963%" y="799.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (11 samples, 0.09%)</title><rect x="70.6394%" y="821" width="0.0938%" height="15" fill="rgb(254,182,12)" fg:x="8286" fg:w="11"/><text x="70.8537%" y="831.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (21 samples, 0.18%)</title><rect x="70.5712%" y="837" width="0.1790%" height="15" fill="rgb(226,32,40)" fg:x="8278" fg:w="21"/><text x="70.7855%" y="847.50"></text></g><g><title>Address::family (2 samples, 0.02%)</title><rect x="70.7843%" y="805" width="0.0171%" height="15" fill="rgb(212,30,5)" fg:x="8303" fg:w="2"/><text x="70.9986%" y="815.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.11%)</title><rect x="71.0060%" y="741" width="0.1108%" height="15" fill="rgb(247,113,52)" fg:x="8329" fg:w="13"/><text x="71.2203%" y="751.50"></text></g><g><title>inet_ntop (37 samples, 0.32%)</title><rect x="70.8099%" y="805" width="0.3154%" height="15" fill="rgb(221,131,48)" fg:x="8306" fg:w="37"/><text x="71.0242%" y="815.50"></text></g><g><title>sprintf (35 samples, 0.30%)</title><rect x="70.8269%" y="789" width="0.2984%" height="15" fill="rgb(213,81,41)" fg:x="8308" fg:w="35"/><text x="71.0412%" y="799.50"></text></g><g><title>[libc-2.31.so] (34 samples, 0.29%)</title><rect x="70.8355%" y="773" width="0.2899%" height="15" fill="rgb(247,113,52)" fg:x="8309" fg:w="34"/><text x="71.0498%" y="783.50"></text></g><g><title>[libc-2.31.so] (30 samples, 0.26%)</title><rect x="70.8696%" y="757" width="0.2558%" height="15" fill="rgb(247,113,52)" fg:x="8313" fg:w="30"/><text x="71.0839%" y="767.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="71.1509%" y="789" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="8346" fg:w="2"/><text x="71.3652%" y="799.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="71.2106%" y="757" width="0.0341%" height="15" fill="rgb(247,113,52)" fg:x="8353" fg:w="4"/><text x="71.4249%" y="767.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (9 samples, 0.08%)</title><rect x="71.1765%" y="773" width="0.0767%" height="15" fill="rgb(213,123,36)" fg:x="8349" fg:w="9"/><text x="71.3908%" y="783.50"></text></g><g><title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (17 samples, 0.14%)</title><rect x="71.1253%" y="805" width="0.1449%" height="15" fill="rgb(221,154,13)" fg:x="8343" fg:w="17"/><text x="71.3396%" y="815.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (12 samples, 0.10%)</title><rect x="71.1679%" y="789" width="0.1023%" height="15" fill="rgb(222,170,8)" fg:x="8348" fg:w="12"/><text x="71.3822%" y="799.50"></text></g><g><title>std::ostream::sentry::sentry (2 samples, 0.02%)</title><rect x="71.2532%" y="773" width="0.0171%" height="15" fill="rgb(253,23,14)" fg:x="8358" fg:w="2"/><text x="71.4675%" y="783.50"></text></g><g><title>[libstdc++.so.6.0.28] (2 samples, 0.02%)</title><rect x="71.3129%" y="773" width="0.0171%" height="15" fill="rgb(226,148,0)" fg:x="8365" fg:w="2"/><text x="71.5272%" y="783.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (2 samples, 0.02%)</title><rect x="71.3384%" y="741" width="0.0171%" height="15" fill="rgb(236,91,4)" fg:x="8368" fg:w="2"/><text x="71.5527%" y="751.50"></text></g><g><title>operator new (9 samples, 0.08%)</title><rect x="71.3640%" y="725" width="0.0767%" height="15" fill="rgb(214,91,1)" fg:x="8371" fg:w="9"/><text x="71.5783%" y="735.50"></text></g><g><title>__libc_malloc (8 samples, 0.07%)</title><rect x="71.3725%" y="709" width="0.0682%" height="15" fill="rgb(232,24,50)" fg:x="8372" fg:w="8"/><text x="71.5868%" y="719.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (12 samples, 0.10%)</title><rect x="71.3555%" y="741" width="0.1023%" height="15" fill="rgb(211,92,40)" fg:x="8370" fg:w="12"/><text x="71.5698%" y="751.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.02%)</title><rect x="71.4408%" y="725" width="0.0171%" height="15" fill="rgb(211,63,27)" fg:x="8380" fg:w="2"/><text x="71.6550%" y="735.50"></text></g><g><title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (22 samples, 0.19%)</title><rect x="71.2873%" y="789" width="0.1876%" height="15" fill="rgb(244,144,25)" fg:x="8362" fg:w="22"/><text x="71.5016%" y="799.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (17 samples, 0.14%)</title><rect x="71.3299%" y="773" width="0.1449%" height="15" fill="rgb(213,123,36)" fg:x="8367" fg:w="17"/><text x="71.5442%" y="783.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (16 samples, 0.14%)</title><rect x="71.3384%" y="757" width="0.1364%" height="15" fill="rgb(226,199,5)" fg:x="8368" fg:w="16"/><text x="71.5527%" y="767.50"></text></g><g><title>std::ostream::_M_insert&lt;unsigned long&gt; (26 samples, 0.22%)</title><rect x="71.2702%" y="805" width="0.2217%" height="15" fill="rgb(226,22,13)" fg:x="8360" fg:w="26"/><text x="71.4845%" y="815.50"></text></g><g><title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (2 samples, 0.02%)</title><rect x="71.4749%" y="789" width="0.0171%" height="15" fill="rgb(243,180,8)" fg:x="8384" fg:w="2"/><text x="71.6891%" y="799.50"></text></g><g><title>operator&lt;&lt; (90 samples, 0.77%)</title><rect x="70.7587%" y="821" width="0.7673%" height="15" fill="rgb(206,204,30)" fg:x="8300" fg:w="90"/><text x="70.9730%" y="831.50"></text></g><g><title>std::ostream::operator&lt;&lt; (4 samples, 0.03%)</title><rect x="71.4919%" y="805" width="0.0341%" height="15" fill="rgb(222,101,50)" fg:x="8386" fg:w="4"/><text x="71.7062%" y="815.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="71.7136%" y="725" width="0.0341%" height="15" fill="rgb(247,113,52)" fg:x="8412" fg:w="4"/><text x="71.9278%" y="735.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="71.7306%" y="709" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="8414" fg:w="2"/><text x="71.9449%" y="719.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="71.7306%" y="693" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="8414" fg:w="2"/><text x="71.9449%" y="703.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="71.7306%" y="677" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="8414" fg:w="2"/><text x="71.9449%" y="687.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="71.7306%" y="661" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="8414" fg:w="2"/><text x="71.9449%" y="671.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="71.7306%" y="645" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="8414" fg:w="2"/><text x="71.9449%" y="655.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="71.7306%" y="629" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="8414" fg:w="2"/><text x="71.9449%" y="639.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="71.7306%" y="613" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="8414" fg:w="2"/><text x="71.9449%" y="623.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="71.7306%" y="597" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="8414" fg:w="2"/><text x="71.9449%" y="607.50"></text></g><g><title>__dynamic_cast (14 samples, 0.12%)</title><rect x="71.6368%" y="757" width="0.1194%" height="15" fill="rgb(214,65,42)" fg:x="8403" fg:w="14"/><text x="71.8511%" y="767.50"></text></g><g><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (9 samples, 0.08%)</title><rect x="71.6795%" y="741" width="0.0767%" height="15" fill="rgb(228,90,48)" fg:x="8408" fg:w="9"/><text x="71.8937%" y="751.50"></text></g><g><title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (18 samples, 0.15%)</title><rect x="71.6198%" y="773" width="0.1535%" height="15" fill="rgb(215,60,9)" fg:x="8401" fg:w="18"/><text x="71.8341%" y="783.50"></text></g><g><title>std::locale::id::_M_id (2 samples, 0.02%)</title><rect x="71.7562%" y="757" width="0.0171%" height="15" fill="rgb(241,7,48)" fg:x="8417" fg:w="2"/><text x="71.9705%" y="767.50"></text></g><g><title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="71.7732%" y="773" width="0.0171%" height="15" fill="rgb(207,140,3)" fg:x="8419" fg:w="2"/><text x="71.9875%" y="783.50"></text></g><g><title>__dynamic_cast (5 samples, 0.04%)</title><rect x="71.7988%" y="757" width="0.0426%" height="15" fill="rgb(214,65,42)" fg:x="8422" fg:w="5"/><text x="72.0131%" y="767.50"></text></g><g><title>__cxxabiv1::__si_class_type_info::__do_dyncast (3 samples, 0.03%)</title><rect x="71.8159%" y="741" width="0.0256%" height="15" fill="rgb(253,149,54)" fg:x="8424" fg:w="3"/><text x="72.0301%" y="751.50"></text></g><g><title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (7 samples, 0.06%)</title><rect x="71.7903%" y="773" width="0.0597%" height="15" fill="rgb(243,107,3)" fg:x="8421" fg:w="7"/><text x="72.0046%" y="783.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (34 samples, 0.29%)</title><rect x="71.5857%" y="789" width="0.2899%" height="15" fill="rgb(237,227,49)" fg:x="8397" fg:w="34"/><text x="71.8000%" y="799.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (43 samples, 0.37%)</title><rect x="71.5516%" y="805" width="0.3666%" height="15" fill="rgb(223,206,25)" fg:x="8393" fg:w="43"/><text x="71.7659%" y="815.50"></text></g><g><title>std::ios_base::_M_init (5 samples, 0.04%)</title><rect x="71.8755%" y="789" width="0.0426%" height="15" fill="rgb(211,168,7)" fg:x="8431" fg:w="5"/><text x="72.0898%" y="799.50"></text></g><g><title>std::locale::operator= (3 samples, 0.03%)</title><rect x="71.8926%" y="773" width="0.0256%" height="15" fill="rgb(243,143,9)" fg:x="8433" fg:w="3"/><text x="72.1069%" y="783.50"></text></g><g><title>std::ios_base::ios_base (8 samples, 0.07%)</title><rect x="71.9182%" y="805" width="0.0682%" height="15" fill="rgb(227,77,35)" fg:x="8436" fg:w="8"/><text x="72.1324%" y="815.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (56 samples, 0.48%)</title><rect x="71.5260%" y="821" width="0.4774%" height="15" fill="rgb(230,13,26)" fg:x="8390" fg:w="56"/><text x="71.7403%" y="831.50"></text></g><g><title>std::locale::locale (2 samples, 0.02%)</title><rect x="71.9864%" y="805" width="0.0171%" height="15" fill="rgb(240,92,16)" fg:x="8444" fg:w="2"/><text x="72.2006%" y="815.50"></text></g><g><title>[libstdc++.so.6.0.28] (2 samples, 0.02%)</title><rect x="71.9864%" y="789" width="0.0171%" height="15" fill="rgb(226,148,0)" fg:x="8444" fg:w="2"/><text x="72.2006%" y="799.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (7 samples, 0.06%)</title><rect x="72.0034%" y="821" width="0.0597%" height="15" fill="rgb(254,26,48)" fg:x="8446" fg:w="7"/><text x="72.2177%" y="831.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (7 samples, 0.06%)</title><rect x="72.0034%" y="805" width="0.0597%" height="15" fill="rgb(236,91,4)" fg:x="8446" fg:w="7"/><text x="72.2177%" y="815.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (6 samples, 0.05%)</title><rect x="72.0119%" y="789" width="0.0512%" height="15" fill="rgb(250,46,35)" fg:x="8447" fg:w="6"/><text x="72.2262%" y="799.50"></text></g><g><title>operator new (5 samples, 0.04%)</title><rect x="72.0205%" y="773" width="0.0426%" height="15" fill="rgb(214,91,1)" fg:x="8448" fg:w="5"/><text x="72.2347%" y="783.50"></text></g><g><title>__libc_malloc (5 samples, 0.04%)</title><rect x="72.0205%" y="757" width="0.0426%" height="15" fill="rgb(232,24,50)" fg:x="8448" fg:w="5"/><text x="72.2347%" y="767.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="72.0716%" y="805" width="0.0171%" height="15" fill="rgb(247,113,52)" fg:x="8454" fg:w="2"/><text x="72.2859%" y="815.50"></text></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (5 samples, 0.04%)</title><rect x="72.0631%" y="821" width="0.0426%" height="15" fill="rgb(221,29,6)" fg:x="8453" fg:w="5"/><text x="72.2774%" y="831.50"></text></g><g><title>Http::~Http (654 samples, 5.58%)</title><rect x="66.5473%" y="853" width="5.5754%" height="15" fill="rgb(211,174,25)" fg:x="7806" fg:w="654"/><text x="66.7616%" y="863.50">Http::~Ht..</text></g><g><title>toString&lt;Address&amp;&gt; (161 samples, 1.37%)</title><rect x="70.7502%" y="837" width="1.3725%" height="15" fill="rgb(233,146,38)" fg:x="8299" fg:w="161"/><text x="70.9645%" y="847.50"></text></g><g><title>std::ios_base::~ios_base (2 samples, 0.02%)</title><rect x="72.1057%" y="821" width="0.0171%" height="15" fill="rgb(222,137,36)" fg:x="8458" fg:w="2"/><text x="72.3200%" y="831.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="72.1910%" y="821" width="0.0256%" height="15" fill="rgb(247,113,52)" fg:x="8468" fg:w="3"/><text x="72.4052%" y="831.50"></text></g><g><title>__sbrk (3 samples, 0.03%)</title><rect x="72.2165%" y="805" width="0.0256%" height="15" fill="rgb(243,78,47)" fg:x="8471" fg:w="3"/><text x="72.4308%" y="815.50"></text></g><g><title>brk (3 samples, 0.03%)</title><rect x="72.2165%" y="789" width="0.0256%" height="15" fill="rgb(207,0,13)" fg:x="8471" fg:w="3"/><text x="72.4308%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="72.2165%" y="773" width="0.0256%" height="15" fill="rgb(205,226,15)" fg:x="8471" fg:w="3"/><text x="72.4308%" y="783.50"></text></g><g><title>do_syscall_64 (3 samples, 0.03%)</title><rect x="72.2165%" y="757" width="0.0256%" height="15" fill="rgb(220,74,14)" fg:x="8471" fg:w="3"/><text x="72.4308%" y="767.50"></text></g><g><title>__do_sys_brk (3 samples, 0.03%)</title><rect x="72.2165%" y="741" width="0.0256%" height="15" fill="rgb(251,218,4)" fg:x="8471" fg:w="3"/><text x="72.4308%" y="751.50"></text></g><g><title>__do_munmap (3 samples, 0.03%)</title><rect x="72.2165%" y="725" width="0.0256%" height="15" fill="rgb(225,34,24)" fg:x="8471" fg:w="3"/><text x="72.4308%" y="735.50"></text></g><g><title>unmap_region (2 samples, 0.02%)</title><rect x="72.2251%" y="709" width="0.0171%" height="15" fill="rgb(215,221,10)" fg:x="8472" fg:w="2"/><text x="72.4393%" y="719.50"></text></g><g><title>__default_morecore (4 samples, 0.03%)</title><rect x="72.2165%" y="821" width="0.0341%" height="15" fill="rgb(232,82,47)" fg:x="8471" fg:w="4"/><text x="72.4308%" y="831.50"></text></g><g><title>Http::~Http (673 samples, 5.74%)</title><rect x="66.5217%" y="869" width="5.7374%" height="15" fill="rgb(211,174,25)" fg:x="7803" fg:w="673"/><text x="66.7360%" y="879.50">Http::~Ht..</text></g><g><title>[libc-2.31.so] (16 samples, 0.14%)</title><rect x="72.1228%" y="853" width="0.1364%" height="15" fill="rgb(247,113,52)" fg:x="8460" fg:w="16"/><text x="72.3370%" y="863.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.11%)</title><rect x="72.1483%" y="837" width="0.1108%" height="15" fill="rgb(247,113,52)" fg:x="8463" fg:w="13"/><text x="72.3626%" y="847.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="72.2592%" y="853" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="8476" fg:w="2"/><text x="72.4735%" y="863.50"></text></g><g><title>locks_remove_posix (7 samples, 0.06%)</title><rect x="72.3188%" y="789" width="0.0597%" height="15" fill="rgb(231,157,2)" fg:x="8483" fg:w="7"/><text x="72.5331%" y="799.50"></text></g><g><title>do_syscall_64 (12 samples, 0.10%)</title><rect x="72.2847%" y="837" width="0.1023%" height="15" fill="rgb(220,74,14)" fg:x="8479" fg:w="12"/><text x="72.4990%" y="847.50"></text></g><g><title>__x64_sys_close (12 samples, 0.10%)</title><rect x="72.2847%" y="821" width="0.1023%" height="15" fill="rgb(207,163,1)" fg:x="8479" fg:w="12"/><text x="72.4990%" y="831.50"></text></g><g><title>filp_close (11 samples, 0.09%)</title><rect x="72.2933%" y="805" width="0.0938%" height="15" fill="rgb(233,173,24)" fg:x="8480" fg:w="11"/><text x="72.5076%" y="815.50"></text></g><g><title>blkcg_maybe_throttle_current (4 samples, 0.03%)</title><rect x="72.3956%" y="805" width="0.0341%" height="15" fill="rgb(227,111,33)" fg:x="8492" fg:w="4"/><text x="72.6099%" y="815.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="72.5064%" y="757" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="8505" fg:w="2"/><text x="72.7207%" y="767.50"></text></g><g><title>call_rcu (2 samples, 0.02%)</title><rect x="72.5320%" y="757" width="0.0171%" height="15" fill="rgb(205,15,17)" fg:x="8508" fg:w="2"/><text x="72.7463%" y="767.50"></text></g><g><title>dentry_free (3 samples, 0.03%)</title><rect x="72.5490%" y="757" width="0.0256%" height="15" fill="rgb(235,93,14)" fg:x="8510" fg:w="3"/><text x="72.7633%" y="767.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="72.5575%" y="741" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="8511" fg:w="2"/><text x="72.7718%" y="751.50"></text></g><g><title>fsnotify_destroy_marks (3 samples, 0.03%)</title><rect x="72.5831%" y="725" width="0.0256%" height="15" fill="rgb(205,128,45)" fg:x="8514" fg:w="3"/><text x="72.7974%" y="735.50"></text></g><g><title>fsnotify_grab_connector (2 samples, 0.02%)</title><rect x="72.5916%" y="709" width="0.0171%" height="15" fill="rgb(240,209,51)" fg:x="8515" fg:w="2"/><text x="72.8059%" y="719.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="72.5916%" y="693" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="8515" fg:w="2"/><text x="72.8059%" y="703.50"></text></g><g><title>destroy_inode (8 samples, 0.07%)</title><rect x="72.5746%" y="757" width="0.0682%" height="15" fill="rgb(239,121,48)" fg:x="8513" fg:w="8"/><text x="72.7889%" y="767.50"></text></g><g><title>__destroy_inode (8 samples, 0.07%)</title><rect x="72.5746%" y="741" width="0.0682%" height="15" fill="rgb(222,17,30)" fg:x="8513" fg:w="8"/><text x="72.7889%" y="751.50"></text></g><g><title>security_inode_free (3 samples, 0.03%)</title><rect x="72.6172%" y="725" width="0.0256%" height="15" fill="rgb(251,18,44)" fg:x="8518" fg:w="3"/><text x="72.8315%" y="735.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="72.6257%" y="709" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="8519" fg:w="2"/><text x="72.8400%" y="719.50"></text></g><g><title>clear_inode (2 samples, 0.02%)</title><rect x="72.6513%" y="741" width="0.0171%" height="15" fill="rgb(217,206,5)" fg:x="8522" fg:w="2"/><text x="72.8656%" y="751.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="72.6513%" y="725" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="8522" fg:w="2"/><text x="72.8656%" y="735.50"></text></g><g><title>inode_wait_for_writeback (2 samples, 0.02%)</title><rect x="72.6684%" y="741" width="0.0171%" height="15" fill="rgb(225,160,0)" fg:x="8524" fg:w="2"/><text x="72.8827%" y="751.50"></text></g><g><title>evict (9 samples, 0.08%)</title><rect x="72.6428%" y="757" width="0.0767%" height="15" fill="rgb(232,48,28)" fg:x="8521" fg:w="9"/><text x="72.8571%" y="767.50"></text></g><g><title>wake_up_bit (3 samples, 0.03%)</title><rect x="72.6939%" y="741" width="0.0256%" height="15" fill="rgb(249,46,35)" fg:x="8527" fg:w="3"/><text x="72.9082%" y="751.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="72.7025%" y="725" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="8528" fg:w="2"/><text x="72.9168%" y="735.50"></text></g><g><title>iput.part.0 (4 samples, 0.03%)</title><rect x="72.7280%" y="757" width="0.0341%" height="15" fill="rgb(241,46,35)" fg:x="8531" fg:w="4"/><text x="72.9423%" y="767.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.03%)</title><rect x="72.7366%" y="741" width="0.0256%" height="15" fill="rgb(229,107,3)" fg:x="8532" fg:w="3"/><text x="72.9509%" y="751.50"></text></g><g><title>__irqentry_text_start (6 samples, 0.05%)</title><rect x="72.7792%" y="741" width="0.0512%" height="15" fill="rgb(229,107,3)" fg:x="8537" fg:w="6"/><text x="72.9935%" y="751.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.02%)</title><rect x="72.8303%" y="741" width="0.0171%" height="15" fill="rgb(247,169,19)" fg:x="8543" fg:w="2"/><text x="73.0446%" y="751.50"></text></g><g><title>__mod_memcg_state.part.0 (2 samples, 0.02%)</title><rect x="72.8303%" y="725" width="0.0171%" height="15" fill="rgb(252,169,8)" fg:x="8543" fg:w="2"/><text x="73.0446%" y="735.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="72.8474%" y="741" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="8545" fg:w="2"/><text x="73.0617%" y="751.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="72.8474%" y="725" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="8545" fg:w="2"/><text x="73.0617%" y="735.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="72.8474%" y="709" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="8545" fg:w="2"/><text x="73.0617%" y="719.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="72.8474%" y="693" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="8545" fg:w="2"/><text x="73.0617%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="72.8474%" y="677" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="8545" fg:w="2"/><text x="73.0617%" y="687.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="72.8474%" y="661" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="8545" fg:w="2"/><text x="73.0617%" y="671.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="72.8474%" y="645" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="8545" fg:w="2"/><text x="73.0617%" y="655.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.02%)</title><rect x="72.8474%" y="629" width="0.0171%" height="15" fill="rgb(251,188,47)" fg:x="8545" fg:w="2"/><text x="73.0617%" y="639.50"></text></g><g><title>free_old_xmit_skbs (2 samples, 0.02%)</title><rect x="72.8474%" y="613" width="0.0171%" height="15" fill="rgb(235,178,6)" fg:x="8545" fg:w="2"/><text x="73.0617%" y="623.50"></text></g><g><title>refill_obj_stock (3 samples, 0.03%)</title><rect x="72.8645%" y="741" width="0.0256%" height="15" fill="rgb(238,145,38)" fg:x="8547" fg:w="3"/><text x="73.0787%" y="751.50"></text></g><g><title>__dentry_kill (46 samples, 0.39%)</title><rect x="72.5064%" y="773" width="0.3922%" height="15" fill="rgb(216,135,0)" fg:x="8505" fg:w="46"/><text x="72.7207%" y="783.50"></text></g><g><title>kmem_cache_free (15 samples, 0.13%)</title><rect x="72.7707%" y="757" width="0.1279%" height="15" fill="rgb(225,137,16)" fg:x="8536" fg:w="15"/><text x="72.9850%" y="767.50"></text></g><g><title>dput (2 samples, 0.02%)</title><rect x="72.8986%" y="773" width="0.0171%" height="15" fill="rgb(252,3,5)" fg:x="8551" fg:w="2"/><text x="73.1128%" y="783.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="72.8986%" y="757" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="8551" fg:w="2"/><text x="73.1128%" y="767.50"></text></g><g><title>fsnotify (2 samples, 0.02%)</title><rect x="72.9156%" y="773" width="0.0171%" height="15" fill="rgb(208,7,33)" fg:x="8553" fg:w="2"/><text x="73.1299%" y="783.50"></text></g><g><title>mntput_no_expire (2 samples, 0.02%)</title><rect x="72.9327%" y="773" width="0.0171%" height="15" fill="rgb(231,188,50)" fg:x="8555" fg:w="2"/><text x="73.1469%" y="783.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="72.9497%" y="757" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="8557" fg:w="2"/><text x="73.1640%" y="767.50"></text></g><g><title>percpu_counter_add_batch (3 samples, 0.03%)</title><rect x="72.9497%" y="773" width="0.0256%" height="15" fill="rgb(219,106,45)" fg:x="8557" fg:w="3"/><text x="73.1640%" y="783.50"></text></g><g><title>security_file_free (5 samples, 0.04%)</title><rect x="72.9753%" y="773" width="0.0426%" height="15" fill="rgb(254,220,0)" fg:x="8560" fg:w="5"/><text x="73.1896%" y="783.50"></text></g><g><title>apparmor_file_free_security (2 samples, 0.02%)</title><rect x="73.0009%" y="757" width="0.0171%" height="15" fill="rgb(218,46,36)" fg:x="8563" fg:w="2"/><text x="73.2151%" y="767.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="73.0009%" y="741" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="8563" fg:w="2"/><text x="73.2151%" y="751.50"></text></g><g><title>__sk_mem_reduce_allocated (2 samples, 0.02%)</title><rect x="73.1117%" y="693" width="0.0171%" height="15" fill="rgb(252,220,0)" fg:x="8576" fg:w="2"/><text x="73.3260%" y="703.50"></text></g><g><title>pfifo_fast_dequeue (2 samples, 0.02%)</title><rect x="73.2055%" y="581" width="0.0171%" height="15" fill="rgb(208,20,32)" fg:x="8587" fg:w="2"/><text x="73.4197%" y="591.50"></text></g><g><title>free_old_xmit_skbs (2 samples, 0.02%)</title><rect x="73.2225%" y="533" width="0.0171%" height="15" fill="rgb(235,178,6)" fg:x="8589" fg:w="2"/><text x="73.4368%" y="543.50"></text></g><g><title>dev_hard_start_xmit (10 samples, 0.09%)</title><rect x="73.2225%" y="565" width="0.0853%" height="15" fill="rgb(251,86,39)" fg:x="8589" fg:w="10"/><text x="73.4368%" y="575.50"></text></g><g><title>start_xmit (10 samples, 0.09%)</title><rect x="73.2225%" y="549" width="0.0853%" height="15" fill="rgb(211,140,13)" fg:x="8589" fg:w="10"/><text x="73.4368%" y="559.50"></text></g><g><title>virtqueue_notify (4 samples, 0.03%)</title><rect x="73.2737%" y="533" width="0.0341%" height="15" fill="rgb(219,119,18)" fg:x="8595" fg:w="4"/><text x="73.4879%" y="543.50"></text></g><g><title>vp_notify (4 samples, 0.03%)</title><rect x="73.2737%" y="517" width="0.0341%" height="15" fill="rgb(230,193,37)" fg:x="8595" fg:w="4"/><text x="73.4879%" y="527.50"></text></g><g><title>iowrite16 (4 samples, 0.03%)</title><rect x="73.2737%" y="501" width="0.0341%" height="15" fill="rgb(218,139,37)" fg:x="8595" fg:w="4"/><text x="73.4879%" y="511.50"></text></g><g><title>__qdisc_run (15 samples, 0.13%)</title><rect x="73.1969%" y="597" width="0.1279%" height="15" fill="rgb(252,144,25)" fg:x="8586" fg:w="15"/><text x="73.4112%" y="607.50"></text></g><g><title>sch_direct_xmit (12 samples, 0.10%)</title><rect x="73.2225%" y="581" width="0.1023%" height="15" fill="rgb(222,128,44)" fg:x="8589" fg:w="12"/><text x="73.4368%" y="591.50"></text></g><g><title>validate_xmit_skb_list (2 samples, 0.02%)</title><rect x="73.3078%" y="565" width="0.0171%" height="15" fill="rgb(254,174,52)" fg:x="8599" fg:w="2"/><text x="73.5220%" y="575.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.02%)</title><rect x="73.3078%" y="549" width="0.0171%" height="15" fill="rgb(240,104,40)" fg:x="8599" fg:w="2"/><text x="73.5220%" y="559.50"></text></g><g><title>__dev_queue_xmit (17 samples, 0.14%)</title><rect x="73.1969%" y="613" width="0.1449%" height="15" fill="rgb(232,116,37)" fg:x="8586" fg:w="17"/><text x="73.4112%" y="623.50"></text></g><g><title>pfifo_fast_enqueue (2 samples, 0.02%)</title><rect x="73.3248%" y="597" width="0.0171%" height="15" fill="rgb(250,59,0)" fg:x="8601" fg:w="2"/><text x="73.5391%" y="607.50"></text></g><g><title>ip_finish_output2 (19 samples, 0.16%)</title><rect x="73.1884%" y="629" width="0.1620%" height="15" fill="rgb(219,227,11)" fg:x="8585" fg:w="19"/><text x="73.4027%" y="639.50"></text></g><g><title>__ip_queue_xmit (23 samples, 0.20%)</title><rect x="73.1628%" y="645" width="0.1961%" height="15" fill="rgb(224,11,5)" fg:x="8582" fg:w="23"/><text x="73.3771%" y="655.50"></text></g><g><title>__tcp_transmit_skb (26 samples, 0.22%)</title><rect x="73.1458%" y="661" width="0.2217%" height="15" fill="rgb(238,106,36)" fg:x="8580" fg:w="26"/><text x="73.3601%" y="671.50"></text></g><g><title>tcp_event_new_data_sent (3 samples, 0.03%)</title><rect x="73.3760%" y="661" width="0.0256%" height="15" fill="rgb(227,19,23)" fg:x="8607" fg:w="3"/><text x="73.5902%" y="671.50"></text></g><g><title>sk_reset_timer (2 samples, 0.02%)</title><rect x="73.3845%" y="645" width="0.0171%" height="15" fill="rgb(220,37,33)" fg:x="8608" fg:w="2"/><text x="73.5988%" y="655.50"></text></g><g><title>__mod_timer (2 samples, 0.02%)</title><rect x="73.3845%" y="629" width="0.0171%" height="15" fill="rgb(232,140,47)" fg:x="8608" fg:w="2"/><text x="73.5988%" y="639.50"></text></g><g><title>__tcp_push_pending_frames (33 samples, 0.28%)</title><rect x="73.1287%" y="693" width="0.2813%" height="15" fill="rgb(226,88,38)" fg:x="8578" fg:w="33"/><text x="73.3430%" y="703.50"></text></g><g><title>tcp_write_xmit (33 samples, 0.28%)</title><rect x="73.1287%" y="677" width="0.2813%" height="15" fill="rgb(236,72,36)" fg:x="8578" fg:w="33"/><text x="73.3430%" y="687.50"></text></g><g><title>__kmalloc_node_track_caller (4 samples, 0.03%)</title><rect x="73.4186%" y="661" width="0.0341%" height="15" fill="rgb(228,161,44)" fg:x="8612" fg:w="4"/><text x="73.6329%" y="671.50"></text></g><g><title>__alloc_skb (9 samples, 0.08%)</title><rect x="73.4186%" y="677" width="0.0767%" height="15" fill="rgb(237,90,40)" fg:x="8612" fg:w="9"/><text x="73.6329%" y="687.50"></text></g><g><title>kmem_cache_alloc_node (5 samples, 0.04%)</title><rect x="73.4527%" y="661" width="0.0426%" height="15" fill="rgb(227,94,12)" fg:x="8616" fg:w="5"/><text x="73.6670%" y="671.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.02%)</title><rect x="73.4783%" y="645" width="0.0171%" height="15" fill="rgb(212,11,50)" fg:x="8619" fg:w="2"/><text x="73.6925%" y="655.50"></text></g><g><title>__tcp_close (50 samples, 0.43%)</title><rect x="73.0946%" y="709" width="0.4263%" height="15" fill="rgb(218,198,27)" fg:x="8574" fg:w="50"/><text x="73.3089%" y="719.50"></text></g><g><title>tcp_send_fin (12 samples, 0.10%)</title><rect x="73.4186%" y="693" width="0.1023%" height="15" fill="rgb(236,214,50)" fg:x="8612" fg:w="12"/><text x="73.6329%" y="703.50"></text></g><g><title>tcp_current_mss (2 samples, 0.02%)</title><rect x="73.5038%" y="677" width="0.0171%" height="15" fill="rgb(247,207,19)" fg:x="8622" fg:w="2"/><text x="73.7181%" y="687.50"></text></g><g><title>inet_release (56 samples, 0.48%)</title><rect x="73.0605%" y="741" width="0.4774%" height="15" fill="rgb(252,100,5)" fg:x="8570" fg:w="56"/><text x="73.2748%" y="751.50"></text></g><g><title>tcp_close (52 samples, 0.44%)</title><rect x="73.0946%" y="725" width="0.4433%" height="15" fill="rgb(213,64,51)" fg:x="8574" fg:w="52"/><text x="73.3089%" y="735.50"></text></g><g><title>release_sock (2 samples, 0.02%)</title><rect x="73.5209%" y="709" width="0.0171%" height="15" fill="rgb(217,78,19)" fg:x="8624" fg:w="2"/><text x="73.7352%" y="719.50"></text></g><g><title>close (151 samples, 1.29%)</title><rect x="72.2592%" y="869" width="1.2873%" height="15" fill="rgb(227,142,28)" fg:x="8476" fg:w="151"/><text x="72.4735%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (148 samples, 1.26%)</title><rect x="72.2847%" y="853" width="1.2617%" height="15" fill="rgb(205,226,15)" fg:x="8479" fg:w="148"/><text x="72.4990%" y="863.50"></text></g><g><title>syscall_exit_to_user_mode (136 samples, 1.16%)</title><rect x="72.3870%" y="837" width="1.1594%" height="15" fill="rgb(215,101,28)" fg:x="8491" fg:w="136"/><text x="72.6013%" y="847.50"></text></g><g><title>exit_to_user_mode_prepare (135 samples, 1.15%)</title><rect x="72.3956%" y="821" width="1.1509%" height="15" fill="rgb(240,77,26)" fg:x="8492" fg:w="135"/><text x="72.6099%" y="831.50"></text></g><g><title>task_work_run (130 samples, 1.11%)</title><rect x="72.4382%" y="805" width="1.1083%" height="15" fill="rgb(206,18,50)" fg:x="8497" fg:w="130"/><text x="72.6525%" y="815.50"></text></g><g><title>__fput (129 samples, 1.10%)</title><rect x="72.4467%" y="789" width="1.0997%" height="15" fill="rgb(210,120,45)" fg:x="8498" fg:w="129"/><text x="72.6610%" y="799.50"></text></g><g><title>sock_close (62 samples, 0.53%)</title><rect x="73.0179%" y="773" width="0.5286%" height="15" fill="rgb(234,128,25)" fg:x="8565" fg:w="62"/><text x="73.2322%" y="783.50"></text></g><g><title>__sock_release (62 samples, 0.53%)</title><rect x="73.0179%" y="757" width="0.5286%" height="15" fill="rgb(231,37,52)" fg:x="8565" fg:w="62"/><text x="73.2322%" y="767.50"></text></g><g><title>__gnu_cxx::operator!=&lt;IFileDescriptor**, std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt; &gt; (3 samples, 0.03%)</title><rect x="73.5465%" y="837" width="0.0256%" height="15" fill="rgb(237,157,14)" fg:x="8627" fg:w="3"/><text x="73.7607%" y="847.50"></text></g><g><title>__gnu_cxx::__normal_iterator&lt;IFileDescriptor**, std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt; &gt;::base (3 samples, 0.03%)</title><rect x="73.5465%" y="821" width="0.0256%" height="15" fill="rgb(248,54,7)" fg:x="8627" fg:w="3"/><text x="73.7607%" y="831.50"></text></g><g><title>std::__copy_move_a1&lt;false, IFileDescriptor**, IFileDescriptor**&gt; (2 samples, 0.02%)</title><rect x="73.5720%" y="805" width="0.0171%" height="15" fill="rgb(216,209,36)" fg:x="8630" fg:w="2"/><text x="73.7863%" y="815.50"></text></g><g><title>std::__copy_move_a2&lt;false, IFileDescriptor**, IFileDescriptor**&gt; (2 samples, 0.02%)</title><rect x="73.5720%" y="789" width="0.0171%" height="15" fill="rgb(254,148,49)" fg:x="8630" fg:w="2"/><text x="73.7863%" y="799.50"></text></g><g><title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;IFileDescriptor*&gt; (2 samples, 0.02%)</title><rect x="73.5720%" y="773" width="0.0171%" height="15" fill="rgb(218,218,51)" fg:x="8630" fg:w="2"/><text x="73.7863%" y="783.50"></text></g><g><title>std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt;::erase (6 samples, 0.05%)</title><rect x="73.5465%" y="869" width="0.0512%" height="15" fill="rgb(243,182,4)" fg:x="8627" fg:w="6"/><text x="73.7607%" y="879.50"></text></g><g><title>std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt;::_M_erase (6 samples, 0.05%)</title><rect x="73.5465%" y="853" width="0.0512%" height="15" fill="rgb(242,22,52)" fg:x="8627" fg:w="6"/><text x="73.7607%" y="863.50"></text></g><g><title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;IFileDescriptor**, std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;IFileDescriptor**, std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt; &gt; &gt; (3 samples, 0.03%)</title><rect x="73.5720%" y="837" width="0.0256%" height="15" fill="rgb(226,113,32)" fg:x="8630" fg:w="3"/><text x="73.7863%" y="847.50"></text></g><g><title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;IFileDescriptor**, std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;IFileDescriptor**, std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt; &gt; &gt; (3 samples, 0.03%)</title><rect x="73.5720%" y="821" width="0.0256%" height="15" fill="rgb(253,74,35)" fg:x="8630" fg:w="3"/><text x="73.7863%" y="831.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="73.6061%" y="789" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="8634" fg:w="2"/><text x="73.8204%" y="799.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="73.6061%" y="773" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="8634" fg:w="2"/><text x="73.8204%" y="783.50"></text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::erase (4 samples, 0.03%)</title><rect x="73.5976%" y="869" width="0.0341%" height="15" fill="rgb(225,146,23)" fg:x="8633" fg:w="4"/><text x="73.8119%" y="879.50"></text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::_M_erase (4 samples, 0.03%)</title><rect x="73.5976%" y="853" width="0.0341%" height="15" fill="rgb(239,228,38)" fg:x="8633" fg:w="4"/><text x="73.8119%" y="863.50"></text></g><g><title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;pollfd*, std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;pollfd*, std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt; &gt; &gt; (4 samples, 0.03%)</title><rect x="73.5976%" y="837" width="0.0341%" height="15" fill="rgb(233,116,24)" fg:x="8633" fg:w="4"/><text x="73.8119%" y="847.50"></text></g><g><title>std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;pollfd*, std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;pollfd*, std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt; &gt; &gt; (4 samples, 0.03%)</title><rect x="73.5976%" y="821" width="0.0341%" height="15" fill="rgb(236,208,6)" fg:x="8633" fg:w="4"/><text x="73.8119%" y="831.50"></text></g><g><title>std::__copy_move_a1&lt;false, pollfd*, pollfd*&gt; (3 samples, 0.03%)</title><rect x="73.6061%" y="805" width="0.0256%" height="15" fill="rgb(229,71,19)" fg:x="8634" fg:w="3"/><text x="73.8204%" y="815.50"></text></g><g><title>Poll::remove (837 samples, 7.14%)</title><rect x="66.5047%" y="885" width="7.1355%" height="15" fill="rgb(253,87,47)" fg:x="7801" fg:w="837"/><text x="66.7190%" y="895.50">Poll::remove</text></g><g><title>handle_edge_irq (2 samples, 0.02%)</title><rect x="73.6573%" y="853" width="0.0171%" height="15" fill="rgb(219,15,9)" fg:x="8640" fg:w="2"/><text x="73.8716%" y="863.50"></text></g><g><title>handle_irq_event (2 samples, 0.02%)</title><rect x="73.6573%" y="837" width="0.0171%" height="15" fill="rgb(209,73,52)" fg:x="8640" fg:w="2"/><text x="73.8716%" y="847.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.03%)</title><rect x="73.7170%" y="549" width="0.0256%" height="15" fill="rgb(238,106,36)" fg:x="8647" fg:w="3"/><text x="73.9313%" y="559.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="73.7255%" y="533" width="0.0171%" height="15" fill="rgb(224,11,5)" fg:x="8648" fg:w="2"/><text x="73.9398%" y="543.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="73.7255%" y="517" width="0.0171%" height="15" fill="rgb(219,227,11)" fg:x="8648" fg:w="2"/><text x="73.9398%" y="527.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="73.7255%" y="501" width="0.0171%" height="15" fill="rgb(232,116,37)" fg:x="8648" fg:w="2"/><text x="73.9398%" y="511.50"></text></g><g><title>__qdisc_run (2 samples, 0.02%)</title><rect x="73.7255%" y="485" width="0.0171%" height="15" fill="rgb(252,144,25)" fg:x="8648" fg:w="2"/><text x="73.9398%" y="495.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.02%)</title><rect x="73.7255%" y="469" width="0.0171%" height="15" fill="rgb(222,128,44)" fg:x="8648" fg:w="2"/><text x="73.9398%" y="479.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="73.7255%" y="453" width="0.0171%" height="15" fill="rgb(251,86,39)" fg:x="8648" fg:w="2"/><text x="73.9398%" y="463.50"></text></g><g><title>start_xmit (2 samples, 0.02%)</title><rect x="73.7255%" y="437" width="0.0171%" height="15" fill="rgb(211,140,13)" fg:x="8648" fg:w="2"/><text x="73.9398%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (5 samples, 0.04%)</title><rect x="73.7084%" y="581" width="0.0426%" height="15" fill="rgb(226,88,38)" fg:x="8646" fg:w="5"/><text x="73.9227%" y="591.50"></text></g><g><title>tcp_write_xmit (4 samples, 0.03%)</title><rect x="73.7170%" y="565" width="0.0341%" height="15" fill="rgb(236,72,36)" fg:x="8647" fg:w="4"/><text x="73.9313%" y="575.50"></text></g><g><title>napi_complete_done (11 samples, 0.09%)</title><rect x="73.6914%" y="757" width="0.0938%" height="15" fill="rgb(226,216,13)" fg:x="8644" fg:w="11"/><text x="73.9057%" y="767.50"></text></g><g><title>netif_receive_skb_list_internal (11 samples, 0.09%)</title><rect x="73.6914%" y="741" width="0.0938%" height="15" fill="rgb(216,153,44)" fg:x="8644" fg:w="11"/><text x="73.9057%" y="751.50"></text></g><g><title>__netif_receive_skb_list_core (11 samples, 0.09%)</title><rect x="73.6914%" y="725" width="0.0938%" height="15" fill="rgb(227,176,26)" fg:x="8644" fg:w="11"/><text x="73.9057%" y="735.50"></text></g><g><title>ip_list_rcv (11 samples, 0.09%)</title><rect x="73.6914%" y="709" width="0.0938%" height="15" fill="rgb(215,38,16)" fg:x="8644" fg:w="11"/><text x="73.9057%" y="719.50"></text></g><g><title>ip_sublist_rcv (10 samples, 0.09%)</title><rect x="73.6999%" y="693" width="0.0853%" height="15" fill="rgb(207,166,9)" fg:x="8645" fg:w="10"/><text x="73.9142%" y="703.50"></text></g><g><title>ip_sublist_rcv_finish (9 samples, 0.08%)</title><rect x="73.7084%" y="677" width="0.0767%" height="15" fill="rgb(223,178,14)" fg:x="8646" fg:w="9"/><text x="73.9227%" y="687.50"></text></g><g><title>ip_local_deliver_finish (9 samples, 0.08%)</title><rect x="73.7084%" y="661" width="0.0767%" height="15" fill="rgb(220,94,29)" fg:x="8646" fg:w="9"/><text x="73.9227%" y="671.50"></text></g><g><title>ip_protocol_deliver_rcu (9 samples, 0.08%)</title><rect x="73.7084%" y="645" width="0.0767%" height="15" fill="rgb(207,19,13)" fg:x="8646" fg:w="9"/><text x="73.9227%" y="655.50"></text></g><g><title>tcp_v4_rcv (9 samples, 0.08%)</title><rect x="73.7084%" y="629" width="0.0767%" height="15" fill="rgb(224,38,0)" fg:x="8646" fg:w="9"/><text x="73.9227%" y="639.50"></text></g><g><title>tcp_v4_do_rcv (9 samples, 0.08%)</title><rect x="73.7084%" y="613" width="0.0767%" height="15" fill="rgb(228,220,18)" fg:x="8646" fg:w="9"/><text x="73.9227%" y="623.50"></text></g><g><title>tcp_rcv_established (9 samples, 0.08%)</title><rect x="73.7084%" y="597" width="0.0767%" height="15" fill="rgb(224,50,47)" fg:x="8646" fg:w="9"/><text x="73.9227%" y="607.50"></text></g><g><title>tcp_ack (3 samples, 0.03%)</title><rect x="73.7596%" y="581" width="0.0256%" height="15" fill="rgb(213,228,3)" fg:x="8652" fg:w="3"/><text x="73.9739%" y="591.50"></text></g><g><title>virtnet_poll (13 samples, 0.11%)</title><rect x="73.6914%" y="773" width="0.1108%" height="15" fill="rgb(213,187,12)" fg:x="8644" fg:w="13"/><text x="73.9057%" y="783.50"></text></g><g><title>asm_common_interrupt (19 samples, 0.16%)</title><rect x="73.6488%" y="885" width="0.1620%" height="15" fill="rgb(248,227,45)" fg:x="8639" fg:w="19"/><text x="73.8630%" y="895.50"></text></g><g><title>common_interrupt (18 samples, 0.15%)</title><rect x="73.6573%" y="869" width="0.1535%" height="15" fill="rgb(250,67,32)" fg:x="8640" fg:w="18"/><text x="73.8716%" y="879.50"></text></g><g><title>irq_exit_rcu (16 samples, 0.14%)</title><rect x="73.6743%" y="853" width="0.1364%" height="15" fill="rgb(240,18,12)" fg:x="8642" fg:w="16"/><text x="73.8886%" y="863.50"></text></g><g><title>do_softirq_own_stack (16 samples, 0.14%)</title><rect x="73.6743%" y="837" width="0.1364%" height="15" fill="rgb(223,89,53)" fg:x="8642" fg:w="16"/><text x="73.8886%" y="847.50"></text></g><g><title>asm_call_sysvec_on_stack (16 samples, 0.14%)</title><rect x="73.6743%" y="821" width="0.1364%" height="15" fill="rgb(208,184,36)" fg:x="8642" fg:w="16"/><text x="73.8886%" y="831.50"></text></g><g><title>__softirqentry_text_start (16 samples, 0.14%)</title><rect x="73.6743%" y="805" width="0.1364%" height="15" fill="rgb(249,91,22)" fg:x="8642" fg:w="16"/><text x="73.8886%" y="815.50"></text></g><g><title>net_rx_action (16 samples, 0.14%)</title><rect x="73.6743%" y="789" width="0.1364%" height="15" fill="rgb(231,11,52)" fg:x="8642" fg:w="16"/><text x="73.8886%" y="799.50"></text></g><g><title>std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt;::operator[] (9 samples, 0.08%)</title><rect x="73.8107%" y="885" width="0.0767%" height="15" fill="rgb(253,115,3)" fg:x="8658" fg:w="9"/><text x="74.0250%" y="895.50"></text></g><g><title>std::vector&lt;IFileDescriptor*, std::allocator&lt;IFileDescriptor*&gt; &gt;::size (11 samples, 0.09%)</title><rect x="73.8875%" y="885" width="0.0938%" height="15" fill="rgb(229,159,38)" fg:x="8667" fg:w="11"/><text x="74.1018%" y="895.50"></text></g><g><title>Poll::iterate (6,931 samples, 59.09%)</title><rect x="14.9702%" y="901" width="59.0878%" height="15" fill="rgb(241,227,18)" fg:x="1756" fg:w="6931"/><text x="15.1844%" y="911.50">Poll::iterate</text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::operator[] (9 samples, 0.08%)</title><rect x="73.9812%" y="885" width="0.0767%" height="15" fill="rgb(219,78,45)" fg:x="8678" fg:w="9"/><text x="74.1955%" y="895.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="74.0324%" y="869" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="879.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="74.0324%" y="853" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="863.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="74.0324%" y="837" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="847.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="74.0324%" y="821" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="831.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="74.0324%" y="805" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="815.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="74.0324%" y="789" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="799.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="74.0324%" y="773" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="783.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="74.0324%" y="757" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="767.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="74.0324%" y="741" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="751.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="74.0324%" y="725" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="735.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="74.0324%" y="709" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="719.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="74.0324%" y="693" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="703.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="74.0324%" y="677" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="8684" fg:w="3"/><text x="74.2467%" y="687.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="74.0409%" y="661" width="0.0171%" height="15" fill="rgb(223,178,14)" fg:x="8685" fg:w="2"/><text x="74.2552%" y="671.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="74.0409%" y="645" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="8685" fg:w="2"/><text x="74.2552%" y="655.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="74.0409%" y="629" width="0.0171%" height="15" fill="rgb(207,19,13)" fg:x="8685" fg:w="2"/><text x="74.2552%" y="639.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="74.0409%" y="613" width="0.0171%" height="15" fill="rgb(224,38,0)" fg:x="8685" fg:w="2"/><text x="74.2552%" y="623.50"></text></g><g><title>__irqentry_text_start (57 samples, 0.49%)</title><rect x="74.2455%" y="885" width="0.4859%" height="15" fill="rgb(229,107,3)" fg:x="8709" fg:w="57"/><text x="74.4598%" y="895.50"></text></g><g><title>__pollwait (2 samples, 0.02%)</title><rect x="74.7400%" y="885" width="0.0171%" height="15" fill="rgb(248,41,12)" fg:x="8767" fg:w="2"/><text x="74.9543%" y="895.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.02%)</title><rect x="74.7400%" y="869" width="0.0171%" height="15" fill="rgb(211,8,20)" fg:x="8767" fg:w="2"/><text x="74.9543%" y="879.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.02%)</title><rect x="74.7400%" y="853" width="0.0171%" height="15" fill="rgb(210,87,27)" fg:x="8767" fg:w="2"/><text x="74.9543%" y="863.50"></text></g><g><title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="74.7656%" y="885" width="0.0171%" height="15" fill="rgb(231,153,3)" fg:x="8770" fg:w="2"/><text x="74.9798%" y="895.50"></text></g><g><title>_raw_spin_lock_irqsave (14 samples, 0.12%)</title><rect x="74.7826%" y="885" width="0.1194%" height="15" fill="rgb(206,213,41)" fg:x="8772" fg:w="14"/><text x="74.9969%" y="895.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="74.8849%" y="869" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="8784" fg:w="2"/><text x="75.0992%" y="879.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="74.9020%" y="773" width="0.0341%" height="15" fill="rgb(213,187,12)" fg:x="8786" fg:w="4"/><text x="75.1162%" y="783.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="74.9020%" y="757" width="0.0341%" height="15" fill="rgb(226,216,13)" fg:x="8786" fg:w="4"/><text x="75.1162%" y="767.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="74.9020%" y="741" width="0.0341%" height="15" fill="rgb(216,153,44)" fg:x="8786" fg:w="4"/><text x="75.1162%" y="751.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="74.9020%" y="725" width="0.0341%" height="15" fill="rgb(227,176,26)" fg:x="8786" fg:w="4"/><text x="75.1162%" y="735.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="74.9020%" y="709" width="0.0341%" height="15" fill="rgb(215,38,16)" fg:x="8786" fg:w="4"/><text x="75.1162%" y="719.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="74.9105%" y="693" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="8787" fg:w="3"/><text x="75.1248%" y="703.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.03%)</title><rect x="74.9105%" y="677" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="8787" fg:w="3"/><text x="75.1248%" y="687.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.03%)</title><rect x="74.9105%" y="661" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="8787" fg:w="3"/><text x="75.1248%" y="671.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="74.9105%" y="645" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="8787" fg:w="3"/><text x="75.1248%" y="655.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="74.9105%" y="629" width="0.0256%" height="15" fill="rgb(224,38,0)" fg:x="8787" fg:w="3"/><text x="75.1248%" y="639.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="74.9105%" y="613" width="0.0256%" height="15" fill="rgb(228,220,18)" fg:x="8787" fg:w="3"/><text x="75.1248%" y="623.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.03%)</title><rect x="74.9105%" y="597" width="0.0256%" height="15" fill="rgb(224,50,47)" fg:x="8787" fg:w="3"/><text x="75.1248%" y="607.50"></text></g><g><title>tcp_mstamp_refresh (2 samples, 0.02%)</title><rect x="74.9190%" y="581" width="0.0171%" height="15" fill="rgb(229,63,29)" fg:x="8788" fg:w="2"/><text x="75.1333%" y="591.50"></text></g><g><title>ktime_get (2 samples, 0.02%)</title><rect x="74.9190%" y="565" width="0.0171%" height="15" fill="rgb(226,51,13)" fg:x="8788" fg:w="2"/><text x="75.1333%" y="575.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.05%)</title><rect x="74.9020%" y="885" width="0.0512%" height="15" fill="rgb(248,227,45)" fg:x="8786" fg:w="6"/><text x="75.1162%" y="895.50"></text></g><g><title>common_interrupt (6 samples, 0.05%)</title><rect x="74.9020%" y="869" width="0.0512%" height="15" fill="rgb(250,67,32)" fg:x="8786" fg:w="6"/><text x="75.1162%" y="879.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.05%)</title><rect x="74.9020%" y="853" width="0.0512%" height="15" fill="rgb(240,18,12)" fg:x="8786" fg:w="6"/><text x="75.1162%" y="863.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.05%)</title><rect x="74.9020%" y="837" width="0.0512%" height="15" fill="rgb(223,89,53)" fg:x="8786" fg:w="6"/><text x="75.1162%" y="847.50"></text></g><g><title>asm_call_sysvec_on_stack (6 samples, 0.05%)</title><rect x="74.9020%" y="821" width="0.0512%" height="15" fill="rgb(208,184,36)" fg:x="8786" fg:w="6"/><text x="75.1162%" y="831.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.05%)</title><rect x="74.9020%" y="805" width="0.0512%" height="15" fill="rgb(249,91,22)" fg:x="8786" fg:w="6"/><text x="75.1162%" y="815.50"></text></g><g><title>net_rx_action (6 samples, 0.05%)</title><rect x="74.9020%" y="789" width="0.0512%" height="15" fill="rgb(231,11,52)" fg:x="8786" fg:w="6"/><text x="75.1162%" y="799.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.02%)</title><rect x="74.9361%" y="773" width="0.0171%" height="15" fill="rgb(251,188,47)" fg:x="8790" fg:w="2"/><text x="75.1503%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.02%)</title><rect x="74.9616%" y="885" width="0.0171%" height="15" fill="rgb(234,224,53)" fg:x="8793" fg:w="2"/><text x="75.1759%" y="895.50"></text></g><g><title>__x86_return_thunk (3 samples, 0.03%)</title><rect x="74.9957%" y="869" width="0.0256%" height="15" fill="rgb(211,8,20)" fg:x="8797" fg:w="3"/><text x="75.2100%" y="879.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.02%)</title><rect x="75.0043%" y="853" width="0.0171%" height="15" fill="rgb(210,87,27)" fg:x="8798" fg:w="2"/><text x="75.2185%" y="863.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="75.2430%" y="741" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="751.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="75.2430%" y="725" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="735.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="75.2430%" y="709" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="719.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="75.2430%" y="693" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="703.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="75.2430%" y="677" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="687.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="75.2430%" y="661" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="671.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="75.2430%" y="645" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="655.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.03%)</title><rect x="75.2430%" y="629" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="639.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.03%)</title><rect x="75.2430%" y="613" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="623.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="75.2430%" y="597" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="607.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="75.2430%" y="581" width="0.0256%" height="15" fill="rgb(224,38,0)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="591.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="75.2430%" y="565" width="0.0256%" height="15" fill="rgb(228,220,18)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="575.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.03%)</title><rect x="75.2430%" y="549" width="0.0256%" height="15" fill="rgb(224,50,47)" fg:x="8826" fg:w="3"/><text x="75.4573%" y="559.50"></text></g><g><title>asm_common_interrupt (5 samples, 0.04%)</title><rect x="75.2430%" y="837" width="0.0426%" height="15" fill="rgb(248,227,45)" fg:x="8826" fg:w="5"/><text x="75.4573%" y="847.50"></text></g><g><title>common_interrupt (5 samples, 0.04%)</title><rect x="75.2430%" y="821" width="0.0426%" height="15" fill="rgb(250,67,32)" fg:x="8826" fg:w="5"/><text x="75.4573%" y="831.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.04%)</title><rect x="75.2430%" y="805" width="0.0426%" height="15" fill="rgb(240,18,12)" fg:x="8826" fg:w="5"/><text x="75.4573%" y="815.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.04%)</title><rect x="75.2430%" y="789" width="0.0426%" height="15" fill="rgb(223,89,53)" fg:x="8826" fg:w="5"/><text x="75.4573%" y="799.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.04%)</title><rect x="75.2430%" y="773" width="0.0426%" height="15" fill="rgb(208,184,36)" fg:x="8826" fg:w="5"/><text x="75.4573%" y="783.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.04%)</title><rect x="75.2430%" y="757" width="0.0426%" height="15" fill="rgb(249,91,22)" fg:x="8826" fg:w="5"/><text x="75.4573%" y="767.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.02%)</title><rect x="75.2685%" y="741" width="0.0171%" height="15" fill="rgb(220,151,48)" fg:x="8829" fg:w="2"/><text x="75.4828%" y="751.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.02%)</title><rect x="75.2685%" y="725" width="0.0171%" height="15" fill="rgb(218,189,37)" fg:x="8829" fg:w="2"/><text x="75.4828%" y="735.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.02%)</title><rect x="75.2685%" y="709" width="0.0171%" height="15" fill="rgb(238,207,14)" fg:x="8829" fg:w="2"/><text x="75.4828%" y="719.50"></text></g><g><title>__check_object_size (4 samples, 0.03%)</title><rect x="76.5729%" y="821" width="0.0341%" height="15" fill="rgb(218,1,22)" fg:x="8982" fg:w="4"/><text x="76.7872%" y="831.50"></text></g><g><title>__fdget (14 samples, 0.12%)</title><rect x="76.6070%" y="821" width="0.1194%" height="15" fill="rgb(239,45,19)" fg:x="8986" fg:w="14"/><text x="76.8213%" y="831.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="76.7093%" y="805" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="8998" fg:w="2"/><text x="76.9236%" y="815.50"></text></g><g><title>__irqentry_text_start (23 samples, 0.20%)</title><rect x="78.6701%" y="805" width="0.1961%" height="15" fill="rgb(229,107,3)" fg:x="9228" fg:w="23"/><text x="78.8844%" y="815.50"></text></g><g><title>raw_local_deliver (2 samples, 0.02%)</title><rect x="78.8832%" y="549" width="0.0171%" height="15" fill="rgb(236,87,27)" fg:x="9253" fg:w="2"/><text x="79.0975%" y="559.50"></text></g><g><title>__kfree_skb (2 samples, 0.02%)</title><rect x="78.9258%" y="485" width="0.0171%" height="15" fill="rgb(208,195,26)" fg:x="9258" fg:w="2"/><text x="79.1401%" y="495.50"></text></g><g><title>tcp_v4_do_rcv (7 samples, 0.06%)</title><rect x="78.9088%" y="533" width="0.0597%" height="15" fill="rgb(228,220,18)" fg:x="9256" fg:w="7"/><text x="79.1231%" y="543.50"></text></g><g><title>tcp_rcv_established (7 samples, 0.06%)</title><rect x="78.9088%" y="517" width="0.0597%" height="15" fill="rgb(224,50,47)" fg:x="9256" fg:w="7"/><text x="79.1231%" y="527.50"></text></g><g><title>tcp_ack (5 samples, 0.04%)</title><rect x="78.9258%" y="501" width="0.0426%" height="15" fill="rgb(213,228,3)" fg:x="9258" fg:w="5"/><text x="79.1401%" y="511.50"></text></g><g><title>napi_complete_done (12 samples, 0.10%)</title><rect x="78.8747%" y="677" width="0.1023%" height="15" fill="rgb(226,216,13)" fg:x="9252" fg:w="12"/><text x="79.0890%" y="687.50"></text></g><g><title>netif_receive_skb_list_internal (12 samples, 0.10%)</title><rect x="78.8747%" y="661" width="0.1023%" height="15" fill="rgb(216,153,44)" fg:x="9252" fg:w="12"/><text x="79.0890%" y="671.50"></text></g><g><title>__netif_receive_skb_list_core (12 samples, 0.10%)</title><rect x="78.8747%" y="645" width="0.1023%" height="15" fill="rgb(227,176,26)" fg:x="9252" fg:w="12"/><text x="79.0890%" y="655.50"></text></g><g><title>ip_list_rcv (12 samples, 0.10%)</title><rect x="78.8747%" y="629" width="0.1023%" height="15" fill="rgb(215,38,16)" fg:x="9252" fg:w="12"/><text x="79.0890%" y="639.50"></text></g><g><title>ip_sublist_rcv (11 samples, 0.09%)</title><rect x="78.8832%" y="613" width="0.0938%" height="15" fill="rgb(207,166,9)" fg:x="9253" fg:w="11"/><text x="79.0975%" y="623.50"></text></g><g><title>ip_sublist_rcv_finish (11 samples, 0.09%)</title><rect x="78.8832%" y="597" width="0.0938%" height="15" fill="rgb(223,178,14)" fg:x="9253" fg:w="11"/><text x="79.0975%" y="607.50"></text></g><g><title>ip_local_deliver_finish (11 samples, 0.09%)</title><rect x="78.8832%" y="581" width="0.0938%" height="15" fill="rgb(220,94,29)" fg:x="9253" fg:w="11"/><text x="79.0975%" y="591.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 0.09%)</title><rect x="78.8832%" y="565" width="0.0938%" height="15" fill="rgb(207,19,13)" fg:x="9253" fg:w="11"/><text x="79.0975%" y="575.50"></text></g><g><title>tcp_v4_rcv (9 samples, 0.08%)</title><rect x="78.9003%" y="549" width="0.0767%" height="15" fill="rgb(224,38,0)" fg:x="9255" fg:w="9"/><text x="79.1145%" y="559.50"></text></g><g><title>napi_gro_receive (2 samples, 0.02%)</title><rect x="78.9770%" y="677" width="0.0171%" height="15" fill="rgb(248,45,29)" fg:x="9264" fg:w="2"/><text x="79.1913%" y="687.50"></text></g><g><title>virtnet_poll (15 samples, 0.13%)</title><rect x="78.8747%" y="693" width="0.1279%" height="15" fill="rgb(213,187,12)" fg:x="9252" fg:w="15"/><text x="79.0890%" y="703.50"></text></g><g><title>net_rx_action (18 samples, 0.15%)</title><rect x="78.8747%" y="709" width="0.1535%" height="15" fill="rgb(231,11,52)" fg:x="9252" fg:w="18"/><text x="79.0890%" y="719.50"></text></g><g><title>virtnet_poll_tx (3 samples, 0.03%)</title><rect x="79.0026%" y="693" width="0.0256%" height="15" fill="rgb(251,188,47)" fg:x="9267" fg:w="3"/><text x="79.2168%" y="703.50"></text></g><g><title>free_old_xmit_skbs (3 samples, 0.03%)</title><rect x="79.0026%" y="677" width="0.0256%" height="15" fill="rgb(235,178,6)" fg:x="9267" fg:w="3"/><text x="79.2168%" y="687.50"></text></g><g><title>asm_common_interrupt (24 samples, 0.20%)</title><rect x="78.8662%" y="805" width="0.2046%" height="15" fill="rgb(248,227,45)" fg:x="9251" fg:w="24"/><text x="79.0804%" y="815.50"></text></g><g><title>common_interrupt (24 samples, 0.20%)</title><rect x="78.8662%" y="789" width="0.2046%" height="15" fill="rgb(250,67,32)" fg:x="9251" fg:w="24"/><text x="79.0804%" y="799.50"></text></g><g><title>irq_exit_rcu (24 samples, 0.20%)</title><rect x="78.8662%" y="773" width="0.2046%" height="15" fill="rgb(240,18,12)" fg:x="9251" fg:w="24"/><text x="79.0804%" y="783.50"></text></g><g><title>do_softirq_own_stack (24 samples, 0.20%)</title><rect x="78.8662%" y="757" width="0.2046%" height="15" fill="rgb(223,89,53)" fg:x="9251" fg:w="24"/><text x="79.0804%" y="767.50"></text></g><g><title>asm_call_sysvec_on_stack (24 samples, 0.20%)</title><rect x="78.8662%" y="741" width="0.2046%" height="15" fill="rgb(208,184,36)" fg:x="9251" fg:w="24"/><text x="79.0804%" y="751.50"></text></g><g><title>__softirqentry_text_start (24 samples, 0.20%)</title><rect x="78.8662%" y="725" width="0.2046%" height="15" fill="rgb(249,91,22)" fg:x="9251" fg:w="24"/><text x="79.0804%" y="735.50"></text></g><g><title>tasklet_action_common.constprop.0 (5 samples, 0.04%)</title><rect x="79.0281%" y="709" width="0.0426%" height="15" fill="rgb(220,151,48)" fg:x="9270" fg:w="5"/><text x="79.2424%" y="719.50"></text></g><g><title>tcp_tasklet_func (5 samples, 0.04%)</title><rect x="79.0281%" y="693" width="0.0426%" height="15" fill="rgb(218,189,37)" fg:x="9270" fg:w="5"/><text x="79.2424%" y="703.50"></text></g><g><title>tcp_tsq_handler (5 samples, 0.04%)</title><rect x="79.0281%" y="677" width="0.0426%" height="15" fill="rgb(238,207,14)" fg:x="9270" fg:w="5"/><text x="79.2424%" y="687.50"></text></g><g><title>tcp_write_xmit (4 samples, 0.03%)</title><rect x="79.0367%" y="661" width="0.0341%" height="15" fill="rgb(236,72,36)" fg:x="9271" fg:w="4"/><text x="79.2509%" y="671.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.03%)</title><rect x="79.0367%" y="645" width="0.0341%" height="15" fill="rgb(238,106,36)" fg:x="9271" fg:w="4"/><text x="79.2509%" y="655.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.03%)</title><rect x="79.0367%" y="629" width="0.0341%" height="15" fill="rgb(224,11,5)" fg:x="9271" fg:w="4"/><text x="79.2509%" y="639.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.03%)</title><rect x="79.0367%" y="613" width="0.0341%" height="15" fill="rgb(219,227,11)" fg:x="9271" fg:w="4"/><text x="79.2509%" y="623.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.03%)</title><rect x="79.0367%" y="597" width="0.0341%" height="15" fill="rgb(232,116,37)" fg:x="9271" fg:w="4"/><text x="79.2509%" y="607.50"></text></g><g><title>__qdisc_run (4 samples, 0.03%)</title><rect x="79.0367%" y="581" width="0.0341%" height="15" fill="rgb(252,144,25)" fg:x="9271" fg:w="4"/><text x="79.2509%" y="591.50"></text></g><g><title>sch_direct_xmit (3 samples, 0.03%)</title><rect x="79.0452%" y="565" width="0.0256%" height="15" fill="rgb(222,128,44)" fg:x="9272" fg:w="3"/><text x="79.2595%" y="575.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.03%)</title><rect x="79.0452%" y="549" width="0.0256%" height="15" fill="rgb(251,86,39)" fg:x="9272" fg:w="3"/><text x="79.2595%" y="559.50"></text></g><g><title>start_xmit (3 samples, 0.03%)</title><rect x="79.0452%" y="533" width="0.0256%" height="15" fill="rgb(211,140,13)" fg:x="9272" fg:w="3"/><text x="79.2595%" y="543.50"></text></g><g><title>virtqueue_notify (3 samples, 0.03%)</title><rect x="79.0452%" y="517" width="0.0256%" height="15" fill="rgb(219,119,18)" fg:x="9272" fg:w="3"/><text x="79.2595%" y="527.50"></text></g><g><title>vp_notify (3 samples, 0.03%)</title><rect x="79.0452%" y="501" width="0.0256%" height="15" fill="rgb(230,193,37)" fg:x="9272" fg:w="3"/><text x="79.2595%" y="511.50"></text></g><g><title>iowrite16 (3 samples, 0.03%)</title><rect x="79.0452%" y="485" width="0.0256%" height="15" fill="rgb(218,139,37)" fg:x="9272" fg:w="3"/><text x="79.2595%" y="495.50"></text></g><g><title>__fget_light (277 samples, 2.36%)</title><rect x="76.7263%" y="821" width="2.3615%" height="15" fill="rgb(243,103,32)" fg:x="9000" fg:w="277"/><text x="76.9406%" y="831.50">__..</text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="79.0708%" y="805" width="0.0171%" height="15" fill="rgb(209,17,43)" fg:x="9275" fg:w="2"/><text x="79.2850%" y="815.50"></text></g><g><title>__irqentry_text_start (21 samples, 0.18%)</title><rect x="79.0878%" y="821" width="0.1790%" height="15" fill="rgb(229,107,3)" fg:x="9277" fg:w="21"/><text x="79.3021%" y="831.50"></text></g><g><title>__x86_return_thunk (3 samples, 0.03%)</title><rect x="79.2754%" y="821" width="0.0256%" height="15" fill="rgb(211,8,20)" fg:x="9299" fg:w="3"/><text x="79.4896%" y="831.50"></text></g><g><title>srso_safe_ret_alias (3 samples, 0.03%)</title><rect x="79.2754%" y="805" width="0.0256%" height="15" fill="rgb(210,87,27)" fg:x="9299" fg:w="3"/><text x="79.4896%" y="815.50"></text></g><g><title>_copy_from_user (13 samples, 0.11%)</title><rect x="79.3009%" y="821" width="0.1108%" height="15" fill="rgb(224,68,34)" fg:x="9302" fg:w="13"/><text x="79.5152%" y="831.50"></text></g><g><title>copy_user_generic_string (8 samples, 0.07%)</title><rect x="79.3436%" y="805" width="0.0682%" height="15" fill="rgb(233,29,30)" fg:x="9307" fg:w="8"/><text x="79.5578%" y="815.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="79.3947%" y="789" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="9313" fg:w="2"/><text x="79.6090%" y="799.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="79.3947%" y="773" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="9313" fg:w="2"/><text x="79.6090%" y="783.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="79.3947%" y="757" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="9313" fg:w="2"/><text x="79.6090%" y="767.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="79.3947%" y="741" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="9313" fg:w="2"/><text x="79.6090%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="79.3947%" y="725" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="9313" fg:w="2"/><text x="79.6090%" y="735.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="79.3947%" y="709" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="9313" fg:w="2"/><text x="79.6090%" y="719.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="79.3947%" y="693" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="9313" fg:w="2"/><text x="79.6090%" y="703.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="79.3947%" y="677" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="9313" fg:w="2"/><text x="79.6090%" y="687.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="79.4288%" y="485" width="0.0171%" height="15" fill="rgb(238,106,36)" fg:x="9317" fg:w="2"/><text x="79.6431%" y="495.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="79.4288%" y="469" width="0.0171%" height="15" fill="rgb(224,11,5)" fg:x="9317" fg:w="2"/><text x="79.6431%" y="479.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="79.4288%" y="453" width="0.0171%" height="15" fill="rgb(219,227,11)" fg:x="9317" fg:w="2"/><text x="79.6431%" y="463.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="79.4288%" y="437" width="0.0171%" height="15" fill="rgb(232,116,37)" fg:x="9317" fg:w="2"/><text x="79.6431%" y="447.50"></text></g><g><title>__qdisc_run (2 samples, 0.02%)</title><rect x="79.4288%" y="421" width="0.0171%" height="15" fill="rgb(252,144,25)" fg:x="9317" fg:w="2"/><text x="79.6431%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.03%)</title><rect x="79.4288%" y="517" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="9317" fg:w="3"/><text x="79.6431%" y="527.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.03%)</title><rect x="79.4288%" y="501" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="9317" fg:w="3"/><text x="79.6431%" y="511.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="79.4288%" y="709" width="0.0341%" height="15" fill="rgb(213,187,12)" fg:x="9317" fg:w="4"/><text x="79.6431%" y="719.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="79.4288%" y="693" width="0.0341%" height="15" fill="rgb(226,216,13)" fg:x="9317" fg:w="4"/><text x="79.6431%" y="703.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="79.4288%" y="677" width="0.0341%" height="15" fill="rgb(216,153,44)" fg:x="9317" fg:w="4"/><text x="79.6431%" y="687.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="79.4288%" y="661" width="0.0341%" height="15" fill="rgb(227,176,26)" fg:x="9317" fg:w="4"/><text x="79.6431%" y="671.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="79.4288%" y="645" width="0.0341%" height="15" fill="rgb(215,38,16)" fg:x="9317" fg:w="4"/><text x="79.6431%" y="655.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="79.4288%" y="629" width="0.0341%" height="15" fill="rgb(207,166,9)" fg:x="9317" fg:w="4"/><text x="79.6431%" y="639.50"></text></g><g><title>ip_sublist_rcv_finish (4 samples, 0.03%)</title><rect x="79.4288%" y="613" width="0.0341%" height="15" fill="rgb(223,178,14)" fg:x="9317" fg:w="4"/><text x="79.6431%" y="623.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="79.4288%" y="597" width="0.0341%" height="15" fill="rgb(220,94,29)" fg:x="9317" fg:w="4"/><text x="79.6431%" y="607.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="79.4288%" y="581" width="0.0341%" height="15" fill="rgb(207,19,13)" fg:x="9317" fg:w="4"/><text x="79.6431%" y="591.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.03%)</title><rect x="79.4288%" y="565" width="0.0341%" height="15" fill="rgb(224,38,0)" fg:x="9317" fg:w="4"/><text x="79.6431%" y="575.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.03%)</title><rect x="79.4288%" y="549" width="0.0341%" height="15" fill="rgb(228,220,18)" fg:x="9317" fg:w="4"/><text x="79.6431%" y="559.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.03%)</title><rect x="79.4288%" y="533" width="0.0341%" height="15" fill="rgb(224,50,47)" fg:x="9317" fg:w="4"/><text x="79.6431%" y="543.50"></text></g><g><title>net_rx_action (6 samples, 0.05%)</title><rect x="79.4203%" y="725" width="0.0512%" height="15" fill="rgb(231,11,52)" fg:x="9316" fg:w="6"/><text x="79.6346%" y="735.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="79.4714%" y="661" width="0.0171%" height="15" fill="rgb(238,106,36)" fg:x="9322" fg:w="2"/><text x="79.6857%" y="671.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="79.4714%" y="645" width="0.0171%" height="15" fill="rgb(224,11,5)" fg:x="9322" fg:w="2"/><text x="79.6857%" y="655.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="79.4714%" y="629" width="0.0171%" height="15" fill="rgb(219,227,11)" fg:x="9322" fg:w="2"/><text x="79.6857%" y="639.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="79.4714%" y="613" width="0.0171%" height="15" fill="rgb(232,116,37)" fg:x="9322" fg:w="2"/><text x="79.6857%" y="623.50"></text></g><g><title>__qdisc_run (2 samples, 0.02%)</title><rect x="79.4714%" y="597" width="0.0171%" height="15" fill="rgb(252,144,25)" fg:x="9322" fg:w="2"/><text x="79.6857%" y="607.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.02%)</title><rect x="79.4714%" y="581" width="0.0171%" height="15" fill="rgb(222,128,44)" fg:x="9322" fg:w="2"/><text x="79.6857%" y="591.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="79.4714%" y="565" width="0.0171%" height="15" fill="rgb(251,86,39)" fg:x="9322" fg:w="2"/><text x="79.6857%" y="575.50"></text></g><g><title>start_xmit (2 samples, 0.02%)</title><rect x="79.4714%" y="549" width="0.0171%" height="15" fill="rgb(211,140,13)" fg:x="9322" fg:w="2"/><text x="79.6857%" y="559.50"></text></g><g><title>asm_common_interrupt (10 samples, 0.09%)</title><rect x="79.4118%" y="821" width="0.0853%" height="15" fill="rgb(248,227,45)" fg:x="9315" fg:w="10"/><text x="79.6261%" y="831.50"></text></g><g><title>common_interrupt (10 samples, 0.09%)</title><rect x="79.4118%" y="805" width="0.0853%" height="15" fill="rgb(250,67,32)" fg:x="9315" fg:w="10"/><text x="79.6261%" y="815.50"></text></g><g><title>irq_exit_rcu (10 samples, 0.09%)</title><rect x="79.4118%" y="789" width="0.0853%" height="15" fill="rgb(240,18,12)" fg:x="9315" fg:w="10"/><text x="79.6261%" y="799.50"></text></g><g><title>do_softirq_own_stack (10 samples, 0.09%)</title><rect x="79.4118%" y="773" width="0.0853%" height="15" fill="rgb(223,89,53)" fg:x="9315" fg:w="10"/><text x="79.6261%" y="783.50"></text></g><g><title>asm_call_sysvec_on_stack (10 samples, 0.09%)</title><rect x="79.4118%" y="757" width="0.0853%" height="15" fill="rgb(208,184,36)" fg:x="9315" fg:w="10"/><text x="79.6261%" y="767.50"></text></g><g><title>__softirqentry_text_start (10 samples, 0.09%)</title><rect x="79.4118%" y="741" width="0.0853%" height="15" fill="rgb(249,91,22)" fg:x="9315" fg:w="10"/><text x="79.6261%" y="751.50"></text></g><g><title>tasklet_action_common.constprop.0 (3 samples, 0.03%)</title><rect x="79.4714%" y="725" width="0.0256%" height="15" fill="rgb(220,151,48)" fg:x="9322" fg:w="3"/><text x="79.6857%" y="735.50"></text></g><g><title>tcp_tasklet_func (3 samples, 0.03%)</title><rect x="79.4714%" y="709" width="0.0256%" height="15" fill="rgb(218,189,37)" fg:x="9322" fg:w="3"/><text x="79.6857%" y="719.50"></text></g><g><title>tcp_tsq_handler (3 samples, 0.03%)</title><rect x="79.4714%" y="693" width="0.0256%" height="15" fill="rgb(238,207,14)" fg:x="9322" fg:w="3"/><text x="79.6857%" y="703.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.03%)</title><rect x="79.4714%" y="677" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="9322" fg:w="3"/><text x="79.6857%" y="687.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.03%)</title><rect x="79.4970%" y="821" width="0.0341%" height="15" fill="rgb(209,17,43)" fg:x="9325" fg:w="4"/><text x="79.7113%" y="831.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="79.5055%" y="805" width="0.0256%" height="15" fill="rgb(218,44,13)" fg:x="9326" fg:w="3"/><text x="79.7198%" y="815.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="79.5141%" y="789" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="9327" fg:w="2"/><text x="79.7284%" y="799.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="79.5141%" y="773" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="9327" fg:w="2"/><text x="79.7284%" y="783.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="79.5141%" y="757" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="9327" fg:w="2"/><text x="79.7284%" y="767.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="79.5141%" y="741" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="9327" fg:w="2"/><text x="79.7284%" y="751.50"></text></g><g><title>__free_pages (16 samples, 0.14%)</title><rect x="79.8636%" y="805" width="0.1364%" height="15" fill="rgb(234,191,18)" fg:x="9368" fg:w="16"/><text x="80.0779%" y="815.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.03%)</title><rect x="80.0000%" y="805" width="0.0256%" height="15" fill="rgb(229,107,3)" fg:x="9384" fg:w="3"/><text x="80.2143%" y="815.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="80.1279%" y="789" width="0.0341%" height="15" fill="rgb(229,107,3)" fg:x="9399" fg:w="4"/><text x="80.3422%" y="799.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="80.1620%" y="453" width="0.0171%" height="15" fill="rgb(238,106,36)" fg:x="9403" fg:w="2"/><text x="80.3763%" y="463.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="80.1620%" y="661" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="671.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="80.1620%" y="645" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="655.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="80.1620%" y="629" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="639.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="80.1620%" y="613" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="623.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="80.1620%" y="597" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="607.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.03%)</title><rect x="80.1620%" y="581" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="591.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.03%)</title><rect x="80.1620%" y="565" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="575.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="80.1620%" y="549" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="559.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="80.1620%" y="533" width="0.0256%" height="15" fill="rgb(224,38,0)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="543.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="80.1620%" y="517" width="0.0256%" height="15" fill="rgb(228,220,18)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="527.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.03%)</title><rect x="80.1620%" y="501" width="0.0256%" height="15" fill="rgb(224,50,47)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.03%)</title><rect x="80.1620%" y="485" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="495.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.03%)</title><rect x="80.1620%" y="469" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="9403" fg:w="3"/><text x="80.3763%" y="479.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="80.1620%" y="677" width="0.0341%" height="15" fill="rgb(213,187,12)" fg:x="9403" fg:w="4"/><text x="80.3763%" y="687.50"></text></g><g><title>net_rx_action (5 samples, 0.04%)</title><rect x="80.1620%" y="693" width="0.0426%" height="15" fill="rgb(231,11,52)" fg:x="9403" fg:w="5"/><text x="80.3763%" y="703.50"></text></g><g><title>_raw_spin_unlock_irqrestore (23 samples, 0.20%)</title><rect x="80.0256%" y="805" width="0.1961%" height="15" fill="rgb(216,183,20)" fg:x="9387" fg:w="23"/><text x="80.2399%" y="815.50"></text></g><g><title>asm_common_interrupt (7 samples, 0.06%)</title><rect x="80.1620%" y="789" width="0.0597%" height="15" fill="rgb(248,227,45)" fg:x="9403" fg:w="7"/><text x="80.3763%" y="799.50"></text></g><g><title>common_interrupt (7 samples, 0.06%)</title><rect x="80.1620%" y="773" width="0.0597%" height="15" fill="rgb(250,67,32)" fg:x="9403" fg:w="7"/><text x="80.3763%" y="783.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.06%)</title><rect x="80.1620%" y="757" width="0.0597%" height="15" fill="rgb(240,18,12)" fg:x="9403" fg:w="7"/><text x="80.3763%" y="767.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.06%)</title><rect x="80.1620%" y="741" width="0.0597%" height="15" fill="rgb(223,89,53)" fg:x="9403" fg:w="7"/><text x="80.3763%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (7 samples, 0.06%)</title><rect x="80.1620%" y="725" width="0.0597%" height="15" fill="rgb(208,184,36)" fg:x="9403" fg:w="7"/><text x="80.3763%" y="735.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.06%)</title><rect x="80.1620%" y="709" width="0.0597%" height="15" fill="rgb(249,91,22)" fg:x="9403" fg:w="7"/><text x="80.3763%" y="719.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.02%)</title><rect x="80.2046%" y="693" width="0.0171%" height="15" fill="rgb(220,151,48)" fg:x="9408" fg:w="2"/><text x="80.4189%" y="703.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.02%)</title><rect x="80.2046%" y="677" width="0.0171%" height="15" fill="rgb(218,189,37)" fg:x="9408" fg:w="2"/><text x="80.4189%" y="687.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.02%)</title><rect x="80.2046%" y="661" width="0.0171%" height="15" fill="rgb(238,207,14)" fg:x="9408" fg:w="2"/><text x="80.4189%" y="671.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="80.2046%" y="645" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="9408" fg:w="2"/><text x="80.4189%" y="655.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="80.2217%" y="805" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="9410" fg:w="2"/><text x="80.4359%" y="815.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="80.2217%" y="789" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="9410" fg:w="2"/><text x="80.4359%" y="799.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="80.2217%" y="773" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="9410" fg:w="2"/><text x="80.4359%" y="783.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="80.2217%" y="757" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="9410" fg:w="2"/><text x="80.4359%" y="767.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="80.2217%" y="741" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="9410" fg:w="2"/><text x="80.4359%" y="751.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="80.2217%" y="725" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="9410" fg:w="2"/><text x="80.4359%" y="735.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="80.2217%" y="709" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="9410" fg:w="2"/><text x="80.4359%" y="719.50"></text></g><g><title>fput (15 samples, 0.13%)</title><rect x="80.2387%" y="805" width="0.1279%" height="15" fill="rgb(248,98,6)" fg:x="9412" fg:w="15"/><text x="80.4530%" y="815.50"></text></g><g><title>fput_many (8 samples, 0.07%)</title><rect x="80.3666%" y="805" width="0.0682%" height="15" fill="rgb(223,66,3)" fg:x="9427" fg:w="8"/><text x="80.5809%" y="815.50"></text></g><g><title>free_pages (7 samples, 0.06%)</title><rect x="80.4348%" y="805" width="0.0597%" height="15" fill="rgb(221,114,6)" fg:x="9435" fg:w="7"/><text x="80.6491%" y="815.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="80.4774%" y="789" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="9440" fg:w="2"/><text x="80.6917%" y="799.50"></text></g><g><title>free_pcp_prepare (9 samples, 0.08%)</title><rect x="80.6479%" y="789" width="0.0767%" height="15" fill="rgb(223,51,41)" fg:x="9460" fg:w="9"/><text x="80.8622%" y="799.50"></text></g><g><title>kernel_poison_pages (4 samples, 0.03%)</title><rect x="80.6905%" y="773" width="0.0341%" height="15" fill="rgb(240,82,29)" fg:x="9465" fg:w="4"/><text x="80.9048%" y="783.50"></text></g><g><title>free_unref_page (34 samples, 0.29%)</title><rect x="80.4945%" y="805" width="0.2899%" height="15" fill="rgb(212,90,28)" fg:x="9442" fg:w="34"/><text x="80.7087%" y="815.50"></text></g><g><title>free_unref_page_commit (7 samples, 0.06%)</title><rect x="80.7246%" y="789" width="0.0597%" height="15" fill="rgb(214,32,27)" fg:x="9469" fg:w="7"/><text x="80.9389%" y="799.50"></text></g><g><title>__list_add_valid (4 samples, 0.03%)</title><rect x="80.7502%" y="773" width="0.0341%" height="15" fill="rgb(206,79,8)" fg:x="9472" fg:w="4"/><text x="80.9645%" y="783.50"></text></g><g><title>__list_del_entry_valid (24 samples, 0.20%)</title><rect x="80.9889%" y="789" width="0.2046%" height="15" fill="rgb(224,110,12)" fg:x="9500" fg:w="24"/><text x="81.2032%" y="799.50"></text></g><g><title>_raw_spin_lock_irqsave (60 samples, 0.51%)</title><rect x="81.1935%" y="789" width="0.5115%" height="15" fill="rgb(206,213,41)" fg:x="9524" fg:w="60"/><text x="81.4078%" y="799.50"></text></g><g><title>poll_freewait (256 samples, 2.18%)</title><rect x="79.5311%" y="821" width="2.1824%" height="15" fill="rgb(240,0,18)" fg:x="9329" fg:w="256"/><text x="79.7454%" y="831.50">po..</text></g><g><title>remove_wait_queue (109 samples, 0.93%)</title><rect x="80.7843%" y="805" width="0.9292%" height="15" fill="rgb(247,210,21)" fg:x="9476" fg:w="109"/><text x="80.9986%" y="815.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="81.7903%" y="805" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="9594" fg:w="2"/><text x="82.0046%" y="815.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="81.8159%" y="661" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="671.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="81.8159%" y="645" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="655.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="81.8159%" y="629" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="639.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="81.8159%" y="613" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="623.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="81.8159%" y="597" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="607.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.03%)</title><rect x="81.8159%" y="581" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="591.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.03%)</title><rect x="81.8159%" y="565" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="575.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="81.8159%" y="549" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="559.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="81.8159%" y="533" width="0.0256%" height="15" fill="rgb(224,38,0)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="543.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="81.8159%" y="517" width="0.0256%" height="15" fill="rgb(228,220,18)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="527.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.03%)</title><rect x="81.8159%" y="501" width="0.0256%" height="15" fill="rgb(224,50,47)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.03%)</title><rect x="81.8159%" y="485" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="495.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.03%)</title><rect x="81.8159%" y="469" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="479.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.03%)</title><rect x="81.8159%" y="453" width="0.0256%" height="15" fill="rgb(238,106,36)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="463.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.03%)</title><rect x="81.8159%" y="437" width="0.0256%" height="15" fill="rgb(224,11,5)" fg:x="9597" fg:w="3"/><text x="82.0301%" y="447.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="81.8244%" y="421" width="0.0171%" height="15" fill="rgb(219,227,11)" fg:x="9598" fg:w="2"/><text x="82.0387%" y="431.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.03%)</title><rect x="81.8159%" y="789" width="0.0341%" height="15" fill="rgb(248,227,45)" fg:x="9597" fg:w="4"/><text x="82.0301%" y="799.50"></text></g><g><title>common_interrupt (4 samples, 0.03%)</title><rect x="81.8159%" y="773" width="0.0341%" height="15" fill="rgb(250,67,32)" fg:x="9597" fg:w="4"/><text x="82.0301%" y="783.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="81.8159%" y="757" width="0.0341%" height="15" fill="rgb(240,18,12)" fg:x="9597" fg:w="4"/><text x="82.0301%" y="767.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.03%)</title><rect x="81.8159%" y="741" width="0.0341%" height="15" fill="rgb(223,89,53)" fg:x="9597" fg:w="4"/><text x="82.0301%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="81.8159%" y="725" width="0.0341%" height="15" fill="rgb(208,184,36)" fg:x="9597" fg:w="4"/><text x="82.0301%" y="735.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="81.8159%" y="709" width="0.0341%" height="15" fill="rgb(249,91,22)" fg:x="9597" fg:w="4"/><text x="82.0301%" y="719.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="81.8159%" y="693" width="0.0341%" height="15" fill="rgb(231,11,52)" fg:x="9597" fg:w="4"/><text x="82.0301%" y="703.50"></text></g><g><title>virtnet_poll (4 samples, 0.03%)</title><rect x="81.8159%" y="677" width="0.0341%" height="15" fill="rgb(213,187,12)" fg:x="9597" fg:w="4"/><text x="82.0301%" y="687.50"></text></g><g><title>_raw_spin_unlock_irqrestore (6 samples, 0.05%)</title><rect x="81.8073%" y="805" width="0.0512%" height="15" fill="rgb(216,183,20)" fg:x="9596" fg:w="6"/><text x="82.0216%" y="815.50"></text></g><g><title>hrtimer_active (2 samples, 0.02%)</title><rect x="81.8585%" y="805" width="0.0171%" height="15" fill="rgb(208,227,6)" fg:x="9602" fg:w="2"/><text x="82.0728%" y="815.50"></text></g><g><title>__hrtimer_init (11 samples, 0.09%)</title><rect x="81.9096%" y="789" width="0.0938%" height="15" fill="rgb(231,81,13)" fg:x="9608" fg:w="11"/><text x="82.1239%" y="799.50"></text></g><g><title>hrtimer_init_sleeper (16 samples, 0.14%)</title><rect x="81.8755%" y="805" width="0.1364%" height="15" fill="rgb(224,203,45)" fg:x="9604" fg:w="16"/><text x="82.0898%" y="815.50"></text></g><g><title>enqueue_hrtimer (18 samples, 0.15%)</title><rect x="82.0972%" y="789" width="0.1535%" height="15" fill="rgb(218,84,40)" fg:x="9630" fg:w="18"/><text x="82.3115%" y="799.50"></text></g><g><title>timerqueue_add (18 samples, 0.15%)</title><rect x="82.0972%" y="773" width="0.1535%" height="15" fill="rgb(235,22,27)" fg:x="9630" fg:w="18"/><text x="82.3115%" y="783.50"></text></g><g><title>hrtimer_start_range_ns (41 samples, 0.35%)</title><rect x="82.0119%" y="805" width="0.3495%" height="15" fill="rgb(231,227,51)" fg:x="9620" fg:w="41"/><text x="82.2262%" y="815.50"></text></g><g><title>get_nohz_timer_target (13 samples, 0.11%)</title><rect x="82.2506%" y="789" width="0.1108%" height="15" fill="rgb(247,59,26)" fg:x="9648" fg:w="13"/><text x="82.4649%" y="799.50"></text></g><g><title>__remove_hrtimer (12 samples, 0.10%)</title><rect x="82.3700%" y="789" width="0.1023%" height="15" fill="rgb(212,161,30)" fg:x="9662" fg:w="12"/><text x="82.5843%" y="799.50"></text></g><g><title>timerqueue_del (12 samples, 0.10%)</title><rect x="82.3700%" y="773" width="0.1023%" height="15" fill="rgb(218,213,22)" fg:x="9662" fg:w="12"/><text x="82.5843%" y="783.50"></text></g><g><title>rb_erase (12 samples, 0.10%)</title><rect x="82.3700%" y="757" width="0.1023%" height="15" fill="rgb(234,120,13)" fg:x="9662" fg:w="12"/><text x="82.5843%" y="767.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="82.4723%" y="789" width="0.0171%" height="15" fill="rgb(206,213,41)" fg:x="9674" fg:w="2"/><text x="82.6866%" y="799.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (18 samples, 0.15%)</title><rect x="82.3615%" y="805" width="0.1535%" height="15" fill="rgb(221,182,24)" fg:x="9661" fg:w="18"/><text x="82.5758%" y="815.50"></text></g><g><title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="82.4893%" y="789" width="0.0256%" height="15" fill="rgb(216,183,20)" fg:x="9676" fg:w="3"/><text x="82.7036%" y="799.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="82.4893%" y="773" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="9676" fg:w="3"/><text x="82.7036%" y="783.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="82.4893%" y="757" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="9676" fg:w="3"/><text x="82.7036%" y="767.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="82.4893%" y="741" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="9676" fg:w="3"/><text x="82.7036%" y="751.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="82.4893%" y="725" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="9676" fg:w="3"/><text x="82.7036%" y="735.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="82.4893%" y="709" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="9676" fg:w="3"/><text x="82.7036%" y="719.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="82.4893%" y="693" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="9676" fg:w="3"/><text x="82.7036%" y="703.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.02%)</title><rect x="82.4979%" y="677" width="0.0171%" height="15" fill="rgb(220,151,48)" fg:x="9677" fg:w="2"/><text x="82.7122%" y="687.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.02%)</title><rect x="82.4979%" y="661" width="0.0171%" height="15" fill="rgb(218,189,37)" fg:x="9677" fg:w="2"/><text x="82.7122%" y="671.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.02%)</title><rect x="82.4979%" y="645" width="0.0171%" height="15" fill="rgb(238,207,14)" fg:x="9677" fg:w="2"/><text x="82.7122%" y="655.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="82.4979%" y="629" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="9677" fg:w="2"/><text x="82.7122%" y="639.50"></text></g><g><title>__x86_return_thunk (3 samples, 0.03%)</title><rect x="83.0094%" y="725" width="0.0256%" height="15" fill="rgb(211,8,20)" fg:x="9737" fg:w="3"/><text x="83.2237%" y="735.50"></text></g><g><title>native_read_msr (98 samples, 0.84%)</title><rect x="83.0350%" y="725" width="0.8355%" height="15" fill="rgb(218,43,9)" fg:x="9740" fg:w="98"/><text x="83.2492%" y="735.50"></text></g><g><title>amd_pmu_disable_all (126 samples, 1.07%)</title><rect x="82.9497%" y="757" width="1.0742%" height="15" fill="rgb(224,0,7)" fg:x="9730" fg:w="126"/><text x="83.1640%" y="767.50"></text></g><g><title>x86_pmu_disable_all (121 samples, 1.03%)</title><rect x="82.9923%" y="741" width="1.0315%" height="15" fill="rgb(235,111,43)" fg:x="9735" fg:w="121"/><text x="83.2066%" y="751.50"></text></g><g><title>native_write_msr (18 samples, 0.15%)</title><rect x="83.8704%" y="725" width="0.1535%" height="15" fill="rgb(220,53,36)" fg:x="9838" fg:w="18"/><text x="84.0847%" y="735.50"></text></g><g><title>__perf_event_task_sched_out (146 samples, 1.24%)</title><rect x="82.8303%" y="773" width="1.2447%" height="15" fill="rgb(206,30,45)" fg:x="9716" fg:w="146"/><text x="83.0446%" y="783.50"></text></g><g><title>x86_pmu_disable (6 samples, 0.05%)</title><rect x="84.0239%" y="757" width="0.0512%" height="15" fill="rgb(240,6,49)" fg:x="9856" fg:w="6"/><text x="84.2382%" y="767.50"></text></g><g><title>__cgroup_account_cputime (14 samples, 0.12%)</title><rect x="84.4416%" y="725" width="0.1194%" height="15" fill="rgb(222,47,19)" fg:x="9905" fg:w="14"/><text x="84.6559%" y="735.50"></text></g><g><title>cgroup_rstat_updated (4 samples, 0.03%)</title><rect x="84.5269%" y="709" width="0.0341%" height="15" fill="rgb(232,180,27)" fg:x="9915" fg:w="4"/><text x="84.7411%" y="719.50"></text></g><g><title>cpuacct_charge (13 samples, 0.11%)</title><rect x="84.5695%" y="725" width="0.1108%" height="15" fill="rgb(217,144,43)" fg:x="9920" fg:w="13"/><text x="84.7838%" y="735.50"></text></g><g><title>update_curr (38 samples, 0.32%)</title><rect x="84.3649%" y="741" width="0.3240%" height="15" fill="rgb(242,65,24)" fg:x="9896" fg:w="38"/><text x="84.5792%" y="751.50"></text></g><g><title>__update_load_avg_cfs_rq (3 samples, 0.03%)</title><rect x="84.7656%" y="725" width="0.0256%" height="15" fill="rgb(206,162,20)" fg:x="9943" fg:w="3"/><text x="84.9798%" y="735.50"></text></g><g><title>dequeue_entity (65 samples, 0.55%)</title><rect x="84.2455%" y="757" width="0.5541%" height="15" fill="rgb(217,209,51)" fg:x="9882" fg:w="65"/><text x="84.4598%" y="767.50"></text></g><g><title>update_load_avg (13 samples, 0.11%)</title><rect x="84.6888%" y="741" width="0.1108%" height="15" fill="rgb(222,111,24)" fg:x="9934" fg:w="13"/><text x="84.9031%" y="751.50"></text></g><g><title>dequeue_task_fair (85 samples, 0.72%)</title><rect x="84.0921%" y="773" width="0.7246%" height="15" fill="rgb(221,4,41)" fg:x="9864" fg:w="85"/><text x="84.3064%" y="783.50"></text></g><g><title>update_min_vruntime (2 samples, 0.02%)</title><rect x="84.7997%" y="757" width="0.0171%" height="15" fill="rgb(235,225,54)" fg:x="9947" fg:w="2"/><text x="85.0139%" y="767.50"></text></g><g><title>__irqentry_text_start (6 samples, 0.05%)</title><rect x="84.8934%" y="757" width="0.0512%" height="15" fill="rgb(229,107,3)" fg:x="9958" fg:w="6"/><text x="85.1077%" y="767.50"></text></g><g><title>__napi_schedule (2 samples, 0.02%)</title><rect x="84.9957%" y="645" width="0.0171%" height="15" fill="rgb(239,13,52)" fg:x="9970" fg:w="2"/><text x="85.2100%" y="655.50"></text></g><g><title>__handle_irq_event_percpu (4 samples, 0.03%)</title><rect x="84.9872%" y="677" width="0.0341%" height="15" fill="rgb(239,110,26)" fg:x="9969" fg:w="4"/><text x="85.2015%" y="687.50"></text></g><g><title>vring_interrupt (4 samples, 0.03%)</title><rect x="84.9872%" y="661" width="0.0341%" height="15" fill="rgb(206,212,41)" fg:x="9969" fg:w="4"/><text x="85.2015%" y="671.50"></text></g><g><title>add_interrupt_randomness (2 samples, 0.02%)</title><rect x="85.0213%" y="677" width="0.0171%" height="15" fill="rgb(227,186,38)" fg:x="9973" fg:w="2"/><text x="85.2356%" y="687.50"></text></g><g><title>handle_irq_event (8 samples, 0.07%)</title><rect x="84.9787%" y="693" width="0.0682%" height="15" fill="rgb(209,73,52)" fg:x="9968" fg:w="8"/><text x="85.1930%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (14 samples, 0.12%)</title><rect x="84.9531%" y="725" width="0.1194%" height="15" fill="rgb(208,184,36)" fg:x="9965" fg:w="14"/><text x="85.1674%" y="735.50"></text></g><g><title>handle_edge_irq (13 samples, 0.11%)</title><rect x="84.9616%" y="709" width="0.1108%" height="15" fill="rgb(219,15,9)" fg:x="9966" fg:w="13"/><text x="85.1759%" y="719.50"></text></g><g><title>native_apic_msr_eoi_write (3 samples, 0.03%)</title><rect x="85.0469%" y="693" width="0.0256%" height="15" fill="rgb(208,103,6)" fg:x="9976" fg:w="3"/><text x="85.2612%" y="703.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.02%)</title><rect x="85.1918%" y="549" width="0.0171%" height="15" fill="rgb(246,15,53)" fg:x="9993" fg:w="2"/><text x="85.4061%" y="559.50"></text></g><g><title>tcp_v4_early_demux (2 samples, 0.02%)</title><rect x="85.1918%" y="533" width="0.0171%" height="15" fill="rgb(225,190,1)" fg:x="9993" fg:w="2"/><text x="85.4061%" y="543.50"></text></g><g><title>ip_finish_output2 (7 samples, 0.06%)</title><rect x="85.2771%" y="389" width="0.0597%" height="15" fill="rgb(219,227,11)" fg:x="10003" fg:w="7"/><text x="85.4914%" y="399.50"></text></g><g><title>__dev_queue_xmit (7 samples, 0.06%)</title><rect x="85.2771%" y="373" width="0.0597%" height="15" fill="rgb(232,116,37)" fg:x="10003" fg:w="7"/><text x="85.4914%" y="383.50"></text></g><g><title>__qdisc_run (7 samples, 0.06%)</title><rect x="85.2771%" y="357" width="0.0597%" height="15" fill="rgb(252,144,25)" fg:x="10003" fg:w="7"/><text x="85.4914%" y="367.50"></text></g><g><title>sch_direct_xmit (7 samples, 0.06%)</title><rect x="85.2771%" y="341" width="0.0597%" height="15" fill="rgb(222,128,44)" fg:x="10003" fg:w="7"/><text x="85.4914%" y="351.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.05%)</title><rect x="85.2856%" y="325" width="0.0512%" height="15" fill="rgb(251,86,39)" fg:x="10004" fg:w="6"/><text x="85.4999%" y="335.50"></text></g><g><title>start_xmit (6 samples, 0.05%)</title><rect x="85.2856%" y="309" width="0.0512%" height="15" fill="rgb(211,140,13)" fg:x="10004" fg:w="6"/><text x="85.4999%" y="319.50"></text></g><g><title>virtqueue_notify (3 samples, 0.03%)</title><rect x="85.3112%" y="293" width="0.0256%" height="15" fill="rgb(219,119,18)" fg:x="10007" fg:w="3"/><text x="85.5255%" y="303.50"></text></g><g><title>vp_notify (3 samples, 0.03%)</title><rect x="85.3112%" y="277" width="0.0256%" height="15" fill="rgb(230,193,37)" fg:x="10007" fg:w="3"/><text x="85.5255%" y="287.50"></text></g><g><title>iowrite16 (3 samples, 0.03%)</title><rect x="85.3112%" y="261" width="0.0256%" height="15" fill="rgb(218,139,37)" fg:x="10007" fg:w="3"/><text x="85.5255%" y="271.50"></text></g><g><title>__ip_queue_xmit (10 samples, 0.09%)</title><rect x="85.2600%" y="405" width="0.0853%" height="15" fill="rgb(224,11,5)" fg:x="10001" fg:w="10"/><text x="85.4743%" y="415.50"></text></g><g><title>__tcp_transmit_skb (11 samples, 0.09%)</title><rect x="85.2600%" y="421" width="0.0938%" height="15" fill="rgb(238,106,36)" fg:x="10001" fg:w="11"/><text x="85.4743%" y="431.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.02%)</title><rect x="85.3623%" y="389" width="0.0171%" height="15" fill="rgb(228,161,44)" fg:x="10013" fg:w="2"/><text x="85.5766%" y="399.50"></text></g><g><title>__alloc_skb (4 samples, 0.03%)</title><rect x="85.3623%" y="405" width="0.0341%" height="15" fill="rgb(237,90,40)" fg:x="10013" fg:w="4"/><text x="85.5766%" y="415.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="85.3794%" y="389" width="0.0171%" height="15" fill="rgb(227,94,12)" fg:x="10015" fg:w="2"/><text x="85.5937%" y="399.50"></text></g><g><title>__slab_alloc (2 samples, 0.02%)</title><rect x="85.3794%" y="373" width="0.0171%" height="15" fill="rgb(229,140,31)" fg:x="10015" fg:w="2"/><text x="85.5937%" y="383.50"></text></g><g><title>___slab_alloc (2 samples, 0.02%)</title><rect x="85.3794%" y="357" width="0.0171%" height="15" fill="rgb(224,215,35)" fg:x="10015" fg:w="2"/><text x="85.5937%" y="367.50"></text></g><g><title>sk_stream_alloc_skb (6 samples, 0.05%)</title><rect x="85.3538%" y="421" width="0.0512%" height="15" fill="rgb(225,2,28)" fg:x="10012" fg:w="6"/><text x="85.5681%" y="431.50"></text></g><g><title>sk_reset_timer (2 samples, 0.02%)</title><rect x="85.4049%" y="405" width="0.0171%" height="15" fill="rgb(220,37,33)" fg:x="10018" fg:w="2"/><text x="85.6192%" y="415.50"></text></g><g><title>__mod_timer (2 samples, 0.02%)</title><rect x="85.4049%" y="389" width="0.0171%" height="15" fill="rgb(232,140,47)" fg:x="10018" fg:w="2"/><text x="85.6192%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (24 samples, 0.20%)</title><rect x="85.2344%" y="453" width="0.2046%" height="15" fill="rgb(226,88,38)" fg:x="9998" fg:w="24"/><text x="85.4487%" y="463.50"></text></g><g><title>tcp_write_xmit (24 samples, 0.20%)</title><rect x="85.2344%" y="437" width="0.2046%" height="15" fill="rgb(236,72,36)" fg:x="9998" fg:w="24"/><text x="85.4487%" y="447.50"></text></g><g><title>tcp_event_new_data_sent (4 samples, 0.03%)</title><rect x="85.4049%" y="421" width="0.0341%" height="15" fill="rgb(227,19,23)" fg:x="10018" fg:w="4"/><text x="85.6192%" y="431.50"></text></g><g><title>rb_erase (2 samples, 0.02%)</title><rect x="85.4731%" y="437" width="0.0171%" height="15" fill="rgb(234,120,13)" fg:x="10026" fg:w="2"/><text x="85.6874%" y="447.50"></text></g><g><title>tcp_sacktag_write_queue (2 samples, 0.02%)</title><rect x="85.5072%" y="437" width="0.0171%" height="15" fill="rgb(251,92,9)" fg:x="10030" fg:w="2"/><text x="85.7215%" y="447.50"></text></g><g><title>tcp_sacktag_walk (2 samples, 0.02%)</title><rect x="85.5072%" y="421" width="0.0171%" height="15" fill="rgb(235,55,24)" fg:x="10030" fg:w="2"/><text x="85.7215%" y="431.50"></text></g><g><title>tcp_shifted_skb (2 samples, 0.02%)</title><rect x="85.5072%" y="405" width="0.0171%" height="15" fill="rgb(213,49,33)" fg:x="10030" fg:w="2"/><text x="85.7215%" y="415.50"></text></g><g><title>tcp_trim_head (2 samples, 0.02%)</title><rect x="85.5413%" y="437" width="0.0171%" height="15" fill="rgb(230,179,8)" fg:x="10034" fg:w="2"/><text x="85.7556%" y="447.50"></text></g><g><title>tcp_ack (14 samples, 0.12%)</title><rect x="85.4476%" y="453" width="0.1194%" height="15" fill="rgb(213,228,3)" fg:x="10023" fg:w="14"/><text x="85.6619%" y="463.50"></text></g><g><title>tcp_mstamp_refresh (2 samples, 0.02%)</title><rect x="85.5669%" y="453" width="0.0171%" height="15" fill="rgb(229,63,29)" fg:x="10037" fg:w="2"/><text x="85.7812%" y="463.50"></text></g><g><title>ktime_get (2 samples, 0.02%)</title><rect x="85.5669%" y="437" width="0.0171%" height="15" fill="rgb(226,51,13)" fg:x="10037" fg:w="2"/><text x="85.7812%" y="447.50"></text></g><g><title>kvm_clock_get_cycles (2 samples, 0.02%)</title><rect x="85.5669%" y="421" width="0.0171%" height="15" fill="rgb(213,218,37)" fg:x="10037" fg:w="2"/><text x="85.7812%" y="431.50"></text></g><g><title>tcp_rcv_established (43 samples, 0.37%)</title><rect x="85.2259%" y="469" width="0.3666%" height="15" fill="rgb(224,50,47)" fg:x="9997" fg:w="43"/><text x="85.4402%" y="479.50"></text></g><g><title>napi_complete_done (50 samples, 0.43%)</title><rect x="85.1748%" y="629" width="0.4263%" height="15" fill="rgb(226,216,13)" fg:x="9991" fg:w="50"/><text x="85.3891%" y="639.50"></text></g><g><title>netif_receive_skb_list_internal (50 samples, 0.43%)</title><rect x="85.1748%" y="613" width="0.4263%" height="15" fill="rgb(216,153,44)" fg:x="9991" fg:w="50"/><text x="85.3891%" y="623.50"></text></g><g><title>__netif_receive_skb_list_core (50 samples, 0.43%)</title><rect x="85.1748%" y="597" width="0.4263%" height="15" fill="rgb(227,176,26)" fg:x="9991" fg:w="50"/><text x="85.3891%" y="607.50"></text></g><g><title>ip_list_rcv (49 samples, 0.42%)</title><rect x="85.1833%" y="581" width="0.4177%" height="15" fill="rgb(215,38,16)" fg:x="9992" fg:w="49"/><text x="85.3976%" y="591.50"></text></g><g><title>ip_sublist_rcv (48 samples, 0.41%)</title><rect x="85.1918%" y="565" width="0.4092%" height="15" fill="rgb(207,166,9)" fg:x="9993" fg:w="48"/><text x="85.4061%" y="575.50"></text></g><g><title>ip_sublist_rcv_finish (46 samples, 0.39%)</title><rect x="85.2089%" y="549" width="0.3922%" height="15" fill="rgb(223,178,14)" fg:x="9995" fg:w="46"/><text x="85.4232%" y="559.50"></text></g><g><title>ip_local_deliver_finish (46 samples, 0.39%)</title><rect x="85.2089%" y="533" width="0.3922%" height="15" fill="rgb(220,94,29)" fg:x="9995" fg:w="46"/><text x="85.4232%" y="543.50"></text></g><g><title>ip_protocol_deliver_rcu (46 samples, 0.39%)</title><rect x="85.2089%" y="517" width="0.3922%" height="15" fill="rgb(207,19,13)" fg:x="9995" fg:w="46"/><text x="85.4232%" y="527.50"></text></g><g><title>tcp_v4_rcv (46 samples, 0.39%)</title><rect x="85.2089%" y="501" width="0.3922%" height="15" fill="rgb(224,38,0)" fg:x="9995" fg:w="46"/><text x="85.4232%" y="511.50"></text></g><g><title>tcp_v4_do_rcv (44 samples, 0.38%)</title><rect x="85.2259%" y="485" width="0.3751%" height="15" fill="rgb(228,220,18)" fg:x="9997" fg:w="44"/><text x="85.4402%" y="495.50"></text></g><g><title>napi_gro_receive (2 samples, 0.02%)</title><rect x="85.6010%" y="629" width="0.0171%" height="15" fill="rgb(248,45,29)" fg:x="10041" fg:w="2"/><text x="85.8153%" y="639.50"></text></g><g><title>receive_buf (7 samples, 0.06%)</title><rect x="85.6181%" y="629" width="0.0597%" height="15" fill="rgb(233,111,44)" fg:x="10043" fg:w="7"/><text x="85.8324%" y="639.50"></text></g><g><title>page_to_skb (5 samples, 0.04%)</title><rect x="85.6351%" y="613" width="0.0426%" height="15" fill="rgb(243,180,22)" fg:x="10045" fg:w="5"/><text x="85.8494%" y="623.50"></text></g><g><title>__napi_alloc_skb (5 samples, 0.04%)</title><rect x="85.6351%" y="597" width="0.0426%" height="15" fill="rgb(236,121,11)" fg:x="10045" fg:w="5"/><text x="85.8494%" y="607.50"></text></g><g><title>__alloc_skb (5 samples, 0.04%)</title><rect x="85.6351%" y="581" width="0.0426%" height="15" fill="rgb(237,90,40)" fg:x="10045" fg:w="5"/><text x="85.8494%" y="591.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="85.6607%" y="565" width="0.0171%" height="15" fill="rgb(227,94,12)" fg:x="10048" fg:w="2"/><text x="85.8750%" y="575.50"></text></g><g><title>try_fill_recv (2 samples, 0.02%)</title><rect x="85.6777%" y="629" width="0.0171%" height="15" fill="rgb(209,67,13)" fg:x="10050" fg:w="2"/><text x="85.8920%" y="639.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.02%)</title><rect x="85.6777%" y="613" width="0.0171%" height="15" fill="rgb(240,178,22)" fg:x="10050" fg:w="2"/><text x="85.8920%" y="623.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.02%)</title><rect x="85.6777%" y="597" width="0.0171%" height="15" fill="rgb(245,49,10)" fg:x="10050" fg:w="2"/><text x="85.8920%" y="607.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.02%)</title><rect x="85.6777%" y="581" width="0.0171%" height="15" fill="rgb(246,35,53)" fg:x="10050" fg:w="2"/><text x="85.8920%" y="591.50"></text></g><g><title>prep_new_page (2 samples, 0.02%)</title><rect x="85.6777%" y="565" width="0.0171%" height="15" fill="rgb(220,94,29)" fg:x="10050" fg:w="2"/><text x="85.8920%" y="575.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.02%)</title><rect x="85.6777%" y="549" width="0.0171%" height="15" fill="rgb(253,165,35)" fg:x="10050" fg:w="2"/><text x="85.8920%" y="559.50"></text></g><g><title>clear_page_rep (2 samples, 0.02%)</title><rect x="85.6777%" y="533" width="0.0171%" height="15" fill="rgb(233,188,25)" fg:x="10050" fg:w="2"/><text x="85.8920%" y="543.50"></text></g><g><title>virtnet_poll (63 samples, 0.54%)</title><rect x="85.1662%" y="645" width="0.5371%" height="15" fill="rgb(213,187,12)" fg:x="9990" fg:w="63"/><text x="85.3805%" y="655.50"></text></g><g><title>skb_release_data (5 samples, 0.04%)</title><rect x="85.8312%" y="597" width="0.0426%" height="15" fill="rgb(252,193,18)" fg:x="10068" fg:w="5"/><text x="86.0455%" y="607.50"></text></g><g><title>napi_consume_skb (8 samples, 0.07%)</title><rect x="85.8227%" y="613" width="0.0682%" height="15" fill="rgb(244,99,54)" fg:x="10067" fg:w="8"/><text x="86.0370%" y="623.50"></text></g><g><title>skb_release_head_state (2 samples, 0.02%)</title><rect x="85.8738%" y="597" width="0.0171%" height="15" fill="rgb(221,1,22)" fg:x="10073" fg:w="2"/><text x="86.0881%" y="607.50"></text></g><g><title>free_old_xmit_skbs (32 samples, 0.27%)</title><rect x="85.7801%" y="629" width="0.2728%" height="15" fill="rgb(235,178,6)" fg:x="10062" fg:w="32"/><text x="85.9943%" y="639.50"></text></g><g><title>virtqueue_get_buf_ctx_split (19 samples, 0.16%)</title><rect x="85.8909%" y="613" width="0.1620%" height="15" fill="rgb(235,34,35)" fg:x="10075" fg:w="19"/><text x="86.1052%" y="623.50"></text></g><g><title>detach_buf_split (12 samples, 0.10%)</title><rect x="85.9506%" y="597" width="0.1023%" height="15" fill="rgb(228,101,1)" fg:x="10082" fg:w="12"/><text x="86.1648%" y="607.50"></text></g><g><title>kfree (6 samples, 0.05%)</title><rect x="86.0017%" y="581" width="0.0512%" height="15" fill="rgb(222,6,37)" fg:x="10088" fg:w="6"/><text x="86.2160%" y="591.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="86.0529%" y="629" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="10094" fg:w="3"/><text x="86.2671%" y="639.50"></text></g><g><title>net_rx_action (115 samples, 0.98%)</title><rect x="85.1151%" y="661" width="0.9804%" height="15" fill="rgb(231,11,52)" fg:x="9984" fg:w="115"/><text x="85.3294%" y="671.50"></text></g><g><title>virtnet_poll_tx (46 samples, 0.39%)</title><rect x="85.7033%" y="645" width="0.3922%" height="15" fill="rgb(251,188,47)" fg:x="10053" fg:w="46"/><text x="85.9176%" y="655.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="86.2063%" y="517" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="10112" fg:w="2"/><text x="86.4206%" y="527.50"></text></g><g><title>virtqueue_add_outbuf (2 samples, 0.02%)</title><rect x="86.2575%" y="469" width="0.0171%" height="15" fill="rgb(207,208,9)" fg:x="10118" fg:w="2"/><text x="86.4717%" y="479.50"></text></g><g><title>virtqueue_add_split (2 samples, 0.02%)</title><rect x="86.2575%" y="453" width="0.0171%" height="15" fill="rgb(238,41,16)" fg:x="10118" fg:w="2"/><text x="86.4717%" y="463.50"></text></g><g><title>dev_hard_start_xmit (16 samples, 0.14%)</title><rect x="86.2234%" y="501" width="0.1364%" height="15" fill="rgb(251,86,39)" fg:x="10114" fg:w="16"/><text x="86.4376%" y="511.50"></text></g><g><title>start_xmit (16 samples, 0.14%)</title><rect x="86.2234%" y="485" width="0.1364%" height="15" fill="rgb(211,140,13)" fg:x="10114" fg:w="16"/><text x="86.4376%" y="495.50"></text></g><g><title>virtqueue_notify (9 samples, 0.08%)</title><rect x="86.2830%" y="469" width="0.0767%" height="15" fill="rgb(219,119,18)" fg:x="10121" fg:w="9"/><text x="86.4973%" y="479.50"></text></g><g><title>vp_notify (9 samples, 0.08%)</title><rect x="86.2830%" y="453" width="0.0767%" height="15" fill="rgb(230,193,37)" fg:x="10121" fg:w="9"/><text x="86.4973%" y="463.50"></text></g><g><title>iowrite16 (9 samples, 0.08%)</title><rect x="86.2830%" y="437" width="0.0767%" height="15" fill="rgb(218,139,37)" fg:x="10121" fg:w="9"/><text x="86.4973%" y="447.50"></text></g><g><title>__qdisc_run (20 samples, 0.17%)</title><rect x="86.2063%" y="533" width="0.1705%" height="15" fill="rgb(252,144,25)" fg:x="10112" fg:w="20"/><text x="86.4206%" y="543.50"></text></g><g><title>sch_direct_xmit (18 samples, 0.15%)</title><rect x="86.2234%" y="517" width="0.1535%" height="15" fill="rgb(222,128,44)" fg:x="10114" fg:w="18"/><text x="86.4376%" y="527.50"></text></g><g><title>validate_xmit_skb_list (2 samples, 0.02%)</title><rect x="86.3598%" y="501" width="0.0171%" height="15" fill="rgb(254,174,52)" fg:x="10130" fg:w="2"/><text x="86.5740%" y="511.50"></text></g><g><title>ip_finish_output2 (23 samples, 0.20%)</title><rect x="86.1893%" y="565" width="0.1961%" height="15" fill="rgb(219,227,11)" fg:x="10110" fg:w="23"/><text x="86.4035%" y="575.50"></text></g><g><title>__dev_queue_xmit (21 samples, 0.18%)</title><rect x="86.2063%" y="549" width="0.1790%" height="15" fill="rgb(232,116,37)" fg:x="10112" fg:w="21"/><text x="86.4206%" y="559.50"></text></g><g><title>__ip_queue_xmit (24 samples, 0.20%)</title><rect x="86.1893%" y="581" width="0.2046%" height="15" fill="rgb(224,11,5)" fg:x="10110" fg:w="24"/><text x="86.4035%" y="591.50"></text></g><g><title>__tcp_transmit_skb (27 samples, 0.23%)</title><rect x="86.1807%" y="597" width="0.2302%" height="15" fill="rgb(238,106,36)" fg:x="10109" fg:w="27"/><text x="86.3950%" y="607.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.03%)</title><rect x="86.4365%" y="565" width="0.0256%" height="15" fill="rgb(228,161,44)" fg:x="10139" fg:w="3"/><text x="86.6508%" y="575.50"></text></g><g><title>__slab_alloc (2 samples, 0.02%)</title><rect x="86.4450%" y="549" width="0.0171%" height="15" fill="rgb(229,140,31)" fg:x="10140" fg:w="2"/><text x="86.6593%" y="559.50"></text></g><g><title>___slab_alloc (2 samples, 0.02%)</title><rect x="86.4450%" y="533" width="0.0171%" height="15" fill="rgb(224,215,35)" fg:x="10140" fg:w="2"/><text x="86.6593%" y="543.50"></text></g><g><title>sk_stream_alloc_skb (7 samples, 0.06%)</title><rect x="86.4194%" y="597" width="0.0597%" height="15" fill="rgb(225,2,28)" fg:x="10137" fg:w="7"/><text x="86.6337%" y="607.50"></text></g><g><title>__alloc_skb (6 samples, 0.05%)</title><rect x="86.4280%" y="581" width="0.0512%" height="15" fill="rgb(237,90,40)" fg:x="10138" fg:w="6"/><text x="86.6422%" y="591.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="86.4621%" y="565" width="0.0171%" height="15" fill="rgb(227,94,12)" fg:x="10142" fg:w="2"/><text x="86.6763%" y="575.50"></text></g><g><title>tcp_event_new_data_sent (2 samples, 0.02%)</title><rect x="86.4876%" y="597" width="0.0171%" height="15" fill="rgb(227,19,23)" fg:x="10145" fg:w="2"/><text x="86.7019%" y="607.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="86.5047%" y="581" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="10147" fg:w="2"/><text x="86.7190%" y="591.50"></text></g><g><title>do_softirq_own_stack (171 samples, 1.46%)</title><rect x="85.0725%" y="709" width="1.4578%" height="15" fill="rgb(223,89,53)" fg:x="9979" fg:w="171"/><text x="85.2867%" y="719.50"></text></g><g><title>asm_call_sysvec_on_stack (171 samples, 1.46%)</title><rect x="85.0725%" y="693" width="1.4578%" height="15" fill="rgb(208,184,36)" fg:x="9979" fg:w="171"/><text x="85.2867%" y="703.50"></text></g><g><title>__softirqentry_text_start (171 samples, 1.46%)</title><rect x="85.0725%" y="677" width="1.4578%" height="15" fill="rgb(249,91,22)" fg:x="9979" fg:w="171"/><text x="85.2867%" y="687.50"></text></g><g><title>tasklet_action_common.constprop.0 (51 samples, 0.43%)</title><rect x="86.0955%" y="661" width="0.4348%" height="15" fill="rgb(220,151,48)" fg:x="10099" fg:w="51"/><text x="86.3098%" y="671.50"></text></g><g><title>tcp_tasklet_func (51 samples, 0.43%)</title><rect x="86.0955%" y="645" width="0.4348%" height="15" fill="rgb(218,189,37)" fg:x="10099" fg:w="51"/><text x="86.3098%" y="655.50"></text></g><g><title>tcp_tsq_handler (50 samples, 0.43%)</title><rect x="86.1040%" y="629" width="0.4263%" height="15" fill="rgb(238,207,14)" fg:x="10100" fg:w="50"/><text x="86.3183%" y="639.50"></text></g><g><title>tcp_write_xmit (45 samples, 0.38%)</title><rect x="86.1466%" y="613" width="0.3836%" height="15" fill="rgb(236,72,36)" fg:x="10105" fg:w="45"/><text x="86.3609%" y="623.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (3 samples, 0.03%)</title><rect x="86.5047%" y="597" width="0.0256%" height="15" fill="rgb(213,104,8)" fg:x="10147" fg:w="3"/><text x="86.7190%" y="607.50"></text></g><g><title>asm_common_interrupt (189 samples, 1.61%)</title><rect x="84.9446%" y="757" width="1.6113%" height="15" fill="rgb(248,227,45)" fg:x="9964" fg:w="189"/><text x="85.1589%" y="767.50">a..</text></g><g><title>common_interrupt (188 samples, 1.60%)</title><rect x="84.9531%" y="741" width="1.6027%" height="15" fill="rgb(250,67,32)" fg:x="9965" fg:w="188"/><text x="85.1674%" y="751.50">c..</text></g><g><title>irq_exit_rcu (174 samples, 1.48%)</title><rect x="85.0725%" y="725" width="1.4834%" height="15" fill="rgb(240,18,12)" fg:x="9979" fg:w="174"/><text x="85.2867%" y="735.50"></text></g><g><title>idle_cpu (3 samples, 0.03%)</title><rect x="86.5303%" y="709" width="0.0256%" height="15" fill="rgb(248,184,26)" fg:x="10150" fg:w="3"/><text x="86.7445%" y="719.50"></text></g><g><title>tick_sched_handle (2 samples, 0.02%)</title><rect x="86.5558%" y="645" width="0.0171%" height="15" fill="rgb(232,138,39)" fg:x="10153" fg:w="2"/><text x="86.7701%" y="655.50"></text></g><g><title>update_process_times (2 samples, 0.02%)</title><rect x="86.5558%" y="629" width="0.0171%" height="15" fill="rgb(236,132,35)" fg:x="10153" fg:w="2"/><text x="86.7701%" y="639.50"></text></g><g><title>__hrtimer_run_queues (4 samples, 0.03%)</title><rect x="86.5558%" y="677" width="0.0341%" height="15" fill="rgb(232,211,54)" fg:x="10153" fg:w="4"/><text x="86.7701%" y="687.50"></text></g><g><title>tick_sched_timer (4 samples, 0.03%)</title><rect x="86.5558%" y="661" width="0.0341%" height="15" fill="rgb(237,67,28)" fg:x="10153" fg:w="4"/><text x="86.7701%" y="671.50"></text></g><g><title>timekeeping_advance (2 samples, 0.02%)</title><rect x="86.5729%" y="645" width="0.0171%" height="15" fill="rgb(230,129,25)" fg:x="10155" fg:w="2"/><text x="86.7872%" y="655.50"></text></g><g><title>asm_call_sysvec_on_stack (5 samples, 0.04%)</title><rect x="86.5558%" y="725" width="0.0426%" height="15" fill="rgb(208,184,36)" fg:x="10153" fg:w="5"/><text x="86.7701%" y="735.50"></text></g><g><title>__sysvec_apic_timer_interrupt (5 samples, 0.04%)</title><rect x="86.5558%" y="709" width="0.0426%" height="15" fill="rgb(221,147,0)" fg:x="10153" fg:w="5"/><text x="86.7701%" y="719.50"></text></g><g><title>hrtimer_interrupt (5 samples, 0.04%)</title><rect x="86.5558%" y="693" width="0.0426%" height="15" fill="rgb(212,109,30)" fg:x="10153" fg:w="5"/><text x="86.7701%" y="703.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (9 samples, 0.08%)</title><rect x="86.5558%" y="757" width="0.0767%" height="15" fill="rgb(209,17,43)" fg:x="10153" fg:w="9"/><text x="86.7701%" y="767.50"></text></g><g><title>sysvec_apic_timer_interrupt (9 samples, 0.08%)</title><rect x="86.5558%" y="741" width="0.0767%" height="15" fill="rgb(218,44,13)" fg:x="10153" fg:w="9"/><text x="86.7701%" y="751.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="86.5985%" y="725" width="0.0341%" height="15" fill="rgb(240,18,12)" fg:x="10158" fg:w="4"/><text x="86.8128%" y="735.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.03%)</title><rect x="86.5985%" y="709" width="0.0341%" height="15" fill="rgb(223,89,53)" fg:x="10158" fg:w="4"/><text x="86.8128%" y="719.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="86.5985%" y="693" width="0.0341%" height="15" fill="rgb(208,184,36)" fg:x="10158" fg:w="4"/><text x="86.8128%" y="703.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="86.5985%" y="677" width="0.0341%" height="15" fill="rgb(249,91,22)" fg:x="10158" fg:w="4"/><text x="86.8128%" y="687.50"></text></g><g><title>finish_task_switch (214 samples, 1.82%)</title><rect x="84.8167%" y="773" width="1.8244%" height="15" fill="rgb(214,214,33)" fg:x="9949" fg:w="214"/><text x="85.0310%" y="783.50">f..</text></g><g><title>hrtick_update (2 samples, 0.02%)</title><rect x="86.6411%" y="773" width="0.0171%" height="15" fill="rgb(247,64,54)" fg:x="10163" fg:w="2"/><text x="86.8554%" y="783.50"></text></g><g><title>__update_load_avg_cfs_rq (3 samples, 0.03%)</title><rect x="87.0503%" y="725" width="0.0256%" height="15" fill="rgb(206,162,20)" fg:x="10211" fg:w="3"/><text x="87.2646%" y="735.50"></text></g><g><title>update_dl_rq_load_avg (9 samples, 0.08%)</title><rect x="87.0844%" y="725" width="0.0767%" height="15" fill="rgb(250,180,35)" fg:x="10215" fg:w="9"/><text x="87.2987%" y="735.50"></text></g><g><title>update_rq_clock (9 samples, 0.08%)</title><rect x="87.1611%" y="725" width="0.0767%" height="15" fill="rgb(248,207,48)" fg:x="10224" fg:w="9"/><text x="87.3754%" y="735.50"></text></g><g><title>sched_clock_cpu (6 samples, 0.05%)</title><rect x="87.1867%" y="709" width="0.0512%" height="15" fill="rgb(217,142,15)" fg:x="10227" fg:w="6"/><text x="87.4010%" y="719.50"></text></g><g><title>sched_clock (6 samples, 0.05%)</title><rect x="87.1867%" y="693" width="0.0512%" height="15" fill="rgb(234,150,37)" fg:x="10227" fg:w="6"/><text x="87.4010%" y="703.50"></text></g><g><title>kvm_sched_clock_read (5 samples, 0.04%)</title><rect x="87.1952%" y="677" width="0.0426%" height="15" fill="rgb(248,187,27)" fg:x="10228" fg:w="5"/><text x="87.4095%" y="687.50"></text></g><g><title>pvclock_clocksource_read (5 samples, 0.04%)</title><rect x="87.1952%" y="661" width="0.0426%" height="15" fill="rgb(246,59,10)" fg:x="10228" fg:w="5"/><text x="87.4095%" y="671.50"></text></g><g><title>pick_next_task_fair (79 samples, 0.67%)</title><rect x="86.6581%" y="773" width="0.6735%" height="15" fill="rgb(247,213,54)" fg:x="10165" fg:w="79"/><text x="86.8724%" y="783.50"></text></g><g><title>newidle_balance (70 samples, 0.60%)</title><rect x="86.7349%" y="757" width="0.5968%" height="15" fill="rgb(211,171,16)" fg:x="10174" fg:w="70"/><text x="86.9492%" y="767.50"></text></g><g><title>update_blocked_averages (54 samples, 0.46%)</title><rect x="86.8713%" y="741" width="0.4604%" height="15" fill="rgb(250,41,28)" fg:x="10190" fg:w="54"/><text x="87.0856%" y="751.50"></text></g><g><title>update_rt_rq_load_avg (11 samples, 0.09%)</title><rect x="87.2379%" y="725" width="0.0938%" height="15" fill="rgb(235,84,33)" fg:x="10233" fg:w="11"/><text x="87.4521%" y="735.50"></text></g><g><title>pick_next_task_idle (3 samples, 0.03%)</title><rect x="87.3316%" y="773" width="0.0256%" height="15" fill="rgb(220,165,36)" fg:x="10244" fg:w="3"/><text x="87.5459%" y="783.50"></text></g><g><title>psi_flags_change (2 samples, 0.02%)</title><rect x="87.4936%" y="757" width="0.0171%" height="15" fill="rgb(240,165,6)" fg:x="10263" fg:w="2"/><text x="87.7079%" y="767.50"></text></g><g><title>psi_task_change (78 samples, 0.66%)</title><rect x="87.3572%" y="773" width="0.6650%" height="15" fill="rgb(214,87,45)" fg:x="10247" fg:w="78"/><text x="87.5715%" y="783.50"></text></g><g><title>psi_group_change (60 samples, 0.51%)</title><rect x="87.5107%" y="757" width="0.5115%" height="15" fill="rgb(214,74,3)" fg:x="10265" fg:w="60"/><text x="87.7249%" y="767.50"></text></g><g><title>record_times (22 samples, 0.19%)</title><rect x="87.8346%" y="741" width="0.1876%" height="15" fill="rgb(235,137,9)" fg:x="10303" fg:w="22"/><text x="88.0489%" y="751.50"></text></g><g><title>sched_clock_cpu (17 samples, 0.14%)</title><rect x="87.8772%" y="725" width="0.1449%" height="15" fill="rgb(217,142,15)" fg:x="10308" fg:w="17"/><text x="88.0915%" y="735.50"></text></g><g><title>sched_clock (13 samples, 0.11%)</title><rect x="87.9113%" y="709" width="0.1108%" height="15" fill="rgb(234,150,37)" fg:x="10312" fg:w="13"/><text x="88.1256%" y="719.50"></text></g><g><title>kvm_sched_clock_read (11 samples, 0.09%)</title><rect x="87.9284%" y="693" width="0.0938%" height="15" fill="rgb(248,187,27)" fg:x="10314" fg:w="11"/><text x="88.1427%" y="703.50"></text></g><g><title>pvclock_clocksource_read (11 samples, 0.09%)</title><rect x="87.9284%" y="677" width="0.0938%" height="15" fill="rgb(246,59,10)" fg:x="10314" fg:w="11"/><text x="88.1427%" y="687.50"></text></g><g><title>psi_task_switch (4 samples, 0.03%)</title><rect x="88.0222%" y="773" width="0.0341%" height="15" fill="rgb(233,176,51)" fg:x="10325" fg:w="4"/><text x="88.2365%" y="783.50"></text></g><g><title>put_prev_task_fair (7 samples, 0.06%)</title><rect x="88.0563%" y="773" width="0.0597%" height="15" fill="rgb(217,100,33)" fg:x="10329" fg:w="7"/><text x="88.2706%" y="783.50"></text></g><g><title>put_prev_entity (2 samples, 0.02%)</title><rect x="88.0989%" y="757" width="0.0171%" height="15" fill="rgb(223,18,39)" fg:x="10334" fg:w="2"/><text x="88.3132%" y="767.50"></text></g><g><title>pvclock_clocksource_read (2 samples, 0.02%)</title><rect x="88.2268%" y="709" width="0.0171%" height="15" fill="rgb(246,59,10)" fg:x="10349" fg:w="2"/><text x="88.4411%" y="719.50"></text></g><g><title>__schedule (668 samples, 5.69%)</title><rect x="82.5575%" y="789" width="5.6948%" height="15" fill="rgb(207,40,26)" fg:x="9684" fg:w="668"/><text x="82.7718%" y="799.50">__schedule</text></g><g><title>update_rq_clock (16 samples, 0.14%)</title><rect x="88.1159%" y="773" width="0.1364%" height="15" fill="rgb(248,207,48)" fg:x="10336" fg:w="16"/><text x="88.3302%" y="783.50"></text></g><g><title>sched_clock_cpu (8 samples, 0.07%)</title><rect x="88.1841%" y="757" width="0.0682%" height="15" fill="rgb(217,142,15)" fg:x="10344" fg:w="8"/><text x="88.3984%" y="767.50"></text></g><g><title>sched_clock (6 samples, 0.05%)</title><rect x="88.2012%" y="741" width="0.0512%" height="15" fill="rgb(234,150,37)" fg:x="10346" fg:w="6"/><text x="88.4155%" y="751.50"></text></g><g><title>kvm_sched_clock_read (6 samples, 0.05%)</title><rect x="88.2012%" y="725" width="0.0512%" height="15" fill="rgb(248,187,27)" fg:x="10346" fg:w="6"/><text x="88.4155%" y="735.50"></text></g><g><title>schedule_hrtimeout_range_clock (768 samples, 6.55%)</title><rect x="81.7221%" y="821" width="6.5473%" height="15" fill="rgb(209,201,27)" fg:x="9586" fg:w="768"/><text x="81.9364%" y="831.50">schedule_h..</text></g><g><title>schedule (675 samples, 5.75%)</title><rect x="82.5149%" y="805" width="5.7545%" height="15" fill="rgb(213,215,35)" fg:x="9679" fg:w="675"/><text x="82.7292%" y="815.50">schedule</text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="88.2523%" y="789" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="10352" fg:w="2"/><text x="88.4666%" y="799.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="88.2523%" y="773" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="10352" fg:w="2"/><text x="88.4666%" y="783.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="88.2523%" y="757" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="10352" fg:w="2"/><text x="88.4666%" y="767.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="88.2523%" y="741" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="10352" fg:w="2"/><text x="88.4666%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="88.2523%" y="725" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="10352" fg:w="2"/><text x="88.4666%" y="735.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="88.2523%" y="709" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="10352" fg:w="2"/><text x="88.4666%" y="719.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.02%)</title><rect x="88.2523%" y="693" width="0.0171%" height="15" fill="rgb(220,151,48)" fg:x="10352" fg:w="2"/><text x="88.4666%" y="703.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.02%)</title><rect x="88.2523%" y="677" width="0.0171%" height="15" fill="rgb(218,189,37)" fg:x="10352" fg:w="2"/><text x="88.4666%" y="687.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.02%)</title><rect x="88.2523%" y="661" width="0.0171%" height="15" fill="rgb(238,207,14)" fg:x="10352" fg:w="2"/><text x="88.4666%" y="671.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="88.2523%" y="645" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="10352" fg:w="2"/><text x="88.4666%" y="655.50"></text></g><g><title>ktime_get_ts64 (9 samples, 0.08%)</title><rect x="88.2779%" y="805" width="0.0767%" height="15" fill="rgb(212,111,10)" fg:x="10355" fg:w="9"/><text x="88.4922%" y="815.50"></text></g><g><title>kvm_clock_get_cycles (6 samples, 0.05%)</title><rect x="88.3035%" y="789" width="0.0512%" height="15" fill="rgb(213,218,37)" fg:x="10358" fg:w="6"/><text x="88.5178%" y="799.50"></text></g><g><title>pvclock_clocksource_read (5 samples, 0.04%)</title><rect x="88.3120%" y="773" width="0.0426%" height="15" fill="rgb(246,59,10)" fg:x="10359" fg:w="5"/><text x="88.5263%" y="783.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="88.3376%" y="757" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="10362" fg:w="2"/><text x="88.5519%" y="767.50"></text></g><g><title>select_estimate_accuracy (13 samples, 0.11%)</title><rect x="88.2694%" y="821" width="0.1108%" height="15" fill="rgb(219,208,33)" fg:x="10354" fg:w="13"/><text x="88.4837%" y="831.50"></text></g><g><title>set_normalized_timespec64 (3 samples, 0.03%)</title><rect x="88.3546%" y="805" width="0.0256%" height="15" fill="rgb(245,82,4)" fg:x="10364" fg:w="3"/><text x="88.5689%" y="815.50"></text></g><g><title>__irqentry_text_start (43 samples, 0.37%)</title><rect x="93.1032%" y="805" width="0.3666%" height="15" fill="rgb(229,107,3)" fg:x="10921" fg:w="43"/><text x="93.3174%" y="815.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.02%)</title><rect x="93.4697%" y="805" width="0.0171%" height="15" fill="rgb(211,8,20)" fg:x="10964" fg:w="2"/><text x="93.6840%" y="815.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.02%)</title><rect x="93.4697%" y="789" width="0.0171%" height="15" fill="rgb(210,87,27)" fg:x="10964" fg:w="2"/><text x="93.6840%" y="799.50"></text></g><g><title>handle_irq_event (2 samples, 0.02%)</title><rect x="93.4868%" y="741" width="0.0171%" height="15" fill="rgb(209,73,52)" fg:x="10966" fg:w="2"/><text x="93.7011%" y="751.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.02%)</title><rect x="93.4868%" y="725" width="0.0171%" height="15" fill="rgb(239,110,26)" fg:x="10966" fg:w="2"/><text x="93.7011%" y="735.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="93.4868%" y="773" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="10966" fg:w="3"/><text x="93.7011%" y="783.50"></text></g><g><title>handle_edge_irq (3 samples, 0.03%)</title><rect x="93.4868%" y="757" width="0.0256%" height="15" fill="rgb(219,15,9)" fg:x="10966" fg:w="3"/><text x="93.7011%" y="767.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.03%)</title><rect x="93.5294%" y="501" width="0.0256%" height="15" fill="rgb(226,88,38)" fg:x="10971" fg:w="3"/><text x="93.7437%" y="511.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.03%)</title><rect x="93.5294%" y="485" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="10971" fg:w="3"/><text x="93.7437%" y="495.50"></text></g><g><title>tcp_ack (4 samples, 0.03%)</title><rect x="93.5550%" y="501" width="0.0341%" height="15" fill="rgb(213,228,3)" fg:x="10974" fg:w="4"/><text x="93.7693%" y="511.50"></text></g><g><title>napi_complete_done (9 samples, 0.08%)</title><rect x="93.5209%" y="677" width="0.0767%" height="15" fill="rgb(226,216,13)" fg:x="10970" fg:w="9"/><text x="93.7352%" y="687.50"></text></g><g><title>netif_receive_skb_list_internal (9 samples, 0.08%)</title><rect x="93.5209%" y="661" width="0.0767%" height="15" fill="rgb(216,153,44)" fg:x="10970" fg:w="9"/><text x="93.7352%" y="671.50"></text></g><g><title>__netif_receive_skb_list_core (9 samples, 0.08%)</title><rect x="93.5209%" y="645" width="0.0767%" height="15" fill="rgb(227,176,26)" fg:x="10970" fg:w="9"/><text x="93.7352%" y="655.50"></text></g><g><title>ip_list_rcv (9 samples, 0.08%)</title><rect x="93.5209%" y="629" width="0.0767%" height="15" fill="rgb(215,38,16)" fg:x="10970" fg:w="9"/><text x="93.7352%" y="639.50"></text></g><g><title>ip_sublist_rcv (9 samples, 0.08%)</title><rect x="93.5209%" y="613" width="0.0767%" height="15" fill="rgb(207,166,9)" fg:x="10970" fg:w="9"/><text x="93.7352%" y="623.50"></text></g><g><title>ip_sublist_rcv_finish (9 samples, 0.08%)</title><rect x="93.5209%" y="597" width="0.0767%" height="15" fill="rgb(223,178,14)" fg:x="10970" fg:w="9"/><text x="93.7352%" y="607.50"></text></g><g><title>ip_local_deliver_finish (9 samples, 0.08%)</title><rect x="93.5209%" y="581" width="0.0767%" height="15" fill="rgb(220,94,29)" fg:x="10970" fg:w="9"/><text x="93.7352%" y="591.50"></text></g><g><title>ip_protocol_deliver_rcu (9 samples, 0.08%)</title><rect x="93.5209%" y="565" width="0.0767%" height="15" fill="rgb(207,19,13)" fg:x="10970" fg:w="9"/><text x="93.7352%" y="575.50"></text></g><g><title>tcp_v4_rcv (9 samples, 0.08%)</title><rect x="93.5209%" y="549" width="0.0767%" height="15" fill="rgb(224,38,0)" fg:x="10970" fg:w="9"/><text x="93.7352%" y="559.50"></text></g><g><title>tcp_v4_do_rcv (8 samples, 0.07%)</title><rect x="93.5294%" y="533" width="0.0682%" height="15" fill="rgb(228,220,18)" fg:x="10971" fg:w="8"/><text x="93.7437%" y="543.50"></text></g><g><title>tcp_rcv_established (8 samples, 0.07%)</title><rect x="93.5294%" y="517" width="0.0682%" height="15" fill="rgb(224,50,47)" fg:x="10971" fg:w="8"/><text x="93.7437%" y="527.50"></text></g><g><title>receive_buf (2 samples, 0.02%)</title><rect x="93.6061%" y="677" width="0.0171%" height="15" fill="rgb(233,111,44)" fg:x="10980" fg:w="2"/><text x="93.8204%" y="687.50"></text></g><g><title>virtnet_poll (13 samples, 0.11%)</title><rect x="93.5209%" y="693" width="0.1108%" height="15" fill="rgb(213,187,12)" fg:x="10970" fg:w="13"/><text x="93.7352%" y="703.50"></text></g><g><title>free_old_xmit_skbs (4 samples, 0.03%)</title><rect x="93.6402%" y="677" width="0.0341%" height="15" fill="rgb(235,178,6)" fg:x="10984" fg:w="4"/><text x="93.8545%" y="687.50"></text></g><g><title>virtqueue_get_buf_ctx_split (4 samples, 0.03%)</title><rect x="93.6402%" y="661" width="0.0341%" height="15" fill="rgb(235,34,35)" fg:x="10984" fg:w="4"/><text x="93.8545%" y="671.50"></text></g><g><title>detach_buf_split (4 samples, 0.03%)</title><rect x="93.6402%" y="645" width="0.0341%" height="15" fill="rgb(228,101,1)" fg:x="10984" fg:w="4"/><text x="93.8545%" y="655.50"></text></g><g><title>kfree (3 samples, 0.03%)</title><rect x="93.6488%" y="629" width="0.0256%" height="15" fill="rgb(222,6,37)" fg:x="10985" fg:w="3"/><text x="93.8630%" y="639.50"></text></g><g><title>net_rx_action (19 samples, 0.16%)</title><rect x="93.5209%" y="709" width="0.1620%" height="15" fill="rgb(231,11,52)" fg:x="10970" fg:w="19"/><text x="93.7352%" y="719.50"></text></g><g><title>virtnet_poll_tx (6 samples, 0.05%)</title><rect x="93.6317%" y="693" width="0.0512%" height="15" fill="rgb(251,188,47)" fg:x="10983" fg:w="6"/><text x="93.8460%" y="703.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.03%)</title><rect x="93.6914%" y="629" width="0.0256%" height="15" fill="rgb(224,11,5)" fg:x="10990" fg:w="3"/><text x="93.9057%" y="639.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.03%)</title><rect x="93.6914%" y="613" width="0.0256%" height="15" fill="rgb(219,227,11)" fg:x="10990" fg:w="3"/><text x="93.9057%" y="623.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="93.6999%" y="597" width="0.0171%" height="15" fill="rgb(232,116,37)" fg:x="10991" fg:w="2"/><text x="93.9142%" y="607.50"></text></g><g><title>__qdisc_run (2 samples, 0.02%)</title><rect x="93.6999%" y="581" width="0.0171%" height="15" fill="rgb(252,144,25)" fg:x="10991" fg:w="2"/><text x="93.9142%" y="591.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.04%)</title><rect x="93.6829%" y="645" width="0.0426%" height="15" fill="rgb(238,106,36)" fg:x="10989" fg:w="5"/><text x="93.8972%" y="655.50"></text></g><g><title>asm_common_interrupt (30 samples, 0.26%)</title><rect x="93.4868%" y="805" width="0.2558%" height="15" fill="rgb(248,227,45)" fg:x="10966" fg:w="30"/><text x="93.7011%" y="815.50"></text></g><g><title>common_interrupt (30 samples, 0.26%)</title><rect x="93.4868%" y="789" width="0.2558%" height="15" fill="rgb(250,67,32)" fg:x="10966" fg:w="30"/><text x="93.7011%" y="799.50"></text></g><g><title>irq_exit_rcu (27 samples, 0.23%)</title><rect x="93.5124%" y="773" width="0.2302%" height="15" fill="rgb(240,18,12)" fg:x="10969" fg:w="27"/><text x="93.7266%" y="783.50"></text></g><g><title>do_softirq_own_stack (27 samples, 0.23%)</title><rect x="93.5124%" y="757" width="0.2302%" height="15" fill="rgb(223,89,53)" fg:x="10969" fg:w="27"/><text x="93.7266%" y="767.50"></text></g><g><title>asm_call_sysvec_on_stack (27 samples, 0.23%)</title><rect x="93.5124%" y="741" width="0.2302%" height="15" fill="rgb(208,184,36)" fg:x="10969" fg:w="27"/><text x="93.7266%" y="751.50"></text></g><g><title>__softirqentry_text_start (26 samples, 0.22%)</title><rect x="93.5209%" y="725" width="0.2217%" height="15" fill="rgb(249,91,22)" fg:x="10970" fg:w="26"/><text x="93.7352%" y="735.50"></text></g><g><title>tasklet_action_common.constprop.0 (7 samples, 0.06%)</title><rect x="93.6829%" y="709" width="0.0597%" height="15" fill="rgb(220,151,48)" fg:x="10989" fg:w="7"/><text x="93.8972%" y="719.50"></text></g><g><title>tcp_tasklet_func (7 samples, 0.06%)</title><rect x="93.6829%" y="693" width="0.0597%" height="15" fill="rgb(218,189,37)" fg:x="10989" fg:w="7"/><text x="93.8972%" y="703.50"></text></g><g><title>tcp_tsq_handler (7 samples, 0.06%)</title><rect x="93.6829%" y="677" width="0.0597%" height="15" fill="rgb(238,207,14)" fg:x="10989" fg:w="7"/><text x="93.8972%" y="687.50"></text></g><g><title>tcp_write_xmit (7 samples, 0.06%)</title><rect x="93.6829%" y="661" width="0.0597%" height="15" fill="rgb(236,72,36)" fg:x="10989" fg:w="7"/><text x="93.8972%" y="671.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.02%)</title><rect x="93.7255%" y="645" width="0.0171%" height="15" fill="rgb(225,2,28)" fg:x="10994" fg:w="2"/><text x="93.9398%" y="655.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="93.7511%" y="773" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="10997" fg:w="2"/><text x="93.9654%" y="783.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="93.7511%" y="757" width="0.0171%" height="15" fill="rgb(221,147,0)" fg:x="10997" fg:w="2"/><text x="93.9654%" y="767.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="93.7511%" y="741" width="0.0171%" height="15" fill="rgb(212,109,30)" fg:x="10997" fg:w="2"/><text x="93.9654%" y="751.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="93.7511%" y="725" width="0.0171%" height="15" fill="rgb(232,211,54)" fg:x="10997" fg:w="2"/><text x="93.9654%" y="735.50"></text></g><g><title>tick_sched_timer (2 samples, 0.02%)</title><rect x="93.7511%" y="709" width="0.0171%" height="15" fill="rgb(237,67,28)" fg:x="10997" fg:w="2"/><text x="93.9654%" y="719.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.03%)</title><rect x="93.7425%" y="805" width="0.0341%" height="15" fill="rgb(209,17,43)" fg:x="10996" fg:w="4"/><text x="93.9568%" y="815.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="93.7511%" y="789" width="0.0256%" height="15" fill="rgb(218,44,13)" fg:x="10997" fg:w="3"/><text x="93.9654%" y="799.50"></text></g><g><title>__irqentry_text_start (33 samples, 0.28%)</title><rect x="95.8312%" y="789" width="0.2813%" height="15" fill="rgb(229,107,3)" fg:x="11241" fg:w="33"/><text x="96.0455%" y="799.50"></text></g><g><title>_cond_resched (11 samples, 0.09%)</title><rect x="96.5473%" y="741" width="0.0938%" height="15" fill="rgb(240,228,18)" fg:x="11325" fg:w="11"/><text x="96.7616%" y="751.50"></text></g><g><title>rcu_all_qs (3 samples, 0.03%)</title><rect x="96.6155%" y="725" width="0.0256%" height="15" fill="rgb(224,119,51)" fg:x="11333" fg:w="3"/><text x="96.8298%" y="735.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="96.6411%" y="741" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="11336" fg:w="2"/><text x="96.8554%" y="751.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="96.6411%" y="725" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="11336" fg:w="2"/><text x="96.8554%" y="735.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="96.6411%" y="709" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="11336" fg:w="2"/><text x="96.8554%" y="719.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="96.6411%" y="693" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="11336" fg:w="2"/><text x="96.8554%" y="703.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="96.6411%" y="677" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="11336" fg:w="2"/><text x="96.8554%" y="687.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="96.6411%" y="661" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="11336" fg:w="2"/><text x="96.8554%" y="671.50"></text></g><g><title>__inc_numa_state (2 samples, 0.02%)</title><rect x="96.7519%" y="725" width="0.0171%" height="15" fill="rgb(213,57,28)" fg:x="11349" fg:w="2"/><text x="96.9662%" y="735.50"></text></g><g><title>__list_del_entry_valid (5 samples, 0.04%)</title><rect x="96.7775%" y="725" width="0.0426%" height="15" fill="rgb(224,110,12)" fg:x="11352" fg:w="5"/><text x="96.9918%" y="735.50"></text></g><g><title>__irqentry_text_start (7 samples, 0.06%)</title><rect x="97.1952%" y="677" width="0.0597%" height="15" fill="rgb(229,107,3)" fg:x="11401" fg:w="7"/><text x="97.4095%" y="687.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="97.2549%" y="581" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="11408" fg:w="2"/><text x="97.4692%" y="591.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="97.2549%" y="565" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="11408" fg:w="2"/><text x="97.4692%" y="575.50"></text></g><g><title>kernel_init_free_pages (44 samples, 0.38%)</title><rect x="96.9139%" y="709" width="0.3751%" height="15" fill="rgb(253,165,35)" fg:x="11368" fg:w="44"/><text x="97.1282%" y="719.50"></text></g><g><title>clear_page_rep (40 samples, 0.34%)</title><rect x="96.9480%" y="693" width="0.3410%" height="15" fill="rgb(233,188,25)" fg:x="11372" fg:w="40"/><text x="97.1623%" y="703.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.03%)</title><rect x="97.2549%" y="677" width="0.0341%" height="15" fill="rgb(248,227,45)" fg:x="11408" fg:w="4"/><text x="97.4692%" y="687.50"></text></g><g><title>common_interrupt (4 samples, 0.03%)</title><rect x="97.2549%" y="661" width="0.0341%" height="15" fill="rgb(250,67,32)" fg:x="11408" fg:w="4"/><text x="97.4692%" y="671.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="97.2549%" y="645" width="0.0341%" height="15" fill="rgb(240,18,12)" fg:x="11408" fg:w="4"/><text x="97.4692%" y="655.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.03%)</title><rect x="97.2549%" y="629" width="0.0341%" height="15" fill="rgb(223,89,53)" fg:x="11408" fg:w="4"/><text x="97.4692%" y="639.50"></text></g><g><title>asm_call_sysvec_on_stack (4 samples, 0.03%)</title><rect x="97.2549%" y="613" width="0.0341%" height="15" fill="rgb(208,184,36)" fg:x="11408" fg:w="4"/><text x="97.4692%" y="623.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="97.2549%" y="597" width="0.0341%" height="15" fill="rgb(249,91,22)" fg:x="11408" fg:w="4"/><text x="97.4692%" y="607.50"></text></g><g><title>tasklet_action_common.constprop.0 (2 samples, 0.02%)</title><rect x="97.2720%" y="581" width="0.0171%" height="15" fill="rgb(220,151,48)" fg:x="11410" fg:w="2"/><text x="97.4862%" y="591.50"></text></g><g><title>tcp_tasklet_func (2 samples, 0.02%)</title><rect x="97.2720%" y="565" width="0.0171%" height="15" fill="rgb(218,189,37)" fg:x="11410" fg:w="2"/><text x="97.4862%" y="575.50"></text></g><g><title>tcp_tsq_handler (2 samples, 0.02%)</title><rect x="97.2720%" y="549" width="0.0171%" height="15" fill="rgb(238,207,14)" fg:x="11410" fg:w="2"/><text x="97.4862%" y="559.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="97.2720%" y="533" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="11410" fg:w="2"/><text x="97.4862%" y="543.50"></text></g><g><title>kernel_poison_pages (4 samples, 0.03%)</title><rect x="97.2890%" y="709" width="0.0341%" height="15" fill="rgb(240,82,29)" fg:x="11412" fg:w="4"/><text x="97.5033%" y="719.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="97.3061%" y="693" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="11414" fg:w="2"/><text x="97.5203%" y="703.50"></text></g><g><title>get_page_from_freelist (80 samples, 0.68%)</title><rect x="96.6581%" y="741" width="0.6820%" height="15" fill="rgb(246,35,53)" fg:x="11338" fg:w="80"/><text x="96.8724%" y="751.50"></text></g><g><title>prep_new_page (60 samples, 0.51%)</title><rect x="96.8286%" y="725" width="0.5115%" height="15" fill="rgb(220,94,29)" fg:x="11358" fg:w="60"/><text x="97.0429%" y="735.50"></text></g><g><title>page_poisoning_enabled (2 samples, 0.02%)</title><rect x="97.3231%" y="709" width="0.0171%" height="15" fill="rgb(210,88,43)" fg:x="11416" fg:w="2"/><text x="97.5374%" y="719.50"></text></g><g><title>__alloc_pages_nodemask (108 samples, 0.92%)</title><rect x="96.4450%" y="757" width="0.9207%" height="15" fill="rgb(245,49,10)" fg:x="11313" fg:w="108"/><text x="96.6593%" y="767.50"></text></g><g><title>should_fail_alloc_page (3 samples, 0.03%)</title><rect x="97.3402%" y="741" width="0.0256%" height="15" fill="rgb(218,112,19)" fg:x="11418" fg:w="3"/><text x="97.5544%" y="751.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.03%)</title><rect x="97.3657%" y="757" width="0.0341%" height="15" fill="rgb(229,107,3)" fg:x="11421" fg:w="4"/><text x="97.5800%" y="767.50"></text></g><g><title>__get_free_pages (129 samples, 1.10%)</title><rect x="96.4194%" y="773" width="1.0997%" height="15" fill="rgb(229,178,48)" fg:x="11310" fg:w="129"/><text x="96.6337%" y="783.50"></text></g><g><title>alloc_pages_current (14 samples, 0.12%)</title><rect x="97.3998%" y="757" width="0.1194%" height="15" fill="rgb(250,171,52)" fg:x="11425" fg:w="14"/><text x="97.6141%" y="767.50"></text></g><g><title>policy_node (4 samples, 0.03%)</title><rect x="97.4851%" y="741" width="0.0341%" height="15" fill="rgb(205,161,10)" fg:x="11435" fg:w="4"/><text x="97.6994%" y="751.50"></text></g><g><title>__irqentry_text_start (7 samples, 0.06%)</title><rect x="97.5192%" y="773" width="0.0597%" height="15" fill="rgb(229,107,3)" fg:x="11439" fg:w="7"/><text x="97.7335%" y="783.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.03%)</title><rect x="97.5789%" y="773" width="0.0341%" height="15" fill="rgb(248,227,45)" fg:x="11446" fg:w="4"/><text x="97.7931%" y="783.50"></text></g><g><title>common_interrupt (4 samples, 0.03%)</title><rect x="97.5789%" y="757" width="0.0341%" height="15" fill="rgb(250,67,32)" fg:x="11446" fg:w="4"/><text x="97.7931%" y="767.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="97.5789%" y="741" width="0.0341%" height="15" fill="rgb(240,18,12)" fg:x="11446" fg:w="4"/><text x="97.7931%" y="751.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="97.5874%" y="725" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="11447" fg:w="3"/><text x="97.8017%" y="735.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="97.5874%" y="709" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="11447" fg:w="3"/><text x="97.8017%" y="719.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="97.5874%" y="693" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="11447" fg:w="3"/><text x="97.8017%" y="703.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="97.5959%" y="677" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="11448" fg:w="2"/><text x="97.8102%" y="687.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="97.5959%" y="661" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="11448" fg:w="2"/><text x="97.8102%" y="671.50"></text></g><g><title>__pollwait (177 samples, 1.51%)</title><rect x="96.1125%" y="789" width="1.5090%" height="15" fill="rgb(248,41,12)" fg:x="11274" fg:w="177"/><text x="96.3268%" y="799.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="97.7835%" y="469" width="0.0171%" height="15" fill="rgb(226,88,38)" fg:x="11470" fg:w="2"/><text x="97.9977%" y="479.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="97.7835%" y="453" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="11470" fg:w="2"/><text x="97.9977%" y="463.50"></text></g><g><title>virtnet_poll (5 samples, 0.04%)</title><rect x="97.7664%" y="661" width="0.0426%" height="15" fill="rgb(213,187,12)" fg:x="11468" fg:w="5"/><text x="97.9807%" y="671.50"></text></g><g><title>napi_complete_done (5 samples, 0.04%)</title><rect x="97.7664%" y="645" width="0.0426%" height="15" fill="rgb(226,216,13)" fg:x="11468" fg:w="5"/><text x="97.9807%" y="655.50"></text></g><g><title>netif_receive_skb_list_internal (5 samples, 0.04%)</title><rect x="97.7664%" y="629" width="0.0426%" height="15" fill="rgb(216,153,44)" fg:x="11468" fg:w="5"/><text x="97.9807%" y="639.50"></text></g><g><title>__netif_receive_skb_list_core (5 samples, 0.04%)</title><rect x="97.7664%" y="613" width="0.0426%" height="15" fill="rgb(227,176,26)" fg:x="11468" fg:w="5"/><text x="97.9807%" y="623.50"></text></g><g><title>ip_list_rcv (5 samples, 0.04%)</title><rect x="97.7664%" y="597" width="0.0426%" height="15" fill="rgb(215,38,16)" fg:x="11468" fg:w="5"/><text x="97.9807%" y="607.50"></text></g><g><title>ip_sublist_rcv (5 samples, 0.04%)</title><rect x="97.7664%" y="581" width="0.0426%" height="15" fill="rgb(207,166,9)" fg:x="11468" fg:w="5"/><text x="97.9807%" y="591.50"></text></g><g><title>ip_sublist_rcv_finish (5 samples, 0.04%)</title><rect x="97.7664%" y="565" width="0.0426%" height="15" fill="rgb(223,178,14)" fg:x="11468" fg:w="5"/><text x="97.9807%" y="575.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.04%)</title><rect x="97.7664%" y="549" width="0.0426%" height="15" fill="rgb(220,94,29)" fg:x="11468" fg:w="5"/><text x="97.9807%" y="559.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.04%)</title><rect x="97.7664%" y="533" width="0.0426%" height="15" fill="rgb(207,19,13)" fg:x="11468" fg:w="5"/><text x="97.9807%" y="543.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.04%)</title><rect x="97.7664%" y="517" width="0.0426%" height="15" fill="rgb(224,38,0)" fg:x="11468" fg:w="5"/><text x="97.9807%" y="527.50"></text></g><g><title>tcp_v4_do_rcv (5 samples, 0.04%)</title><rect x="97.7664%" y="501" width="0.0426%" height="15" fill="rgb(228,220,18)" fg:x="11468" fg:w="5"/><text x="97.9807%" y="511.50"></text></g><g><title>tcp_rcv_established (5 samples, 0.04%)</title><rect x="97.7664%" y="485" width="0.0426%" height="15" fill="rgb(224,50,47)" fg:x="11468" fg:w="5"/><text x="97.9807%" y="495.50"></text></g><g><title>net_rx_action (7 samples, 0.06%)</title><rect x="97.7664%" y="677" width="0.0597%" height="15" fill="rgb(231,11,52)" fg:x="11468" fg:w="7"/><text x="97.9807%" y="687.50"></text></g><g><title>virtnet_poll_tx (2 samples, 0.02%)</title><rect x="97.8090%" y="661" width="0.0171%" height="15" fill="rgb(251,188,47)" fg:x="11473" fg:w="2"/><text x="98.0233%" y="671.50"></text></g><g><title>_raw_spin_unlock_irqrestore (24 samples, 0.20%)</title><rect x="97.6300%" y="789" width="0.2046%" height="15" fill="rgb(216,183,20)" fg:x="11452" fg:w="24"/><text x="97.8443%" y="799.50"></text></g><g><title>asm_common_interrupt (9 samples, 0.08%)</title><rect x="97.7579%" y="773" width="0.0767%" height="15" fill="rgb(248,227,45)" fg:x="11467" fg:w="9"/><text x="97.9722%" y="783.50"></text></g><g><title>common_interrupt (9 samples, 0.08%)</title><rect x="97.7579%" y="757" width="0.0767%" height="15" fill="rgb(250,67,32)" fg:x="11467" fg:w="9"/><text x="97.9722%" y="767.50"></text></g><g><title>irq_exit_rcu (8 samples, 0.07%)</title><rect x="97.7664%" y="741" width="0.0682%" height="15" fill="rgb(240,18,12)" fg:x="11468" fg:w="8"/><text x="97.9807%" y="751.50"></text></g><g><title>do_softirq_own_stack (8 samples, 0.07%)</title><rect x="97.7664%" y="725" width="0.0682%" height="15" fill="rgb(223,89,53)" fg:x="11468" fg:w="8"/><text x="97.9807%" y="735.50"></text></g><g><title>asm_call_sysvec_on_stack (8 samples, 0.07%)</title><rect x="97.7664%" y="709" width="0.0682%" height="15" fill="rgb(208,184,36)" fg:x="11468" fg:w="8"/><text x="97.9807%" y="719.50"></text></g><g><title>__softirqentry_text_start (8 samples, 0.07%)</title><rect x="97.7664%" y="693" width="0.0682%" height="15" fill="rgb(249,91,22)" fg:x="11468" fg:w="8"/><text x="97.9807%" y="703.50"></text></g><g><title>__list_add_valid (16 samples, 0.14%)</title><rect x="98.1159%" y="773" width="0.1364%" height="15" fill="rgb(206,79,8)" fg:x="11509" fg:w="16"/><text x="98.3302%" y="783.50"></text></g><g><title>add_wait_queue (65 samples, 0.55%)</title><rect x="97.8346%" y="789" width="0.5541%" height="15" fill="rgb(227,131,29)" fg:x="11476" fg:w="65"/><text x="98.0489%" y="799.50"></text></g><g><title>_raw_spin_lock_irqsave (16 samples, 0.14%)</title><rect x="98.2523%" y="773" width="0.1364%" height="15" fill="rgb(206,213,41)" fg:x="11525" fg:w="16"/><text x="98.4666%" y="783.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="98.3717%" y="757" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="11539" fg:w="2"/><text x="98.5860%" y="767.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.02%)</title><rect x="98.4143%" y="581" width="0.0171%" height="15" fill="rgb(246,15,53)" fg:x="11544" fg:w="2"/><text x="98.6286%" y="591.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="98.4740%" y="453" width="0.0171%" height="15" fill="rgb(238,106,36)" fg:x="11551" fg:w="2"/><text x="98.6883%" y="463.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="98.4740%" y="437" width="0.0171%" height="15" fill="rgb(224,11,5)" fg:x="11551" fg:w="2"/><text x="98.6883%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (5 samples, 0.04%)</title><rect x="98.4655%" y="485" width="0.0426%" height="15" fill="rgb(226,88,38)" fg:x="11550" fg:w="5"/><text x="98.6798%" y="495.50"></text></g><g><title>tcp_write_xmit (5 samples, 0.04%)</title><rect x="98.4655%" y="469" width="0.0426%" height="15" fill="rgb(236,72,36)" fg:x="11550" fg:w="5"/><text x="98.6798%" y="479.50"></text></g><g><title>tcp_ack (7 samples, 0.06%)</title><rect x="98.5081%" y="485" width="0.0597%" height="15" fill="rgb(213,228,3)" fg:x="11555" fg:w="7"/><text x="98.7224%" y="495.50"></text></g><g><title>tcp_trim_head (2 samples, 0.02%)</title><rect x="98.5507%" y="469" width="0.0171%" height="15" fill="rgb(230,179,8)" fg:x="11560" fg:w="2"/><text x="98.7650%" y="479.50"></text></g><g><title>napi_complete_done (19 samples, 0.16%)</title><rect x="98.4143%" y="661" width="0.1620%" height="15" fill="rgb(226,216,13)" fg:x="11544" fg:w="19"/><text x="98.6286%" y="671.50"></text></g><g><title>netif_receive_skb_list_internal (19 samples, 0.16%)</title><rect x="98.4143%" y="645" width="0.1620%" height="15" fill="rgb(216,153,44)" fg:x="11544" fg:w="19"/><text x="98.6286%" y="655.50"></text></g><g><title>__netif_receive_skb_list_core (19 samples, 0.16%)</title><rect x="98.4143%" y="629" width="0.1620%" height="15" fill="rgb(227,176,26)" fg:x="11544" fg:w="19"/><text x="98.6286%" y="639.50"></text></g><g><title>ip_list_rcv (19 samples, 0.16%)</title><rect x="98.4143%" y="613" width="0.1620%" height="15" fill="rgb(215,38,16)" fg:x="11544" fg:w="19"/><text x="98.6286%" y="623.50"></text></g><g><title>ip_sublist_rcv (19 samples, 0.16%)</title><rect x="98.4143%" y="597" width="0.1620%" height="15" fill="rgb(207,166,9)" fg:x="11544" fg:w="19"/><text x="98.6286%" y="607.50"></text></g><g><title>ip_sublist_rcv_finish (17 samples, 0.14%)</title><rect x="98.4314%" y="581" width="0.1449%" height="15" fill="rgb(223,178,14)" fg:x="11546" fg:w="17"/><text x="98.6457%" y="591.50"></text></g><g><title>ip_local_deliver_finish (17 samples, 0.14%)</title><rect x="98.4314%" y="565" width="0.1449%" height="15" fill="rgb(220,94,29)" fg:x="11546" fg:w="17"/><text x="98.6457%" y="575.50"></text></g><g><title>ip_protocol_deliver_rcu (17 samples, 0.14%)</title><rect x="98.4314%" y="549" width="0.1449%" height="15" fill="rgb(207,19,13)" fg:x="11546" fg:w="17"/><text x="98.6457%" y="559.50"></text></g><g><title>tcp_v4_rcv (17 samples, 0.14%)</title><rect x="98.4314%" y="533" width="0.1449%" height="15" fill="rgb(224,38,0)" fg:x="11546" fg:w="17"/><text x="98.6457%" y="543.50"></text></g><g><title>tcp_v4_do_rcv (16 samples, 0.14%)</title><rect x="98.4399%" y="517" width="0.1364%" height="15" fill="rgb(228,220,18)" fg:x="11547" fg:w="16"/><text x="98.6542%" y="527.50"></text></g><g><title>tcp_rcv_established (15 samples, 0.13%)</title><rect x="98.4484%" y="501" width="0.1279%" height="15" fill="rgb(224,50,47)" fg:x="11548" fg:w="15"/><text x="98.6627%" y="511.50"></text></g><g><title>virtnet_poll (22 samples, 0.19%)</title><rect x="98.3973%" y="677" width="0.1876%" height="15" fill="rgb(213,187,12)" fg:x="11542" fg:w="22"/><text x="98.6116%" y="687.50"></text></g><g><title>net_rx_action (23 samples, 0.20%)</title><rect x="98.3973%" y="693" width="0.1961%" height="15" fill="rgb(231,11,52)" fg:x="11542" fg:w="23"/><text x="98.6116%" y="703.50"></text></g><g><title>asm_common_interrupt (27 samples, 0.23%)</title><rect x="98.3887%" y="789" width="0.2302%" height="15" fill="rgb(248,227,45)" fg:x="11541" fg:w="27"/><text x="98.6030%" y="799.50"></text></g><g><title>common_interrupt (27 samples, 0.23%)</title><rect x="98.3887%" y="773" width="0.2302%" height="15" fill="rgb(250,67,32)" fg:x="11541" fg:w="27"/><text x="98.6030%" y="783.50"></text></g><g><title>irq_exit_rcu (27 samples, 0.23%)</title><rect x="98.3887%" y="757" width="0.2302%" height="15" fill="rgb(240,18,12)" fg:x="11541" fg:w="27"/><text x="98.6030%" y="767.50"></text></g><g><title>do_softirq_own_stack (27 samples, 0.23%)</title><rect x="98.3887%" y="741" width="0.2302%" height="15" fill="rgb(223,89,53)" fg:x="11541" fg:w="27"/><text x="98.6030%" y="751.50"></text></g><g><title>asm_call_sysvec_on_stack (27 samples, 0.23%)</title><rect x="98.3887%" y="725" width="0.2302%" height="15" fill="rgb(208,184,36)" fg:x="11541" fg:w="27"/><text x="98.6030%" y="735.50"></text></g><g><title>__softirqentry_text_start (27 samples, 0.23%)</title><rect x="98.3887%" y="709" width="0.2302%" height="15" fill="rgb(249,91,22)" fg:x="11541" fg:w="27"/><text x="98.6030%" y="719.50"></text></g><g><title>tasklet_action_common.constprop.0 (3 samples, 0.03%)</title><rect x="98.5934%" y="693" width="0.0256%" height="15" fill="rgb(220,151,48)" fg:x="11565" fg:w="3"/><text x="98.8076%" y="703.50"></text></g><g><title>tcp_tasklet_func (3 samples, 0.03%)</title><rect x="98.5934%" y="677" width="0.0256%" height="15" fill="rgb(218,189,37)" fg:x="11565" fg:w="3"/><text x="98.8076%" y="687.50"></text></g><g><title>tcp_tsq_handler (3 samples, 0.03%)</title><rect x="98.5934%" y="661" width="0.0256%" height="15" fill="rgb(238,207,14)" fg:x="11565" fg:w="3"/><text x="98.8076%" y="671.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.03%)</title><rect x="98.5934%" y="645" width="0.0256%" height="15" fill="rgb(236,72,36)" fg:x="11565" fg:w="3"/><text x="98.8076%" y="655.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.03%)</title><rect x="98.5934%" y="629" width="0.0256%" height="15" fill="rgb(238,106,36)" fg:x="11565" fg:w="3"/><text x="98.8076%" y="639.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.03%)</title><rect x="98.5934%" y="613" width="0.0256%" height="15" fill="rgb(224,11,5)" fg:x="11565" fg:w="3"/><text x="98.8076%" y="623.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="98.6019%" y="597" width="0.0171%" height="15" fill="rgb(219,227,11)" fg:x="11566" fg:w="2"/><text x="98.8162%" y="607.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="98.6019%" y="581" width="0.0171%" height="15" fill="rgb(232,116,37)" fg:x="11566" fg:w="2"/><text x="98.8162%" y="591.50"></text></g><g><title>__qdisc_run (2 samples, 0.02%)</title><rect x="98.6019%" y="565" width="0.0171%" height="15" fill="rgb(252,144,25)" fg:x="11566" fg:w="2"/><text x="98.8162%" y="575.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.02%)</title><rect x="98.6019%" y="549" width="0.0171%" height="15" fill="rgb(222,128,44)" fg:x="11566" fg:w="2"/><text x="98.8162%" y="559.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="98.6189%" y="757" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="11568" fg:w="2"/><text x="98.8332%" y="767.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="98.6189%" y="741" width="0.0171%" height="15" fill="rgb(221,147,0)" fg:x="11568" fg:w="2"/><text x="98.8332%" y="751.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="98.6189%" y="725" width="0.0171%" height="15" fill="rgb(212,109,30)" fg:x="11568" fg:w="2"/><text x="98.8332%" y="735.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="98.6189%" y="709" width="0.0171%" height="15" fill="rgb(232,211,54)" fg:x="11568" fg:w="2"/><text x="98.8332%" y="719.50"></text></g><g><title>tick_sched_timer (2 samples, 0.02%)</title><rect x="98.6189%" y="693" width="0.0171%" height="15" fill="rgb(237,67,28)" fg:x="11568" fg:w="2"/><text x="98.8332%" y="703.50"></text></g><g><title>tick_sched_handle (2 samples, 0.02%)</title><rect x="98.6189%" y="677" width="0.0171%" height="15" fill="rgb(232,138,39)" fg:x="11568" fg:w="2"/><text x="98.8332%" y="687.50"></text></g><g><title>update_process_times (2 samples, 0.02%)</title><rect x="98.6189%" y="661" width="0.0171%" height="15" fill="rgb(236,132,35)" fg:x="11568" fg:w="2"/><text x="98.8332%" y="671.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="98.6189%" y="789" width="0.0256%" height="15" fill="rgb(209,17,43)" fg:x="11568" fg:w="3"/><text x="98.8332%" y="799.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="98.6189%" y="773" width="0.0256%" height="15" fill="rgb(218,44,13)" fg:x="11568" fg:w="3"/><text x="98.8332%" y="783.50"></text></g><g><title>__irqentry_text_start (5 samples, 0.04%)</title><rect x="98.9855%" y="773" width="0.0426%" height="15" fill="rgb(229,107,3)" fg:x="11611" fg:w="5"/><text x="99.1998%" y="783.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="99.0281%" y="469" width="0.0171%" height="15" fill="rgb(226,88,38)" fg:x="11616" fg:w="2"/><text x="99.2424%" y="479.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="99.0281%" y="453" width="0.0171%" height="15" fill="rgb(236,72,36)" fg:x="11616" fg:w="2"/><text x="99.2424%" y="463.50"></text></g><g><title>sock_poll (1,252 samples, 10.67%)</title><rect x="88.3802%" y="821" width="10.6735%" height="15" fill="rgb(224,152,37)" fg:x="10367" fg:w="1252"/><text x="88.5945%" y="831.50">sock_poll</text></g><g><title>tcp_poll (619 samples, 5.28%)</title><rect x="93.7766%" y="805" width="5.2771%" height="15" fill="rgb(233,143,3)" fg:x="11000" fg:w="619"/><text x="93.9909%" y="815.50">tcp_poll</text></g><g><title>tcp_stream_memory_free (48 samples, 0.41%)</title><rect x="98.6445%" y="789" width="0.4092%" height="15" fill="rgb(235,140,9)" fg:x="11571" fg:w="48"/><text x="98.8588%" y="799.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="99.0281%" y="773" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="783.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="99.0281%" y="757" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="767.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="99.0281%" y="741" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="751.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="99.0281%" y="725" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="735.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="99.0281%" y="709" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="719.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="99.0281%" y="693" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="703.50"></text></g><g><title>net_rx_action (3 samples, 0.03%)</title><rect x="99.0281%" y="677" width="0.0256%" height="15" fill="rgb(231,11,52)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="687.50"></text></g><g><title>virtnet_poll (3 samples, 0.03%)</title><rect x="99.0281%" y="661" width="0.0256%" height="15" fill="rgb(213,187,12)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="671.50"></text></g><g><title>napi_complete_done (3 samples, 0.03%)</title><rect x="99.0281%" y="645" width="0.0256%" height="15" fill="rgb(226,216,13)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="655.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.03%)</title><rect x="99.0281%" y="629" width="0.0256%" height="15" fill="rgb(216,153,44)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="639.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.03%)</title><rect x="99.0281%" y="613" width="0.0256%" height="15" fill="rgb(227,176,26)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="623.50"></text></g><g><title>ip_list_rcv (3 samples, 0.03%)</title><rect x="99.0281%" y="597" width="0.0256%" height="15" fill="rgb(215,38,16)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="607.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.03%)</title><rect x="99.0281%" y="581" width="0.0256%" height="15" fill="rgb(207,166,9)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="591.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.03%)</title><rect x="99.0281%" y="565" width="0.0256%" height="15" fill="rgb(223,178,14)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="575.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.03%)</title><rect x="99.0281%" y="549" width="0.0256%" height="15" fill="rgb(220,94,29)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="559.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.03%)</title><rect x="99.0281%" y="533" width="0.0256%" height="15" fill="rgb(207,19,13)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="543.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="99.0281%" y="517" width="0.0256%" height="15" fill="rgb(224,38,0)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="527.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="99.0281%" y="501" width="0.0256%" height="15" fill="rgb(228,220,18)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="511.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.03%)</title><rect x="99.0281%" y="485" width="0.0256%" height="15" fill="rgb(224,50,47)" fg:x="11616" fg:w="3"/><text x="99.2424%" y="495.50"></text></g><g><title>do_sys_poll (2,789 samples, 23.78%)</title><rect x="75.2856%" y="837" width="23.7766%" height="15" fill="rgb(246,108,27)" fg:x="8831" fg:w="2789"/><text x="75.4999%" y="847.50">do_sys_poll</text></g><g><title>ktime_get_ts64 (13 samples, 0.11%)</title><rect x="99.0793%" y="821" width="0.1108%" height="15" fill="rgb(212,111,10)" fg:x="11622" fg:w="13"/><text x="99.2936%" y="831.50"></text></g><g><title>kvm_clock_get_cycles (6 samples, 0.05%)</title><rect x="99.1390%" y="805" width="0.0512%" height="15" fill="rgb(213,218,37)" fg:x="11629" fg:w="6"/><text x="99.3532%" y="815.50"></text></g><g><title>pvclock_clocksource_read (2 samples, 0.02%)</title><rect x="99.1731%" y="789" width="0.0171%" height="15" fill="rgb(246,59,10)" fg:x="11633" fg:w="2"/><text x="99.3873%" y="799.50"></text></g><g><title>__x64_sys_poll (2,831 samples, 24.13%)</title><rect x="75.1321%" y="853" width="24.1347%" height="15" fill="rgb(220,34,9)" fg:x="8813" fg:w="2831"/><text x="75.3464%" y="863.50">__x64_sys_poll</text></g><g><title>poll_select_set_timeout (24 samples, 0.20%)</title><rect x="99.0622%" y="837" width="0.2046%" height="15" fill="rgb(216,174,36)" fg:x="11620" fg:w="24"/><text x="99.2765%" y="847.50"></text></g><g><title>timespec64_add_safe (9 samples, 0.08%)</title><rect x="99.1901%" y="821" width="0.0767%" height="15" fill="rgb(244,181,45)" fg:x="11635" fg:w="9"/><text x="99.4044%" y="831.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.02%)</title><rect x="99.2498%" y="805" width="0.0171%" height="15" fill="rgb(229,107,3)" fg:x="11642" fg:w="2"/><text x="99.4641%" y="815.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.02%)</title><rect x="99.2754%" y="853" width="0.0171%" height="15" fill="rgb(210,87,27)" fg:x="11645" fg:w="2"/><text x="99.4896%" y="863.50"></text></g><g><title>do_syscall_64 (2,849 samples, 24.29%)</title><rect x="75.0213%" y="869" width="24.2882%" height="15" fill="rgb(220,74,14)" fg:x="8800" fg:w="2849"/><text x="75.2356%" y="879.50">do_syscall_64</text></g><g><title>syscall_enter_from_user_mode (2 samples, 0.02%)</title><rect x="99.2924%" y="853" width="0.0171%" height="15" fill="rgb(224,163,22)" fg:x="11647" fg:w="2"/><text x="99.5067%" y="863.50"></text></g><g><title>srso_untrain_ret_alias (2 samples, 0.02%)</title><rect x="99.3095%" y="869" width="0.0171%" height="15" fill="rgb(207,47,31)" fg:x="11649" fg:w="2"/><text x="99.5237%" y="879.50"></text></g><g><title>fpregs_assert_state_consistent (3 samples, 0.03%)</title><rect x="99.4203%" y="837" width="0.0256%" height="15" fill="rgb(227,221,38)" fg:x="11662" fg:w="3"/><text x="99.6346%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,880 samples, 24.55%)</title><rect x="74.9787%" y="885" width="24.5524%" height="15" fill="rgb(205,226,15)" fg:x="8795" fg:w="2880"/><text x="75.1930%" y="895.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>syscall_exit_to_user_mode (24 samples, 0.20%)</title><rect x="99.3265%" y="869" width="0.2046%" height="15" fill="rgb(215,101,28)" fg:x="11651" fg:w="24"/><text x="99.5408%" y="879.50"></text></g><g><title>exit_to_user_mode_prepare (23 samples, 0.20%)</title><rect x="99.3350%" y="853" width="0.1961%" height="15" fill="rgb(240,77,26)" fg:x="11652" fg:w="23"/><text x="99.5493%" y="863.50"></text></g><g><title>switch_fpu_return (9 samples, 0.08%)</title><rect x="99.4544%" y="837" width="0.0767%" height="15" fill="rgb(214,180,49)" fg:x="11666" fg:w="9"/><text x="99.6687%" y="847.50"></text></g><g><title>sock_poll (3 samples, 0.03%)</title><rect x="99.5396%" y="885" width="0.0256%" height="15" fill="rgb(224,152,37)" fg:x="11676" fg:w="3"/><text x="99.7539%" y="895.50"></text></g><g><title>srso_safe_ret_alias (3 samples, 0.03%)</title><rect x="99.5396%" y="869" width="0.0256%" height="15" fill="rgb(210,87,27)" fg:x="11676" fg:w="3"/><text x="99.7539%" y="879.50"></text></g><g><title>syscall_return_via_sysret (15 samples, 0.13%)</title><rect x="99.5652%" y="885" width="0.1279%" height="15" fill="rgb(230,222,6)" fg:x="11679" fg:w="15"/><text x="99.7795%" y="895.50"></text></g><g><title>__x86_indirect_thunk_rcx (2 samples, 0.02%)</title><rect x="99.6931%" y="869" width="0.0171%" height="15" fill="rgb(225,153,7)" fg:x="11694" fg:w="2"/><text x="99.9074%" y="879.50"></text></g><g><title>__poll (3,012 samples, 25.68%)</title><rect x="74.0580%" y="901" width="25.6777%" height="15" fill="rgb(248,204,13)" fg:x="8687" fg:w="3012"/><text x="74.2723%" y="911.50">__poll</text></g><g><title>tcp_poll (5 samples, 0.04%)</title><rect x="99.6931%" y="885" width="0.0426%" height="15" fill="rgb(233,143,3)" fg:x="11694" fg:w="5"/><text x="99.9074%" y="895.50"></text></g><g><title>srso_safe_ret_alias (3 samples, 0.03%)</title><rect x="99.7101%" y="869" width="0.0256%" height="15" fill="rgb(210,87,27)" fg:x="11696" fg:w="3"/><text x="99.9244%" y="879.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="99.7187%" y="853" width="0.0171%" height="15" fill="rgb(248,227,45)" fg:x="11697" fg:w="2"/><text x="99.9330%" y="863.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="99.7187%" y="837" width="0.0171%" height="15" fill="rgb(250,67,32)" fg:x="11697" fg:w="2"/><text x="99.9330%" y="847.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="99.7187%" y="821" width="0.0171%" height="15" fill="rgb(240,18,12)" fg:x="11697" fg:w="2"/><text x="99.9330%" y="831.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.02%)</title><rect x="99.7187%" y="805" width="0.0171%" height="15" fill="rgb(223,89,53)" fg:x="11697" fg:w="2"/><text x="99.9330%" y="815.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.02%)</title><rect x="99.7187%" y="789" width="0.0171%" height="15" fill="rgb(208,184,36)" fg:x="11697" fg:w="2"/><text x="99.9330%" y="799.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="99.7187%" y="773" width="0.0171%" height="15" fill="rgb(249,91,22)" fg:x="11697" fg:w="2"/><text x="99.9330%" y="783.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="99.7187%" y="757" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="11697" fg:w="2"/><text x="99.9330%" y="767.50"></text></g><g><title>virtnet_poll (2 samples, 0.02%)</title><rect x="99.7187%" y="741" width="0.0171%" height="15" fill="rgb(213,187,12)" fg:x="11697" fg:w="2"/><text x="99.9330%" y="751.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="99.7187%" y="725" width="0.0171%" height="15" fill="rgb(226,216,13)" fg:x="11697" fg:w="2"/><text x="99.9330%" y="735.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="99.7187%" y="709" width="0.0171%" height="15" fill="rgb(216,153,44)" fg:x="11697" fg:w="2"/><text x="99.9330%" y="719.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="99.7187%" y="693" width="0.0171%" height="15" fill="rgb(227,176,26)" fg:x="11697" fg:w="2"/><text x="99.9330%" y="703.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="99.7187%" y="677" width="0.0171%" height="15" fill="rgb(215,38,16)" fg:x="11697" fg:w="2"/><text x="99.9330%" y="687.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="99.7357%" y="805" width="0.0171%" height="15" fill="rgb(231,11,52)" fg:x="11699" fg:w="2"/><text x="99.9500%" y="815.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.03%)</title><rect x="99.7357%" y="901" width="0.0256%" height="15" fill="rgb(248,227,45)" fg:x="11699" fg:w="3"/><text x="99.9500%" y="911.50"></text></g><g><title>common_interrupt (3 samples, 0.03%)</title><rect x="99.7357%" y="885" width="0.0256%" height="15" fill="rgb(250,67,32)" fg:x="11699" fg:w="3"/><text x="99.9500%" y="895.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.03%)</title><rect x="99.7357%" y="869" width="0.0256%" height="15" fill="rgb(240,18,12)" fg:x="11699" fg:w="3"/><text x="99.9500%" y="879.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.03%)</title><rect x="99.7357%" y="853" width="0.0256%" height="15" fill="rgb(223,89,53)" fg:x="11699" fg:w="3"/><text x="99.9500%" y="863.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.03%)</title><rect x="99.7357%" y="837" width="0.0256%" height="15" fill="rgb(208,184,36)" fg:x="11699" fg:w="3"/><text x="99.9500%" y="847.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="99.7357%" y="821" width="0.0256%" height="15" fill="rgb(249,91,22)" fg:x="11699" fg:w="3"/><text x="99.9500%" y="831.50"></text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::data (3 samples, 0.03%)</title><rect x="99.7698%" y="901" width="0.0256%" height="15" fill="rgb(213,156,9)" fg:x="11703" fg:w="3"/><text x="99.9841%" y="911.50"></text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::_M_data_ptr&lt;pollfd&gt; (2 samples, 0.02%)</title><rect x="99.7783%" y="885" width="0.0171%" height="15" fill="rgb(236,85,54)" fg:x="11704" fg:w="2"/><text x="99.9926%" y="895.50"></text></g><g><title>Poll::poll (10,019 samples, 85.41%)</title><rect x="14.3905%" y="917" width="85.4135%" height="15" fill="rgb(241,47,17)" fg:x="1688" fg:w="10019"/><text x="14.6047%" y="927.50">Poll::poll</text></g><g><title>_start (10,036 samples, 85.56%)</title><rect x="14.2540%" y="965" width="85.5584%" height="15" fill="rgb(210,219,27)" fg:x="1672" fg:w="10036"/><text x="14.4683%" y="975.50">_start</text></g><g><title>__libc_start_main (10,036 samples, 85.56%)</title><rect x="14.2540%" y="949" width="85.5584%" height="15" fill="rgb(211,91,2)" fg:x="1672" fg:w="10036"/><text x="14.4683%" y="959.50">__libc_start_main</text></g><g><title>main (10,031 samples, 85.52%)</title><rect x="14.2967%" y="933" width="85.5158%" height="15" fill="rgb(238,28,47)" fg:x="1677" fg:w="10031"/><text x="14.5110%" y="943.50">main</text></g><g><title>entry_SYSCALL_64_safe_stack (7 samples, 0.06%)</title><rect x="99.8210%" y="965" width="0.0597%" height="15" fill="rgb(217,56,41)" fg:x="11709" fg:w="7"/><text x="100.0353%" y="975.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="99.9233%" y="965" width="0.0171%" height="15" fill="rgb(254,182,12)" fg:x="11721" fg:w="2"/><text x="100.1376%" y="975.50"></text></g><g><title>all (11,730 samples, 100%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="11730"/><text x="0.2143%" y="1007.50"></text></g><g><title>webserv (11,729 samples, 99.99%)</title><rect x="0.0085%" y="981" width="99.9915%" height="15" fill="rgb(207,222,45)" fg:x="1" fg:w="11729"/><text x="0.2228%" y="991.50">webserv</text></g></svg></svg>