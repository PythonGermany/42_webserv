<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1400" height="646" onload="init(evt)" viewBox="0 0 1400 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="629.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1390" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1390" y="629.00"> </text><svg id="frames" x="10" width="1380" total_samples="1234"><g><title>perf_5.10 (1 samples, 0.08%)</title><rect x="0.0000%" y="581" width="0.0810%" height="15" fill="rgb(233,83,33)" fg:x="0" fg:w="1"/><text x="0.2143%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="0.0000%" y="565" width="0.0810%" height="15" fill="rgb(205,226,15)" fg:x="0" fg:w="1"/><text x="0.2143%" y="575.50"></text></g><g><title>do_syscall_64 (1 samples, 0.08%)</title><rect x="0.0000%" y="549" width="0.0810%" height="15" fill="rgb(220,74,14)" fg:x="0" fg:w="1"/><text x="0.2143%" y="559.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.08%)</title><rect x="0.0000%" y="533" width="0.0810%" height="15" fill="rgb(237,59,15)" fg:x="0" fg:w="1"/><text x="0.2143%" y="543.50"></text></g><g><title>do_execveat_common (1 samples, 0.08%)</title><rect x="0.0000%" y="517" width="0.0810%" height="15" fill="rgb(253,19,15)" fg:x="0" fg:w="1"/><text x="0.2143%" y="527.50"></text></g><g><title>bprm_execve (1 samples, 0.08%)</title><rect x="0.0000%" y="501" width="0.0810%" height="15" fill="rgb(232,147,16)" fg:x="0" fg:w="1"/><text x="0.2143%" y="511.50"></text></g><g><title>load_elf_binary (1 samples, 0.08%)</title><rect x="0.0000%" y="485" width="0.0810%" height="15" fill="rgb(246,102,21)" fg:x="0" fg:w="1"/><text x="0.2143%" y="495.50"></text></g><g><title>begin_new_exec (1 samples, 0.08%)</title><rect x="0.0000%" y="469" width="0.0810%" height="15" fill="rgb(219,195,31)" fg:x="0" fg:w="1"/><text x="0.2143%" y="479.50"></text></g><g><title>perf_event_comm (1 samples, 0.08%)</title><rect x="0.0000%" y="453" width="0.0810%" height="15" fill="rgb(252,106,2)" fg:x="0" fg:w="1"/><text x="0.2143%" y="463.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.08%)</title><rect x="0.0000%" y="437" width="0.0810%" height="15" fill="rgb(241,203,1)" fg:x="0" fg:w="1"/><text x="0.2143%" y="447.50"></text></g><g><title>AConnection::onPollIn (1 samples, 0.08%)</title><rect x="0.0810%" y="565" width="0.0810%" height="15" fill="rgb(238,25,4)" fg:x="1" fg:w="1"/><text x="0.2953%" y="575.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt; (1 samples, 0.08%)</title><rect x="0.0810%" y="549" width="0.0810%" height="15" fill="rgb(217,84,11)" fg:x="1" fg:w="1"/><text x="0.2953%" y="559.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::ReturnToAllocator (1 samples, 0.08%)</title><rect x="0.1621%" y="549" width="0.0810%" height="15" fill="rgb(217,0,20)" fg:x="2" fg:w="1"/><text x="0.3764%" y="559.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::MaybeReleaseToOS (1 samples, 0.08%)</title><rect x="0.1621%" y="533" width="0.0810%" height="15" fill="rgb(244,9,36)" fg:x="2" fg:w="1"/><text x="0.3764%" y="543.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::ReleaseFreeMemoryToOS&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::MemoryMapper&gt; (1 samples, 0.08%)</title><rect x="0.1621%" y="517" width="0.0810%" height="15" fill="rgb(234,59,46)" fg:x="2" fg:w="1"/><text x="0.3764%" y="527.50"></text></g><g><title>__sanitizer::UnmapOrDie (1 samples, 0.08%)</title><rect x="0.1621%" y="501" width="0.0810%" height="15" fill="rgb(233,87,46)" fg:x="2" fg:w="1"/><text x="0.3764%" y="511.50"></text></g><g><title>__sanitizer::internal_munmap (1 samples, 0.08%)</title><rect x="0.1621%" y="485" width="0.0810%" height="15" fill="rgb(212,49,52)" fg:x="2" fg:w="1"/><text x="0.3764%" y="495.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="0.1621%" y="469" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="2" fg:w="1"/><text x="0.3764%" y="479.50"></text></g><g><title>[[stack]] (2 samples, 0.16%)</title><rect x="0.1621%" y="565" width="0.1621%" height="15" fill="rgb(208,199,53)" fg:x="2" fg:w="2"/><text x="0.3764%" y="575.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (1 samples, 0.08%)</title><rect x="0.2431%" y="549" width="0.0810%" height="15" fill="rgb(233,23,10)" fg:x="3" fg:w="1"/><text x="0.4574%" y="559.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (1 samples, 0.08%)</title><rect x="0.2431%" y="533" width="0.0810%" height="15" fill="rgb(212,225,35)" fg:x="3" fg:w="1"/><text x="0.4574%" y="543.50"></text></g><g><title>std::__basic_file&lt;char&gt;::xsputn (1 samples, 0.08%)</title><rect x="0.2431%" y="517" width="0.0810%" height="15" fill="rgb(244,189,13)" fg:x="3" fg:w="1"/><text x="0.4574%" y="527.50"></text></g><g><title>__interceptor_write (1 samples, 0.08%)</title><rect x="0.2431%" y="501" width="0.0810%" height="15" fill="rgb(252,58,13)" fg:x="3" fg:w="1"/><text x="0.4574%" y="511.50"></text></g><g><title>__libc_write (1 samples, 0.08%)</title><rect x="0.2431%" y="485" width="0.0810%" height="15" fill="rgb(251,4,50)" fg:x="3" fg:w="1"/><text x="0.4574%" y="495.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="0.2431%" y="469" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="3" fg:w="1"/><text x="0.4574%" y="479.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.24%)</title><rect x="0.3241%" y="533" width="0.2431%" height="15" fill="rgb(229,107,3)" fg:x="4" fg:w="3"/><text x="0.5384%" y="543.50"></text></g><g><title>[anon] (7 samples, 0.57%)</title><rect x="0.3241%" y="565" width="0.5673%" height="15" fill="rgb(207,220,20)" fg:x="4" fg:w="7"/><text x="0.5384%" y="575.50"></text></g><g><title>__libc_recv (7 samples, 0.57%)</title><rect x="0.3241%" y="549" width="0.5673%" height="15" fill="rgb(249,36,48)" fg:x="4" fg:w="7"/><text x="0.5384%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.32%)</title><rect x="0.5673%" y="533" width="0.3241%" height="15" fill="rgb(234,224,53)" fg:x="7" fg:w="4"/><text x="0.7815%" y="543.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.08%)</title><rect x="0.8914%" y="485" width="0.0810%" height="15" fill="rgb(221,18,6)" fg:x="11" fg:w="1"/><text x="1.1057%" y="495.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.08%)</title><rect x="0.8914%" y="469" width="0.0810%" height="15" fill="rgb(221,18,6)" fg:x="11" fg:w="1"/><text x="1.1057%" y="479.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.08%)</title><rect x="0.8914%" y="453" width="0.0810%" height="15" fill="rgb(221,18,6)" fg:x="11" fg:w="1"/><text x="1.1057%" y="463.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="0.8914%" y="437" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="11" fg:w="1"/><text x="1.1057%" y="447.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="0.8914%" y="421" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="11" fg:w="1"/><text x="1.1057%" y="431.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="0.8914%" y="405" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="11" fg:w="1"/><text x="1.1057%" y="415.50"></text></g><g><title>find_vma (1 samples, 0.08%)</title><rect x="0.8914%" y="389" width="0.0810%" height="15" fill="rgb(227,147,34)" fg:x="11" fg:w="1"/><text x="1.1057%" y="399.50"></text></g><g><title>[ld-2.31.so] (2 samples, 0.16%)</title><rect x="0.8914%" y="533" width="0.1621%" height="15" fill="rgb(221,18,6)" fg:x="11" fg:w="2"/><text x="1.1057%" y="543.50"></text></g><g><title>[ld-2.31.so] (2 samples, 0.16%)</title><rect x="0.8914%" y="517" width="0.1621%" height="15" fill="rgb(221,18,6)" fg:x="11" fg:w="2"/><text x="1.1057%" y="527.50"></text></g><g><title>[ld-2.31.so] (2 samples, 0.16%)</title><rect x="0.8914%" y="501" width="0.1621%" height="15" fill="rgb(221,18,6)" fg:x="11" fg:w="2"/><text x="1.1057%" y="511.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="0.9724%" y="485" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="12" fg:w="1"/><text x="1.1867%" y="495.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="0.9724%" y="469" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="12" fg:w="1"/><text x="1.1867%" y="479.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="0.9724%" y="453" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="12" fg:w="1"/><text x="1.1867%" y="463.50"></text></g><g><title>find_vma (1 samples, 0.08%)</title><rect x="0.9724%" y="437" width="0.0810%" height="15" fill="rgb(227,147,34)" fg:x="12" fg:w="1"/><text x="1.1867%" y="447.50"></text></g><g><title>vmacache_find (1 samples, 0.08%)</title><rect x="0.9724%" y="421" width="0.0810%" height="15" fill="rgb(248,72,26)" fg:x="12" fg:w="1"/><text x="1.1867%" y="431.50"></text></g><g><title>__asan::AsanCheckIncompatibleRT (1 samples, 0.08%)</title><rect x="1.0535%" y="517" width="0.0810%" height="15" fill="rgb(252,178,53)" fg:x="13" fg:w="1"/><text x="1.2678%" y="527.50"></text></g><g><title>__sanitizer::MemoryMappingLayout::MemoryMappingLayout (1 samples, 0.08%)</title><rect x="1.0535%" y="501" width="0.0810%" height="15" fill="rgb(245,109,28)" fg:x="13" fg:w="1"/><text x="1.2678%" y="511.50"></text></g><g><title>__sanitizer::ReadProcMaps (1 samples, 0.08%)</title><rect x="1.0535%" y="485" width="0.0810%" height="15" fill="rgb(253,208,28)" fg:x="13" fg:w="1"/><text x="1.2678%" y="495.50"></text></g><g><title>__sanitizer::ReadFileToBuffer (1 samples, 0.08%)</title><rect x="1.0535%" y="469" width="0.0810%" height="15" fill="rgb(219,108,7)" fg:x="13" fg:w="1"/><text x="1.2678%" y="479.50"></text></g><g><title>__sanitizer::MmapOrDie (1 samples, 0.08%)</title><rect x="1.0535%" y="453" width="0.0810%" height="15" fill="rgb(245,103,21)" fg:x="13" fg:w="1"/><text x="1.2678%" y="463.50"></text></g><g><title>__sanitizer::internal_mmap (1 samples, 0.08%)</title><rect x="1.0535%" y="437" width="0.0810%" height="15" fill="rgb(254,86,31)" fg:x="13" fg:w="1"/><text x="1.2678%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="1.0535%" y="421" width="0.0810%" height="15" fill="rgb(205,226,15)" fg:x="13" fg:w="1"/><text x="1.2678%" y="431.50"></text></g><g><title>do_syscall_64 (1 samples, 0.08%)</title><rect x="1.0535%" y="405" width="0.0810%" height="15" fill="rgb(220,74,14)" fg:x="13" fg:w="1"/><text x="1.2678%" y="415.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.08%)</title><rect x="1.0535%" y="389" width="0.0810%" height="15" fill="rgb(226,196,1)" fg:x="13" fg:w="1"/><text x="1.2678%" y="399.50"></text></g><g><title>do_mmap (1 samples, 0.08%)</title><rect x="1.0535%" y="373" width="0.0810%" height="15" fill="rgb(228,25,27)" fg:x="13" fg:w="1"/><text x="1.2678%" y="383.50"></text></g><g><title>mmap_region (1 samples, 0.08%)</title><rect x="1.0535%" y="357" width="0.0810%" height="15" fill="rgb(233,57,38)" fg:x="13" fg:w="1"/><text x="1.2678%" y="367.50"></text></g><g><title>security_vm_enough_memory_mm (1 samples, 0.08%)</title><rect x="1.0535%" y="341" width="0.0810%" height="15" fill="rgb(234,218,45)" fg:x="13" fg:w="1"/><text x="1.2678%" y="351.50"></text></g><g><title>cap_vm_enough_memory (1 samples, 0.08%)</title><rect x="1.0535%" y="325" width="0.0810%" height="15" fill="rgb(251,89,54)" fg:x="13" fg:w="1"/><text x="1.2678%" y="335.50"></text></g><g><title>__asan::InitializeAsanInterceptors (1 samples, 0.08%)</title><rect x="1.1345%" y="517" width="0.0810%" height="15" fill="rgb(243,5,46)" fg:x="14" fg:w="1"/><text x="1.3488%" y="527.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="1.1345%" y="501" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="14" fg:w="1"/><text x="1.3488%" y="511.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="1.1345%" y="485" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="14" fg:w="1"/><text x="1.3488%" y="495.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="1.1345%" y="469" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="14" fg:w="1"/><text x="1.3488%" y="479.50"></text></g><g><title>handle_mm_fault (1 samples, 0.08%)</title><rect x="1.1345%" y="453" width="0.0810%" height="15" fill="rgb(247,31,49)" fg:x="14" fg:w="1"/><text x="1.3488%" y="463.50"></text></g><g><title>__sanitizer::ReadBinaryName (1 samples, 0.08%)</title><rect x="1.2156%" y="501" width="0.0810%" height="15" fill="rgb(223,81,10)" fg:x="15" fg:w="1"/><text x="1.4298%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="1.2156%" y="485" width="0.0810%" height="15" fill="rgb(205,226,15)" fg:x="15" fg:w="1"/><text x="1.4298%" y="495.50"></text></g><g><title>do_syscall_64 (1 samples, 0.08%)</title><rect x="1.2156%" y="469" width="0.0810%" height="15" fill="rgb(220,74,14)" fg:x="15" fg:w="1"/><text x="1.4298%" y="479.50"></text></g><g><title>__x64_sys_readlink (1 samples, 0.08%)</title><rect x="1.2156%" y="453" width="0.0810%" height="15" fill="rgb(245,145,6)" fg:x="15" fg:w="1"/><text x="1.4298%" y="463.50"></text></g><g><title>do_readlinkat (1 samples, 0.08%)</title><rect x="1.2156%" y="437" width="0.0810%" height="15" fill="rgb(216,161,19)" fg:x="15" fg:w="1"/><text x="1.4298%" y="447.50"></text></g><g><title>user_path_at_empty (1 samples, 0.08%)</title><rect x="1.2156%" y="421" width="0.0810%" height="15" fill="rgb(238,106,16)" fg:x="15" fg:w="1"/><text x="1.4298%" y="431.50"></text></g><g><title>getname_flags.part.0 (1 samples, 0.08%)</title><rect x="1.2156%" y="405" width="0.0810%" height="15" fill="rgb(214,38,37)" fg:x="15" fg:w="1"/><text x="1.4298%" y="415.50"></text></g><g><title>strncpy_from_user (1 samples, 0.08%)</title><rect x="1.2156%" y="389" width="0.0810%" height="15" fill="rgb(245,149,46)" fg:x="15" fg:w="1"/><text x="1.4298%" y="399.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="1.2156%" y="373" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="15" fg:w="1"/><text x="1.4298%" y="383.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="1.2156%" y="357" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="15" fg:w="1"/><text x="1.4298%" y="367.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="1.2156%" y="341" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="15" fg:w="1"/><text x="1.4298%" y="351.50"></text></g><g><title>handle_mm_fault (1 samples, 0.08%)</title><rect x="1.2156%" y="325" width="0.0810%" height="15" fill="rgb(247,31,49)" fg:x="15" fg:w="1"/><text x="1.4298%" y="335.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.08%)</title><rect x="1.2156%" y="309" width="0.0810%" height="15" fill="rgb(209,149,49)" fg:x="15" fg:w="1"/><text x="1.4298%" y="319.50"></text></g><g><title>__sanitizer::CacheBinaryName (2 samples, 0.16%)</title><rect x="1.2156%" y="517" width="0.1621%" height="15" fill="rgb(205,61,3)" fg:x="15" fg:w="2"/><text x="1.4298%" y="527.50"></text></g><g><title>__sanitizer::ReadLongProcessName (1 samples, 0.08%)</title><rect x="1.2966%" y="501" width="0.0810%" height="15" fill="rgb(235,13,12)" fg:x="16" fg:w="1"/><text x="1.5109%" y="511.50"></text></g><g><title>__sanitizer::ReadFileToBuffer (1 samples, 0.08%)</title><rect x="1.2966%" y="485" width="0.0810%" height="15" fill="rgb(219,108,7)" fg:x="16" fg:w="1"/><text x="1.5109%" y="495.50"></text></g><g><title>__sanitizer::MmapOrDie (1 samples, 0.08%)</title><rect x="1.2966%" y="469" width="0.0810%" height="15" fill="rgb(245,103,21)" fg:x="16" fg:w="1"/><text x="1.5109%" y="479.50"></text></g><g><title>__sanitizer::GetNamedMappingFd (1 samples, 0.08%)</title><rect x="1.2966%" y="453" width="0.0810%" height="15" fill="rgb(216,42,40)" fg:x="16" fg:w="1"/><text x="1.5109%" y="463.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="1.2966%" y="437" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="16" fg:w="1"/><text x="1.5109%" y="447.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="1.2966%" y="421" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="16" fg:w="1"/><text x="1.5109%" y="431.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="1.2966%" y="405" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="16" fg:w="1"/><text x="1.5109%" y="415.50"></text></g><g><title>handle_mm_fault (1 samples, 0.08%)</title><rect x="1.2966%" y="389" width="0.0810%" height="15" fill="rgb(247,31,49)" fg:x="16" fg:w="1"/><text x="1.5109%" y="399.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.08%)</title><rect x="1.2966%" y="373" width="0.0810%" height="15" fill="rgb(209,149,49)" fg:x="16" fg:w="1"/><text x="1.5109%" y="383.50"></text></g><g><title>__asan::AsanInitInternal (5 samples, 0.41%)</title><rect x="1.0535%" y="533" width="0.4052%" height="15" fill="rgb(237,143,21)" fg:x="13" fg:w="5"/><text x="1.2678%" y="543.50"></text></g><g><title>__sanitizer::ReportFile::SetReportPath (1 samples, 0.08%)</title><rect x="1.3776%" y="517" width="0.0810%" height="15" fill="rgb(214,216,12)" fg:x="17" fg:w="1"/><text x="1.5919%" y="527.50"></text></g><g><title>__sanitizer::internal_strcmp (1 samples, 0.08%)</title><rect x="1.3776%" y="501" width="0.0810%" height="15" fill="rgb(245,124,35)" fg:x="17" fg:w="1"/><text x="1.5919%" y="511.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="1.3776%" y="485" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="17" fg:w="1"/><text x="1.5919%" y="495.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="1.3776%" y="469" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="17" fg:w="1"/><text x="1.5919%" y="479.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="1.3776%" y="453" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="17" fg:w="1"/><text x="1.5919%" y="463.50"></text></g><g><title>__asan::AsanActivate (1 samples, 0.08%)</title><rect x="1.4587%" y="517" width="0.0810%" height="15" fill="rgb(248,132,5)" fg:x="18" fg:w="1"/><text x="1.6730%" y="527.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="1.4587%" y="501" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="18" fg:w="1"/><text x="1.6730%" y="511.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="1.4587%" y="485" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="18" fg:w="1"/><text x="1.6730%" y="495.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="1.4587%" y="469" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="18" fg:w="1"/><text x="1.6730%" y="479.50"></text></g><g><title>handle_mm_fault (1 samples, 0.08%)</title><rect x="1.4587%" y="453" width="0.0810%" height="15" fill="rgb(247,31,49)" fg:x="18" fg:w="1"/><text x="1.6730%" y="463.50"></text></g><g><title>[ld-2.31.so] (9 samples, 0.73%)</title><rect x="0.8914%" y="565" width="0.7293%" height="15" fill="rgb(221,18,6)" fg:x="11" fg:w="9"/><text x="1.1057%" y="575.50"></text></g><g><title>[ld-2.31.so] (9 samples, 0.73%)</title><rect x="0.8914%" y="549" width="0.7293%" height="15" fill="rgb(221,18,6)" fg:x="11" fg:w="9"/><text x="1.1057%" y="559.50"></text></g><g><title>__asan_init (2 samples, 0.16%)</title><rect x="1.4587%" y="533" width="0.1621%" height="15" fill="rgb(227,187,50)" fg:x="18" fg:w="2"/><text x="1.6730%" y="543.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="1.5397%" y="517" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="19" fg:w="1"/><text x="1.7540%" y="527.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="1.5397%" y="501" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="19" fg:w="1"/><text x="1.7540%" y="511.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="1.5397%" y="485" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="19" fg:w="1"/><text x="1.7540%" y="495.50"></text></g><g><title>find_vma (1 samples, 0.08%)</title><rect x="1.5397%" y="469" width="0.0810%" height="15" fill="rgb(227,147,34)" fg:x="19" fg:w="1"/><text x="1.7540%" y="479.50"></text></g><g><title>vmacache_find (1 samples, 0.08%)</title><rect x="1.5397%" y="453" width="0.0810%" height="15" fill="rgb(248,72,26)" fg:x="19" fg:w="1"/><text x="1.7540%" y="463.50"></text></g><g><title>read_iovec (1 samples, 0.08%)</title><rect x="2.6742%" y="421" width="0.0810%" height="15" fill="rgb(230,5,34)" fg:x="33" fg:w="1"/><text x="2.8885%" y="431.50"></text></g><g><title>__asan_region_is_poisoned (1 samples, 0.08%)</title><rect x="2.6742%" y="405" width="0.0810%" height="15" fill="rgb(252,76,50)" fg:x="33" fg:w="1"/><text x="2.8885%" y="415.50"></text></g><g><title>ext4_generic_write_checks (1 samples, 0.08%)</title><rect x="2.8363%" y="293" width="0.0810%" height="15" fill="rgb(212,86,33)" fg:x="35" fg:w="1"/><text x="3.0506%" y="303.50"></text></g><g><title>generic_write_checks (1 samples, 0.08%)</title><rect x="2.8363%" y="277" width="0.0810%" height="15" fill="rgb(220,18,45)" fg:x="35" fg:w="1"/><text x="3.0506%" y="287.50"></text></g><g><title>generic_write_check_limits (1 samples, 0.08%)</title><rect x="2.8363%" y="261" width="0.0810%" height="15" fill="rgb(237,191,43)" fg:x="35" fg:w="1"/><text x="3.0506%" y="271.50"></text></g><g><title>current_time (1 samples, 0.08%)</title><rect x="2.9173%" y="277" width="0.0810%" height="15" fill="rgb(239,75,43)" fg:x="36" fg:w="1"/><text x="3.1316%" y="287.50"></text></g><g><title>ktime_get_coarse_real_ts64 (1 samples, 0.08%)</title><rect x="2.9173%" y="261" width="0.0810%" height="15" fill="rgb(228,144,10)" fg:x="36" fg:w="1"/><text x="3.1316%" y="271.50"></text></g><g><title>__ext4_journal_stop (1 samples, 0.08%)</title><rect x="3.0794%" y="245" width="0.0810%" height="15" fill="rgb(225,40,54)" fg:x="38" fg:w="1"/><text x="3.2937%" y="255.50"></text></g><g><title>jbd2_journal_stop (1 samples, 0.08%)</title><rect x="3.0794%" y="229" width="0.0810%" height="15" fill="rgb(229,91,7)" fg:x="38" fg:w="1"/><text x="3.2937%" y="239.50"></text></g><g><title>kmem_cache_free (1 samples, 0.08%)</title><rect x="3.0794%" y="213" width="0.0810%" height="15" fill="rgb(225,137,16)" fg:x="38" fg:w="1"/><text x="3.2937%" y="223.50"></text></g><g><title>ext4_journal_check_start (1 samples, 0.08%)</title><rect x="3.1605%" y="213" width="0.0810%" height="15" fill="rgb(220,195,41)" fg:x="39" fg:w="1"/><text x="3.3747%" y="223.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.08%)</title><rect x="3.1605%" y="197" width="0.0810%" height="15" fill="rgb(248,227,45)" fg:x="39" fg:w="1"/><text x="3.3747%" y="207.50"></text></g><g><title>common_interrupt (1 samples, 0.08%)</title><rect x="3.1605%" y="181" width="0.0810%" height="15" fill="rgb(250,67,32)" fg:x="39" fg:w="1"/><text x="3.3747%" y="191.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.08%)</title><rect x="3.1605%" y="165" width="0.0810%" height="15" fill="rgb(240,18,12)" fg:x="39" fg:w="1"/><text x="3.3747%" y="175.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.08%)</title><rect x="3.1605%" y="149" width="0.0810%" height="15" fill="rgb(223,89,53)" fg:x="39" fg:w="1"/><text x="3.3747%" y="159.50"></text></g><g><title>asm_call_sysvec_on_stack (1 samples, 0.08%)</title><rect x="3.1605%" y="133" width="0.0810%" height="15" fill="rgb(208,184,36)" fg:x="39" fg:w="1"/><text x="3.3747%" y="143.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.08%)</title><rect x="3.1605%" y="117" width="0.0810%" height="15" fill="rgb(249,91,22)" fg:x="39" fg:w="1"/><text x="3.3747%" y="127.50"></text></g><g><title>net_rx_action (1 samples, 0.08%)</title><rect x="3.1605%" y="101" width="0.0810%" height="15" fill="rgb(231,11,52)" fg:x="39" fg:w="1"/><text x="3.3747%" y="111.50"></text></g><g><title>__ext4_journal_start_sb (2 samples, 0.16%)</title><rect x="3.1605%" y="229" width="0.1621%" height="15" fill="rgb(251,66,45)" fg:x="39" fg:w="2"/><text x="3.3747%" y="239.50"></text></g><g><title>jbd2__journal_start (1 samples, 0.08%)</title><rect x="3.2415%" y="213" width="0.0810%" height="15" fill="rgb(212,174,30)" fg:x="40" fg:w="1"/><text x="3.4558%" y="223.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.08%)</title><rect x="3.2415%" y="197" width="0.0810%" height="15" fill="rgb(223,51,51)" fg:x="40" fg:w="1"/><text x="3.4558%" y="207.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.08%)</title><rect x="3.2415%" y="181" width="0.0810%" height="15" fill="rgb(212,11,50)" fg:x="40" fg:w="1"/><text x="3.4558%" y="191.50"></text></g><g><title>file_update_time (6 samples, 0.49%)</title><rect x="2.9173%" y="293" width="0.4862%" height="15" fill="rgb(237,12,27)" fg:x="36" fg:w="6"/><text x="3.1316%" y="303.50"></text></g><g><title>generic_update_time (5 samples, 0.41%)</title><rect x="2.9984%" y="277" width="0.4052%" height="15" fill="rgb(212,0,0)" fg:x="37" fg:w="5"/><text x="3.2127%" y="287.50"></text></g><g><title>__mark_inode_dirty (5 samples, 0.41%)</title><rect x="2.9984%" y="261" width="0.4052%" height="15" fill="rgb(212,91,54)" fg:x="37" fg:w="5"/><text x="3.2127%" y="271.50"></text></g><g><title>ext4_dirty_inode (3 samples, 0.24%)</title><rect x="3.1605%" y="245" width="0.2431%" height="15" fill="rgb(235,194,15)" fg:x="39" fg:w="3"/><text x="3.3747%" y="255.50"></text></g><g><title>__ext4_mark_inode_dirty (1 samples, 0.08%)</title><rect x="3.3225%" y="229" width="0.0810%" height="15" fill="rgb(250,159,10)" fg:x="41" fg:w="1"/><text x="3.5368%" y="239.50"></text></g><g><title>ext4_mark_iloc_dirty (1 samples, 0.08%)</title><rect x="3.3225%" y="213" width="0.0810%" height="15" fill="rgb(236,133,21)" fg:x="41" fg:w="1"/><text x="3.5368%" y="223.50"></text></g><g><title>__ext4_handle_dirty_metadata (1 samples, 0.08%)</title><rect x="3.3225%" y="197" width="0.0810%" height="15" fill="rgb(236,9,12)" fg:x="41" fg:w="1"/><text x="3.5368%" y="207.50"></text></g><g><title>balance_dirty_pages_ratelimited (1 samples, 0.08%)</title><rect x="3.4846%" y="277" width="0.0810%" height="15" fill="rgb(221,121,40)" fg:x="43" fg:w="1"/><text x="3.6989%" y="287.50"></text></g><g><title>__radix_tree_lookup (1 samples, 0.08%)</title><rect x="3.4846%" y="261" width="0.0810%" height="15" fill="rgb(250,213,26)" fg:x="43" fg:w="1"/><text x="3.6989%" y="271.50"></text></g><g><title>__ext4_journal_start_sb (2 samples, 0.16%)</title><rect x="3.7277%" y="261" width="0.1621%" height="15" fill="rgb(251,66,45)" fg:x="46" fg:w="2"/><text x="3.9420%" y="271.50"></text></g><g><title>jbd2__journal_start (1 samples, 0.08%)</title><rect x="3.8088%" y="245" width="0.0810%" height="15" fill="rgb(212,174,30)" fg:x="47" fg:w="1"/><text x="4.0230%" y="255.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.08%)</title><rect x="3.8088%" y="229" width="0.0810%" height="15" fill="rgb(223,51,51)" fg:x="47" fg:w="1"/><text x="4.0230%" y="239.50"></text></g><g><title>memset_erms (1 samples, 0.08%)</title><rect x="3.8088%" y="213" width="0.0810%" height="15" fill="rgb(233,67,1)" fg:x="47" fg:w="1"/><text x="4.0230%" y="223.50"></text></g><g><title>__slab_alloc (1 samples, 0.08%)</title><rect x="4.2950%" y="181" width="0.0810%" height="15" fill="rgb(229,140,31)" fg:x="53" fg:w="1"/><text x="4.5093%" y="191.50"></text></g><g><title>___slab_alloc (1 samples, 0.08%)</title><rect x="4.2950%" y="165" width="0.0810%" height="15" fill="rgb(224,215,35)" fg:x="53" fg:w="1"/><text x="4.5093%" y="175.50"></text></g><g><title>get_obj_cgroup_from_current (1 samples, 0.08%)</title><rect x="4.4571%" y="165" width="0.0810%" height="15" fill="rgb(224,141,13)" fg:x="55" fg:w="1"/><text x="4.6713%" y="175.50"></text></g><g><title>rcu_read_unlock_strict (1 samples, 0.08%)</title><rect x="4.4571%" y="149" width="0.0810%" height="15" fill="rgb(251,95,14)" fg:x="55" fg:w="1"/><text x="4.6713%" y="159.50"></text></g><g><title>alloc_buffer_head (5 samples, 0.41%)</title><rect x="4.2139%" y="213" width="0.4052%" height="15" fill="rgb(220,228,42)" fg:x="52" fg:w="5"/><text x="4.4282%" y="223.50"></text></g><g><title>kmem_cache_alloc (5 samples, 0.41%)</title><rect x="4.2139%" y="197" width="0.4052%" height="15" fill="rgb(223,51,51)" fg:x="52" fg:w="5"/><text x="4.4282%" y="207.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (3 samples, 0.24%)</title><rect x="4.3760%" y="181" width="0.2431%" height="15" fill="rgb(212,11,50)" fg:x="54" fg:w="3"/><text x="4.5903%" y="191.50"></text></g><g><title>obj_cgroup_charge (1 samples, 0.08%)</title><rect x="4.5381%" y="165" width="0.0810%" height="15" fill="rgb(236,185,43)" fg:x="56" fg:w="1"/><text x="4.7524%" y="175.50"></text></g><g><title>create_empty_buffers (9 samples, 0.73%)</title><rect x="3.9708%" y="245" width="0.7293%" height="15" fill="rgb(209,173,14)" fg:x="49" fg:w="9"/><text x="4.1851%" y="255.50"></text></g><g><title>alloc_page_buffers (7 samples, 0.57%)</title><rect x="4.1329%" y="229" width="0.5673%" height="15" fill="rgb(210,90,32)" fg:x="51" fg:w="7"/><text x="4.3472%" y="239.50"></text></g><g><title>get_mem_cgroup_from_page (1 samples, 0.08%)</title><rect x="4.6191%" y="213" width="0.0810%" height="15" fill="rgb(251,182,28)" fg:x="57" fg:w="1"/><text x="4.8334%" y="223.50"></text></g><g><title>rcu_read_unlock_strict (1 samples, 0.08%)</title><rect x="4.6191%" y="197" width="0.0810%" height="15" fill="rgb(251,95,14)" fg:x="57" fg:w="1"/><text x="4.8334%" y="207.50"></text></g><g><title>__dquot_alloc_space (2 samples, 0.16%)</title><rect x="4.9433%" y="213" width="0.1621%" height="15" fill="rgb(217,146,30)" fg:x="61" fg:w="2"/><text x="5.1576%" y="223.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="5.0243%" y="197" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="62" fg:w="1"/><text x="5.2386%" y="207.50"></text></g><g><title>ext4_da_reserve_space (4 samples, 0.32%)</title><rect x="4.8622%" y="229" width="0.3241%" height="15" fill="rgb(253,48,44)" fg:x="60" fg:w="4"/><text x="5.0765%" y="239.50"></text></g><g><title>ext4_claim_free_clusters (1 samples, 0.08%)</title><rect x="5.1053%" y="213" width="0.0810%" height="15" fill="rgb(219,2,19)" fg:x="63" fg:w="1"/><text x="5.3196%" y="223.50"></text></g><g><title>ext4_has_free_clusters (1 samples, 0.08%)</title><rect x="5.1053%" y="197" width="0.0810%" height="15" fill="rgb(229,71,7)" fg:x="63" fg:w="1"/><text x="5.3196%" y="207.50"></text></g><g><title>__es_insert_extent (1 samples, 0.08%)</title><rect x="5.2674%" y="213" width="0.0810%" height="15" fill="rgb(219,216,0)" fg:x="65" fg:w="1"/><text x="5.4817%" y="223.50"></text></g><g><title>ext4_es_can_be_merged.isra.0 (1 samples, 0.08%)</title><rect x="5.2674%" y="197" width="0.0810%" height="15" fill="rgb(240,161,18)" fg:x="65" fg:w="1"/><text x="5.4817%" y="207.50"></text></g><g><title>ext4_es_insert_delayed_block (3 samples, 0.24%)</title><rect x="5.1864%" y="229" width="0.2431%" height="15" fill="rgb(214,51,42)" fg:x="64" fg:w="3"/><text x="5.4007%" y="239.50"></text></g><g><title>__es_remove_extent (1 samples, 0.08%)</title><rect x="5.3485%" y="213" width="0.0810%" height="15" fill="rgb(251,204,25)" fg:x="66" fg:w="1"/><text x="5.5627%" y="223.50"></text></g><g><title>ext4_block_write_begin (20 samples, 1.62%)</title><rect x="3.8898%" y="261" width="1.6207%" height="15" fill="rgb(218,63,41)" fg:x="48" fg:w="20"/><text x="4.1041%" y="271.50">e..</text></g><g><title>ext4_da_get_block_prep (10 samples, 0.81%)</title><rect x="4.7002%" y="245" width="0.8104%" height="15" fill="rgb(235,98,3)" fg:x="58" fg:w="10"/><text x="4.9144%" y="255.50"></text></g><g><title>ext4_es_lookup_extent (1 samples, 0.08%)</title><rect x="5.4295%" y="229" width="0.0810%" height="15" fill="rgb(215,19,43)" fg:x="67" fg:w="1"/><text x="5.6438%" y="239.50"></text></g><g><title>ext4_nonda_switch (1 samples, 0.08%)</title><rect x="5.5105%" y="261" width="0.0810%" height="15" fill="rgb(254,54,14)" fg:x="68" fg:w="1"/><text x="5.7248%" y="271.50"></text></g><g><title>_cond_resched (1 samples, 0.08%)</title><rect x="5.5916%" y="213" width="0.0810%" height="15" fill="rgb(240,228,18)" fg:x="69" fg:w="1"/><text x="5.8059%" y="223.50"></text></g><g><title>__schedule (1 samples, 0.08%)</title><rect x="5.5916%" y="197" width="0.0810%" height="15" fill="rgb(207,40,26)" fg:x="69" fg:w="1"/><text x="5.8059%" y="207.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.08%)</title><rect x="5.5916%" y="181" width="0.0810%" height="15" fill="rgb(206,30,45)" fg:x="69" fg:w="1"/><text x="5.8059%" y="191.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.08%)</title><rect x="5.5916%" y="165" width="0.0810%" height="15" fill="rgb(224,0,7)" fg:x="69" fg:w="1"/><text x="5.8059%" y="175.50"></text></g><g><title>x86_pmu_disable_all (1 samples, 0.08%)</title><rect x="5.5916%" y="149" width="0.0810%" height="15" fill="rgb(235,111,43)" fg:x="69" fg:w="1"/><text x="5.8059%" y="159.50"></text></g><g><title>native_read_msr (1 samples, 0.08%)</title><rect x="5.5916%" y="133" width="0.0810%" height="15" fill="rgb(218,43,9)" fg:x="69" fg:w="1"/><text x="5.8059%" y="143.50"></text></g><g><title>__list_del_entry_valid (1 samples, 0.08%)</title><rect x="5.6726%" y="197" width="0.0810%" height="15" fill="rgb(224,110,12)" fg:x="70" fg:w="1"/><text x="5.8869%" y="207.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.73%)</title><rect x="5.5916%" y="229" width="0.7293%" height="15" fill="rgb(245,49,10)" fg:x="69" fg:w="9"/><text x="5.8059%" y="239.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.65%)</title><rect x="5.6726%" y="213" width="0.6483%" height="15" fill="rgb(246,35,53)" fg:x="70" fg:w="8"/><text x="5.8869%" y="223.50"></text></g><g><title>prep_new_page (7 samples, 0.57%)</title><rect x="5.7536%" y="197" width="0.5673%" height="15" fill="rgb(220,94,29)" fg:x="71" fg:w="7"/><text x="5.9679%" y="207.50"></text></g><g><title>kernel_init_free_pages (7 samples, 0.57%)</title><rect x="5.7536%" y="181" width="0.5673%" height="15" fill="rgb(253,165,35)" fg:x="71" fg:w="7"/><text x="5.9679%" y="191.50"></text></g><g><title>clear_page_erms (6 samples, 0.49%)</title><rect x="5.8347%" y="165" width="0.4862%" height="15" fill="rgb(253,135,51)" fg:x="72" fg:w="6"/><text x="6.0490%" y="175.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.08%)</title><rect x="6.4830%" y="197" width="0.0810%" height="15" fill="rgb(232,189,48)" fg:x="80" fg:w="1"/><text x="6.6973%" y="207.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.08%)</title><rect x="6.4830%" y="181" width="0.0810%" height="15" fill="rgb(232,222,48)" fg:x="80" fg:w="1"/><text x="6.6973%" y="191.50"></text></g><g><title>__add_to_page_cache_locked (4 samples, 0.32%)</title><rect x="6.4019%" y="213" width="0.3241%" height="15" fill="rgb(229,179,48)" fg:x="79" fg:w="4"/><text x="6.6162%" y="223.50"></text></g><g><title>xas_store (2 samples, 0.16%)</title><rect x="6.5640%" y="197" width="0.1621%" height="15" fill="rgb(212,131,5)" fg:x="81" fg:w="2"/><text x="6.7783%" y="207.50"></text></g><g><title>add_to_page_cache_lru (8 samples, 0.65%)</title><rect x="6.3209%" y="229" width="0.6483%" height="15" fill="rgb(223,55,45)" fg:x="78" fg:w="8"/><text x="6.5352%" y="239.50"></text></g><g><title>lru_cache_add (3 samples, 0.24%)</title><rect x="6.7261%" y="213" width="0.2431%" height="15" fill="rgb(205,98,13)" fg:x="83" fg:w="3"/><text x="6.9404%" y="223.50"></text></g><g><title>pagevec_lru_move_fn (3 samples, 0.24%)</title><rect x="6.7261%" y="197" width="0.2431%" height="15" fill="rgb(220,168,32)" fg:x="83" fg:w="3"/><text x="6.9404%" y="207.50"></text></g><g><title>__pagevec_lru_add_fn (3 samples, 0.24%)</title><rect x="6.7261%" y="181" width="0.2431%" height="15" fill="rgb(215,186,14)" fg:x="83" fg:w="3"/><text x="6.9404%" y="191.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.08%)</title><rect x="6.8882%" y="165" width="0.0810%" height="15" fill="rgb(247,169,19)" fg:x="85" fg:w="1"/><text x="7.1025%" y="175.50"></text></g><g><title>__mod_memcg_state.part.0 (1 samples, 0.08%)</title><rect x="6.8882%" y="149" width="0.0810%" height="15" fill="rgb(252,169,8)" fg:x="85" fg:w="1"/><text x="7.1025%" y="159.50"></text></g><g><title>ext4_da_write_begin (43 samples, 3.48%)</title><rect x="3.5656%" y="277" width="3.4846%" height="15" fill="rgb(235,31,43)" fg:x="44" fg:w="43"/><text x="3.7799%" y="287.50">ext4..</text></g><g><title>grab_cache_page_write_begin (18 samples, 1.46%)</title><rect x="5.5916%" y="261" width="1.4587%" height="15" fill="rgb(221,143,40)" fg:x="69" fg:w="18"/><text x="5.8059%" y="271.50"></text></g><g><title>pagecache_get_page (18 samples, 1.46%)</title><rect x="5.5916%" y="245" width="1.4587%" height="15" fill="rgb(254,146,25)" fg:x="69" fg:w="18"/><text x="5.8059%" y="255.50"></text></g><g><title>find_get_entry (1 samples, 0.08%)</title><rect x="6.9692%" y="229" width="0.0810%" height="15" fill="rgb(232,175,34)" fg:x="86" fg:w="1"/><text x="7.1835%" y="239.50"></text></g><g><title>xas_load (1 samples, 0.08%)</title><rect x="6.9692%" y="213" width="0.0810%" height="15" fill="rgb(249,146,47)" fg:x="86" fg:w="1"/><text x="7.1835%" y="223.50"></text></g><g><title>__ext4_journal_stop (2 samples, 0.16%)</title><rect x="7.1313%" y="261" width="0.1621%" height="15" fill="rgb(225,40,54)" fg:x="88" fg:w="2"/><text x="7.3456%" y="271.50"></text></g><g><title>jbd2_journal_stop (2 samples, 0.16%)</title><rect x="7.1313%" y="245" width="0.1621%" height="15" fill="rgb(229,91,7)" fg:x="88" fg:w="2"/><text x="7.3456%" y="255.50"></text></g><g><title>stop_this_handle (1 samples, 0.08%)</title><rect x="7.2123%" y="229" width="0.0810%" height="15" fill="rgb(240,3,51)" fg:x="89" fg:w="1"/><text x="7.4266%" y="239.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.08%)</title><rect x="7.2123%" y="213" width="0.0810%" height="15" fill="rgb(248,80,4)" fg:x="89" fg:w="1"/><text x="7.4266%" y="223.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (2 samples, 0.16%)</title><rect x="7.2934%" y="245" width="0.1621%" height="15" fill="rgb(249,65,48)" fg:x="90" fg:w="2"/><text x="7.5076%" y="255.50"></text></g><g><title>mark_buffer_dirty (2 samples, 0.16%)</title><rect x="7.2934%" y="229" width="0.1621%" height="15" fill="rgb(238,162,48)" fg:x="90" fg:w="2"/><text x="7.5076%" y="239.50"></text></g><g><title>__set_page_dirty (2 samples, 0.16%)</title><rect x="7.2934%" y="213" width="0.1621%" height="15" fill="rgb(221,172,50)" fg:x="90" fg:w="2"/><text x="7.5076%" y="223.50"></text></g><g><title>account_page_dirtied (2 samples, 0.16%)</title><rect x="7.2934%" y="197" width="0.1621%" height="15" fill="rgb(240,165,27)" fg:x="90" fg:w="2"/><text x="7.5076%" y="207.50"></text></g><g><title>__inc_node_page_state (2 samples, 0.16%)</title><rect x="7.2934%" y="181" width="0.1621%" height="15" fill="rgb(225,82,16)" fg:x="90" fg:w="2"/><text x="7.5076%" y="191.50"></text></g><g><title>__ext4_journal_stop (1 samples, 0.08%)</title><rect x="7.4554%" y="229" width="0.0810%" height="15" fill="rgb(225,40,54)" fg:x="92" fg:w="1"/><text x="7.6697%" y="239.50"></text></g><g><title>__ext4_journal_start_sb (1 samples, 0.08%)</title><rect x="7.6175%" y="213" width="0.0810%" height="15" fill="rgb(251,66,45)" fg:x="94" fg:w="1"/><text x="7.8318%" y="223.50"></text></g><g><title>ext4_journal_check_start (1 samples, 0.08%)</title><rect x="7.6175%" y="197" width="0.0810%" height="15" fill="rgb(220,195,41)" fg:x="94" fg:w="1"/><text x="7.8318%" y="207.50"></text></g><g><title>ext4_mark_iloc_dirty (2 samples, 0.16%)</title><rect x="7.7796%" y="197" width="0.1621%" height="15" fill="rgb(236,133,21)" fg:x="96" fg:w="2"/><text x="7.9939%" y="207.50"></text></g><g><title>map_id_up (1 samples, 0.08%)</title><rect x="7.8606%" y="181" width="0.0810%" height="15" fill="rgb(217,119,10)" fg:x="97" fg:w="1"/><text x="8.0749%" y="191.50"></text></g><g><title>__ext4_journal_get_write_access (3 samples, 0.24%)</title><rect x="7.9417%" y="181" width="0.2431%" height="15" fill="rgb(219,28,3)" fg:x="98" fg:w="3"/><text x="8.1559%" y="191.50"></text></g><g><title>jbd2_journal_get_write_access (2 samples, 0.16%)</title><rect x="8.0227%" y="165" width="0.1621%" height="15" fill="rgb(238,71,44)" fg:x="99" fg:w="2"/><text x="8.2370%" y="175.50"></text></g><g><title>jbd2_write_access_granted.part.0 (1 samples, 0.08%)</title><rect x="8.1037%" y="149" width="0.0810%" height="15" fill="rgb(250,139,4)" fg:x="100" fg:w="1"/><text x="8.3180%" y="159.50"></text></g><g><title>ext4_da_write_end (15 samples, 1.22%)</title><rect x="7.0502%" y="277" width="1.2156%" height="15" fill="rgb(230,92,14)" fg:x="87" fg:w="15"/><text x="7.2645%" y="287.50"></text></g><g><title>generic_write_end (12 samples, 0.97%)</title><rect x="7.2934%" y="261" width="0.9724%" height="15" fill="rgb(207,107,21)" fg:x="90" fg:w="12"/><text x="7.5076%" y="271.50"></text></g><g><title>__mark_inode_dirty (10 samples, 0.81%)</title><rect x="7.4554%" y="245" width="0.8104%" height="15" fill="rgb(212,91,54)" fg:x="92" fg:w="10"/><text x="7.6697%" y="255.50"></text></g><g><title>ext4_dirty_inode (9 samples, 0.73%)</title><rect x="7.5365%" y="229" width="0.7293%" height="15" fill="rgb(235,194,15)" fg:x="93" fg:w="9"/><text x="7.7508%" y="239.50"></text></g><g><title>__ext4_mark_inode_dirty (7 samples, 0.57%)</title><rect x="7.6985%" y="213" width="0.5673%" height="15" fill="rgb(250,159,10)" fg:x="95" fg:w="7"/><text x="7.9128%" y="223.50"></text></g><g><title>ext4_reserve_inode_write (4 samples, 0.32%)</title><rect x="7.9417%" y="197" width="0.3241%" height="15" fill="rgb(232,18,0)" fg:x="98" fg:w="4"/><text x="8.1559%" y="207.50"></text></g><g><title>ext4_get_inode_loc (1 samples, 0.08%)</title><rect x="8.1848%" y="181" width="0.0810%" height="15" fill="rgb(251,31,11)" fg:x="101" fg:w="1"/><text x="8.3991%" y="191.50"></text></g><g><title>__ext4_get_inode_loc (1 samples, 0.08%)</title><rect x="8.1848%" y="165" width="0.0810%" height="15" fill="rgb(231,98,31)" fg:x="101" fg:w="1"/><text x="8.3991%" y="175.50"></text></g><g><title>iov_iter_copy_from_user_atomic (2 samples, 0.16%)</title><rect x="8.2658%" y="277" width="0.1621%" height="15" fill="rgb(233,17,49)" fg:x="102" fg:w="2"/><text x="8.4801%" y="287.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.08%)</title><rect x="8.3468%" y="261" width="0.0810%" height="15" fill="rgb(254,4,9)" fg:x="103" fg:w="1"/><text x="8.5611%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (73 samples, 5.92%)</title><rect x="2.7553%" y="405" width="5.9157%" height="15" fill="rgb(205,226,15)" fg:x="34" fg:w="73"/><text x="2.9696%" y="415.50">entry_SYS..</text></g><g><title>do_syscall_64 (73 samples, 5.92%)</title><rect x="2.7553%" y="389" width="5.9157%" height="15" fill="rgb(220,74,14)" fg:x="34" fg:w="73"/><text x="2.9696%" y="399.50">do_syscal..</text></g><g><title>do_writev (73 samples, 5.92%)</title><rect x="2.7553%" y="373" width="5.9157%" height="15" fill="rgb(245,175,10)" fg:x="34" fg:w="73"/><text x="2.9696%" y="383.50">do_writev</text></g><g><title>vfs_writev (73 samples, 5.92%)</title><rect x="2.7553%" y="357" width="5.9157%" height="15" fill="rgb(232,58,12)" fg:x="34" fg:w="73"/><text x="2.9696%" y="367.50">vfs_writev</text></g><g><title>do_iter_write (73 samples, 5.92%)</title><rect x="2.7553%" y="341" width="5.9157%" height="15" fill="rgb(251,202,12)" fg:x="34" fg:w="73"/><text x="2.9696%" y="351.50">do_iter_w..</text></g><g><title>do_iter_readv_writev (72 samples, 5.83%)</title><rect x="2.8363%" y="325" width="5.8347%" height="15" fill="rgb(227,50,24)" fg:x="35" fg:w="72"/><text x="3.0506%" y="335.50">do_iter_r..</text></g><g><title>ext4_buffered_write_iter (72 samples, 5.83%)</title><rect x="2.8363%" y="309" width="5.8347%" height="15" fill="rgb(214,47,26)" fg:x="35" fg:w="72"/><text x="3.0506%" y="319.50">ext4_buff..</text></g><g><title>generic_perform_write (65 samples, 5.27%)</title><rect x="3.4036%" y="293" width="5.2674%" height="15" fill="rgb(218,161,27)" fg:x="42" fg:w="65"/><text x="3.6179%" y="303.50">generic_..</text></g><g><title>iov_iter_fault_in_readable (3 samples, 0.24%)</title><rect x="8.4279%" y="277" width="0.2431%" height="15" fill="rgb(223,182,1)" fg:x="104" fg:w="3"/><text x="8.6422%" y="287.50"></text></g><g><title>__get_user_nocheck_1 (2 samples, 0.16%)</title><rect x="8.5089%" y="261" width="0.1621%" height="15" fill="rgb(245,112,5)" fg:x="105" fg:w="2"/><text x="8.7232%" y="271.50"></text></g><g><title>Http::OnBodyRecv (77 samples, 6.24%)</title><rect x="2.5122%" y="517" width="6.2399%" height="15" fill="rgb(249,88,14)" fg:x="31" fg:w="77"/><text x="2.7264%" y="527.50">Http::OnBo..</text></g><g><title>Http::processPutData (77 samples, 6.24%)</title><rect x="2.5122%" y="501" width="6.2399%" height="15" fill="rgb(218,193,8)" fg:x="31" fg:w="77"/><text x="2.7264%" y="511.50">Http::proc..</text></g><g><title>std::ostream::write (76 samples, 6.16%)</title><rect x="2.5932%" y="485" width="6.1588%" height="15" fill="rgb(228,204,19)" fg:x="32" fg:w="76"/><text x="2.8075%" y="495.50">std::ostre..</text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (75 samples, 6.08%)</title><rect x="2.6742%" y="469" width="6.0778%" height="15" fill="rgb(230,183,37)" fg:x="33" fg:w="75"/><text x="2.8885%" y="479.50">std::basic..</text></g><g><title>std::__basic_file&lt;char&gt;::xsputn_2 (75 samples, 6.08%)</title><rect x="2.6742%" y="453" width="6.0778%" height="15" fill="rgb(226,181,43)" fg:x="33" fg:w="75"/><text x="2.8885%" y="463.50">std::__bas..</text></g><g><title>__interceptor_writev (75 samples, 6.08%)</title><rect x="2.6742%" y="437" width="6.0778%" height="15" fill="rgb(253,55,52)" fg:x="33" fg:w="75"/><text x="2.8885%" y="447.50">__intercep..</text></g><g><title>writev (74 samples, 6.00%)</title><rect x="2.7553%" y="421" width="5.9968%" height="15" fill="rgb(241,38,35)" fg:x="34" fg:w="74"/><text x="2.9696%" y="431.50">writev</text></g><g><title>ext4_da_write_begin (1 samples, 0.08%)</title><rect x="8.6710%" y="405" width="0.0810%" height="15" fill="rgb(235,31,43)" fg:x="107" fg:w="1"/><text x="8.8853%" y="415.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="8.6710%" y="389" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="107" fg:w="1"/><text x="8.8853%" y="399.50"></text></g><g><title>Http::sendResponse (1 samples, 0.08%)</title><rect x="8.7520%" y="501" width="0.0810%" height="15" fill="rgb(226,37,44)" fg:x="108" fg:w="1"/><text x="8.9663%" y="511.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.08%)</title><rect x="8.7520%" y="485" width="0.0810%" height="15" fill="rgb(226,32,40)" fg:x="108" fg:w="1"/><text x="8.9663%" y="495.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.08%)</title><rect x="8.7520%" y="469" width="0.0810%" height="15" fill="rgb(254,182,12)" fg:x="108" fg:w="1"/><text x="8.9663%" y="479.50"></text></g><g><title>operator new (1 samples, 0.08%)</title><rect x="8.7520%" y="453" width="0.0810%" height="15" fill="rgb(214,91,1)" fg:x="108" fg:w="1"/><text x="8.9663%" y="463.50"></text></g><g><title>__asan::asan_memalign (1 samples, 0.08%)</title><rect x="8.7520%" y="437" width="0.0810%" height="15" fill="rgb(248,206,7)" fg:x="108" fg:w="1"/><text x="8.9663%" y="447.50"></text></g><g><title>__asan::Allocator::Allocate (1 samples, 0.08%)</title><rect x="8.7520%" y="421" width="0.0810%" height="15" fill="rgb(251,118,48)" fg:x="108" fg:w="1"/><text x="8.9663%" y="431.50"></text></g><g><title>__sanitizer::StackDepotPut (1 samples, 0.08%)</title><rect x="8.7520%" y="405" width="0.0810%" height="15" fill="rgb(224,15,52)" fg:x="108" fg:w="1"/><text x="8.9663%" y="415.50"></text></g><g><title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1 samples, 0.08%)</title><rect x="8.7520%" y="389" width="0.0810%" height="15" fill="rgb(235,106,26)" fg:x="108" fg:w="1"/><text x="8.9663%" y="399.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="8.7520%" y="373" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="108" fg:w="1"/><text x="8.9663%" y="383.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="8.7520%" y="357" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="108" fg:w="1"/><text x="8.9663%" y="367.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="8.7520%" y="341" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="108" fg:w="1"/><text x="8.9663%" y="351.50"></text></g><g><title>handle_mm_fault (1 samples, 0.08%)</title><rect x="8.7520%" y="325" width="0.0810%" height="15" fill="rgb(247,31,49)" fg:x="108" fg:w="1"/><text x="8.9663%" y="335.50"></text></g><g><title>wp_page_copy (1 samples, 0.08%)</title><rect x="8.7520%" y="309" width="0.0810%" height="15" fill="rgb(231,223,9)" fg:x="108" fg:w="1"/><text x="8.9663%" y="319.50"></text></g><g><title>add_mm_counter_fast (1 samples, 0.08%)</title><rect x="8.7520%" y="293" width="0.0810%" height="15" fill="rgb(222,45,9)" fg:x="108" fg:w="1"/><text x="8.9663%" y="303.50"></text></g><g><title>Http::OnHeadRecv (2 samples, 0.16%)</title><rect x="8.7520%" y="517" width="0.1621%" height="15" fill="rgb(217,223,8)" fg:x="108" fg:w="2"/><text x="8.9663%" y="527.50"></text></g><g><title>Request::parseHead (1 samples, 0.08%)</title><rect x="8.8331%" y="501" width="0.0810%" height="15" fill="rgb(235,106,14)" fg:x="109" fg:w="1"/><text x="9.0473%" y="511.50"></text></g><g><title>Uri::Uri (1 samples, 0.08%)</title><rect x="8.8331%" y="485" width="0.0810%" height="15" fill="rgb(239,171,0)" fg:x="109" fg:w="1"/><text x="9.0473%" y="495.50"></text></g><g><title>Uri::load (1 samples, 0.08%)</title><rect x="8.8331%" y="469" width="0.0810%" height="15" fill="rgb(211,228,34)" fg:x="109" fg:w="1"/><text x="9.0473%" y="479.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (1 samples, 0.08%)</title><rect x="8.8331%" y="453" width="0.0810%" height="15" fill="rgb(237,70,52)" fg:x="109" fg:w="1"/><text x="9.0473%" y="463.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.08%)</title><rect x="8.8331%" y="437" width="0.0810%" height="15" fill="rgb(240,176,52)" fg:x="109" fg:w="1"/><text x="9.0473%" y="447.50"></text></g><g><title>operator new (1 samples, 0.08%)</title><rect x="8.8331%" y="421" width="0.0810%" height="15" fill="rgb(214,91,1)" fg:x="109" fg:w="1"/><text x="9.0473%" y="431.50"></text></g><g><title>__asan::asan_memalign (1 samples, 0.08%)</title><rect x="8.8331%" y="405" width="0.0810%" height="15" fill="rgb(248,206,7)" fg:x="109" fg:w="1"/><text x="9.0473%" y="415.50"></text></g><g><title>__asan::Allocator::Allocate (1 samples, 0.08%)</title><rect x="8.8331%" y="389" width="0.0810%" height="15" fill="rgb(251,118,48)" fg:x="109" fg:w="1"/><text x="9.0473%" y="399.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="8.8331%" y="373" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="109" fg:w="1"/><text x="9.0473%" y="383.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="8.8331%" y="357" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="109" fg:w="1"/><text x="9.0473%" y="367.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="8.8331%" y="341" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="109" fg:w="1"/><text x="9.0473%" y="351.50"></text></g><g><title>handle_mm_fault (1 samples, 0.08%)</title><rect x="8.8331%" y="325" width="0.0810%" height="15" fill="rgb(247,31,49)" fg:x="109" fg:w="1"/><text x="9.0473%" y="335.50"></text></g><g><title>wp_page_copy (1 samples, 0.08%)</title><rect x="8.8331%" y="309" width="0.0810%" height="15" fill="rgb(231,223,9)" fg:x="109" fg:w="1"/><text x="9.0473%" y="319.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.08%)</title><rect x="8.8331%" y="293" width="0.0810%" height="15" fill="rgb(225,195,37)" fg:x="109" fg:w="1"/><text x="9.0473%" y="303.50"></text></g><g><title>operator delete (2 samples, 0.16%)</title><rect x="8.9141%" y="517" width="0.1621%" height="15" fill="rgb(249,165,17)" fg:x="110" fg:w="2"/><text x="9.1284%" y="527.50"></text></g><g><title>__asan::Allocator::QuarantineChunk (2 samples, 0.16%)</title><rect x="8.9141%" y="501" width="0.1621%" height="15" fill="rgb(236,101,31)" fg:x="110" fg:w="2"/><text x="9.1284%" y="511.50"></text></g><g><title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Recycle (2 samples, 0.16%)</title><rect x="8.9141%" y="485" width="0.1621%" height="15" fill="rgb(246,37,50)" fg:x="110" fg:w="2"/><text x="9.1284%" y="495.50"></text></g><g><title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.16%)</title><rect x="8.9141%" y="469" width="0.1621%" height="15" fill="rgb(249,184,48)" fg:x="110" fg:w="2"/><text x="9.1284%" y="479.50"></text></g><g><title>__asan::QuarantineCallback::Recycle (1 samples, 0.08%)</title><rect x="8.9951%" y="453" width="0.0810%" height="15" fill="rgb(208,68,18)" fg:x="111" fg:w="1"/><text x="9.2094%" y="463.50"></text></g><g><title>__asan::GetCurrentThreadStats (1 samples, 0.08%)</title><rect x="8.9951%" y="437" width="0.0810%" height="15" fill="rgb(238,52,35)" fg:x="111" fg:w="1"/><text x="9.2094%" y="447.50"></text></g><g><title>__asan::GetCurrentThread (1 samples, 0.08%)</title><rect x="8.9951%" y="421" width="0.0810%" height="15" fill="rgb(239,81,14)" fg:x="111" fg:w="1"/><text x="9.2094%" y="431.50"></text></g><g><title>__GI___pthread_getspecific (1 samples, 0.08%)</title><rect x="8.9951%" y="405" width="0.0810%" height="15" fill="rgb(238,82,10)" fg:x="111" fg:w="1"/><text x="9.2094%" y="415.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.08%)</title><rect x="9.0762%" y="517" width="0.0810%" height="15" fill="rgb(239,29,9)" fg:x="112" fg:w="1"/><text x="9.2905%" y="527.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="10.2107%" y="389" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="126" fg:w="1"/><text x="10.4250%" y="399.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="10.2107%" y="373" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="126" fg:w="1"/><text x="10.4250%" y="383.50"></text></g><g><title>__list_add_valid (1 samples, 0.08%)</title><rect x="10.3728%" y="341" width="0.0810%" height="15" fill="rgb(206,79,8)" fg:x="128" fg:w="1"/><text x="10.5871%" y="351.50"></text></g><g><title>__list_del_entry_valid (1 samples, 0.08%)</title><rect x="10.4538%" y="341" width="0.0810%" height="15" fill="rgb(224,110,12)" fg:x="129" fg:w="1"/><text x="10.6681%" y="351.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.41%)</title><rect x="10.2917%" y="389" width="0.4052%" height="15" fill="rgb(242,79,46)" fg:x="127" fg:w="5"/><text x="10.5060%" y="399.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.41%)</title><rect x="10.2917%" y="373" width="0.4052%" height="15" fill="rgb(245,49,10)" fg:x="127" fg:w="5"/><text x="10.5060%" y="383.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.41%)</title><rect x="10.2917%" y="357" width="0.4052%" height="15" fill="rgb(246,35,53)" fg:x="127" fg:w="5"/><text x="10.5060%" y="367.50"></text></g><g><title>prep_new_page (2 samples, 0.16%)</title><rect x="10.5348%" y="341" width="0.1621%" height="15" fill="rgb(220,94,29)" fg:x="130" fg:w="2"/><text x="10.7491%" y="351.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.16%)</title><rect x="10.5348%" y="325" width="0.1621%" height="15" fill="rgb(253,165,35)" fg:x="130" fg:w="2"/><text x="10.7491%" y="335.50"></text></g><g><title>clear_page_erms (2 samples, 0.16%)</title><rect x="10.5348%" y="309" width="0.1621%" height="15" fill="rgb(253,135,51)" fg:x="130" fg:w="2"/><text x="10.7491%" y="319.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.08%)</title><rect x="10.6969%" y="389" width="0.0810%" height="15" fill="rgb(232,189,48)" fg:x="132" fg:w="1"/><text x="10.9112%" y="399.50"></text></g><g><title>[libc-2.31.so] (22 samples, 1.78%)</title><rect x="9.1572%" y="469" width="1.7828%" height="15" fill="rgb(247,113,52)" fg:x="113" fg:w="22"/><text x="9.3715%" y="479.50">[..</text></g><g><title>asm_exc_page_fault (16 samples, 1.30%)</title><rect x="9.6434%" y="453" width="1.2966%" height="15" fill="rgb(208,26,13)" fg:x="119" fg:w="16"/><text x="9.8577%" y="463.50"></text></g><g><title>exc_page_fault (14 samples, 1.13%)</title><rect x="9.8055%" y="437" width="1.1345%" height="15" fill="rgb(216,51,29)" fg:x="121" fg:w="14"/><text x="10.0198%" y="447.50"></text></g><g><title>do_user_addr_fault (14 samples, 1.13%)</title><rect x="9.8055%" y="421" width="1.1345%" height="15" fill="rgb(253,37,52)" fg:x="121" fg:w="14"/><text x="10.0198%" y="431.50"></text></g><g><title>handle_mm_fault (11 samples, 0.89%)</title><rect x="10.0486%" y="405" width="0.8914%" height="15" fill="rgb(247,31,49)" fg:x="124" fg:w="11"/><text x="10.2629%" y="415.50"></text></g><g><title>page_add_new_anon_rmap (2 samples, 0.16%)</title><rect x="10.7780%" y="389" width="0.1621%" height="15" fill="rgb(242,29,16)" fg:x="133" fg:w="2"/><text x="10.9922%" y="399.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.08%)</title><rect x="10.8590%" y="373" width="0.0810%" height="15" fill="rgb(247,169,19)" fg:x="134" fg:w="1"/><text x="11.0733%" y="383.50"></text></g><g><title>memcpy (23 samples, 1.86%)</title><rect x="9.1572%" y="485" width="1.8639%" height="15" fill="rgb(232,135,4)" fg:x="113" fg:w="23"/><text x="9.3715%" y="495.50">m..</text></g><g><title>__asan_region_is_poisoned (1 samples, 0.08%)</title><rect x="10.9400%" y="469" width="0.0810%" height="15" fill="rgb(252,76,50)" fg:x="135" fg:w="1"/><text x="11.1543%" y="479.50"></text></g><g><title>__asan::Allocator::Allocate (1 samples, 0.08%)</title><rect x="10.9400%" y="453" width="0.0810%" height="15" fill="rgb(251,118,48)" fg:x="135" fg:w="1"/><text x="11.1543%" y="463.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.08%)</title><rect x="10.9400%" y="437" width="0.0810%" height="15" fill="rgb(247,113,52)" fg:x="135" fg:w="1"/><text x="11.1543%" y="447.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="10.9400%" y="421" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="135" fg:w="1"/><text x="11.1543%" y="431.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.08%)</title><rect x="11.2642%" y="357" width="0.0810%" height="15" fill="rgb(209,149,49)" fg:x="139" fg:w="1"/><text x="11.4785%" y="367.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.24%)</title><rect x="11.1831%" y="437" width="0.2431%" height="15" fill="rgb(247,113,52)" fg:x="138" fg:w="3"/><text x="11.3974%" y="447.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.24%)</title><rect x="11.1831%" y="421" width="0.2431%" height="15" fill="rgb(208,26,13)" fg:x="138" fg:w="3"/><text x="11.3974%" y="431.50"></text></g><g><title>exc_page_fault (3 samples, 0.24%)</title><rect x="11.1831%" y="405" width="0.2431%" height="15" fill="rgb(216,51,29)" fg:x="138" fg:w="3"/><text x="11.3974%" y="415.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.24%)</title><rect x="11.1831%" y="389" width="0.2431%" height="15" fill="rgb(253,37,52)" fg:x="138" fg:w="3"/><text x="11.3974%" y="399.50"></text></g><g><title>handle_mm_fault (3 samples, 0.24%)</title><rect x="11.1831%" y="373" width="0.2431%" height="15" fill="rgb(247,31,49)" fg:x="138" fg:w="3"/><text x="11.3974%" y="383.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.08%)</title><rect x="11.3452%" y="357" width="0.0810%" height="15" fill="rgb(242,79,46)" fg:x="140" fg:w="1"/><text x="11.5595%" y="367.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.08%)</title><rect x="11.3452%" y="341" width="0.0810%" height="15" fill="rgb(245,49,10)" fg:x="140" fg:w="1"/><text x="11.5595%" y="351.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.08%)</title><rect x="11.3452%" y="325" width="0.0810%" height="15" fill="rgb(246,35,53)" fg:x="140" fg:w="1"/><text x="11.5595%" y="335.50"></text></g><g><title>prep_new_page (1 samples, 0.08%)</title><rect x="11.3452%" y="309" width="0.0810%" height="15" fill="rgb(220,94,29)" fg:x="140" fg:w="1"/><text x="11.5595%" y="319.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.08%)</title><rect x="11.3452%" y="293" width="0.0810%" height="15" fill="rgb(253,165,35)" fg:x="140" fg:w="1"/><text x="11.5595%" y="303.50"></text></g><g><title>clear_page_erms (1 samples, 0.08%)</title><rect x="11.3452%" y="277" width="0.0810%" height="15" fill="rgb(253,135,51)" fg:x="140" fg:w="1"/><text x="11.5595%" y="287.50"></text></g><g><title>__asan::RZSize2Log (1 samples, 0.08%)</title><rect x="11.4263%" y="437" width="0.0810%" height="15" fill="rgb(229,228,9)" fg:x="141" fg:w="1"/><text x="11.6405%" y="447.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.08%)</title><rect x="11.4263%" y="421" width="0.0810%" height="15" fill="rgb(248,227,45)" fg:x="141" fg:w="1"/><text x="11.6405%" y="431.50"></text></g><g><title>common_interrupt (1 samples, 0.08%)</title><rect x="11.4263%" y="405" width="0.0810%" height="15" fill="rgb(250,67,32)" fg:x="141" fg:w="1"/><text x="11.6405%" y="415.50"></text></g><g><title>handle_edge_irq (1 samples, 0.08%)</title><rect x="11.4263%" y="389" width="0.0810%" height="15" fill="rgb(219,15,9)" fg:x="141" fg:w="1"/><text x="11.6405%" y="399.50"></text></g><g><title>handle_irq_event (1 samples, 0.08%)</title><rect x="11.4263%" y="373" width="0.0810%" height="15" fill="rgb(209,73,52)" fg:x="141" fg:w="1"/><text x="11.6405%" y="383.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.08%)</title><rect x="11.4263%" y="357" width="0.0810%" height="15" fill="rgb(239,110,26)" fg:x="141" fg:w="1"/><text x="11.6405%" y="367.50"></text></g><g><title>vring_interrupt (1 samples, 0.08%)</title><rect x="11.4263%" y="341" width="0.0810%" height="15" fill="rgb(206,212,41)" fg:x="141" fg:w="1"/><text x="11.6405%" y="351.50"></text></g><g><title>__napi_schedule (1 samples, 0.08%)</title><rect x="11.4263%" y="325" width="0.0810%" height="15" fill="rgb(239,13,52)" fg:x="141" fg:w="1"/><text x="11.6405%" y="335.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.08%)</title><rect x="11.9935%" y="293" width="0.0810%" height="15" fill="rgb(242,79,46)" fg:x="148" fg:w="1"/><text x="12.2078%" y="303.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.08%)</title><rect x="11.9935%" y="277" width="0.0810%" height="15" fill="rgb(245,49,10)" fg:x="148" fg:w="1"/><text x="12.2078%" y="287.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.08%)</title><rect x="11.9935%" y="261" width="0.0810%" height="15" fill="rgb(246,35,53)" fg:x="148" fg:w="1"/><text x="12.2078%" y="271.50"></text></g><g><title>prep_new_page (1 samples, 0.08%)</title><rect x="11.9935%" y="245" width="0.0810%" height="15" fill="rgb(220,94,29)" fg:x="148" fg:w="1"/><text x="12.2078%" y="255.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.08%)</title><rect x="11.9935%" y="229" width="0.0810%" height="15" fill="rgb(253,165,35)" fg:x="148" fg:w="1"/><text x="12.2078%" y="239.50"></text></g><g><title>clear_page_erms (1 samples, 0.08%)</title><rect x="11.9935%" y="213" width="0.0810%" height="15" fill="rgb(253,135,51)" fg:x="148" fg:w="1"/><text x="12.2078%" y="223.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.08%)</title><rect x="12.0746%" y="293" width="0.0810%" height="15" fill="rgb(232,189,48)" fg:x="149" fg:w="1"/><text x="12.2888%" y="303.50"></text></g><g><title>try_charge (1 samples, 0.08%)</title><rect x="12.0746%" y="277" width="0.0810%" height="15" fill="rgb(208,116,22)" fg:x="149" fg:w="1"/><text x="12.2888%" y="287.50"></text></g><g><title>refill_stock (1 samples, 0.08%)</title><rect x="12.0746%" y="261" width="0.0810%" height="15" fill="rgb(214,139,20)" fg:x="149" fg:w="1"/><text x="12.2888%" y="271.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.32%)</title><rect x="11.9125%" y="325" width="0.3241%" height="15" fill="rgb(253,37,52)" fg:x="147" fg:w="4"/><text x="12.1268%" y="335.50"></text></g><g><title>handle_mm_fault (4 samples, 0.32%)</title><rect x="11.9125%" y="309" width="0.3241%" height="15" fill="rgb(247,31,49)" fg:x="147" fg:w="4"/><text x="12.1268%" y="319.50"></text></g><g><title>mem_cgroup_from_task (1 samples, 0.08%)</title><rect x="12.1556%" y="293" width="0.0810%" height="15" fill="rgb(232,92,8)" fg:x="150" fg:w="1"/><text x="12.3699%" y="303.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.73%)</title><rect x="11.5883%" y="373" width="0.7293%" height="15" fill="rgb(247,113,52)" fg:x="143" fg:w="9"/><text x="11.8026%" y="383.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.57%)</title><rect x="11.7504%" y="357" width="0.5673%" height="15" fill="rgb(208,26,13)" fg:x="145" fg:w="7"/><text x="11.9647%" y="367.50"></text></g><g><title>exc_page_fault (5 samples, 0.41%)</title><rect x="11.9125%" y="341" width="0.4052%" height="15" fill="rgb(216,51,29)" fg:x="147" fg:w="5"/><text x="12.1268%" y="351.50"></text></g><g><title>irqentry_enter (1 samples, 0.08%)</title><rect x="12.2366%" y="325" width="0.0810%" height="15" fill="rgb(248,13,40)" fg:x="151" fg:w="1"/><text x="12.4509%" y="335.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="12.3177%" y="341" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="152" fg:w="1"/><text x="12.5320%" y="351.50"></text></g><g><title>__split_vma (2 samples, 0.16%)</title><rect x="12.3987%" y="245" width="0.1621%" height="15" fill="rgb(231,148,17)" fg:x="153" fg:w="2"/><text x="12.6130%" y="255.50"></text></g><g><title>vm_area_dup (2 samples, 0.16%)</title><rect x="12.3987%" y="229" width="0.1621%" height="15" fill="rgb(241,106,19)" fg:x="153" fg:w="2"/><text x="12.6130%" y="239.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.08%)</title><rect x="12.4797%" y="213" width="0.0810%" height="15" fill="rgb(223,51,51)" fg:x="154" fg:w="1"/><text x="12.6940%" y="223.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.08%)</title><rect x="12.4797%" y="197" width="0.0810%" height="15" fill="rgb(212,11,50)" fg:x="154" fg:w="1"/><text x="12.6940%" y="207.50"></text></g><g><title>get_obj_cgroup_from_current (1 samples, 0.08%)</title><rect x="12.4797%" y="181" width="0.0810%" height="15" fill="rgb(224,141,13)" fg:x="154" fg:w="1"/><text x="12.6940%" y="191.50"></text></g><g><title>__vma_rb_erase (1 samples, 0.08%)</title><rect x="12.5608%" y="245" width="0.0810%" height="15" fill="rgb(241,100,27)" fg:x="155" fg:w="1"/><text x="12.7751%" y="255.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.08%)</title><rect x="12.6418%" y="245" width="0.0810%" height="15" fill="rgb(219,106,45)" fg:x="156" fg:w="1"/><text x="12.8561%" y="255.50"></text></g><g><title>lru_add_drain (1 samples, 0.08%)</title><rect x="12.7229%" y="229" width="0.0810%" height="15" fill="rgb(252,215,2)" fg:x="157" fg:w="1"/><text x="12.9371%" y="239.50"></text></g><g><title>lru_add_drain_cpu (1 samples, 0.08%)</title><rect x="12.7229%" y="213" width="0.0810%" height="15" fill="rgb(207,80,1)" fg:x="157" fg:w="1"/><text x="12.9371%" y="223.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.08%)</title><rect x="12.7229%" y="197" width="0.0810%" height="15" fill="rgb(220,168,32)" fg:x="157" fg:w="1"/><text x="12.9371%" y="207.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.08%)</title><rect x="12.7229%" y="181" width="0.0810%" height="15" fill="rgb(215,186,14)" fg:x="157" fg:w="1"/><text x="12.9371%" y="191.50"></text></g><g><title>__do_munmap (7 samples, 0.57%)</title><rect x="12.3987%" y="261" width="0.5673%" height="15" fill="rgb(225,34,24)" fg:x="153" fg:w="7"/><text x="12.6130%" y="271.50"></text></g><g><title>unmap_region (3 samples, 0.24%)</title><rect x="12.7229%" y="245" width="0.2431%" height="15" fill="rgb(215,221,10)" fg:x="157" fg:w="3"/><text x="12.9371%" y="255.50"></text></g><g><title>unmap_vmas (2 samples, 0.16%)</title><rect x="12.8039%" y="229" width="0.1621%" height="15" fill="rgb(216,135,47)" fg:x="158" fg:w="2"/><text x="13.0182%" y="239.50"></text></g><g><title>unmap_page_range (2 samples, 0.16%)</title><rect x="12.8039%" y="213" width="0.1621%" height="15" fill="rgb(216,127,1)" fg:x="158" fg:w="2"/><text x="13.0182%" y="223.50"></text></g><g><title>flush_tlb_batched_pending (1 samples, 0.08%)</title><rect x="12.8849%" y="197" width="0.0810%" height="15" fill="rgb(214,105,11)" fg:x="159" fg:w="1"/><text x="13.0992%" y="207.50"></text></g><g><title>__perf_event_header__init_id (1 samples, 0.08%)</title><rect x="12.9660%" y="197" width="0.0810%" height="15" fill="rgb(218,49,52)" fg:x="160" fg:w="1"/><text x="13.1803%" y="207.50"></text></g><g><title>perf_output_begin (1 samples, 0.08%)</title><rect x="13.0470%" y="197" width="0.0810%" height="15" fill="rgb(246,75,0)" fg:x="161" fg:w="1"/><text x="13.2613%" y="207.50"></text></g><g><title>perf_event_mmap (3 samples, 0.24%)</title><rect x="12.9660%" y="261" width="0.2431%" height="15" fill="rgb(252,32,1)" fg:x="160" fg:w="3"/><text x="13.1803%" y="271.50"></text></g><g><title>perf_iterate_sb (3 samples, 0.24%)</title><rect x="12.9660%" y="245" width="0.2431%" height="15" fill="rgb(241,203,1)" fg:x="160" fg:w="3"/><text x="13.1803%" y="255.50"></text></g><g><title>perf_iterate_ctx (3 samples, 0.24%)</title><rect x="12.9660%" y="229" width="0.2431%" height="15" fill="rgb(227,133,21)" fg:x="160" fg:w="3"/><text x="13.1803%" y="239.50"></text></g><g><title>perf_event_mmap_output (3 samples, 0.24%)</title><rect x="12.9660%" y="213" width="0.2431%" height="15" fill="rgb(225,127,18)" fg:x="160" fg:w="3"/><text x="13.1803%" y="223.50"></text></g><g><title>perf_output_copy (1 samples, 0.08%)</title><rect x="13.1280%" y="197" width="0.0810%" height="15" fill="rgb(250,195,20)" fg:x="162" fg:w="1"/><text x="13.3423%" y="207.50"></text></g><g><title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (22 samples, 1.78%)</title><rect x="11.5073%" y="437" width="1.7828%" height="15" fill="rgb(218,174,54)" fg:x="142" fg:w="22"/><text x="11.7216%" y="447.50">_..</text></g><g><title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (22 samples, 1.78%)</title><rect x="11.5073%" y="421" width="1.7828%" height="15" fill="rgb(241,35,21)" fg:x="142" fg:w="22"/><text x="11.7216%" y="431.50">_..</text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (22 samples, 1.78%)</title><rect x="11.5073%" y="405" width="1.7828%" height="15" fill="rgb(230,18,53)" fg:x="142" fg:w="22"/><text x="11.7216%" y="415.50">_..</text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (22 samples, 1.78%)</title><rect x="11.5073%" y="389" width="1.7828%" height="15" fill="rgb(210,154,38)" fg:x="142" fg:w="22"/><text x="11.7216%" y="399.50">_..</text></g><g><title>__sanitizer::MmapFixedImpl (12 samples, 0.97%)</title><rect x="12.3177%" y="373" width="0.9724%" height="15" fill="rgb(207,87,16)" fg:x="152" fg:w="12"/><text x="12.5320%" y="383.50"></text></g><g><title>__sanitizer::internal_mmap (12 samples, 0.97%)</title><rect x="12.3177%" y="357" width="0.9724%" height="15" fill="rgb(254,86,31)" fg:x="152" fg:w="12"/><text x="12.5320%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.89%)</title><rect x="12.3987%" y="341" width="0.8914%" height="15" fill="rgb(205,226,15)" fg:x="153" fg:w="11"/><text x="12.6130%" y="351.50"></text></g><g><title>do_syscall_64 (11 samples, 0.89%)</title><rect x="12.3987%" y="325" width="0.8914%" height="15" fill="rgb(220,74,14)" fg:x="153" fg:w="11"/><text x="12.6130%" y="335.50"></text></g><g><title>vm_mmap_pgoff (11 samples, 0.89%)</title><rect x="12.3987%" y="309" width="0.8914%" height="15" fill="rgb(226,196,1)" fg:x="153" fg:w="11"/><text x="12.6130%" y="319.50"></text></g><g><title>do_mmap (11 samples, 0.89%)</title><rect x="12.3987%" y="293" width="0.8914%" height="15" fill="rgb(228,25,27)" fg:x="153" fg:w="11"/><text x="12.6130%" y="303.50"></text></g><g><title>mmap_region (11 samples, 0.89%)</title><rect x="12.3987%" y="277" width="0.8914%" height="15" fill="rgb(233,57,38)" fg:x="153" fg:w="11"/><text x="12.6130%" y="287.50"></text></g><g><title>vma_merge (1 samples, 0.08%)</title><rect x="13.2091%" y="261" width="0.0810%" height="15" fill="rgb(223,40,45)" fg:x="163" fg:w="1"/><text x="13.4234%" y="271.50"></text></g><g><title>__vma_adjust (1 samples, 0.08%)</title><rect x="13.2091%" y="245" width="0.0810%" height="15" fill="rgb(224,210,22)" fg:x="163" fg:w="1"/><text x="13.4234%" y="255.50"></text></g><g><title>anon_vma_interval_tree_remove (1 samples, 0.08%)</title><rect x="13.2091%" y="229" width="0.0810%" height="15" fill="rgb(250,61,53)" fg:x="163" fg:w="1"/><text x="13.4234%" y="239.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.08%)</title><rect x="13.2091%" y="213" width="0.0810%" height="15" fill="rgb(248,227,45)" fg:x="163" fg:w="1"/><text x="13.4234%" y="223.50"></text></g><g><title>common_interrupt (1 samples, 0.08%)</title><rect x="13.2091%" y="197" width="0.0810%" height="15" fill="rgb(250,67,32)" fg:x="163" fg:w="1"/><text x="13.4234%" y="207.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.08%)</title><rect x="13.2091%" y="181" width="0.0810%" height="15" fill="rgb(240,18,12)" fg:x="163" fg:w="1"/><text x="13.4234%" y="191.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.08%)</title><rect x="13.2091%" y="165" width="0.0810%" height="15" fill="rgb(223,89,53)" fg:x="163" fg:w="1"/><text x="13.4234%" y="175.50"></text></g><g><title>asm_call_sysvec_on_stack (1 samples, 0.08%)</title><rect x="13.2091%" y="149" width="0.0810%" height="15" fill="rgb(208,184,36)" fg:x="163" fg:w="1"/><text x="13.4234%" y="159.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.08%)</title><rect x="13.2091%" y="133" width="0.0810%" height="15" fill="rgb(249,91,22)" fg:x="163" fg:w="1"/><text x="13.4234%" y="143.50"></text></g><g><title>AConnection::passReadBuffer (139 samples, 11.26%)</title><rect x="2.1070%" y="533" width="11.2642%" height="15" fill="rgb(214,198,32)" fg:x="26" fg:w="139"/><text x="2.3213%" y="543.50">AConnection::passRea..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (52 samples, 4.21%)</title><rect x="9.1572%" y="517" width="4.2139%" height="15" fill="rgb(237,70,52)" fg:x="113" fg:w="52"/><text x="9.3715%" y="527.50">std::_..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (52 samples, 4.21%)</title><rect x="9.1572%" y="501" width="4.2139%" height="15" fill="rgb(240,176,52)" fg:x="113" fg:w="52"/><text x="9.3715%" y="511.50">std::_..</text></g><g><title>operator new (29 samples, 2.35%)</title><rect x="11.0211%" y="485" width="2.3501%" height="15" fill="rgb(214,91,1)" fg:x="136" fg:w="29"/><text x="11.2354%" y="495.50">op..</text></g><g><title>__asan::asan_memalign (29 samples, 2.35%)</title><rect x="11.0211%" y="469" width="2.3501%" height="15" fill="rgb(248,206,7)" fg:x="136" fg:w="29"/><text x="11.2354%" y="479.50">__..</text></g><g><title>__asan::Allocator::Allocate (29 samples, 2.35%)</title><rect x="11.0211%" y="453" width="2.3501%" height="15" fill="rgb(251,118,48)" fg:x="136" fg:w="29"/><text x="11.2354%" y="463.50">__..</text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="13.2901%" y="437" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="164" fg:w="1"/><text x="13.5044%" y="447.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="13.2901%" y="421" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="164" fg:w="1"/><text x="13.5044%" y="431.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="13.2901%" y="405" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="164" fg:w="1"/><text x="13.5044%" y="415.50"></text></g><g><title>handle_mm_fault (1 samples, 0.08%)</title><rect x="13.2901%" y="389" width="0.0810%" height="15" fill="rgb(247,31,49)" fg:x="164" fg:w="1"/><text x="13.5044%" y="399.50"></text></g><g><title>wp_page_copy (1 samples, 0.08%)</title><rect x="13.2901%" y="373" width="0.0810%" height="15" fill="rgb(231,223,9)" fg:x="164" fg:w="1"/><text x="13.5044%" y="383.50"></text></g><g><title>ptep_clear_flush (1 samples, 0.08%)</title><rect x="13.2901%" y="357" width="0.0810%" height="15" fill="rgb(210,44,11)" fg:x="164" fg:w="1"/><text x="13.5044%" y="367.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="13.2901%" y="341" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="164" fg:w="1"/><text x="13.5044%" y="351.50"></text></g><g><title>[libc-2.31.so] (30 samples, 2.43%)</title><rect x="13.3712%" y="533" width="2.4311%" height="15" fill="rgb(247,113,52)" fg:x="165" fg:w="30"/><text x="13.5854%" y="543.50">[l..</text></g><g><title>__asan_set_shadow_f8 (1 samples, 0.08%)</title><rect x="15.8023%" y="533" width="0.0810%" height="15" fill="rgb(221,181,0)" fg:x="195" fg:w="1"/><text x="16.0166%" y="543.50"></text></g><g><title>__asan::Allocator::Deallocate (4 samples, 0.32%)</title><rect x="16.0454%" y="517" width="0.3241%" height="15" fill="rgb(231,83,31)" fg:x="198" fg:w="4"/><text x="16.2597%" y="527.50"></text></g><g><title>__asan::GetCurrentThread (1 samples, 0.08%)</title><rect x="16.6126%" y="501" width="0.0810%" height="15" fill="rgb(239,81,14)" fg:x="205" fg:w="1"/><text x="16.8269%" y="511.50"></text></g><g><title>__asan::Allocator::QuarantineChunk (8 samples, 0.65%)</title><rect x="16.3695%" y="517" width="0.6483%" height="15" fill="rgb(236,101,31)" fg:x="202" fg:w="8"/><text x="16.5838%" y="527.50"></text></g><g><title>__sanitizer::StackDepotPut (4 samples, 0.32%)</title><rect x="16.6937%" y="501" width="0.3241%" height="15" fill="rgb(224,15,52)" fg:x="206" fg:w="4"/><text x="16.9080%" y="511.50"></text></g><g><title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (4 samples, 0.32%)</title><rect x="16.6937%" y="485" width="0.3241%" height="15" fill="rgb(235,106,26)" fg:x="206" fg:w="4"/><text x="16.9080%" y="495.50"></text></g><g><title>operator delete (15 samples, 1.22%)</title><rect x="15.8833%" y="533" width="1.2156%" height="15" fill="rgb(249,165,17)" fg:x="196" fg:w="15"/><text x="16.0976%" y="543.50"></text></g><g><title>__sanitizer::BufferedStackTrace::UnwindImpl (1 samples, 0.08%)</title><rect x="17.0178%" y="517" width="0.0810%" height="15" fill="rgb(237,1,53)" fg:x="210" fg:w="1"/><text x="17.2321%" y="527.50"></text></g><g><title>__asan_region_is_poisoned (3 samples, 0.24%)</title><rect x="17.4230%" y="517" width="0.2431%" height="15" fill="rgb(252,76,50)" fg:x="215" fg:w="3"/><text x="17.6373%" y="527.50"></text></g><g><title>__sanitizer::mem_is_zero (2 samples, 0.16%)</title><rect x="17.5041%" y="501" width="0.1621%" height="15" fill="rgb(245,148,37)" fg:x="216" fg:w="2"/><text x="17.7183%" y="511.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.32%)</title><rect x="17.8282%" y="501" width="0.3241%" height="15" fill="rgb(229,107,3)" fg:x="220" fg:w="4"/><text x="18.0425%" y="511.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.08%)</title><rect x="18.1524%" y="501" width="0.0810%" height="15" fill="rgb(231,153,3)" fg:x="224" fg:w="1"/><text x="18.3666%" y="511.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.57%)</title><rect x="18.2334%" y="501" width="0.5673%" height="15" fill="rgb(208,26,13)" fg:x="225" fg:w="7"/><text x="18.4477%" y="511.50"></text></g><g><title>kfree (5 samples, 0.41%)</title><rect x="20.5835%" y="389" width="0.4052%" height="15" fill="rgb(222,6,37)" fg:x="254" fg:w="5"/><text x="20.7978%" y="399.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (2 samples, 0.16%)</title><rect x="20.8266%" y="373" width="0.1621%" height="15" fill="rgb(208,166,34)" fg:x="257" fg:w="2"/><text x="21.0409%" y="383.50"></text></g><g><title>skb_release_data (4 samples, 0.32%)</title><rect x="20.9887%" y="389" width="0.3241%" height="15" fill="rgb(252,193,18)" fg:x="259" fg:w="4"/><text x="21.2029%" y="399.50"></text></g><g><title>__free_pages_ok (1 samples, 0.08%)</title><rect x="21.2318%" y="373" width="0.0810%" height="15" fill="rgb(211,136,21)" fg:x="262" fg:w="1"/><text x="21.4461%" y="383.50"></text></g><g><title>free_one_page (1 samples, 0.08%)</title><rect x="21.2318%" y="357" width="0.0810%" height="15" fill="rgb(253,106,2)" fg:x="262" fg:w="1"/><text x="21.4461%" y="367.50"></text></g><g><title>__free_one_page (1 samples, 0.08%)</title><rect x="21.2318%" y="341" width="0.0810%" height="15" fill="rgb(251,19,41)" fg:x="262" fg:w="1"/><text x="21.4461%" y="351.50"></text></g><g><title>__kfree_skb (13 samples, 1.05%)</title><rect x="20.5835%" y="405" width="1.0535%" height="15" fill="rgb(208,195,26)" fg:x="254" fg:w="13"/><text x="20.7978%" y="415.50"></text></g><g><title>skb_release_head_state (4 samples, 0.32%)</title><rect x="21.3128%" y="389" width="0.3241%" height="15" fill="rgb(221,1,22)" fg:x="263" fg:w="4"/><text x="21.5271%" y="399.50"></text></g><g><title>sock_rfree (3 samples, 0.24%)</title><rect x="21.3938%" y="373" width="0.2431%" height="15" fill="rgb(211,40,33)" fg:x="264" fg:w="3"/><text x="21.6081%" y="383.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.08%)</title><rect x="21.6370%" y="405" width="0.0810%" height="15" fill="rgb(252,29,18)" fg:x="267" fg:w="1"/><text x="21.8512%" y="415.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.16%)</title><rect x="21.7180%" y="373" width="0.1621%" height="15" fill="rgb(228,161,44)" fg:x="268" fg:w="2"/><text x="21.9323%" y="383.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.08%)</title><rect x="21.7990%" y="357" width="0.0810%" height="15" fill="rgb(212,11,50)" fg:x="269" fg:w="1"/><text x="22.0133%" y="367.50"></text></g><g><title>memcg_slab_post_alloc_hook (1 samples, 0.08%)</title><rect x="21.9611%" y="357" width="0.0810%" height="15" fill="rgb(242,216,24)" fg:x="271" fg:w="1"/><text x="22.1754%" y="367.50"></text></g><g><title>__tcp_send_ack.part.0 (6 samples, 0.49%)</title><rect x="21.7180%" y="405" width="0.4862%" height="15" fill="rgb(250,64,3)" fg:x="268" fg:w="6"/><text x="21.9323%" y="415.50"></text></g><g><title>__alloc_skb (6 samples, 0.49%)</title><rect x="21.7180%" y="389" width="0.4862%" height="15" fill="rgb(237,90,40)" fg:x="268" fg:w="6"/><text x="21.9323%" y="399.50"></text></g><g><title>kmem_cache_alloc_node (4 samples, 0.32%)</title><rect x="21.8801%" y="373" width="0.3241%" height="15" fill="rgb(227,94,12)" fg:x="270" fg:w="4"/><text x="22.0944%" y="383.50"></text></g><g><title>memset_erms (2 samples, 0.16%)</title><rect x="22.0421%" y="357" width="0.1621%" height="15" fill="rgb(233,67,1)" fg:x="272" fg:w="2"/><text x="22.2564%" y="367.50"></text></g><g><title>__ip_finish_output (1 samples, 0.08%)</title><rect x="22.6094%" y="373" width="0.0810%" height="15" fill="rgb(252,12,27)" fg:x="279" fg:w="1"/><text x="22.8237%" y="383.50"></text></g><g><title>ipv4_mtu (1 samples, 0.08%)</title><rect x="22.6094%" y="357" width="0.0810%" height="15" fill="rgb(232,85,13)" fg:x="279" fg:w="1"/><text x="22.8237%" y="367.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="22.7715%" y="341" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="281" fg:w="1"/><text x="22.9858%" y="351.50"></text></g><g><title>ipv4_conntrack_defrag (2 samples, 0.16%)</title><rect x="22.8525%" y="341" width="0.1621%" height="15" fill="rgb(214,41,21)" fg:x="282" fg:w="2"/><text x="23.0668%" y="351.50"></text></g><g><title>ipv4_conntrack_local (1 samples, 0.08%)</title><rect x="23.0146%" y="341" width="0.0810%" height="15" fill="rgb(246,71,46)" fg:x="284" fg:w="1"/><text x="23.2289%" y="351.50"></text></g><g><title>hash_conntrack_raw (2 samples, 0.16%)</title><rect x="23.1767%" y="325" width="0.1621%" height="15" fill="rgb(225,176,52)" fg:x="286" fg:w="2"/><text x="23.3909%" y="335.50"></text></g><g><title>nf_conntrack_tcp_packet (3 samples, 0.24%)</title><rect x="23.3387%" y="325" width="0.2431%" height="15" fill="rgb(210,106,10)" fg:x="288" fg:w="3"/><text x="23.5530%" y="335.50"></text></g><g><title>nf_conntrack_in (7 samples, 0.57%)</title><rect x="23.0956%" y="341" width="0.5673%" height="15" fill="rgb(226,107,41)" fg:x="285" fg:w="7"/><text x="23.3099%" y="351.50"></text></g><g><title>nf_ct_get_tuple (1 samples, 0.08%)</title><rect x="23.5818%" y="325" width="0.0810%" height="15" fill="rgb(209,18,9)" fg:x="291" fg:w="1"/><text x="23.7961%" y="335.50"></text></g><g><title>nft_counter_eval (1 samples, 0.08%)</title><rect x="24.5543%" y="309" width="0.0810%" height="15" fill="rgb(223,144,0)" fg:x="303" fg:w="1"/><text x="24.7686%" y="319.50"></text></g><g><title>__ip_local_out (26 samples, 2.11%)</title><rect x="22.6904%" y="373" width="2.1070%" height="15" fill="rgb(211,146,35)" fg:x="280" fg:w="26"/><text x="22.9047%" y="383.50">__..</text></g><g><title>nf_hook_slow (26 samples, 2.11%)</title><rect x="22.6904%" y="357" width="2.1070%" height="15" fill="rgb(226,120,15)" fg:x="280" fg:w="26"/><text x="22.9047%" y="367.50">nf..</text></g><g><title>nft_do_chain_ipv4 (14 samples, 1.13%)</title><rect x="23.6629%" y="341" width="1.1345%" height="15" fill="rgb(228,67,49)" fg:x="292" fg:w="14"/><text x="23.8772%" y="351.50"></text></g><g><title>nft_do_chain (13 samples, 1.05%)</title><rect x="23.7439%" y="325" width="1.0535%" height="15" fill="rgb(233,182,32)" fg:x="293" fg:w="13"/><text x="23.9582%" y="335.50"></text></g><g><title>nft_match_eval (2 samples, 0.16%)</title><rect x="24.6353%" y="309" width="0.1621%" height="15" fill="rgb(224,30,5)" fg:x="304" fg:w="2"/><text x="24.8496%" y="319.50"></text></g><g><title>__sk_dst_check (1 samples, 0.08%)</title><rect x="24.7974%" y="373" width="0.0810%" height="15" fill="rgb(240,116,12)" fg:x="306" fg:w="1"/><text x="25.0117%" y="383.50"></text></g><g><title>pfifo_fast_dequeue (2 samples, 0.16%)</title><rect x="25.4457%" y="325" width="0.1621%" height="15" fill="rgb(208,20,32)" fg:x="314" fg:w="2"/><text x="25.6600%" y="335.50"></text></g><g><title>free_old_xmit_skbs (1 samples, 0.08%)</title><rect x="26.0130%" y="277" width="0.0810%" height="15" fill="rgb(235,178,6)" fg:x="321" fg:w="1"/><text x="26.2273%" y="287.50"></text></g><g><title>virtqueue_get_buf (1 samples, 0.08%)</title><rect x="26.0130%" y="261" width="0.0810%" height="15" fill="rgb(224,152,7)" fg:x="321" fg:w="1"/><text x="26.2273%" y="271.50"></text></g><g><title>virtqueue_add_outbuf (2 samples, 0.16%)</title><rect x="26.0940%" y="277" width="0.1621%" height="15" fill="rgb(207,208,9)" fg:x="322" fg:w="2"/><text x="26.3083%" y="287.50"></text></g><g><title>virtqueue_add_split (2 samples, 0.16%)</title><rect x="26.0940%" y="261" width="0.1621%" height="15" fill="rgb(238,41,16)" fg:x="322" fg:w="2"/><text x="26.3083%" y="271.50"></text></g><g><title>virtqueue_enable_cb_delayed (1 samples, 0.08%)</title><rect x="26.2561%" y="277" width="0.0810%" height="15" fill="rgb(234,151,20)" fg:x="324" fg:w="1"/><text x="26.4704%" y="287.50"></text></g><g><title>virtqueue_kick_prepare (3 samples, 0.24%)</title><rect x="26.3371%" y="277" width="0.2431%" height="15" fill="rgb(239,72,47)" fg:x="325" fg:w="3"/><text x="26.5514%" y="287.50"></text></g><g><title>dev_hard_start_xmit (35 samples, 2.84%)</title><rect x="25.6078%" y="309" width="2.8363%" height="15" fill="rgb(251,86,39)" fg:x="316" fg:w="35"/><text x="25.8221%" y="319.50">dev..</text></g><g><title>start_xmit (35 samples, 2.84%)</title><rect x="25.6078%" y="293" width="2.8363%" height="15" fill="rgb(211,140,13)" fg:x="316" fg:w="35"/><text x="25.8221%" y="303.50">sta..</text></g><g><title>virtqueue_notify (23 samples, 1.86%)</title><rect x="26.5802%" y="277" width="1.8639%" height="15" fill="rgb(219,119,18)" fg:x="328" fg:w="23"/><text x="26.7945%" y="287.50">v..</text></g><g><title>vp_notify (23 samples, 1.86%)</title><rect x="26.5802%" y="261" width="1.8639%" height="15" fill="rgb(230,193,37)" fg:x="328" fg:w="23"/><text x="26.7945%" y="271.50">v..</text></g><g><title>iowrite16 (23 samples, 1.86%)</title><rect x="26.5802%" y="245" width="1.8639%" height="15" fill="rgb(218,139,37)" fg:x="328" fg:w="23"/><text x="26.7945%" y="255.50">i..</text></g><g><title>__qdisc_run (40 samples, 3.24%)</title><rect x="25.3647%" y="341" width="3.2415%" height="15" fill="rgb(252,144,25)" fg:x="313" fg:w="40"/><text x="25.5790%" y="351.50">__qd..</text></g><g><title>sch_direct_xmit (37 samples, 3.00%)</title><rect x="25.6078%" y="325" width="2.9984%" height="15" fill="rgb(222,128,44)" fg:x="316" fg:w="37"/><text x="25.8221%" y="335.50">sch..</text></g><g><title>validate_xmit_skb_list (2 samples, 0.16%)</title><rect x="28.4441%" y="309" width="0.1621%" height="15" fill="rgb(254,174,52)" fg:x="351" fg:w="2"/><text x="28.6584%" y="319.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.16%)</title><rect x="28.4441%" y="293" width="0.1621%" height="15" fill="rgb(240,104,40)" fg:x="351" fg:w="2"/><text x="28.6584%" y="303.50"></text></g><g><title>netif_skb_features (1 samples, 0.08%)</title><rect x="28.5251%" y="277" width="0.0810%" height="15" fill="rgb(211,31,54)" fg:x="352" fg:w="1"/><text x="28.7394%" y="287.50"></text></g><g><title>ip_finish_output2 (48 samples, 3.89%)</title><rect x="24.8784%" y="373" width="3.8898%" height="15" fill="rgb(219,227,11)" fg:x="307" fg:w="48"/><text x="25.0927%" y="383.50">ip_fi..</text></g><g><title>__dev_queue_xmit (45 samples, 3.65%)</title><rect x="25.1216%" y="357" width="3.6467%" height="15" fill="rgb(232,116,37)" fg:x="310" fg:w="45"/><text x="25.3358%" y="367.50">__dev..</text></g><g><title>pfifo_fast_enqueue (2 samples, 0.16%)</title><rect x="28.6062%" y="341" width="0.1621%" height="15" fill="rgb(250,59,0)" fg:x="353" fg:w="2"/><text x="28.8204%" y="351.50"></text></g><g><title>ip_finish_output (3 samples, 0.24%)</title><rect x="28.7682%" y="373" width="0.2431%" height="15" fill="rgb(215,36,54)" fg:x="355" fg:w="3"/><text x="28.9825%" y="383.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (3 samples, 0.24%)</title><rect x="28.7682%" y="357" width="0.2431%" height="15" fill="rgb(227,127,27)" fg:x="355" fg:w="3"/><text x="28.9825%" y="367.50"></text></g><g><title>__ip_queue_xmit (83 samples, 6.73%)</title><rect x="22.4473%" y="389" width="6.7261%" height="15" fill="rgb(224,11,5)" fg:x="277" fg:w="83"/><text x="22.6616%" y="399.50">__ip_queue_..</text></g><g><title>ip_output (2 samples, 0.16%)</title><rect x="29.0113%" y="373" width="0.1621%" height="15" fill="rgb(213,11,33)" fg:x="358" fg:w="2"/><text x="29.2256%" y="383.50"></text></g><g><title>nf_hook_slow (2 samples, 0.16%)</title><rect x="29.0113%" y="357" width="0.1621%" height="15" fill="rgb(226,120,15)" fg:x="358" fg:w="2"/><text x="29.2256%" y="367.50"></text></g><g><title>nf_confirm (1 samples, 0.08%)</title><rect x="29.0924%" y="341" width="0.0810%" height="15" fill="rgb(207,203,10)" fg:x="359" fg:w="1"/><text x="29.3067%" y="351.50"></text></g><g><title>nf_ct_deliver_cached_events (1 samples, 0.08%)</title><rect x="29.0924%" y="325" width="0.0810%" height="15" fill="rgb(253,16,4)" fg:x="359" fg:w="1"/><text x="29.3067%" y="335.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="29.1734%" y="389" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="360" fg:w="1"/><text x="29.3877%" y="399.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="29.1734%" y="373" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="360" fg:w="1"/><text x="29.3877%" y="383.50"></text></g><g><title>ip_queue_xmit (1 samples, 0.08%)</title><rect x="29.2545%" y="389" width="0.0810%" height="15" fill="rgb(241,58,19)" fg:x="361" fg:w="1"/><text x="29.4687%" y="399.50"></text></g><g><title>__tcp_transmit_skb (90 samples, 7.29%)</title><rect x="22.2042%" y="405" width="7.2934%" height="15" fill="rgb(238,106,36)" fg:x="274" fg:w="90"/><text x="22.4185%" y="415.50">__tcp_transm..</text></g><g><title>tcp_established_options (2 samples, 0.16%)</title><rect x="29.3355%" y="389" width="0.1621%" height="15" fill="rgb(239,162,26)" fg:x="362" fg:w="2"/><text x="29.5498%" y="399.50"></text></g><g><title>kfree_skbmem (2 samples, 0.16%)</title><rect x="29.4976%" y="405" width="0.1621%" height="15" fill="rgb(253,13,25)" fg:x="364" fg:w="2"/><text x="29.7119%" y="415.50"></text></g><g><title>kmem_cache_free (6 samples, 0.49%)</title><rect x="29.6596%" y="405" width="0.4862%" height="15" fill="rgb(225,137,16)" fg:x="366" fg:w="6"/><text x="29.8739%" y="415.50"></text></g><g><title>lock_sock_nested (2 samples, 0.16%)</title><rect x="30.1459%" y="405" width="0.1621%" height="15" fill="rgb(207,134,26)" fg:x="372" fg:w="2"/><text x="30.3602%" y="415.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.08%)</title><rect x="30.2269%" y="389" width="0.0810%" height="15" fill="rgb(217,35,53)" fg:x="373" fg:w="1"/><text x="30.4412%" y="399.50"></text></g><g><title>release_sock (1 samples, 0.08%)</title><rect x="30.3079%" y="405" width="0.0810%" height="15" fill="rgb(217,78,19)" fg:x="374" fg:w="1"/><text x="30.5222%" y="415.50"></text></g><g><title>tcp_release_cb (1 samples, 0.08%)</title><rect x="30.3079%" y="389" width="0.0810%" height="15" fill="rgb(230,144,50)" fg:x="374" fg:w="1"/><text x="30.5222%" y="399.50"></text></g><g><title>copy_user_enhanced_fast_string (17 samples, 1.38%)</title><rect x="31.1183%" y="357" width="1.3776%" height="15" fill="rgb(254,4,9)" fg:x="384" fg:w="17"/><text x="31.3326%" y="367.50"></text></g><g><title>_copy_to_iter (19 samples, 1.54%)</title><rect x="31.0373%" y="373" width="1.5397%" height="15" fill="rgb(220,50,42)" fg:x="383" fg:w="19"/><text x="31.2516%" y="383.50">_..</text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="32.4959%" y="357" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="401" fg:w="1"/><text x="32.7102%" y="367.50"></text></g><g><title>skb_copy_datagram_iter (32 samples, 2.59%)</title><rect x="30.3890%" y="405" width="2.5932%" height="15" fill="rgb(241,149,22)" fg:x="375" fg:w="32"/><text x="30.6033%" y="415.50">skb..</text></g><g><title>__skb_datagram_iter (31 samples, 2.51%)</title><rect x="30.4700%" y="389" width="2.5122%" height="15" fill="rgb(248,96,51)" fg:x="376" fg:w="31"/><text x="30.6843%" y="399.50">__..</text></g><g><title>simple_copy_to_iter (5 samples, 0.41%)</title><rect x="32.5770%" y="373" width="0.4052%" height="15" fill="rgb(239,76,11)" fg:x="402" fg:w="5"/><text x="32.7913%" y="383.50"></text></g><g><title>__check_object_size (5 samples, 0.41%)</title><rect x="32.5770%" y="357" width="0.4052%" height="15" fill="rgb(218,1,22)" fg:x="402" fg:w="5"/><text x="32.7913%" y="367.50"></text></g><g><title>__virt_addr_valid (2 samples, 0.16%)</title><rect x="32.8201%" y="341" width="0.1621%" height="15" fill="rgb(216,204,49)" fg:x="405" fg:w="2"/><text x="33.0344%" y="351.50"></text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.08%)</title><rect x="32.9822%" y="405" width="0.0810%" height="15" fill="rgb(223,19,39)" fg:x="407" fg:w="1"/><text x="33.1965%" y="415.50"></text></g><g><title>inet_recvmsg (183 samples, 14.83%)</title><rect x="19.3679%" y="437" width="14.8298%" height="15" fill="rgb(247,19,13)" fg:x="239" fg:w="183"/><text x="19.5822%" y="447.50">inet_recvmsg</text></g><g><title>tcp_recvmsg (183 samples, 14.83%)</title><rect x="19.3679%" y="421" width="14.8298%" height="15" fill="rgb(228,39,8)" fg:x="239" fg:w="183"/><text x="19.5822%" y="431.50">tcp_recvmsg</text></g><g><title>tcp_rcv_space_adjust (14 samples, 1.13%)</title><rect x="33.0632%" y="405" width="1.1345%" height="15" fill="rgb(251,209,13)" fg:x="408" fg:w="14"/><text x="33.2775%" y="415.50"></text></g><g><title>tcp_mstamp_refresh (11 samples, 0.89%)</title><rect x="33.3063%" y="389" width="0.8914%" height="15" fill="rgb(229,63,29)" fg:x="411" fg:w="11"/><text x="33.5206%" y="399.50"></text></g><g><title>ktime_get (10 samples, 0.81%)</title><rect x="33.3874%" y="373" width="0.8104%" height="15" fill="rgb(226,51,13)" fg:x="412" fg:w="10"/><text x="33.6016%" y="383.50"></text></g><g><title>kvm_clock_get_cycles (5 samples, 0.41%)</title><rect x="33.7925%" y="357" width="0.4052%" height="15" fill="rgb(213,218,37)" fg:x="417" fg:w="5"/><text x="34.0068%" y="367.50"></text></g><g><title>pvclock_clocksource_read (4 samples, 0.32%)</title><rect x="33.8736%" y="341" width="0.3241%" height="15" fill="rgb(246,59,10)" fg:x="418" fg:w="4"/><text x="34.0879%" y="351.50"></text></g><g><title>aa_sk_perm (8 samples, 0.65%)</title><rect x="34.3598%" y="405" width="0.6483%" height="15" fill="rgb(235,5,54)" fg:x="424" fg:w="8"/><text x="34.5741%" y="415.50"></text></g><g><title>sock_recvmsg (12 samples, 0.97%)</title><rect x="34.1977%" y="437" width="0.9724%" height="15" fill="rgb(241,13,25)" fg:x="422" fg:w="12"/><text x="34.4120%" y="447.50"></text></g><g><title>security_socket_recvmsg (11 samples, 0.89%)</title><rect x="34.2788%" y="421" width="0.8914%" height="15" fill="rgb(251,47,32)" fg:x="423" fg:w="11"/><text x="34.4931%" y="431.50"></text></g><g><title>apparmor_socket_recvmsg (2 samples, 0.16%)</title><rect x="35.0081%" y="405" width="0.1621%" height="15" fill="rgb(235,212,26)" fg:x="432" fg:w="2"/><text x="35.2224%" y="415.50"></text></g><g><title>__x64_sys_recvfrom (198 samples, 16.05%)</title><rect x="19.2058%" y="469" width="16.0454%" height="15" fill="rgb(244,149,45)" fg:x="237" fg:w="198"/><text x="19.4201%" y="479.50">__x64_sys_recvfrom</text></g><g><title>__sys_recvfrom (196 samples, 15.88%)</title><rect x="19.3679%" y="453" width="15.8833%" height="15" fill="rgb(223,213,54)" fg:x="239" fg:w="196"/><text x="19.5822%" y="463.50">__sys_recvfrom</text></g><g><title>sockfd_lookup_light (1 samples, 0.08%)</title><rect x="35.1702%" y="437" width="0.0810%" height="15" fill="rgb(234,43,45)" fg:x="434" fg:w="1"/><text x="35.3845%" y="447.50"></text></g><g><title>do_syscall_64 (205 samples, 16.61%)</title><rect x="18.8817%" y="485" width="16.6126%" height="15" fill="rgb(220,74,14)" fg:x="233" fg:w="205"/><text x="19.0960%" y="495.50">do_syscall_64</text></g><g><title>syscall_enter_from_user_mode (3 samples, 0.24%)</title><rect x="35.2512%" y="469" width="0.2431%" height="15" fill="rgb(224,163,22)" fg:x="435" fg:w="3"/><text x="35.4655%" y="479.50"></text></g><g><title>srso_untrain_ret_alias (1 samples, 0.08%)</title><rect x="35.4943%" y="485" width="0.0810%" height="15" fill="rgb(207,47,31)" fg:x="438" fg:w="1"/><text x="35.7086%" y="495.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="35.8185%" y="453" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="442" fg:w="1"/><text x="36.0328%" y="463.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="35.8185%" y="437" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="442" fg:w="1"/><text x="36.0328%" y="447.50"></text></g><g><title>recv (235 samples, 19.04%)</title><rect x="17.0989%" y="533" width="19.0438%" height="15" fill="rgb(227,69,32)" fg:x="211" fg:w="235"/><text x="17.3132%" y="543.50">recv</text></g><g><title>__libc_recv (228 samples, 18.48%)</title><rect x="17.6661%" y="517" width="18.4765%" height="15" fill="rgb(249,36,48)" fg:x="218" fg:w="228"/><text x="17.8804%" y="527.50">__libc_recv</text></g><g><title>entry_SYSCALL_64_after_hwframe (214 samples, 17.34%)</title><rect x="18.8006%" y="501" width="17.3420%" height="15" fill="rgb(205,226,15)" fg:x="232" fg:w="214"/><text x="19.0149%" y="511.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.57%)</title><rect x="35.5754%" y="485" width="0.5673%" height="15" fill="rgb(215,101,28)" fg:x="439" fg:w="7"/><text x="35.7897%" y="495.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.49%)</title><rect x="35.6564%" y="469" width="0.4862%" height="15" fill="rgb(240,77,26)" fg:x="440" fg:w="6"/><text x="35.8707%" y="479.50"></text></g><g><title>fpregs_assert_state_consistent (3 samples, 0.24%)</title><rect x="35.8995%" y="453" width="0.2431%" height="15" fill="rgb(227,221,38)" fg:x="443" fg:w="3"/><text x="36.1138%" y="463.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.49%)</title><rect x="36.7099%" y="501" width="0.4862%" height="15" fill="rgb(247,113,52)" fg:x="453" fg:w="6"/><text x="36.9242%" y="511.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (19 samples, 1.54%)</title><rect x="36.1426%" y="533" width="1.5397%" height="15" fill="rgb(216,50,33)" fg:x="446" fg:w="19"/><text x="36.3569%" y="543.50">s..</text></g><g><title>memcpy (14 samples, 1.13%)</title><rect x="36.5478%" y="517" width="1.1345%" height="15" fill="rgb(232,135,4)" fg:x="451" fg:w="14"/><text x="36.7621%" y="527.50"></text></g><g><title>__asan_region_is_poisoned (6 samples, 0.49%)</title><rect x="37.1961%" y="501" width="0.4862%" height="15" fill="rgb(252,76,50)" fg:x="459" fg:w="6"/><text x="37.4104%" y="511.50"></text></g><g><title>__sanitizer::mem_is_zero (5 samples, 0.41%)</title><rect x="37.2771%" y="485" width="0.4052%" height="15" fill="rgb(245,148,37)" fg:x="460" fg:w="5"/><text x="37.4914%" y="495.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (4 samples, 0.32%)</title><rect x="37.8444%" y="517" width="0.3241%" height="15" fill="rgb(213,211,15)" fg:x="467" fg:w="4"/><text x="38.0587%" y="527.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.32%)</title><rect x="38.8979%" y="453" width="0.3241%" height="15" fill="rgb(247,113,52)" fg:x="480" fg:w="4"/><text x="39.1122%" y="463.50"></text></g><g><title>__asan::Allocator::Allocate (1 samples, 0.08%)</title><rect x="39.3841%" y="437" width="0.0810%" height="15" fill="rgb(251,118,48)" fg:x="486" fg:w="1"/><text x="39.5984%" y="447.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.08%)</title><rect x="39.3841%" y="421" width="0.0810%" height="15" fill="rgb(247,113,52)" fg:x="486" fg:w="1"/><text x="39.5984%" y="431.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="39.3841%" y="405" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="486" fg:w="1"/><text x="39.5984%" y="415.50"></text></g><g><title>__asan_region_is_poisoned (6 samples, 0.49%)</title><rect x="39.2220%" y="453" width="0.4862%" height="15" fill="rgb(252,76,50)" fg:x="484" fg:w="6"/><text x="39.4363%" y="463.50"></text></g><g><title>__sanitizer::mem_is_zero (3 samples, 0.24%)</title><rect x="39.4652%" y="437" width="0.2431%" height="15" fill="rgb(245,148,37)" fg:x="487" fg:w="3"/><text x="39.6794%" y="447.50"></text></g><g><title>memcpy (14 samples, 1.13%)</title><rect x="38.7358%" y="469" width="1.1345%" height="15" fill="rgb(232,135,4)" fg:x="478" fg:w="14"/><text x="38.9501%" y="479.50"></text></g><g><title>memcpy (2 samples, 0.16%)</title><rect x="39.7083%" y="453" width="0.1621%" height="15" fill="rgb(232,135,4)" fg:x="490" fg:w="2"/><text x="39.9226%" y="463.50"></text></g><g><title>__asan::GetMallocContextSize (1 samples, 0.08%)</title><rect x="40.2755%" y="453" width="0.0810%" height="15" fill="rgb(214,45,18)" fg:x="497" fg:w="1"/><text x="40.4898%" y="463.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="42.3825%" y="405" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="523" fg:w="1"/><text x="42.5968%" y="415.50"></text></g><g><title>__kvm_handle_async_pf (1 samples, 0.08%)</title><rect x="42.5446%" y="373" width="0.0810%" height="15" fill="rgb(236,45,5)" fg:x="525" fg:w="1"/><text x="42.7589%" y="383.50"></text></g><g><title>kvm_read_and_reset_apf_flags (1 samples, 0.08%)</title><rect x="42.5446%" y="357" width="0.0810%" height="15" fill="rgb(240,22,44)" fg:x="525" fg:w="1"/><text x="42.7589%" y="367.50"></text></g><g><title>_cond_resched (2 samples, 0.16%)</title><rect x="42.7877%" y="357" width="0.1621%" height="15" fill="rgb(240,228,18)" fg:x="528" fg:w="2"/><text x="43.0020%" y="367.50"></text></g><g><title>find_vma (2 samples, 0.16%)</title><rect x="42.9498%" y="357" width="0.1621%" height="15" fill="rgb(227,147,34)" fg:x="530" fg:w="2"/><text x="43.1640%" y="367.50"></text></g><g><title>vmacache_find (1 samples, 0.08%)</title><rect x="43.0308%" y="341" width="0.0810%" height="15" fill="rgb(248,72,26)" fg:x="531" fg:w="1"/><text x="43.2451%" y="351.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.08%)</title><rect x="43.5170%" y="341" width="0.0810%" height="15" fill="rgb(209,149,49)" fg:x="537" fg:w="1"/><text x="43.7313%" y="351.50"></text></g><g><title>__pte_alloc (1 samples, 0.08%)</title><rect x="43.5981%" y="341" width="0.0810%" height="15" fill="rgb(238,36,24)" fg:x="538" fg:w="1"/><text x="43.8123%" y="351.50"></text></g><g><title>pte_alloc_one (1 samples, 0.08%)</title><rect x="43.5981%" y="325" width="0.0810%" height="15" fill="rgb(240,162,31)" fg:x="538" fg:w="1"/><text x="43.8123%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.08%)</title><rect x="43.5981%" y="309" width="0.0810%" height="15" fill="rgb(245,49,10)" fg:x="538" fg:w="1"/><text x="43.8123%" y="319.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.08%)</title><rect x="43.5981%" y="293" width="0.0810%" height="15" fill="rgb(246,35,53)" fg:x="538" fg:w="1"/><text x="43.8123%" y="303.50"></text></g><g><title>prep_new_page (1 samples, 0.08%)</title><rect x="43.5981%" y="277" width="0.0810%" height="15" fill="rgb(220,94,29)" fg:x="538" fg:w="1"/><text x="43.8123%" y="287.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.08%)</title><rect x="43.5981%" y="261" width="0.0810%" height="15" fill="rgb(253,165,35)" fg:x="538" fg:w="1"/><text x="43.8123%" y="271.50"></text></g><g><title>clear_page_erms (1 samples, 0.08%)</title><rect x="43.5981%" y="245" width="0.0810%" height="15" fill="rgb(253,135,51)" fg:x="538" fg:w="1"/><text x="43.8123%" y="255.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="43.6791%" y="341" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="539" fg:w="1"/><text x="43.8934%" y="351.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="43.6791%" y="325" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="539" fg:w="1"/><text x="43.8934%" y="335.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.08%)</title><rect x="43.7601%" y="341" width="0.0810%" height="15" fill="rgb(225,195,37)" fg:x="540" fg:w="1"/><text x="43.9744%" y="351.50"></text></g><g><title>__inc_numa_state (2 samples, 0.16%)</title><rect x="44.5705%" y="293" width="0.1621%" height="15" fill="rgb(213,57,28)" fg:x="550" fg:w="2"/><text x="44.7848%" y="303.50"></text></g><g><title>__list_del_entry_valid (1 samples, 0.08%)</title><rect x="44.7326%" y="293" width="0.0810%" height="15" fill="rgb(224,110,12)" fg:x="552" fg:w="1"/><text x="44.9469%" y="303.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.24%)</title><rect x="44.9757%" y="277" width="0.2431%" height="15" fill="rgb(253,165,35)" fg:x="555" fg:w="3"/><text x="45.1900%" y="287.50"></text></g><g><title>clear_page_erms (2 samples, 0.16%)</title><rect x="45.0567%" y="261" width="0.1621%" height="15" fill="rgb(253,135,51)" fg:x="556" fg:w="2"/><text x="45.2710%" y="271.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="45.1378%" y="245" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="557" fg:w="1"/><text x="45.3520%" y="255.50"></text></g><g><title>kernel_poison_pages (1 samples, 0.08%)</title><rect x="45.2188%" y="277" width="0.0810%" height="15" fill="rgb(240,82,29)" fg:x="558" fg:w="1"/><text x="45.4331%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (13 samples, 1.05%)</title><rect x="44.3274%" y="325" width="1.0535%" height="15" fill="rgb(245,49,10)" fg:x="547" fg:w="13"/><text x="44.5417%" y="335.50"></text></g><g><title>get_page_from_freelist (11 samples, 0.89%)</title><rect x="44.4895%" y="309" width="0.8914%" height="15" fill="rgb(246,35,53)" fg:x="549" fg:w="11"/><text x="44.7038%" y="319.50"></text></g><g><title>prep_new_page (7 samples, 0.57%)</title><rect x="44.8136%" y="293" width="0.5673%" height="15" fill="rgb(220,94,29)" fg:x="553" fg:w="7"/><text x="45.0279%" y="303.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="45.2998%" y="277" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="559" fg:w="1"/><text x="45.5141%" y="287.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="45.3809%" y="325" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="560" fg:w="1"/><text x="45.5952%" y="335.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="45.3809%" y="309" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="560" fg:w="1"/><text x="45.5952%" y="319.50"></text></g><g><title>alloc_pages_vma (21 samples, 1.70%)</title><rect x="43.8412%" y="341" width="1.7018%" height="15" fill="rgb(242,79,46)" fg:x="541" fg:w="21"/><text x="44.0555%" y="351.50">a..</text></g><g><title>policy_node (1 samples, 0.08%)</title><rect x="45.4619%" y="325" width="0.0810%" height="15" fill="rgb(205,161,10)" fg:x="561" fg:w="1"/><text x="45.6762%" y="335.50"></text></g><g><title>cgroup_throttle_swaprate (2 samples, 0.16%)</title><rect x="45.5429%" y="341" width="0.1621%" height="15" fill="rgb(212,88,13)" fg:x="562" fg:w="2"/><text x="45.7572%" y="351.50"></text></g><g><title>lru_cache_add (2 samples, 0.16%)</title><rect x="45.7050%" y="341" width="0.1621%" height="15" fill="rgb(205,98,13)" fg:x="564" fg:w="2"/><text x="45.9193%" y="351.50"></text></g><g><title>pagevec_lru_move_fn (2 samples, 0.16%)</title><rect x="45.7050%" y="325" width="0.1621%" height="15" fill="rgb(220,168,32)" fg:x="564" fg:w="2"/><text x="45.9193%" y="335.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.08%)</title><rect x="45.7861%" y="309" width="0.0810%" height="15" fill="rgb(215,186,14)" fg:x="565" fg:w="1"/><text x="46.0003%" y="319.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.08%)</title><rect x="45.7861%" y="293" width="0.0810%" height="15" fill="rgb(240,209,16)" fg:x="565" fg:w="1"/><text x="46.0003%" y="303.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.08%)</title><rect x="45.7861%" y="277" width="0.0810%" height="15" fill="rgb(214,74,36)" fg:x="565" fg:w="1"/><text x="46.0003%" y="287.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.08%)</title><rect x="46.1102%" y="325" width="0.0810%" height="15" fill="rgb(232,222,48)" fg:x="569" fg:w="1"/><text x="46.3245%" y="335.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (1 samples, 0.08%)</title><rect x="46.1912%" y="325" width="0.0810%" height="15" fill="rgb(241,41,49)" fg:x="570" fg:w="1"/><text x="46.4055%" y="335.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.08%)</title><rect x="46.1912%" y="309" width="0.0810%" height="15" fill="rgb(209,149,49)" fg:x="570" fg:w="1"/><text x="46.4055%" y="319.50"></text></g><g><title>mem_cgroup_charge (7 samples, 0.57%)</title><rect x="45.8671%" y="341" width="0.5673%" height="15" fill="rgb(232,189,48)" fg:x="566" fg:w="7"/><text x="46.0814%" y="351.50"></text></g><g><title>try_charge (2 samples, 0.16%)</title><rect x="46.2723%" y="325" width="0.1621%" height="15" fill="rgb(208,116,22)" fg:x="571" fg:w="2"/><text x="46.4866%" y="335.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.08%)</title><rect x="46.3533%" y="309" width="0.0810%" height="15" fill="rgb(222,104,3)" fg:x="572" fg:w="1"/><text x="46.5676%" y="319.50"></text></g><g><title>propagate_protected_usage (1 samples, 0.08%)</title><rect x="46.3533%" y="293" width="0.0810%" height="15" fill="rgb(246,0,33)" fg:x="572" fg:w="1"/><text x="46.5676%" y="303.50"></text></g><g><title>do_user_addr_fault (50 samples, 4.05%)</title><rect x="42.6256%" y="373" width="4.0519%" height="15" fill="rgb(253,37,52)" fg:x="526" fg:w="50"/><text x="42.8399%" y="383.50">do_use..</text></g><g><title>handle_mm_fault (44 samples, 3.57%)</title><rect x="43.1118%" y="357" width="3.5656%" height="15" fill="rgb(247,31,49)" fg:x="532" fg:w="44"/><text x="43.3261%" y="367.50">handl..</text></g><g><title>page_add_new_anon_rmap (3 samples, 0.24%)</title><rect x="46.4344%" y="341" width="0.2431%" height="15" fill="rgb(242,29,16)" fg:x="573" fg:w="3"/><text x="46.6486%" y="351.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.08%)</title><rect x="46.5964%" y="325" width="0.0810%" height="15" fill="rgb(240,209,16)" fg:x="575" fg:w="1"/><text x="46.8107%" y="335.50"></text></g><g><title>irqentry_enter (1 samples, 0.08%)</title><rect x="46.6775%" y="373" width="0.0810%" height="15" fill="rgb(248,13,40)" fg:x="576" fg:w="1"/><text x="46.8918%" y="383.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="46.6775%" y="357" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="576" fg:w="1"/><text x="46.8918%" y="367.50"></text></g><g><title>asm_exc_page_fault (54 samples, 4.38%)</title><rect x="42.4635%" y="405" width="4.3760%" height="15" fill="rgb(208,26,13)" fg:x="524" fg:w="54"/><text x="42.6778%" y="415.50">asm_ex..</text></g><g><title>exc_page_fault (54 samples, 4.38%)</title><rect x="42.4635%" y="389" width="4.3760%" height="15" fill="rgb(216,51,29)" fg:x="524" fg:w="54"/><text x="42.6778%" y="399.50">exc_pa..</text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="46.7585%" y="373" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="577" fg:w="1"/><text x="46.9728%" y="383.50"></text></g><g><title>[libc-2.31.so] (67 samples, 5.43%)</title><rect x="41.4911%" y="421" width="5.4295%" height="15" fill="rgb(247,113,52)" fg:x="512" fg:w="67"/><text x="41.7054%" y="431.50">[libc-2...</text></g><g><title>error_return (1 samples, 0.08%)</title><rect x="46.8395%" y="405" width="0.0810%" height="15" fill="rgb(235,226,9)" fg:x="578" fg:w="1"/><text x="47.0538%" y="415.50"></text></g><g><title>__asan::GetCurrentThreadStats (2 samples, 0.16%)</title><rect x="46.9206%" y="421" width="0.1621%" height="15" fill="rgb(238,52,35)" fg:x="579" fg:w="2"/><text x="47.1349%" y="431.50"></text></g><g><title>__asan::GetCurrentThread (1 samples, 0.08%)</title><rect x="47.0016%" y="405" width="0.0810%" height="15" fill="rgb(239,81,14)" fg:x="580" fg:w="1"/><text x="47.2159%" y="415.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.08%)</title><rect x="47.0827%" y="421" width="0.0810%" height="15" fill="rgb(229,133,45)" fg:x="581" fg:w="1"/><text x="47.2969%" y="431.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.24%)</title><rect x="47.1637%" y="421" width="0.2431%" height="15" fill="rgb(229,107,3)" fg:x="582" fg:w="3"/><text x="47.3780%" y="431.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="48.1361%" y="229" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="594" fg:w="1"/><text x="48.3504%" y="239.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.41%)</title><rect x="47.9741%" y="277" width="0.4052%" height="15" fill="rgb(242,79,46)" fg:x="592" fg:w="5"/><text x="48.1884%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.41%)</title><rect x="47.9741%" y="261" width="0.4052%" height="15" fill="rgb(245,49,10)" fg:x="592" fg:w="5"/><text x="48.1884%" y="271.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.41%)</title><rect x="47.9741%" y="245" width="0.4052%" height="15" fill="rgb(246,35,53)" fg:x="592" fg:w="5"/><text x="48.1884%" y="255.50"></text></g><g><title>prep_new_page (2 samples, 0.16%)</title><rect x="48.2172%" y="229" width="0.1621%" height="15" fill="rgb(220,94,29)" fg:x="595" fg:w="2"/><text x="48.4315%" y="239.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.16%)</title><rect x="48.2172%" y="213" width="0.1621%" height="15" fill="rgb(253,165,35)" fg:x="595" fg:w="2"/><text x="48.4315%" y="223.50"></text></g><g><title>clear_page_erms (2 samples, 0.16%)</title><rect x="48.2172%" y="197" width="0.1621%" height="15" fill="rgb(253,135,51)" fg:x="595" fg:w="2"/><text x="48.4315%" y="207.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.81%)</title><rect x="47.6499%" y="357" width="0.8104%" height="15" fill="rgb(247,113,52)" fg:x="588" fg:w="10"/><text x="47.8642%" y="367.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.81%)</title><rect x="47.6499%" y="341" width="0.8104%" height="15" fill="rgb(208,26,13)" fg:x="588" fg:w="10"/><text x="47.8642%" y="351.50"></text></g><g><title>exc_page_fault (10 samples, 0.81%)</title><rect x="47.6499%" y="325" width="0.8104%" height="15" fill="rgb(216,51,29)" fg:x="588" fg:w="10"/><text x="47.8642%" y="335.50"></text></g><g><title>do_user_addr_fault (9 samples, 0.73%)</title><rect x="47.7310%" y="309" width="0.7293%" height="15" fill="rgb(253,37,52)" fg:x="589" fg:w="9"/><text x="47.9452%" y="319.50"></text></g><g><title>handle_mm_fault (8 samples, 0.65%)</title><rect x="47.8120%" y="293" width="0.6483%" height="15" fill="rgb(247,31,49)" fg:x="590" fg:w="8"/><text x="48.0263%" y="303.50"></text></g><g><title>lru_cache_add (1 samples, 0.08%)</title><rect x="48.3793%" y="277" width="0.0810%" height="15" fill="rgb(205,98,13)" fg:x="597" fg:w="1"/><text x="48.5935%" y="287.50"></text></g><g><title>__vma_adjust (1 samples, 0.08%)</title><rect x="48.7034%" y="213" width="0.0810%" height="15" fill="rgb(224,210,22)" fg:x="601" fg:w="1"/><text x="48.9177%" y="223.50"></text></g><g><title>vma_adjust_trans_huge (1 samples, 0.08%)</title><rect x="48.7034%" y="197" width="0.0810%" height="15" fill="rgb(247,61,27)" fg:x="601" fg:w="1"/><text x="48.9177%" y="207.50"></text></g><g><title>__split_vma (2 samples, 0.16%)</title><rect x="48.7034%" y="229" width="0.1621%" height="15" fill="rgb(231,148,17)" fg:x="601" fg:w="2"/><text x="48.9177%" y="239.50"></text></g><g><title>vm_area_dup (1 samples, 0.08%)</title><rect x="48.7844%" y="213" width="0.0810%" height="15" fill="rgb(241,106,19)" fg:x="602" fg:w="1"/><text x="48.9987%" y="223.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.08%)</title><rect x="48.7844%" y="197" width="0.0810%" height="15" fill="rgb(223,51,51)" fg:x="602" fg:w="1"/><text x="48.9987%" y="207.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.08%)</title><rect x="48.7844%" y="181" width="0.0810%" height="15" fill="rgb(212,11,50)" fg:x="602" fg:w="1"/><text x="48.9987%" y="191.50"></text></g><g><title>get_obj_cgroup_from_current (1 samples, 0.08%)</title><rect x="48.7844%" y="165" width="0.0810%" height="15" fill="rgb(224,141,13)" fg:x="602" fg:w="1"/><text x="48.9987%" y="175.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="48.7844%" y="149" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="602" fg:w="1"/><text x="48.9987%" y="159.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.08%)</title><rect x="48.8655%" y="229" width="0.0810%" height="15" fill="rgb(209,17,43)" fg:x="603" fg:w="1"/><text x="49.0798%" y="239.50"></text></g><g><title>__list_add_valid (1 samples, 0.08%)</title><rect x="48.9465%" y="149" width="0.0810%" height="15" fill="rgb(206,79,8)" fg:x="604" fg:w="1"/><text x="49.1608%" y="159.50"></text></g><g><title>lru_add_drain (2 samples, 0.16%)</title><rect x="48.9465%" y="213" width="0.1621%" height="15" fill="rgb(252,215,2)" fg:x="604" fg:w="2"/><text x="49.1608%" y="223.50"></text></g><g><title>lru_add_drain_cpu (2 samples, 0.16%)</title><rect x="48.9465%" y="197" width="0.1621%" height="15" fill="rgb(207,80,1)" fg:x="604" fg:w="2"/><text x="49.1608%" y="207.50"></text></g><g><title>pagevec_lru_move_fn (2 samples, 0.16%)</title><rect x="48.9465%" y="181" width="0.1621%" height="15" fill="rgb(220,168,32)" fg:x="604" fg:w="2"/><text x="49.1608%" y="191.50"></text></g><g><title>__pagevec_lru_add_fn (2 samples, 0.16%)</title><rect x="48.9465%" y="165" width="0.1621%" height="15" fill="rgb(215,186,14)" fg:x="604" fg:w="2"/><text x="49.1608%" y="175.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.08%)</title><rect x="49.0276%" y="149" width="0.0810%" height="15" fill="rgb(240,209,16)" fg:x="605" fg:w="1"/><text x="49.2418%" y="159.50"></text></g><g><title>__do_munmap (8 samples, 0.65%)</title><rect x="48.5413%" y="245" width="0.6483%" height="15" fill="rgb(225,34,24)" fg:x="599" fg:w="8"/><text x="48.7556%" y="255.50"></text></g><g><title>unmap_region (3 samples, 0.24%)</title><rect x="48.9465%" y="229" width="0.2431%" height="15" fill="rgb(215,221,10)" fg:x="604" fg:w="3"/><text x="49.1608%" y="239.50"></text></g><g><title>unmap_vmas (1 samples, 0.08%)</title><rect x="49.1086%" y="213" width="0.0810%" height="15" fill="rgb(216,135,47)" fg:x="606" fg:w="1"/><text x="49.3229%" y="223.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="49.1086%" y="197" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="606" fg:w="1"/><text x="49.3229%" y="207.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="49.1896%" y="181" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="607" fg:w="1"/><text x="49.4039%" y="191.50"></text></g><g><title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (24 samples, 1.94%)</title><rect x="47.4068%" y="421" width="1.9449%" height="15" fill="rgb(218,174,54)" fg:x="585" fg:w="24"/><text x="47.6211%" y="431.50">_..</text></g><g><title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (21 samples, 1.70%)</title><rect x="47.6499%" y="405" width="1.7018%" height="15" fill="rgb(241,35,21)" fg:x="588" fg:w="21"/><text x="47.8642%" y="415.50">_..</text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (21 samples, 1.70%)</title><rect x="47.6499%" y="389" width="1.7018%" height="15" fill="rgb(230,18,53)" fg:x="588" fg:w="21"/><text x="47.8642%" y="399.50">_..</text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (21 samples, 1.70%)</title><rect x="47.6499%" y="373" width="1.7018%" height="15" fill="rgb(210,154,38)" fg:x="588" fg:w="21"/><text x="47.8642%" y="383.50">_..</text></g><g><title>__sanitizer::MmapFixedImpl (11 samples, 0.89%)</title><rect x="48.4603%" y="357" width="0.8914%" height="15" fill="rgb(207,87,16)" fg:x="598" fg:w="11"/><text x="48.6746%" y="367.50"></text></g><g><title>__sanitizer::internal_mmap (11 samples, 0.89%)</title><rect x="48.4603%" y="341" width="0.8914%" height="15" fill="rgb(254,86,31)" fg:x="598" fg:w="11"/><text x="48.6746%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.89%)</title><rect x="48.4603%" y="325" width="0.8914%" height="15" fill="rgb(205,226,15)" fg:x="598" fg:w="11"/><text x="48.6746%" y="335.50"></text></g><g><title>do_syscall_64 (11 samples, 0.89%)</title><rect x="48.4603%" y="309" width="0.8914%" height="15" fill="rgb(220,74,14)" fg:x="598" fg:w="11"/><text x="48.6746%" y="319.50"></text></g><g><title>vm_mmap_pgoff (11 samples, 0.89%)</title><rect x="48.4603%" y="293" width="0.8914%" height="15" fill="rgb(226,196,1)" fg:x="598" fg:w="11"/><text x="48.6746%" y="303.50"></text></g><g><title>do_mmap (11 samples, 0.89%)</title><rect x="48.4603%" y="277" width="0.8914%" height="15" fill="rgb(228,25,27)" fg:x="598" fg:w="11"/><text x="48.6746%" y="287.50"></text></g><g><title>mmap_region (11 samples, 0.89%)</title><rect x="48.4603%" y="261" width="0.8914%" height="15" fill="rgb(233,57,38)" fg:x="598" fg:w="11"/><text x="48.6746%" y="271.50"></text></g><g><title>perf_event_mmap (2 samples, 0.16%)</title><rect x="49.1896%" y="245" width="0.1621%" height="15" fill="rgb(252,32,1)" fg:x="607" fg:w="2"/><text x="49.4039%" y="255.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.16%)</title><rect x="49.1896%" y="229" width="0.1621%" height="15" fill="rgb(241,203,1)" fg:x="607" fg:w="2"/><text x="49.4039%" y="239.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.16%)</title><rect x="49.1896%" y="213" width="0.1621%" height="15" fill="rgb(227,133,21)" fg:x="607" fg:w="2"/><text x="49.4039%" y="223.50"></text></g><g><title>perf_event_mmap_output (2 samples, 0.16%)</title><rect x="49.1896%" y="197" width="0.1621%" height="15" fill="rgb(225,127,18)" fg:x="607" fg:w="2"/><text x="49.4039%" y="207.50"></text></g><g><title>perf_output_copy (1 samples, 0.08%)</title><rect x="49.2707%" y="181" width="0.0810%" height="15" fill="rgb(250,195,20)" fg:x="608" fg:w="1"/><text x="49.4850%" y="191.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="49.2707%" y="165" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="608" fg:w="1"/><text x="49.4850%" y="175.50"></text></g><g><title>__sanitizer::RunMallocHooks (1 samples, 0.08%)</title><rect x="49.3517%" y="421" width="0.0810%" height="15" fill="rgb(250,71,11)" fg:x="609" fg:w="1"/><text x="49.5660%" y="431.50"></text></g><g><title>__sanitizer::StackDepotPut (7 samples, 0.57%)</title><rect x="49.4327%" y="421" width="0.5673%" height="15" fill="rgb(224,15,52)" fg:x="610" fg:w="7"/><text x="49.6470%" y="431.50"></text></g><g><title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (7 samples, 0.57%)</title><rect x="49.4327%" y="405" width="0.5673%" height="15" fill="rgb(235,106,26)" fg:x="610" fg:w="7"/><text x="49.6470%" y="415.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="50.0000%" y="389" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="617" fg:w="1"/><text x="50.2143%" y="399.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="50.0000%" y="373" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="617" fg:w="1"/><text x="50.2143%" y="383.50"></text></g><g><title>find_vma (2 samples, 0.16%)</title><rect x="50.0810%" y="373" width="0.1621%" height="15" fill="rgb(227,147,34)" fg:x="618" fg:w="2"/><text x="50.2953%" y="383.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.08%)</title><rect x="50.4862%" y="357" width="0.0810%" height="15" fill="rgb(209,149,49)" fg:x="623" fg:w="1"/><text x="50.7005%" y="367.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="50.6483%" y="293" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="625" fg:w="1"/><text x="50.8626%" y="303.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.24%)</title><rect x="50.5673%" y="341" width="0.2431%" height="15" fill="rgb(242,79,46)" fg:x="624" fg:w="3"/><text x="50.7815%" y="351.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.24%)</title><rect x="50.5673%" y="325" width="0.2431%" height="15" fill="rgb(245,49,10)" fg:x="624" fg:w="3"/><text x="50.7815%" y="335.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.16%)</title><rect x="50.6483%" y="309" width="0.1621%" height="15" fill="rgb(246,35,53)" fg:x="625" fg:w="2"/><text x="50.8626%" y="319.50"></text></g><g><title>prep_new_page (1 samples, 0.08%)</title><rect x="50.7293%" y="293" width="0.0810%" height="15" fill="rgb(220,94,29)" fg:x="626" fg:w="1"/><text x="50.9436%" y="303.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.08%)</title><rect x="50.7293%" y="277" width="0.0810%" height="15" fill="rgb(253,165,35)" fg:x="626" fg:w="1"/><text x="50.9436%" y="287.50"></text></g><g><title>clear_page_erms (1 samples, 0.08%)</title><rect x="50.7293%" y="261" width="0.0810%" height="15" fill="rgb(253,135,51)" fg:x="626" fg:w="1"/><text x="50.9436%" y="271.50"></text></g><g><title>lru_cache_add (1 samples, 0.08%)</title><rect x="50.8104%" y="341" width="0.0810%" height="15" fill="rgb(205,98,13)" fg:x="627" fg:w="1"/><text x="51.0247%" y="351.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.08%)</title><rect x="50.8104%" y="325" width="0.0810%" height="15" fill="rgb(220,168,32)" fg:x="627" fg:w="1"/><text x="51.0247%" y="335.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.08%)</title><rect x="50.8104%" y="309" width="0.0810%" height="15" fill="rgb(215,186,14)" fg:x="627" fg:w="1"/><text x="51.0247%" y="319.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.08%)</title><rect x="50.8914%" y="341" width="0.0810%" height="15" fill="rgb(232,189,48)" fg:x="628" fg:w="1"/><text x="51.1057%" y="351.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (1 samples, 0.08%)</title><rect x="50.8914%" y="325" width="0.0810%" height="15" fill="rgb(241,41,49)" fg:x="628" fg:w="1"/><text x="51.1057%" y="335.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.08%)</title><rect x="50.9724%" y="341" width="0.0810%" height="15" fill="rgb(242,29,16)" fg:x="629" fg:w="1"/><text x="51.1867%" y="351.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.08%)</title><rect x="50.9724%" y="325" width="0.0810%" height="15" fill="rgb(240,209,16)" fg:x="629" fg:w="1"/><text x="51.1867%" y="335.50"></text></g><g><title>exc_page_fault (14 samples, 1.13%)</title><rect x="50.0000%" y="405" width="1.1345%" height="15" fill="rgb(216,51,29)" fg:x="617" fg:w="14"/><text x="50.2143%" y="415.50"></text></g><g><title>do_user_addr_fault (13 samples, 1.05%)</title><rect x="50.0810%" y="389" width="1.0535%" height="15" fill="rgb(253,37,52)" fg:x="618" fg:w="13"/><text x="50.2953%" y="399.50"></text></g><g><title>handle_mm_fault (11 samples, 0.89%)</title><rect x="50.2431%" y="373" width="0.8914%" height="15" fill="rgb(247,31,49)" fg:x="620" fg:w="11"/><text x="50.4574%" y="383.50"></text></g><g><title>wp_page_copy (7 samples, 0.57%)</title><rect x="50.5673%" y="357" width="0.5673%" height="15" fill="rgb(231,223,9)" fg:x="624" fg:w="7"/><text x="50.7815%" y="367.50"></text></g><g><title>ptep_clear_flush (1 samples, 0.08%)</title><rect x="51.0535%" y="341" width="0.0810%" height="15" fill="rgb(210,44,11)" fg:x="630" fg:w="1"/><text x="51.2678%" y="351.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.08%)</title><rect x="51.0535%" y="325" width="0.0810%" height="15" fill="rgb(233,143,54)" fg:x="630" fg:w="1"/><text x="51.2678%" y="335.50"></text></g><g><title>flush_tlb_func_common.constprop.0 (1 samples, 0.08%)</title><rect x="51.0535%" y="309" width="0.0810%" height="15" fill="rgb(227,108,6)" fg:x="630" fg:w="1"/><text x="51.2678%" y="319.50"></text></g><g><title>__asan::asan_memalign (134 samples, 10.86%)</title><rect x="40.3566%" y="453" width="10.8590%" height="15" fill="rgb(248,206,7)" fg:x="498" fg:w="134"/><text x="40.5708%" y="463.50">__asan::asan_memali..</text></g><g><title>__asan::Allocator::Allocate (134 samples, 10.86%)</title><rect x="40.3566%" y="437" width="10.8590%" height="15" fill="rgb(251,118,48)" fg:x="498" fg:w="134"/><text x="40.5708%" y="447.50">__asan::Allocator::..</text></g><g><title>asm_exc_page_fault (15 samples, 1.22%)</title><rect x="50.0000%" y="421" width="1.2156%" height="15" fill="rgb(208,26,13)" fg:x="617" fg:w="15"/><text x="50.2143%" y="431.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.08%)</title><rect x="51.1345%" y="405" width="0.0810%" height="15" fill="rgb(229,166,35)" fg:x="631" fg:w="1"/><text x="51.3488%" y="415.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.08%)</title><rect x="51.1345%" y="389" width="0.0810%" height="15" fill="rgb(240,77,26)" fg:x="631" fg:w="1"/><text x="51.3488%" y="399.50"></text></g><g><title>__GI___pthread_getspecific (2 samples, 0.16%)</title><rect x="51.3776%" y="421" width="0.1621%" height="15" fill="rgb(238,82,10)" fg:x="634" fg:w="2"/><text x="51.5919%" y="431.50"></text></g><g><title>__asan::GetCurrentThread (5 samples, 0.41%)</title><rect x="51.2156%" y="437" width="0.4052%" height="15" fill="rgb(239,81,14)" fg:x="632" fg:w="5"/><text x="51.4298%" y="447.50"></text></g><g><title>__asan::AsanTSDGet (1 samples, 0.08%)</title><rect x="51.5397%" y="421" width="0.0810%" height="15" fill="rgb(206,96,24)" fg:x="636" fg:w="1"/><text x="51.7540%" y="431.50"></text></g><g><title>operator new (147 samples, 11.91%)</title><rect x="39.8703%" y="469" width="11.9125%" height="15" fill="rgb(214,91,1)" fg:x="492" fg:w="147"/><text x="40.0846%" y="479.50">operator new</text></g><g><title>__sanitizer::BufferedStackTrace::UnwindImpl (7 samples, 0.57%)</title><rect x="51.2156%" y="453" width="0.5673%" height="15" fill="rgb(237,1,53)" fg:x="632" fg:w="7"/><text x="51.4298%" y="463.50"></text></g><g><title>__sanitizer::BufferedStackTrace::UnwindFast (2 samples, 0.16%)</title><rect x="51.6207%" y="437" width="0.1621%" height="15" fill="rgb(240,14,30)" fg:x="637" fg:w="2"/><text x="51.8350%" y="447.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.08%)</title><rect x="51.7828%" y="469" width="0.0810%" height="15" fill="rgb(252,219,9)" fg:x="639" fg:w="1"/><text x="51.9971%" y="479.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (4 samples, 0.32%)</title><rect x="51.8639%" y="469" width="0.3241%" height="15" fill="rgb(237,198,2)" fg:x="640" fg:w="4"/><text x="52.0781%" y="479.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3 samples, 0.24%)</title><rect x="52.1880%" y="469" width="0.2431%" height="15" fill="rgb(254,6,25)" fg:x="644" fg:w="3"/><text x="52.4023%" y="479.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (179 samples, 14.51%)</title><rect x="38.1686%" y="517" width="14.5057%" height="15" fill="rgb(254,182,12)" fg:x="471" fg:w="179"/><text x="38.3828%" y="527.50">std::__cxx11::basic_string..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (178 samples, 14.42%)</title><rect x="38.2496%" y="501" width="14.4246%" height="15" fill="rgb(241,200,23)" fg:x="472" fg:w="178"/><text x="38.4639%" y="511.50">std::__cxx11::basic_string..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (176 samples, 14.26%)</title><rect x="38.4117%" y="485" width="14.2626%" height="15" fill="rgb(254,182,12)" fg:x="474" fg:w="176"/><text x="38.6260%" y="495.50">std::__cxx11::basic_string..</text></g><g><title>std::distance&lt;char*&gt; (3 samples, 0.24%)</title><rect x="52.4311%" y="469" width="0.2431%" height="15" fill="rgb(213,138,18)" fg:x="647" fg:w="3"/><text x="52.6454%" y="479.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt; (189 samples, 15.32%)</title><rect x="37.6823%" y="533" width="15.3160%" height="15" fill="rgb(217,84,11)" fg:x="465" fg:w="189"/><text x="37.8966%" y="543.50">std::__cxx11::basic_string&lt;c..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (4 samples, 0.32%)</title><rect x="52.6742%" y="517" width="0.3241%" height="15" fill="rgb(220,74,47)" fg:x="650" fg:w="4"/><text x="52.8885%" y="527.50"></text></g><g><title>AConnection::onPollIn (635 samples, 51.46%)</title><rect x="1.6207%" y="549" width="51.4587%" height="15" fill="rgb(238,25,4)" fg:x="20" fg:w="635"/><text x="1.8350%" y="559.50">AConnection::onPollIn</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.08%)</title><rect x="52.9984%" y="533" width="0.0810%" height="15" fill="rgb(216,41,4)" fg:x="654" fg:w="1"/><text x="53.2127%" y="543.50"></text></g><g><title>Config::processContext (1 samples, 0.08%)</title><rect x="53.0794%" y="533" width="0.0810%" height="15" fill="rgb(235,18,8)" fg:x="655" fg:w="1"/><text x="53.2937%" y="543.50"></text></g><g><title>Config::parseContext (1 samples, 0.08%)</title><rect x="53.0794%" y="517" width="0.0810%" height="15" fill="rgb(250,19,45)" fg:x="655" fg:w="1"/><text x="53.2937%" y="527.50"></text></g><g><title>Config::processInclude (1 samples, 0.08%)</title><rect x="53.0794%" y="501" width="0.0810%" height="15" fill="rgb(213,118,24)" fg:x="655" fg:w="1"/><text x="53.2937%" y="511.50"></text></g><g><title>Config::parseContext (1 samples, 0.08%)</title><rect x="53.0794%" y="485" width="0.0810%" height="15" fill="rgb(250,19,45)" fg:x="655" fg:w="1"/><text x="53.2937%" y="495.50"></text></g><g><title>Config::processContext (1 samples, 0.08%)</title><rect x="53.0794%" y="469" width="0.0810%" height="15" fill="rgb(235,18,8)" fg:x="655" fg:w="1"/><text x="53.2937%" y="479.50"></text></g><g><title>Config::parseContext (1 samples, 0.08%)</title><rect x="53.0794%" y="453" width="0.0810%" height="15" fill="rgb(250,19,45)" fg:x="655" fg:w="1"/><text x="53.2937%" y="463.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (1 samples, 0.08%)</title><rect x="53.0794%" y="437" width="0.0810%" height="15" fill="rgb(250,109,37)" fg:x="655" fg:w="1"/><text x="53.2937%" y="447.50"></text></g><g><title>Config::processContext (1 samples, 0.08%)</title><rect x="53.1605%" y="469" width="0.0810%" height="15" fill="rgb(235,18,8)" fg:x="656" fg:w="1"/><text x="53.3747%" y="479.50"></text></g><g><title>Context::addContext[abi:cxx11] (1 samples, 0.08%)</title><rect x="53.1605%" y="453" width="0.0810%" height="15" fill="rgb(252,88,46)" fg:x="656" fg:w="1"/><text x="53.3747%" y="463.50"></text></g><g><title>std::vector&lt;Context, std::allocator&lt;Context&gt; &gt;::push_back (1 samples, 0.08%)</title><rect x="53.1605%" y="437" width="0.0810%" height="15" fill="rgb(220,69,16)" fg:x="656" fg:w="1"/><text x="53.3747%" y="447.50"></text></g><g><title>std::vector&lt;Context, std::allocator&lt;Context&gt; &gt;::_M_realloc_insert (1 samples, 0.08%)</title><rect x="53.1605%" y="421" width="0.0810%" height="15" fill="rgb(218,226,44)" fg:x="656" fg:w="1"/><text x="53.3747%" y="431.50"></text></g><g><title>std::_Vector_base&lt;Context, std::allocator&lt;Context&gt; &gt;::_M_allocate (1 samples, 0.08%)</title><rect x="53.1605%" y="405" width="0.0810%" height="15" fill="rgb(205,184,24)" fg:x="656" fg:w="1"/><text x="53.3747%" y="415.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;Context&gt;, Context&gt;::allocate (1 samples, 0.08%)</title><rect x="53.1605%" y="389" width="0.0810%" height="15" fill="rgb(251,58,26)" fg:x="656" fg:w="1"/><text x="53.3747%" y="399.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;Context&gt;::allocate (1 samples, 0.08%)</title><rect x="53.1605%" y="373" width="0.0810%" height="15" fill="rgb(244,199,45)" fg:x="656" fg:w="1"/><text x="53.3747%" y="383.50"></text></g><g><title>operator new (1 samples, 0.08%)</title><rect x="53.1605%" y="357" width="0.0810%" height="15" fill="rgb(214,91,1)" fg:x="656" fg:w="1"/><text x="53.3747%" y="367.50"></text></g><g><title>__asan::asan_memalign (1 samples, 0.08%)</title><rect x="53.1605%" y="341" width="0.0810%" height="15" fill="rgb(248,206,7)" fg:x="656" fg:w="1"/><text x="53.3747%" y="351.50"></text></g><g><title>__asan::Allocator::Allocate (1 samples, 0.08%)</title><rect x="53.1605%" y="325" width="0.0810%" height="15" fill="rgb(251,118,48)" fg:x="656" fg:w="1"/><text x="53.3747%" y="335.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="53.1605%" y="309" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="656" fg:w="1"/><text x="53.3747%" y="319.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="53.1605%" y="293" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="656" fg:w="1"/><text x="53.3747%" y="303.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="53.1605%" y="277" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="656" fg:w="1"/><text x="53.3747%" y="287.50"></text></g><g><title>handle_mm_fault (1 samples, 0.08%)</title><rect x="53.1605%" y="261" width="0.0810%" height="15" fill="rgb(247,31,49)" fg:x="656" fg:w="1"/><text x="53.3747%" y="271.50"></text></g><g><title>wp_page_copy (1 samples, 0.08%)</title><rect x="53.1605%" y="245" width="0.0810%" height="15" fill="rgb(231,223,9)" fg:x="656" fg:w="1"/><text x="53.3747%" y="255.50"></text></g><g><title>ptep_clear_flush (1 samples, 0.08%)</title><rect x="53.1605%" y="229" width="0.0810%" height="15" fill="rgb(210,44,11)" fg:x="656" fg:w="1"/><text x="53.3747%" y="239.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.08%)</title><rect x="53.1605%" y="213" width="0.0810%" height="15" fill="rgb(233,143,54)" fg:x="656" fg:w="1"/><text x="53.3747%" y="223.50"></text></g><g><title>cpumask_any_but (1 samples, 0.08%)</title><rect x="53.1605%" y="197" width="0.0810%" height="15" fill="rgb(237,52,10)" fg:x="656" fg:w="1"/><text x="53.3747%" y="207.50"></text></g><g><title>Config::validArguments (1 samples, 0.08%)</title><rect x="53.2415%" y="469" width="0.0810%" height="15" fill="rgb(220,148,1)" fg:x="657" fg:w="1"/><text x="53.4558%" y="479.50"></text></g><g><title>isMimeType (1 samples, 0.08%)</title><rect x="53.2415%" y="453" width="0.0810%" height="15" fill="rgb(254,161,47)" fg:x="657" fg:w="1"/><text x="53.4558%" y="463.50"></text></g><g><title>isExtension (1 samples, 0.08%)</title><rect x="53.2415%" y="437" width="0.0810%" height="15" fill="rgb(253,26,38)" fg:x="657" fg:w="1"/><text x="53.4558%" y="447.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.08%)</title><rect x="53.2415%" y="421" width="0.0810%" height="15" fill="rgb(244,92,22)" fg:x="657" fg:w="1"/><text x="53.4558%" y="431.50"></text></g><g><title>strlen (1 samples, 0.08%)</title><rect x="53.2415%" y="405" width="0.0810%" height="15" fill="rgb(247,126,53)" fg:x="657" fg:w="1"/><text x="53.4558%" y="415.50"></text></g><g><title>__asan::QuickCheckForUnpoisonedRegion (1 samples, 0.08%)</title><rect x="53.2415%" y="389" width="0.0810%" height="15" fill="rgb(237,113,16)" fg:x="657" fg:w="1"/><text x="53.4558%" y="399.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (1 samples, 0.08%)</title><rect x="53.3225%" y="437" width="0.0810%" height="15" fill="rgb(252,100,30)" fg:x="658" fg:w="1"/><text x="53.5368%" y="447.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct (1 samples, 0.08%)</title><rect x="53.3225%" y="421" width="0.0810%" height="15" fill="rgb(228,211,21)" fg:x="658" fg:w="1"/><text x="53.5368%" y="431.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (1 samples, 0.08%)</title><rect x="53.3225%" y="405" width="0.0810%" height="15" fill="rgb(238,104,0)" fg:x="658" fg:w="1"/><text x="53.5368%" y="415.50"></text></g><g><title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.08%)</title><rect x="53.3225%" y="389" width="0.0810%" height="15" fill="rgb(253,109,20)" fg:x="658" fg:w="1"/><text x="53.5368%" y="399.50"></text></g><g><title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.08%)</title><rect x="53.3225%" y="373" width="0.0810%" height="15" fill="rgb(252,132,47)" fg:x="658" fg:w="1"/><text x="53.5368%" y="383.50"></text></g><g><title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.08%)</title><rect x="53.3225%" y="357" width="0.0810%" height="15" fill="rgb(210,190,6)" fg:x="658" fg:w="1"/><text x="53.5368%" y="367.50"></text></g><g><title>std::_Construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.08%)</title><rect x="53.3225%" y="341" width="0.0810%" height="15" fill="rgb(210,114,0)" fg:x="658" fg:w="1"/><text x="53.5368%" y="351.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.08%)</title><rect x="53.3225%" y="325" width="0.0810%" height="15" fill="rgb(254,182,12)" fg:x="658" fg:w="1"/><text x="53.5368%" y="335.50"></text></g><g><title>memcpy (1 samples, 0.08%)</title><rect x="53.3225%" y="309" width="0.0810%" height="15" fill="rgb(232,135,4)" fg:x="658" fg:w="1"/><text x="53.5368%" y="319.50"></text></g><g><title>__asan::QuickCheckForUnpoisonedRegion (1 samples, 0.08%)</title><rect x="53.3225%" y="293" width="0.0810%" height="15" fill="rgb(237,113,16)" fg:x="658" fg:w="1"/><text x="53.5368%" y="303.50"></text></g><g><title>Config::parseContext (5 samples, 0.41%)</title><rect x="53.0794%" y="549" width="0.4052%" height="15" fill="rgb(250,19,45)" fg:x="655" fg:w="5"/><text x="53.2937%" y="559.50"></text></g><g><title>Config::processInclude (4 samples, 0.32%)</title><rect x="53.1605%" y="533" width="0.3241%" height="15" fill="rgb(213,118,24)" fg:x="656" fg:w="4"/><text x="53.3747%" y="543.50"></text></g><g><title>Config::parseContext (4 samples, 0.32%)</title><rect x="53.1605%" y="517" width="0.3241%" height="15" fill="rgb(250,19,45)" fg:x="656" fg:w="4"/><text x="53.3747%" y="527.50"></text></g><g><title>Config::processContext (4 samples, 0.32%)</title><rect x="53.1605%" y="501" width="0.3241%" height="15" fill="rgb(235,18,8)" fg:x="656" fg:w="4"/><text x="53.3747%" y="511.50"></text></g><g><title>Config::parseContext (4 samples, 0.32%)</title><rect x="53.1605%" y="485" width="0.3241%" height="15" fill="rgb(250,19,45)" fg:x="656" fg:w="4"/><text x="53.3747%" y="495.50"></text></g><g><title>Context::addDirective (2 samples, 0.16%)</title><rect x="53.3225%" y="469" width="0.1621%" height="15" fill="rgb(230,87,12)" fg:x="658" fg:w="2"/><text x="53.5368%" y="479.50"></text></g><g><title>std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::push_back (2 samples, 0.16%)</title><rect x="53.3225%" y="453" width="0.1621%" height="15" fill="rgb(230,200,12)" fg:x="658" fg:w="2"/><text x="53.5368%" y="463.50"></text></g><g><title>std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_realloc_insert (1 samples, 0.08%)</title><rect x="53.4036%" y="437" width="0.0810%" height="15" fill="rgb(214,187,2)" fg:x="659" fg:w="1"/><text x="53.6179%" y="447.50"></text></g><g><title>std::_Vector_base&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_allocate (1 samples, 0.08%)</title><rect x="53.4036%" y="421" width="0.0810%" height="15" fill="rgb(248,15,18)" fg:x="659" fg:w="1"/><text x="53.6179%" y="431.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (1 samples, 0.08%)</title><rect x="53.4036%" y="405" width="0.0810%" height="15" fill="rgb(248,199,44)" fg:x="659" fg:w="1"/><text x="53.6179%" y="415.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (1 samples, 0.08%)</title><rect x="53.4036%" y="389" width="0.0810%" height="15" fill="rgb(244,139,20)" fg:x="659" fg:w="1"/><text x="53.6179%" y="399.50"></text></g><g><title>operator new (1 samples, 0.08%)</title><rect x="53.4036%" y="373" width="0.0810%" height="15" fill="rgb(214,91,1)" fg:x="659" fg:w="1"/><text x="53.6179%" y="383.50"></text></g><g><title>__asan::asan_memalign (1 samples, 0.08%)</title><rect x="53.4036%" y="357" width="0.0810%" height="15" fill="rgb(248,206,7)" fg:x="659" fg:w="1"/><text x="53.6179%" y="367.50"></text></g><g><title>__asan::Allocator::Allocate (1 samples, 0.08%)</title><rect x="53.4036%" y="341" width="0.0810%" height="15" fill="rgb(251,118,48)" fg:x="659" fg:w="1"/><text x="53.6179%" y="351.50"></text></g><g><title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1 samples, 0.08%)</title><rect x="53.4036%" y="325" width="0.0810%" height="15" fill="rgb(218,174,54)" fg:x="659" fg:w="1"/><text x="53.6179%" y="335.50"></text></g><g><title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1 samples, 0.08%)</title><rect x="53.4036%" y="309" width="0.0810%" height="15" fill="rgb(241,35,21)" fg:x="659" fg:w="1"/><text x="53.6179%" y="319.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (1 samples, 0.08%)</title><rect x="53.4036%" y="293" width="0.0810%" height="15" fill="rgb(230,18,53)" fg:x="659" fg:w="1"/><text x="53.6179%" y="303.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (1 samples, 0.08%)</title><rect x="53.4036%" y="277" width="0.0810%" height="15" fill="rgb(210,154,38)" fg:x="659" fg:w="1"/><text x="53.6179%" y="287.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.08%)</title><rect x="53.4036%" y="261" width="0.0810%" height="15" fill="rgb(247,113,52)" fg:x="659" fg:w="1"/><text x="53.6179%" y="271.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="53.4036%" y="245" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="659" fg:w="1"/><text x="53.6179%" y="255.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="53.4036%" y="229" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="659" fg:w="1"/><text x="53.6179%" y="239.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="53.4036%" y="213" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="659" fg:w="1"/><text x="53.6179%" y="223.50"></text></g><g><title>handle_mm_fault (1 samples, 0.08%)</title><rect x="53.4036%" y="197" width="0.0810%" height="15" fill="rgb(247,31,49)" fg:x="659" fg:w="1"/><text x="53.6179%" y="207.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.08%)</title><rect x="53.4036%" y="181" width="0.0810%" height="15" fill="rgb(209,111,19)" fg:x="659" fg:w="1"/><text x="53.6179%" y="191.50"></text></g><g><title>__libc_start_main (1 samples, 0.08%)</title><rect x="53.4846%" y="549" width="0.0810%" height="15" fill="rgb(211,91,2)" fg:x="660" fg:w="1"/><text x="53.6989%" y="559.50"></text></g><g><title>main (1 samples, 0.08%)</title><rect x="53.4846%" y="533" width="0.0810%" height="15" fill="rgb(238,28,47)" fg:x="660" fg:w="1"/><text x="53.6989%" y="543.50"></text></g><g><title>loadConfig (1 samples, 0.08%)</title><rect x="53.4846%" y="517" width="0.0810%" height="15" fill="rgb(216,190,24)" fg:x="660" fg:w="1"/><text x="53.6989%" y="527.50"></text></g><g><title>Config::parseContext (1 samples, 0.08%)</title><rect x="53.4846%" y="501" width="0.0810%" height="15" fill="rgb(250,19,45)" fg:x="660" fg:w="1"/><text x="53.6989%" y="511.50"></text></g><g><title>Config::processContext (1 samples, 0.08%)</title><rect x="53.4846%" y="485" width="0.0810%" height="15" fill="rgb(235,18,8)" fg:x="660" fg:w="1"/><text x="53.6989%" y="495.50"></text></g><g><title>Config::parseContext (1 samples, 0.08%)</title><rect x="53.4846%" y="469" width="0.0810%" height="15" fill="rgb(250,19,45)" fg:x="660" fg:w="1"/><text x="53.6989%" y="479.50"></text></g><g><title>Config::processInclude (1 samples, 0.08%)</title><rect x="53.4846%" y="453" width="0.0810%" height="15" fill="rgb(213,118,24)" fg:x="660" fg:w="1"/><text x="53.6989%" y="463.50"></text></g><g><title>Config::Config (1 samples, 0.08%)</title><rect x="53.4846%" y="437" width="0.0810%" height="15" fill="rgb(252,56,39)" fg:x="660" fg:w="1"/><text x="53.6989%" y="447.50"></text></g><g><title>std::ostream::operator&lt;&lt; (1 samples, 0.08%)</title><rect x="53.4846%" y="421" width="0.0810%" height="15" fill="rgb(222,101,50)" fg:x="660" fg:w="1"/><text x="53.6989%" y="431.50"></text></g><g><title>std::__copy_streambufs_eof&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.08%)</title><rect x="53.4846%" y="405" width="0.0810%" height="15" fill="rgb(225,53,15)" fg:x="660" fg:w="1"/><text x="53.6989%" y="415.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.08%)</title><rect x="53.4846%" y="389" width="0.0810%" height="15" fill="rgb(213,123,36)" fg:x="660" fg:w="1"/><text x="53.6989%" y="399.50"></text></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.08%)</title><rect x="53.4846%" y="373" width="0.0810%" height="15" fill="rgb(226,199,5)" fg:x="660" fg:w="1"/><text x="53.6989%" y="383.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.08%)</title><rect x="53.4846%" y="357" width="0.0810%" height="15" fill="rgb(211,92,40)" fg:x="660" fg:w="1"/><text x="53.6989%" y="367.50"></text></g><g><title>operator new (1 samples, 0.08%)</title><rect x="53.4846%" y="341" width="0.0810%" height="15" fill="rgb(214,91,1)" fg:x="660" fg:w="1"/><text x="53.6989%" y="351.50"></text></g><g><title>__asan::asan_memalign (1 samples, 0.08%)</title><rect x="53.4846%" y="325" width="0.0810%" height="15" fill="rgb(248,206,7)" fg:x="660" fg:w="1"/><text x="53.6989%" y="335.50"></text></g><g><title>__asan::Allocator::Allocate (1 samples, 0.08%)</title><rect x="53.4846%" y="309" width="0.0810%" height="15" fill="rgb(251,118,48)" fg:x="660" fg:w="1"/><text x="53.6989%" y="319.50"></text></g><g><title>__asan::RZSize2Log (1 samples, 0.08%)</title><rect x="53.4846%" y="293" width="0.0810%" height="15" fill="rgb(229,228,9)" fg:x="660" fg:w="1"/><text x="53.6989%" y="303.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.16%)</title><rect x="53.5656%" y="453" width="0.1621%" height="15" fill="rgb(247,113,52)" fg:x="661" fg:w="2"/><text x="53.7799%" y="463.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.16%)</title><rect x="53.5656%" y="437" width="0.1621%" height="15" fill="rgb(229,107,3)" fg:x="661" fg:w="2"/><text x="53.7799%" y="447.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.24%)</title><rect x="53.5656%" y="549" width="0.2431%" height="15" fill="rgb(254,182,12)" fg:x="661" fg:w="3"/><text x="53.7799%" y="559.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (3 samples, 0.24%)</title><rect x="53.5656%" y="533" width="0.2431%" height="15" fill="rgb(241,200,23)" fg:x="661" fg:w="3"/><text x="53.7799%" y="543.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.24%)</title><rect x="53.5656%" y="517" width="0.2431%" height="15" fill="rgb(254,182,12)" fg:x="661" fg:w="3"/><text x="53.7799%" y="527.50"></text></g><g><title>memcpy (3 samples, 0.24%)</title><rect x="53.5656%" y="501" width="0.2431%" height="15" fill="rgb(232,135,4)" fg:x="661" fg:w="3"/><text x="53.7799%" y="511.50"></text></g><g><title>__asan_region_is_poisoned (3 samples, 0.24%)</title><rect x="53.5656%" y="485" width="0.2431%" height="15" fill="rgb(252,76,50)" fg:x="661" fg:w="3"/><text x="53.7799%" y="495.50"></text></g><g><title>__asan::Allocator::Allocate (3 samples, 0.24%)</title><rect x="53.5656%" y="469" width="0.2431%" height="15" fill="rgb(251,118,48)" fg:x="661" fg:w="3"/><text x="53.7799%" y="479.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="53.7277%" y="453" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="663" fg:w="1"/><text x="53.9420%" y="463.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.32%)</title><rect x="53.8088%" y="453" width="0.3241%" height="15" fill="rgb(229,107,3)" fg:x="664" fg:w="4"/><text x="54.0230%" y="463.50"></text></g><g><title>[unknown] (649 samples, 52.59%)</title><rect x="1.6207%" y="565" width="52.5932%" height="15" fill="rgb(227,28,50)" fg:x="20" fg:w="649"/><text x="1.8350%" y="575.50">[unknown]</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (5 samples, 0.41%)</title><rect x="53.8088%" y="549" width="0.4052%" height="15" fill="rgb(241,200,23)" fg:x="664" fg:w="5"/><text x="54.0230%" y="559.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.41%)</title><rect x="53.8088%" y="533" width="0.4052%" height="15" fill="rgb(254,182,12)" fg:x="664" fg:w="5"/><text x="54.0230%" y="543.50"></text></g><g><title>memcpy (5 samples, 0.41%)</title><rect x="53.8088%" y="517" width="0.4052%" height="15" fill="rgb(232,135,4)" fg:x="664" fg:w="5"/><text x="54.0230%" y="527.50"></text></g><g><title>__asan_region_is_poisoned (5 samples, 0.41%)</title><rect x="53.8088%" y="501" width="0.4052%" height="15" fill="rgb(252,76,50)" fg:x="664" fg:w="5"/><text x="54.0230%" y="511.50"></text></g><g><title>__asan::Allocator::Allocate (5 samples, 0.41%)</title><rect x="53.8088%" y="485" width="0.4052%" height="15" fill="rgb(251,118,48)" fg:x="664" fg:w="5"/><text x="54.0230%" y="495.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.41%)</title><rect x="53.8088%" y="469" width="0.4052%" height="15" fill="rgb(247,113,52)" fg:x="664" fg:w="5"/><text x="54.0230%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.08%)</title><rect x="54.1329%" y="453" width="0.0810%" height="15" fill="rgb(234,224,53)" fg:x="668" fg:w="1"/><text x="54.3472%" y="463.50"></text></g><g><title>_GLOBAL__sub_I_ListenSocket.cpp (1 samples, 0.08%)</title><rect x="54.2139%" y="517" width="0.0810%" height="15" fill="rgb(213,215,40)" fg:x="669" fg:w="1"/><text x="54.4282%" y="527.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="54.2139%" y="501" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="669" fg:w="1"/><text x="54.4282%" y="511.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="54.2139%" y="485" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="669" fg:w="1"/><text x="54.4282%" y="495.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="54.2139%" y="469" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="669" fg:w="1"/><text x="54.4282%" y="479.50"></text></g><g><title>handle_mm_fault (1 samples, 0.08%)</title><rect x="54.2139%" y="453" width="0.0810%" height="15" fill="rgb(247,31,49)" fg:x="669" fg:w="1"/><text x="54.4282%" y="463.50"></text></g><g><title>filemap_map_pages (1 samples, 0.08%)</title><rect x="54.2139%" y="437" width="0.0810%" height="15" fill="rgb(240,96,12)" fg:x="669" fg:w="1"/><text x="54.4282%" y="447.50"></text></g><g><title>_GLOBAL__sub_I_Log.cpp (1 samples, 0.08%)</title><rect x="54.2950%" y="517" width="0.0810%" height="15" fill="rgb(254,183,8)" fg:x="670" fg:w="1"/><text x="54.5093%" y="527.50"></text></g><g><title>__cxx_global_var_init.1 (1 samples, 0.08%)</title><rect x="54.2950%" y="501" width="0.0810%" height="15" fill="rgb(217,183,11)" fg:x="670" fg:w="1"/><text x="54.5093%" y="511.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="54.2950%" y="485" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="670" fg:w="1"/><text x="54.5093%" y="495.50"></text></g><g><title>File::exists (1 samples, 0.08%)</title><rect x="54.3760%" y="453" width="0.0810%" height="15" fill="rgb(233,182,48)" fg:x="671" fg:w="1"/><text x="54.5903%" y="463.50"></text></g><g><title>__interceptor___xstat (1 samples, 0.08%)</title><rect x="54.3760%" y="437" width="0.0810%" height="15" fill="rgb(226,58,35)" fg:x="671" fg:w="1"/><text x="54.5903%" y="447.50"></text></g><g><title>__xstat64 (1 samples, 0.08%)</title><rect x="54.3760%" y="421" width="0.0810%" height="15" fill="rgb(220,214,18)" fg:x="671" fg:w="1"/><text x="54.5903%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="54.3760%" y="405" width="0.0810%" height="15" fill="rgb(205,226,15)" fg:x="671" fg:w="1"/><text x="54.5903%" y="415.50"></text></g><g><title>do_syscall_64 (1 samples, 0.08%)</title><rect x="54.3760%" y="389" width="0.0810%" height="15" fill="rgb(220,74,14)" fg:x="671" fg:w="1"/><text x="54.5903%" y="399.50"></text></g><g><title>__do_sys_newstat (1 samples, 0.08%)</title><rect x="54.3760%" y="373" width="0.0810%" height="15" fill="rgb(232,11,11)" fg:x="671" fg:w="1"/><text x="54.5903%" y="383.50"></text></g><g><title>vfs_statx (1 samples, 0.08%)</title><rect x="54.3760%" y="357" width="0.0810%" height="15" fill="rgb(253,80,28)" fg:x="671" fg:w="1"/><text x="54.5903%" y="367.50"></text></g><g><title>filename_lookup (1 samples, 0.08%)</title><rect x="54.3760%" y="341" width="0.0810%" height="15" fill="rgb(251,85,21)" fg:x="671" fg:w="1"/><text x="54.5903%" y="351.50"></text></g><g><title>path_lookupat (1 samples, 0.08%)</title><rect x="54.3760%" y="325" width="0.0810%" height="15" fill="rgb(214,118,26)" fg:x="671" fg:w="1"/><text x="54.5903%" y="335.50"></text></g><g><title>walk_component (1 samples, 0.08%)</title><rect x="54.3760%" y="309" width="0.0810%" height="15" fill="rgb(250,91,19)" fg:x="671" fg:w="1"/><text x="54.5903%" y="319.50"></text></g><g><title>__lookup_slow (1 samples, 0.08%)</title><rect x="54.3760%" y="293" width="0.0810%" height="15" fill="rgb(232,204,3)" fg:x="671" fg:w="1"/><text x="54.5903%" y="303.50"></text></g><g><title>ext4_lookup (1 samples, 0.08%)</title><rect x="54.3760%" y="277" width="0.0810%" height="15" fill="rgb(221,188,34)" fg:x="671" fg:w="1"/><text x="54.5903%" y="287.50"></text></g><g><title>__ext4_iget (1 samples, 0.08%)</title><rect x="54.3760%" y="261" width="0.0810%" height="15" fill="rgb(209,90,23)" fg:x="671" fg:w="1"/><text x="54.5903%" y="271.50"></text></g><g><title>__ext4_get_inode_loc_noinmem (1 samples, 0.08%)</title><rect x="54.3760%" y="245" width="0.0810%" height="15" fill="rgb(251,98,49)" fg:x="671" fg:w="1"/><text x="54.5903%" y="255.50"></text></g><g><title>__ext4_get_inode_loc (1 samples, 0.08%)</title><rect x="54.3760%" y="229" width="0.0810%" height="15" fill="rgb(231,98,31)" fg:x="671" fg:w="1"/><text x="54.5903%" y="239.50"></text></g><g><title>submit_bh_wbc (1 samples, 0.08%)</title><rect x="54.3760%" y="213" width="0.0810%" height="15" fill="rgb(237,132,36)" fg:x="671" fg:w="1"/><text x="54.5903%" y="223.50"></text></g><g><title>submit_bio_noacct (1 samples, 0.08%)</title><rect x="54.3760%" y="197" width="0.0810%" height="15" fill="rgb(227,152,33)" fg:x="671" fg:w="1"/><text x="54.5903%" y="207.50"></text></g><g><title>_GLOBAL__sub_I_global.cpp (2 samples, 0.16%)</title><rect x="54.3760%" y="517" width="0.1621%" height="15" fill="rgb(214,99,4)" fg:x="671" fg:w="2"/><text x="54.5903%" y="527.50"></text></g><g><title>__cxx_global_var_init.24 (2 samples, 0.16%)</title><rect x="54.3760%" y="501" width="0.1621%" height="15" fill="rgb(245,48,11)" fg:x="671" fg:w="2"/><text x="54.5903%" y="511.50"></text></g><g><title>Log::Log (2 samples, 0.16%)</title><rect x="54.3760%" y="485" width="0.1621%" height="15" fill="rgb(245,40,34)" fg:x="671" fg:w="2"/><text x="54.5903%" y="495.50"></text></g><g><title>File::createDirPath (2 samples, 0.16%)</title><rect x="54.3760%" y="469" width="0.1621%" height="15" fill="rgb(232,189,43)" fg:x="671" fg:w="2"/><text x="54.5903%" y="479.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.08%)</title><rect x="54.4571%" y="453" width="0.0810%" height="15" fill="rgb(217,130,49)" fg:x="672" fg:w="1"/><text x="54.6713%" y="463.50"></text></g><g><title>__interceptor_memchr (1 samples, 0.08%)</title><rect x="54.4571%" y="437" width="0.0810%" height="15" fill="rgb(236,71,13)" fg:x="672" fg:w="1"/><text x="54.6713%" y="447.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="54.4571%" y="421" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="672" fg:w="1"/><text x="54.6713%" y="431.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="54.4571%" y="405" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="672" fg:w="1"/><text x="54.6713%" y="415.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="54.4571%" y="389" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="672" fg:w="1"/><text x="54.6713%" y="399.50"></text></g><g><title>handle_mm_fault (1 samples, 0.08%)</title><rect x="54.4571%" y="373" width="0.0810%" height="15" fill="rgb(247,31,49)" fg:x="672" fg:w="1"/><text x="54.6713%" y="383.50"></text></g><g><title>__do_fault (1 samples, 0.08%)</title><rect x="54.4571%" y="357" width="0.0810%" height="15" fill="rgb(232,18,38)" fg:x="672" fg:w="1"/><text x="54.6713%" y="367.50"></text></g><g><title>ext4_filemap_fault (1 samples, 0.08%)</title><rect x="54.4571%" y="341" width="0.0810%" height="15" fill="rgb(217,134,15)" fg:x="672" fg:w="1"/><text x="54.6713%" y="351.50"></text></g><g><title>filemap_fault (1 samples, 0.08%)</title><rect x="54.4571%" y="325" width="0.0810%" height="15" fill="rgb(254,137,16)" fg:x="672" fg:w="1"/><text x="54.6713%" y="335.50"></text></g><g><title>page_cache_ra_unbounded (1 samples, 0.08%)</title><rect x="54.4571%" y="309" width="0.0810%" height="15" fill="rgb(243,13,49)" fg:x="672" fg:w="1"/><text x="54.6713%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.08%)</title><rect x="54.4571%" y="293" width="0.0810%" height="15" fill="rgb(245,49,10)" fg:x="672" fg:w="1"/><text x="54.6713%" y="303.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.08%)</title><rect x="54.4571%" y="277" width="0.0810%" height="15" fill="rgb(246,35,53)" fg:x="672" fg:w="1"/><text x="54.6713%" y="287.50"></text></g><g><title>prep_new_page (1 samples, 0.08%)</title><rect x="54.4571%" y="261" width="0.0810%" height="15" fill="rgb(220,94,29)" fg:x="672" fg:w="1"/><text x="54.6713%" y="271.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.08%)</title><rect x="54.4571%" y="245" width="0.0810%" height="15" fill="rgb(253,165,35)" fg:x="672" fg:w="1"/><text x="54.6713%" y="255.50"></text></g><g><title>clear_page_erms (1 samples, 0.08%)</title><rect x="54.4571%" y="229" width="0.0810%" height="15" fill="rgb(253,135,51)" fg:x="672" fg:w="1"/><text x="54.6713%" y="239.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.08%)</title><rect x="54.5381%" y="389" width="0.0810%" height="15" fill="rgb(221,18,6)" fg:x="673" fg:w="1"/><text x="54.7524%" y="399.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.08%)</title><rect x="54.5381%" y="373" width="0.0810%" height="15" fill="rgb(221,18,6)" fg:x="673" fg:w="1"/><text x="54.7524%" y="383.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.08%)</title><rect x="54.5381%" y="357" width="0.0810%" height="15" fill="rgb(221,18,6)" fg:x="673" fg:w="1"/><text x="54.7524%" y="367.50"></text></g><g><title>_GLOBAL__sub_I_main.cpp (2 samples, 0.16%)</title><rect x="54.5381%" y="517" width="0.1621%" height="15" fill="rgb(227,67,2)" fg:x="673" fg:w="2"/><text x="54.7524%" y="527.50"></text></g><g><title>__cxx_global_var_init (2 samples, 0.16%)</title><rect x="54.5381%" y="501" width="0.1621%" height="15" fill="rgb(244,206,27)" fg:x="673" fg:w="2"/><text x="54.7524%" y="511.50"></text></g><g><title>std::ios_base::Init::Init (2 samples, 0.16%)</title><rect x="54.5381%" y="485" width="0.1621%" height="15" fill="rgb(206,191,4)" fg:x="673" fg:w="2"/><text x="54.7524%" y="495.50"></text></g><g><title>std::locale::locale (2 samples, 0.16%)</title><rect x="54.5381%" y="469" width="0.1621%" height="15" fill="rgb(240,92,16)" fg:x="673" fg:w="2"/><text x="54.7524%" y="479.50"></text></g><g><title>[libstdc++.so.6.0.28] (2 samples, 0.16%)</title><rect x="54.5381%" y="453" width="0.1621%" height="15" fill="rgb(226,148,0)" fg:x="673" fg:w="2"/><text x="54.7524%" y="463.50"></text></g><g><title>__pthread_once_slow (2 samples, 0.16%)</title><rect x="54.5381%" y="437" width="0.1621%" height="15" fill="rgb(242,167,16)" fg:x="673" fg:w="2"/><text x="54.7524%" y="447.50"></text></g><g><title>[libstdc++.so.6.0.28] (2 samples, 0.16%)</title><rect x="54.5381%" y="421" width="0.1621%" height="15" fill="rgb(226,148,0)" fg:x="673" fg:w="2"/><text x="54.7524%" y="431.50"></text></g><g><title>std::locale::_Impl::_Impl (2 samples, 0.16%)</title><rect x="54.5381%" y="405" width="0.1621%" height="15" fill="rgb(215,9,42)" fg:x="673" fg:w="2"/><text x="54.7524%" y="415.50"></text></g><g><title>std::ctype&lt;wchar_t&gt;::_M_initialize_ctype (1 samples, 0.08%)</title><rect x="54.6191%" y="389" width="0.0810%" height="15" fill="rgb(227,94,39)" fg:x="674" fg:w="1"/><text x="54.8334%" y="399.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.08%)</title><rect x="54.6191%" y="373" width="0.0810%" height="15" fill="rgb(221,18,6)" fg:x="674" fg:w="1"/><text x="54.8334%" y="383.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.08%)</title><rect x="54.6191%" y="357" width="0.0810%" height="15" fill="rgb(221,18,6)" fg:x="674" fg:w="1"/><text x="54.8334%" y="367.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.08%)</title><rect x="54.6191%" y="341" width="0.0810%" height="15" fill="rgb(221,18,6)" fg:x="674" fg:w="1"/><text x="54.8334%" y="351.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.08%)</title><rect x="54.6191%" y="325" width="0.0810%" height="15" fill="rgb(221,18,6)" fg:x="674" fg:w="1"/><text x="54.8334%" y="335.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.08%)</title><rect x="54.6191%" y="309" width="0.0810%" height="15" fill="rgb(221,18,6)" fg:x="674" fg:w="1"/><text x="54.8334%" y="319.50"></text></g><g><title>find_vma (1 samples, 0.08%)</title><rect x="54.9433%" y="453" width="0.0810%" height="15" fill="rgb(227,147,34)" fg:x="678" fg:w="1"/><text x="55.1576%" y="463.50"></text></g><g><title>vmacache_find (1 samples, 0.08%)</title><rect x="54.9433%" y="437" width="0.0810%" height="15" fill="rgb(248,72,26)" fg:x="678" fg:w="1"/><text x="55.1576%" y="447.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.08%)</title><rect x="55.1053%" y="437" width="0.0810%" height="15" fill="rgb(209,149,49)" fg:x="680" fg:w="1"/><text x="55.3196%" y="447.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.08%)</title><rect x="55.2674%" y="373" width="0.0810%" height="15" fill="rgb(245,49,10)" fg:x="682" fg:w="1"/><text x="55.4817%" y="383.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.08%)</title><rect x="55.2674%" y="357" width="0.0810%" height="15" fill="rgb(246,35,53)" fg:x="682" fg:w="1"/><text x="55.4817%" y="367.50"></text></g><g><title>prep_new_page (1 samples, 0.08%)</title><rect x="55.2674%" y="341" width="0.0810%" height="15" fill="rgb(220,94,29)" fg:x="682" fg:w="1"/><text x="55.4817%" y="351.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.08%)</title><rect x="55.2674%" y="325" width="0.0810%" height="15" fill="rgb(253,165,35)" fg:x="682" fg:w="1"/><text x="55.4817%" y="335.50"></text></g><g><title>clear_page_erms (1 samples, 0.08%)</title><rect x="55.2674%" y="309" width="0.0810%" height="15" fill="rgb(253,135,51)" fg:x="682" fg:w="1"/><text x="55.4817%" y="319.50"></text></g><g><title>add_to_page_cache_lru (1 samples, 0.08%)</title><rect x="55.3485%" y="373" width="0.0810%" height="15" fill="rgb(223,55,45)" fg:x="683" fg:w="1"/><text x="55.5627%" y="383.50"></text></g><g><title>__add_to_page_cache_locked (1 samples, 0.08%)</title><rect x="55.3485%" y="357" width="0.0810%" height="15" fill="rgb(229,179,48)" fg:x="683" fg:w="1"/><text x="55.5627%" y="367.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.08%)</title><rect x="55.3485%" y="341" width="0.0810%" height="15" fill="rgb(232,189,48)" fg:x="683" fg:w="1"/><text x="55.5627%" y="351.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.08%)</title><rect x="55.3485%" y="325" width="0.0810%" height="15" fill="rgb(232,222,48)" fg:x="683" fg:w="1"/><text x="55.5627%" y="335.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="55.3485%" y="309" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="683" fg:w="1"/><text x="55.5627%" y="319.50"></text></g><g><title>__do_fault (4 samples, 0.32%)</title><rect x="55.1864%" y="437" width="0.3241%" height="15" fill="rgb(232,18,38)" fg:x="681" fg:w="4"/><text x="55.4007%" y="447.50"></text></g><g><title>ext4_filemap_fault (4 samples, 0.32%)</title><rect x="55.1864%" y="421" width="0.3241%" height="15" fill="rgb(217,134,15)" fg:x="681" fg:w="4"/><text x="55.4007%" y="431.50"></text></g><g><title>filemap_fault (4 samples, 0.32%)</title><rect x="55.1864%" y="405" width="0.3241%" height="15" fill="rgb(254,137,16)" fg:x="681" fg:w="4"/><text x="55.4007%" y="415.50"></text></g><g><title>page_cache_ra_unbounded (4 samples, 0.32%)</title><rect x="55.1864%" y="389" width="0.3241%" height="15" fill="rgb(243,13,49)" fg:x="681" fg:w="4"/><text x="55.4007%" y="399.50"></text></g><g><title>read_pages (1 samples, 0.08%)</title><rect x="55.4295%" y="373" width="0.0810%" height="15" fill="rgb(250,131,52)" fg:x="684" fg:w="1"/><text x="55.6438%" y="383.50"></text></g><g><title>ext4_mpage_readpages (1 samples, 0.08%)</title><rect x="55.4295%" y="357" width="0.0810%" height="15" fill="rgb(248,196,25)" fg:x="684" fg:w="1"/><text x="55.6438%" y="367.50"></text></g><g><title>submit_bio_noacct (1 samples, 0.08%)</title><rect x="55.4295%" y="341" width="0.0810%" height="15" fill="rgb(227,152,33)" fg:x="684" fg:w="1"/><text x="55.6438%" y="351.50"></text></g><g><title>blk_mq_submit_bio (1 samples, 0.08%)</title><rect x="55.4295%" y="325" width="0.0810%" height="15" fill="rgb(248,135,36)" fg:x="684" fg:w="1"/><text x="55.6438%" y="335.50"></text></g><g><title>__blk_queue_split (1 samples, 0.08%)</title><rect x="55.4295%" y="309" width="0.0810%" height="15" fill="rgb(216,170,39)" fg:x="684" fg:w="1"/><text x="55.6438%" y="319.50"></text></g><g><title>__libc_csu_init (17 samples, 1.38%)</title><rect x="54.2139%" y="533" width="1.3776%" height="15" fill="rgb(249,82,12)" fg:x="669" fg:w="17"/><text x="54.4282%" y="543.50"></text></g><g><title>asan.module_ctor (11 samples, 0.89%)</title><rect x="54.7002%" y="517" width="0.8914%" height="15" fill="rgb(210,107,37)" fg:x="675" fg:w="11"/><text x="54.9144%" y="527.50"></text></g><g><title>asm_exc_page_fault (8 samples, 0.65%)</title><rect x="54.9433%" y="501" width="0.6483%" height="15" fill="rgb(208,26,13)" fg:x="678" fg:w="8"/><text x="55.1576%" y="511.50"></text></g><g><title>exc_page_fault (8 samples, 0.65%)</title><rect x="54.9433%" y="485" width="0.6483%" height="15" fill="rgb(216,51,29)" fg:x="678" fg:w="8"/><text x="55.1576%" y="495.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.65%)</title><rect x="54.9433%" y="469" width="0.6483%" height="15" fill="rgb(253,37,52)" fg:x="678" fg:w="8"/><text x="55.1576%" y="479.50"></text></g><g><title>handle_mm_fault (7 samples, 0.57%)</title><rect x="55.0243%" y="453" width="0.5673%" height="15" fill="rgb(247,31,49)" fg:x="679" fg:w="7"/><text x="55.2386%" y="463.50"></text></g><g><title>mem_cgroup_from_task (1 samples, 0.08%)</title><rect x="55.5105%" y="437" width="0.0810%" height="15" fill="rgb(232,92,8)" fg:x="685" fg:w="1"/><text x="55.7248%" y="447.50"></text></g><g><title>Init::initMimeTypes (1 samples, 0.08%)</title><rect x="55.8347%" y="501" width="0.0810%" height="15" fill="rgb(208,152,48)" fg:x="689" fg:w="1"/><text x="56.0490%" y="511.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (1 samples, 0.08%)</title><rect x="55.8347%" y="485" width="0.0810%" height="15" fill="rgb(213,223,15)" fg:x="689" fg:w="1"/><text x="56.0490%" y="495.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::insert (1 samples, 0.08%)</title><rect x="55.8347%" y="469" width="0.0810%" height="15" fill="rgb(253,1,32)" fg:x="689" fg:w="1"/><text x="56.0490%" y="479.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_ (1 samples, 0.08%)</title><rect x="55.8347%" y="453" width="0.0810%" height="15" fill="rgb(229,182,52)" fg:x="689" fg:w="1"/><text x="56.0490%" y="463.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_unique_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.08%)</title><rect x="55.8347%" y="437" width="0.0810%" height="15" fill="rgb(227,197,36)" fg:x="689" fg:w="1"/><text x="56.0490%" y="447.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.08%)</title><rect x="55.8347%" y="421" width="0.0810%" height="15" fill="rgb(210,214,38)" fg:x="689" fg:w="1"/><text x="56.0490%" y="431.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (1 samples, 0.08%)</title><rect x="55.8347%" y="405" width="0.0810%" height="15" fill="rgb(249,156,9)" fg:x="689" fg:w="1"/><text x="56.0490%" y="415.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node (1 samples, 0.08%)</title><rect x="55.8347%" y="389" width="0.0810%" height="15" fill="rgb(223,17,51)" fg:x="689" fg:w="1"/><text x="56.0490%" y="399.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node (1 samples, 0.08%)</title><rect x="55.8347%" y="373" width="0.0810%" height="15" fill="rgb(241,70,20)" fg:x="689" fg:w="1"/><text x="56.0490%" y="383.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct (1 samples, 0.08%)</title><rect x="55.8347%" y="357" width="0.0810%" height="15" fill="rgb(253,150,38)" fg:x="689" fg:w="1"/><text x="56.0490%" y="367.50"></text></g><g><title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (1 samples, 0.08%)</title><rect x="55.8347%" y="341" width="0.0810%" height="15" fill="rgb(250,81,54)" fg:x="689" fg:w="1"/><text x="56.0490%" y="351.50"></text></g><g><title>Init::init (2 samples, 0.16%)</title><rect x="55.8347%" y="517" width="0.1621%" height="15" fill="rgb(209,120,41)" fg:x="689" fg:w="2"/><text x="56.0490%" y="527.50"></text></g><g><title>Init::initVirtualHosts (1 samples, 0.08%)</title><rect x="55.9157%" y="501" width="0.0810%" height="15" fill="rgb(239,50,52)" fg:x="690" fg:w="1"/><text x="56.1300%" y="511.50"></text></g><g><title>VirtualHost::add (1 samples, 0.08%)</title><rect x="55.9157%" y="485" width="0.0810%" height="15" fill="rgb(211,198,27)" fg:x="690" fg:w="1"/><text x="56.1300%" y="495.50"></text></g><g><title>std::vector&lt;VirtualHost, std::allocator&lt;VirtualHost&gt; &gt;::push_back (1 samples, 0.08%)</title><rect x="55.9157%" y="469" width="0.0810%" height="15" fill="rgb(225,29,26)" fg:x="690" fg:w="1"/><text x="56.1300%" y="479.50"></text></g><g><title>std::vector&lt;VirtualHost, std::allocator&lt;VirtualHost&gt; &gt;::_M_realloc_insert (1 samples, 0.08%)</title><rect x="55.9157%" y="453" width="0.0810%" height="15" fill="rgb(233,189,45)" fg:x="690" fg:w="1"/><text x="56.1300%" y="463.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;VirtualHost&gt;, VirtualHost&gt;::construct&lt;VirtualHost&gt; (1 samples, 0.08%)</title><rect x="55.9157%" y="437" width="0.0810%" height="15" fill="rgb(239,80,13)" fg:x="690" fg:w="1"/><text x="56.1300%" y="447.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;VirtualHost&gt;::construct (1 samples, 0.08%)</title><rect x="55.9157%" y="421" width="0.0810%" height="15" fill="rgb(237,58,23)" fg:x="690" fg:w="1"/><text x="56.1300%" y="431.50"></text></g><g><title>VirtualHost::VirtualHost (1 samples, 0.08%)</title><rect x="55.9157%" y="405" width="0.0810%" height="15" fill="rgb(211,93,32)" fg:x="690" fg:w="1"/><text x="56.1300%" y="415.50"></text></g><g><title>VirtualHost::operator= (1 samples, 0.08%)</title><rect x="55.9157%" y="389" width="0.0810%" height="15" fill="rgb(233,139,5)" fg:x="690" fg:w="1"/><text x="56.1300%" y="399.50"></text></g><g><title>Context::operator= (1 samples, 0.08%)</title><rect x="55.9157%" y="373" width="0.0810%" height="15" fill="rgb(252,209,34)" fg:x="690" fg:w="1"/><text x="56.1300%" y="383.50"></text></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::operator= (1 samples, 0.08%)</title><rect x="55.9157%" y="357" width="0.0810%" height="15" fill="rgb(237,194,8)" fg:x="690" fg:w="1"/><text x="56.1300%" y="367.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::operator= (1 samples, 0.08%)</title><rect x="55.9157%" y="341" width="0.0810%" height="15" fill="rgb(238,122,20)" fg:x="690" fg:w="1"/><text x="56.1300%" y="351.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_Reuse_or_alloc_node&gt; (1 samples, 0.08%)</title><rect x="55.9157%" y="325" width="0.0810%" height="15" fill="rgb(245,83,48)" fg:x="690" fg:w="1"/><text x="56.1300%" y="335.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_Reuse_or_alloc_node&gt; (1 samples, 0.08%)</title><rect x="55.9157%" y="309" width="0.0810%" height="15" fill="rgb(245,83,48)" fg:x="690" fg:w="1"/><text x="56.1300%" y="319.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_Reuse_or_alloc_node&gt; (1 samples, 0.08%)</title><rect x="55.9157%" y="293" width="0.0810%" height="15" fill="rgb(245,83,48)" fg:x="690" fg:w="1"/><text x="56.1300%" y="303.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_clone_node&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_Reuse_or_alloc_node&gt; (1 samples, 0.08%)</title><rect x="55.9157%" y="277" width="0.0810%" height="15" fill="rgb(239,218,9)" fg:x="690" fg:w="1"/><text x="56.1300%" y="287.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_Reuse_or_alloc_node::operator (1 samples, 0.08%)</title><rect x="55.9157%" y="261" width="0.0810%" height="15" fill="rgb(219,199,26)" fg:x="690" fg:w="1"/><text x="56.1300%" y="271.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_create_node (1 samples, 0.08%)</title><rect x="55.9157%" y="245" width="0.0810%" height="15" fill="rgb(239,100,50)" fg:x="690" fg:w="1"/><text x="56.1300%" y="255.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::_M_get_node (1 samples, 0.08%)</title><rect x="55.9157%" y="229" width="0.0810%" height="15" fill="rgb(228,219,42)" fg:x="690" fg:w="1"/><text x="56.1300%" y="239.50"></text></g><g><title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::allocate (1 samples, 0.08%)</title><rect x="55.9157%" y="213" width="0.0810%" height="15" fill="rgb(247,62,14)" fg:x="690" fg:w="1"/><text x="56.1300%" y="223.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt; &gt;::allocate (1 samples, 0.08%)</title><rect x="55.9157%" y="197" width="0.0810%" height="15" fill="rgb(253,106,39)" fg:x="690" fg:w="1"/><text x="56.1300%" y="207.50"></text></g><g><title>operator new (1 samples, 0.08%)</title><rect x="55.9157%" y="181" width="0.0810%" height="15" fill="rgb(214,91,1)" fg:x="690" fg:w="1"/><text x="56.1300%" y="191.50"></text></g><g><title>__asan::asan_memalign (1 samples, 0.08%)</title><rect x="55.9157%" y="165" width="0.0810%" height="15" fill="rgb(248,206,7)" fg:x="690" fg:w="1"/><text x="56.1300%" y="175.50"></text></g><g><title>__asan::Allocator::Allocate (1 samples, 0.08%)</title><rect x="55.9157%" y="149" width="0.0810%" height="15" fill="rgb(251,118,48)" fg:x="690" fg:w="1"/><text x="56.1300%" y="159.50"></text></g><g><title>__sanitizer::StackDepotPut (1 samples, 0.08%)</title><rect x="55.9157%" y="133" width="0.0810%" height="15" fill="rgb(224,15,52)" fg:x="690" fg:w="1"/><text x="56.1300%" y="143.50"></text></g><g><title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1 samples, 0.08%)</title><rect x="55.9157%" y="117" width="0.0810%" height="15" fill="rgb(235,106,26)" fg:x="690" fg:w="1"/><text x="56.1300%" y="127.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="55.9157%" y="101" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="690" fg:w="1"/><text x="56.1300%" y="111.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="55.9157%" y="85" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="690" fg:w="1"/><text x="56.1300%" y="95.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="55.9157%" y="69" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="690" fg:w="1"/><text x="56.1300%" y="79.50"></text></g><g><title>Poll::setTimeout (1 samples, 0.08%)</title><rect x="61.0211%" y="469" width="0.0810%" height="15" fill="rgb(227,76,18)" fg:x="753" fg:w="1"/><text x="61.2354%" y="479.50"></text></g><g><title>AConnection::onPollEvent (10 samples, 0.81%)</title><rect x="60.3728%" y="485" width="0.8104%" height="15" fill="rgb(240,200,10)" fg:x="745" fg:w="10"/><text x="60.5871%" y="495.50"></text></g><g><title>__vdso_gettimeofday (1 samples, 0.08%)</title><rect x="61.1021%" y="469" width="0.0810%" height="15" fill="rgb(246,114,18)" fg:x="754" fg:w="1"/><text x="61.3164%" y="479.50"></text></g><g><title>[[vdso]] (1 samples, 0.08%)</title><rect x="61.1021%" y="453" width="0.0810%" height="15" fill="rgb(229,169,17)" fg:x="754" fg:w="1"/><text x="61.3164%" y="463.50"></text></g><g><title>CallbackPointer::CallbackPointer (3 samples, 0.24%)</title><rect x="61.1831%" y="485" width="0.2431%" height="15" fill="rgb(246,133,48)" fg:x="755" fg:w="3"/><text x="61.3974%" y="495.50"></text></g><g><title>Address::Address (7 samples, 0.57%)</title><rect x="62.1556%" y="469" width="0.5673%" height="15" fill="rgb(231,26,17)" fg:x="767" fg:w="7"/><text x="62.3699%" y="479.50"></text></g><g><title>Address::~Address (1 samples, 0.08%)</title><rect x="62.7229%" y="469" width="0.0810%" height="15" fill="rgb(211,197,29)" fg:x="774" fg:w="1"/><text x="62.9371%" y="479.50"></text></g><g><title>Http::Http (1 samples, 0.08%)</title><rect x="62.8039%" y="469" width="0.0810%" height="15" fill="rgb(216,154,36)" fg:x="775" fg:w="1"/><text x="63.0182%" y="479.50"></text></g><g><title>operator delete (1 samples, 0.08%)</title><rect x="62.8039%" y="453" width="0.0810%" height="15" fill="rgb(249,165,17)" fg:x="775" fg:w="1"/><text x="63.0182%" y="463.50"></text></g><g><title>__asan::Allocator::QuarantineChunk (1 samples, 0.08%)</title><rect x="62.8039%" y="437" width="0.0810%" height="15" fill="rgb(236,101,31)" fg:x="775" fg:w="1"/><text x="63.0182%" y="447.50"></text></g><g><title>__sanitizer::StackDepotPut (1 samples, 0.08%)</title><rect x="62.8039%" y="421" width="0.0810%" height="15" fill="rgb(224,15,52)" fg:x="775" fg:w="1"/><text x="63.0182%" y="431.50"></text></g><g><title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1 samples, 0.08%)</title><rect x="62.8039%" y="405" width="0.0810%" height="15" fill="rgb(235,106,26)" fg:x="775" fg:w="1"/><text x="63.0182%" y="415.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.65%)</title><rect x="62.8849%" y="469" width="0.6483%" height="15" fill="rgb(247,113,52)" fg:x="776" fg:w="8"/><text x="63.0992%" y="479.50"></text></g><g><title>ListenSocket::onPollEvent (28 samples, 2.27%)</title><rect x="61.4263%" y="485" width="2.2690%" height="15" fill="rgb(234,106,36)" fg:x="758" fg:w="28"/><text x="61.6405%" y="495.50">Li..</text></g><g><title>__asan_set_shadow_00 (2 samples, 0.16%)</title><rect x="63.5332%" y="469" width="0.1621%" height="15" fill="rgb(220,180,9)" fg:x="784" fg:w="2"/><text x="63.7475%" y="479.50"></text></g><g><title>Poll::tryToAddNewElements (3 samples, 0.24%)</title><rect x="63.6953%" y="485" width="0.2431%" height="15" fill="rgb(241,105,43)" fg:x="786" fg:w="3"/><text x="63.9096%" y="495.50"></text></g><g><title>std::vector&lt;CallbackPointer, std::allocator&lt;CallbackPointer&gt; &gt;::operator[] (2 samples, 0.16%)</title><rect x="63.9384%" y="485" width="0.1621%" height="15" fill="rgb(217,106,48)" fg:x="789" fg:w="2"/><text x="64.1527%" y="495.50"></text></g><g><title>Poll::iterate (91 samples, 7.37%)</title><rect x="57.0502%" y="501" width="7.3744%" height="15" fill="rgb(241,227,18)" fg:x="704" fg:w="91"/><text x="57.2645%" y="511.50">Poll::iterate</text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::operator[] (4 samples, 0.32%)</title><rect x="64.1005%" y="485" width="0.3241%" height="15" fill="rgb(219,78,45)" fg:x="791" fg:w="4"/><text x="64.3148%" y="495.50"></text></g><g><title>__x64_sys_poll (1 samples, 0.08%)</title><rect x="64.8298%" y="469" width="0.0810%" height="15" fill="rgb(220,34,9)" fg:x="800" fg:w="1"/><text x="65.0441%" y="479.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="64.8298%" y="453" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="800" fg:w="1"/><text x="65.0441%" y="463.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.08%)</title><rect x="64.9109%" y="469" width="0.0810%" height="15" fill="rgb(206,213,41)" fg:x="801" fg:w="1"/><text x="65.1251%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.24%)</title><rect x="64.9919%" y="469" width="0.2431%" height="15" fill="rgb(234,224,53)" fg:x="802" fg:w="3"/><text x="65.2062%" y="479.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.16%)</title><rect x="65.3160%" y="453" width="0.1621%" height="15" fill="rgb(211,8,20)" fg:x="806" fg:w="2"/><text x="65.5303%" y="463.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.16%)</title><rect x="65.3160%" y="437" width="0.1621%" height="15" fill="rgb(210,87,27)" fg:x="806" fg:w="2"/><text x="65.5303%" y="447.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.16%)</title><rect x="66.5316%" y="421" width="0.1621%" height="15" fill="rgb(229,107,3)" fg:x="821" fg:w="2"/><text x="66.7459%" y="431.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="69.5300%" y="389" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="858" fg:w="1"/><text x="69.7443%" y="399.50"></text></g><g><title>__fget_light (15 samples, 1.22%)</title><rect x="68.4765%" y="405" width="1.2156%" height="15" fill="rgb(243,103,32)" fg:x="845" fg:w="15"/><text x="68.6908%" y="415.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.08%)</title><rect x="69.6110%" y="389" width="0.0810%" height="15" fill="rgb(248,227,45)" fg:x="859" fg:w="1"/><text x="69.8253%" y="399.50"></text></g><g><title>common_interrupt (1 samples, 0.08%)</title><rect x="69.6110%" y="373" width="0.0810%" height="15" fill="rgb(250,67,32)" fg:x="859" fg:w="1"/><text x="69.8253%" y="383.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.08%)</title><rect x="69.6110%" y="357" width="0.0810%" height="15" fill="rgb(240,18,12)" fg:x="859" fg:w="1"/><text x="69.8253%" y="367.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.08%)</title><rect x="69.6110%" y="341" width="0.0810%" height="15" fill="rgb(223,89,53)" fg:x="859" fg:w="1"/><text x="69.8253%" y="351.50"></text></g><g><title>asm_call_sysvec_on_stack (1 samples, 0.08%)</title><rect x="69.6110%" y="325" width="0.0810%" height="15" fill="rgb(208,184,36)" fg:x="859" fg:w="1"/><text x="69.8253%" y="335.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.08%)</title><rect x="69.6110%" y="309" width="0.0810%" height="15" fill="rgb(249,91,22)" fg:x="859" fg:w="1"/><text x="69.8253%" y="319.50"></text></g><g><title>net_rx_action (1 samples, 0.08%)</title><rect x="69.6110%" y="293" width="0.0810%" height="15" fill="rgb(231,11,52)" fg:x="859" fg:w="1"/><text x="69.8253%" y="303.50"></text></g><g><title>virtnet_poll_tx (1 samples, 0.08%)</title><rect x="69.6110%" y="277" width="0.0810%" height="15" fill="rgb(251,188,47)" fg:x="859" fg:w="1"/><text x="69.8253%" y="287.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="69.6921%" y="405" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="860" fg:w="1"/><text x="69.9063%" y="415.50"></text></g><g><title>_copy_from_user (3 samples, 0.24%)</title><rect x="69.7731%" y="405" width="0.2431%" height="15" fill="rgb(224,68,34)" fg:x="861" fg:w="3"/><text x="69.9874%" y="415.50"></text></g><g><title>_raw_spin_unlock_irqrestore (2 samples, 0.16%)</title><rect x="70.5835%" y="389" width="0.1621%" height="15" fill="rgb(216,183,20)" fg:x="871" fg:w="2"/><text x="70.7978%" y="399.50"></text></g><g><title>fput (2 samples, 0.16%)</title><rect x="70.7455%" y="389" width="0.1621%" height="15" fill="rgb(248,98,6)" fg:x="873" fg:w="2"/><text x="70.9598%" y="399.50"></text></g><g><title>fput_many (2 samples, 0.16%)</title><rect x="70.9076%" y="389" width="0.1621%" height="15" fill="rgb(223,66,3)" fg:x="875" fg:w="2"/><text x="71.1219%" y="399.50"></text></g><g><title>__list_del_entry_valid (1 samples, 0.08%)</title><rect x="71.5559%" y="373" width="0.0810%" height="15" fill="rgb(224,110,12)" fg:x="883" fg:w="1"/><text x="71.7702%" y="383.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="71.6370%" y="373" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="884" fg:w="1"/><text x="71.8512%" y="383.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="71.6370%" y="357" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="884" fg:w="1"/><text x="71.8512%" y="367.50"></text></g><g><title>poll_freewait (25 samples, 2.03%)</title><rect x="70.0162%" y="405" width="2.0259%" height="15" fill="rgb(240,0,18)" fg:x="864" fg:w="25"/><text x="70.2305%" y="415.50">po..</text></g><g><title>remove_wait_queue (12 samples, 0.97%)</title><rect x="71.0697%" y="389" width="0.9724%" height="15" fill="rgb(247,210,21)" fg:x="877" fg:w="12"/><text x="71.2840%" y="399.50"></text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.32%)</title><rect x="71.7180%" y="373" width="0.3241%" height="15" fill="rgb(206,213,41)" fg:x="885" fg:w="4"/><text x="71.9323%" y="383.50"></text></g><g><title>__hrtimer_init (5 samples, 0.41%)</title><rect x="72.1232%" y="373" width="0.4052%" height="15" fill="rgb(231,81,13)" fg:x="890" fg:w="5"/><text x="72.3375%" y="383.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="72.4473%" y="357" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="894" fg:w="1"/><text x="72.6616%" y="367.50"></text></g><g><title>hrtimer_init_sleeper (7 samples, 0.57%)</title><rect x="72.0421%" y="389" width="0.5673%" height="15" fill="rgb(224,203,45)" fg:x="889" fg:w="7"/><text x="72.2564%" y="399.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.08%)</title><rect x="72.5284%" y="373" width="0.0810%" height="15" fill="rgb(229,107,3)" fg:x="895" fg:w="1"/><text x="72.7426%" y="383.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.16%)</title><rect x="73.0956%" y="373" width="0.1621%" height="15" fill="rgb(206,213,41)" fg:x="902" fg:w="2"/><text x="73.3099%" y="383.50"></text></g><g><title>enqueue_hrtimer (6 samples, 0.49%)</title><rect x="73.2577%" y="373" width="0.4862%" height="15" fill="rgb(218,84,40)" fg:x="904" fg:w="6"/><text x="73.4720%" y="383.50"></text></g><g><title>timerqueue_add (6 samples, 0.49%)</title><rect x="73.2577%" y="357" width="0.4862%" height="15" fill="rgb(235,22,27)" fg:x="904" fg:w="6"/><text x="73.4720%" y="367.50"></text></g><g><title>hrtimer_start_range_ns (19 samples, 1.54%)</title><rect x="72.6094%" y="389" width="1.5397%" height="15" fill="rgb(231,227,51)" fg:x="896" fg:w="19"/><text x="72.8237%" y="399.50">h..</text></g><g><title>get_nohz_timer_target (5 samples, 0.41%)</title><rect x="73.7439%" y="373" width="0.4052%" height="15" fill="rgb(247,59,26)" fg:x="910" fg:w="5"/><text x="73.9582%" y="383.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.08%)</title><rect x="76.0130%" y="341" width="0.0810%" height="15" fill="rgb(225,195,37)" fg:x="938" fg:w="1"/><text x="76.2273%" y="351.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.16%)</title><rect x="76.0940%" y="309" width="0.1621%" height="15" fill="rgb(211,8,20)" fg:x="939" fg:w="2"/><text x="76.3083%" y="319.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.16%)</title><rect x="76.0940%" y="293" width="0.1621%" height="15" fill="rgb(210,87,27)" fg:x="939" fg:w="2"/><text x="76.3083%" y="303.50"></text></g><g><title>native_read_msr (49 samples, 3.97%)</title><rect x="76.2561%" y="309" width="3.9708%" height="15" fill="rgb(218,43,9)" fg:x="941" fg:w="49"/><text x="76.4704%" y="319.50">nativ..</text></g><g><title>amd_pmu_disable_all (68 samples, 5.51%)</title><rect x="76.0940%" y="341" width="5.5105%" height="15" fill="rgb(224,0,7)" fg:x="939" fg:w="68"/><text x="76.3083%" y="351.50">amd_pmu_..</text></g><g><title>x86_pmu_disable_all (68 samples, 5.51%)</title><rect x="76.0940%" y="325" width="5.5105%" height="15" fill="rgb(235,111,43)" fg:x="939" fg:w="68"/><text x="76.3083%" y="335.50">x86_pmu_..</text></g><g><title>native_write_msr (17 samples, 1.38%)</title><rect x="80.2269%" y="309" width="1.3776%" height="15" fill="rgb(220,53,36)" fg:x="990" fg:w="17"/><text x="80.4412%" y="319.50"></text></g><g><title>__perf_event_task_sched_out (76 samples, 6.16%)</title><rect x="75.5267%" y="357" width="6.1588%" height="15" fill="rgb(206,30,45)" fg:x="932" fg:w="76"/><text x="75.7410%" y="367.50">__perf_eve..</text></g><g><title>x86_pmu_disable (1 samples, 0.08%)</title><rect x="81.6045%" y="341" width="0.0810%" height="15" fill="rgb(240,6,49)" fg:x="1007" fg:w="1"/><text x="81.8188%" y="351.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.16%)</title><rect x="81.6856%" y="357" width="0.1621%" height="15" fill="rgb(211,8,20)" fg:x="1008" fg:w="2"/><text x="81.8999%" y="367.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.16%)</title><rect x="81.6856%" y="341" width="0.1621%" height="15" fill="rgb(210,87,27)" fg:x="1008" fg:w="2"/><text x="81.8999%" y="351.50"></text></g><g><title>clear_buddies (1 samples, 0.08%)</title><rect x="82.4959%" y="325" width="0.0810%" height="15" fill="rgb(218,15,54)" fg:x="1018" fg:w="1"/><text x="82.7102%" y="335.50"></text></g><g><title>update_cfs_group (1 samples, 0.08%)</title><rect x="82.5770%" y="325" width="0.0810%" height="15" fill="rgb(235,187,3)" fg:x="1019" fg:w="1"/><text x="82.7913%" y="335.50"></text></g><g><title>__cgroup_account_cputime (3 samples, 0.24%)</title><rect x="82.8201%" y="309" width="0.2431%" height="15" fill="rgb(222,47,19)" fg:x="1022" fg:w="3"/><text x="83.0344%" y="319.50"></text></g><g><title>update_curr (11 samples, 0.89%)</title><rect x="82.6580%" y="325" width="0.8914%" height="15" fill="rgb(242,65,24)" fg:x="1020" fg:w="11"/><text x="82.8723%" y="335.50"></text></g><g><title>cpuacct_charge (6 samples, 0.49%)</title><rect x="83.0632%" y="309" width="0.4862%" height="15" fill="rgb(217,144,43)" fg:x="1025" fg:w="6"/><text x="83.2775%" y="319.50"></text></g><g><title>dequeue_task_fair (25 samples, 2.03%)</title><rect x="81.8476%" y="357" width="2.0259%" height="15" fill="rgb(221,4,41)" fg:x="1010" fg:w="25"/><text x="82.0619%" y="367.50">de..</text></g><g><title>dequeue_entity (20 samples, 1.62%)</title><rect x="82.2528%" y="341" width="1.6207%" height="15" fill="rgb(217,209,51)" fg:x="1015" fg:w="20"/><text x="82.4671%" y="351.50">d..</text></g><g><title>update_load_avg (4 samples, 0.32%)</title><rect x="83.5494%" y="325" width="0.3241%" height="15" fill="rgb(222,111,24)" fg:x="1031" fg:w="4"/><text x="83.7637%" y="335.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.08%)</title><rect x="83.7925%" y="309" width="0.0810%" height="15" fill="rgb(206,162,20)" fg:x="1034" fg:w="1"/><text x="84.0068%" y="319.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.24%)</title><rect x="83.8736%" y="341" width="0.2431%" height="15" fill="rgb(229,107,3)" fg:x="1035" fg:w="3"/><text x="84.0879%" y="351.50"></text></g><g><title>__kfree_skb_flush (1 samples, 0.08%)</title><rect x="84.3598%" y="229" width="0.0810%" height="15" fill="rgb(245,1,6)" fg:x="1041" fg:w="1"/><text x="84.5741%" y="239.50"></text></g><g><title>kmem_cache_free_bulk (1 samples, 0.08%)</title><rect x="84.3598%" y="213" width="0.0810%" height="15" fill="rgb(249,162,6)" fg:x="1041" fg:w="1"/><text x="84.5741%" y="223.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="84.4408%" y="229" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="1042" fg:w="1"/><text x="84.6551%" y="239.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="84.4408%" y="213" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="1042" fg:w="1"/><text x="84.6551%" y="223.50"></text></g><g><title>virtnet_poll (1 samples, 0.08%)</title><rect x="84.5219%" y="229" width="0.0810%" height="15" fill="rgb(213,187,12)" fg:x="1043" fg:w="1"/><text x="84.7362%" y="239.50"></text></g><g><title>napi_complete_done (1 samples, 0.08%)</title><rect x="84.5219%" y="213" width="0.0810%" height="15" fill="rgb(226,216,13)" fg:x="1043" fg:w="1"/><text x="84.7362%" y="223.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.08%)</title><rect x="84.5219%" y="197" width="0.0810%" height="15" fill="rgb(216,153,44)" fg:x="1043" fg:w="1"/><text x="84.7362%" y="207.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.08%)</title><rect x="84.5219%" y="181" width="0.0810%" height="15" fill="rgb(227,176,26)" fg:x="1043" fg:w="1"/><text x="84.7362%" y="191.50"></text></g><g><title>ip_list_rcv (1 samples, 0.08%)</title><rect x="84.5219%" y="165" width="0.0810%" height="15" fill="rgb(215,38,16)" fg:x="1043" fg:w="1"/><text x="84.7362%" y="175.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.08%)</title><rect x="84.5219%" y="149" width="0.0810%" height="15" fill="rgb(207,166,9)" fg:x="1043" fg:w="1"/><text x="84.7362%" y="159.50"></text></g><g><title>nf_hook_slow_list (1 samples, 0.08%)</title><rect x="84.5219%" y="133" width="0.0810%" height="15" fill="rgb(214,147,8)" fg:x="1043" fg:w="1"/><text x="84.7362%" y="143.50"></text></g><g><title>nf_hook_slow (1 samples, 0.08%)</title><rect x="84.5219%" y="117" width="0.0810%" height="15" fill="rgb(226,120,15)" fg:x="1043" fg:w="1"/><text x="84.7362%" y="127.50"></text></g><g><title>nf_conntrack_in (1 samples, 0.08%)</title><rect x="84.5219%" y="101" width="0.0810%" height="15" fill="rgb(226,107,41)" fg:x="1043" fg:w="1"/><text x="84.7362%" y="111.50"></text></g><g><title>nf_ct_get_tuple (1 samples, 0.08%)</title><rect x="84.5219%" y="85" width="0.0810%" height="15" fill="rgb(209,18,9)" fg:x="1043" fg:w="1"/><text x="84.7362%" y="95.50"></text></g><g><title>nf_ct_get_tuple_ports (1 samples, 0.08%)</title><rect x="84.5219%" y="69" width="0.0810%" height="15" fill="rgb(240,25,10)" fg:x="1043" fg:w="1"/><text x="84.7362%" y="79.50"></text></g><g><title>kfree (1 samples, 0.08%)</title><rect x="84.6029%" y="181" width="0.0810%" height="15" fill="rgb(222,6,37)" fg:x="1044" fg:w="1"/><text x="84.8172%" y="191.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (1 samples, 0.08%)</title><rect x="84.6029%" y="165" width="0.0810%" height="15" fill="rgb(208,166,34)" fg:x="1044" fg:w="1"/><text x="84.8172%" y="175.50"></text></g><g><title>napi_consume_skb (4 samples, 0.32%)</title><rect x="84.6029%" y="197" width="0.3241%" height="15" fill="rgb(244,99,54)" fg:x="1044" fg:w="4"/><text x="84.8172%" y="207.50"></text></g><g><title>skb_release_data (3 samples, 0.24%)</title><rect x="84.6840%" y="181" width="0.2431%" height="15" fill="rgb(252,193,18)" fg:x="1045" fg:w="3"/><text x="84.8982%" y="191.50"></text></g><g><title>free_old_xmit_skbs (5 samples, 0.41%)</title><rect x="84.6029%" y="213" width="0.4052%" height="15" fill="rgb(235,178,6)" fg:x="1044" fg:w="5"/><text x="84.8172%" y="223.50"></text></g><g><title>virtqueue_get_buf_ctx_split (1 samples, 0.08%)</title><rect x="84.9271%" y="197" width="0.0810%" height="15" fill="rgb(235,34,35)" fg:x="1048" fg:w="1"/><text x="85.1414%" y="207.50"></text></g><g><title>detach_buf_split (1 samples, 0.08%)</title><rect x="84.9271%" y="181" width="0.0810%" height="15" fill="rgb(228,101,1)" fg:x="1048" fg:w="1"/><text x="85.1414%" y="191.50"></text></g><g><title>do_softirq_own_stack (11 samples, 0.89%)</title><rect x="84.1977%" y="293" width="0.8914%" height="15" fill="rgb(223,89,53)" fg:x="1039" fg:w="11"/><text x="84.4120%" y="303.50"></text></g><g><title>asm_call_sysvec_on_stack (11 samples, 0.89%)</title><rect x="84.1977%" y="277" width="0.8914%" height="15" fill="rgb(208,184,36)" fg:x="1039" fg:w="11"/><text x="84.4120%" y="287.50"></text></g><g><title>__softirqentry_text_start (11 samples, 0.89%)</title><rect x="84.1977%" y="261" width="0.8914%" height="15" fill="rgb(249,91,22)" fg:x="1039" fg:w="11"/><text x="84.4120%" y="271.50"></text></g><g><title>net_rx_action (11 samples, 0.89%)</title><rect x="84.1977%" y="245" width="0.8914%" height="15" fill="rgb(231,11,52)" fg:x="1039" fg:w="11"/><text x="84.4120%" y="255.50"></text></g><g><title>virtnet_poll_tx (6 samples, 0.49%)</title><rect x="84.6029%" y="229" width="0.4862%" height="15" fill="rgb(251,188,47)" fg:x="1044" fg:w="6"/><text x="84.8172%" y="239.50"></text></g><g><title>napi_complete_done (1 samples, 0.08%)</title><rect x="85.0081%" y="213" width="0.0810%" height="15" fill="rgb(226,216,13)" fg:x="1049" fg:w="1"/><text x="85.2224%" y="223.50"></text></g><g><title>finish_task_switch (16 samples, 1.30%)</title><rect x="83.8736%" y="357" width="1.2966%" height="15" fill="rgb(214,214,33)" fg:x="1035" fg:w="16"/><text x="84.0879%" y="367.50"></text></g><g><title>asm_common_interrupt (13 samples, 1.05%)</title><rect x="84.1167%" y="341" width="1.0535%" height="15" fill="rgb(248,227,45)" fg:x="1038" fg:w="13"/><text x="84.3310%" y="351.50"></text></g><g><title>common_interrupt (13 samples, 1.05%)</title><rect x="84.1167%" y="325" width="1.0535%" height="15" fill="rgb(250,67,32)" fg:x="1038" fg:w="13"/><text x="84.3310%" y="335.50"></text></g><g><title>irq_exit_rcu (13 samples, 1.05%)</title><rect x="84.1167%" y="309" width="1.0535%" height="15" fill="rgb(240,18,12)" fg:x="1038" fg:w="13"/><text x="84.3310%" y="319.50"></text></g><g><title>idle_cpu (1 samples, 0.08%)</title><rect x="85.0891%" y="293" width="0.0810%" height="15" fill="rgb(248,184,26)" fg:x="1050" fg:w="1"/><text x="85.3034%" y="303.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="85.1702%" y="341" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="1051" fg:w="1"/><text x="85.3845%" y="351.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="85.1702%" y="325" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="1051" fg:w="1"/><text x="85.3845%" y="335.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.32%)</title><rect x="85.1702%" y="357" width="0.3241%" height="15" fill="rgb(247,213,54)" fg:x="1051" fg:w="4"/><text x="85.3845%" y="367.50"></text></g><g><title>newidle_balance (3 samples, 0.24%)</title><rect x="85.2512%" y="341" width="0.2431%" height="15" fill="rgb(211,171,16)" fg:x="1052" fg:w="3"/><text x="85.4655%" y="351.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.16%)</title><rect x="88.1686%" y="293" width="0.1621%" height="15" fill="rgb(211,8,20)" fg:x="1088" fg:w="2"/><text x="88.3828%" y="303.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.16%)</title><rect x="88.1686%" y="277" width="0.1621%" height="15" fill="rgb(210,87,27)" fg:x="1088" fg:w="2"/><text x="88.3828%" y="287.50"></text></g><g><title>pvclock_clocksource_read (5 samples, 0.41%)</title><rect x="88.3306%" y="261" width="0.4052%" height="15" fill="rgb(246,59,10)" fg:x="1090" fg:w="5"/><text x="88.5449%" y="271.50"></text></g><g><title>psi_task_change (41 samples, 3.32%)</title><rect x="85.4943%" y="357" width="3.3225%" height="15" fill="rgb(214,87,45)" fg:x="1055" fg:w="41"/><text x="85.7086%" y="367.50">psi_..</text></g><g><title>psi_group_change (34 samples, 2.76%)</title><rect x="86.0616%" y="341" width="2.7553%" height="15" fill="rgb(214,74,3)" fg:x="1062" fg:w="34"/><text x="86.2759%" y="351.50">psi..</text></g><g><title>record_times (12 samples, 0.97%)</title><rect x="87.8444%" y="325" width="0.9724%" height="15" fill="rgb(235,137,9)" fg:x="1084" fg:w="12"/><text x="88.0587%" y="335.50"></text></g><g><title>sched_clock_cpu (9 samples, 0.73%)</title><rect x="88.0875%" y="309" width="0.7293%" height="15" fill="rgb(217,142,15)" fg:x="1087" fg:w="9"/><text x="88.3018%" y="319.50"></text></g><g><title>sched_clock (6 samples, 0.49%)</title><rect x="88.3306%" y="293" width="0.4862%" height="15" fill="rgb(234,150,37)" fg:x="1090" fg:w="6"/><text x="88.5449%" y="303.50"></text></g><g><title>kvm_sched_clock_read (6 samples, 0.49%)</title><rect x="88.3306%" y="277" width="0.4862%" height="15" fill="rgb(248,187,27)" fg:x="1090" fg:w="6"/><text x="88.5449%" y="287.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="88.7358%" y="261" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="1095" fg:w="1"/><text x="88.9501%" y="271.50"></text></g><g><title>put_prev_entity (5 samples, 0.41%)</title><rect x="88.9789%" y="341" width="0.4052%" height="15" fill="rgb(223,18,39)" fg:x="1098" fg:w="5"/><text x="89.1932%" y="351.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="89.3031%" y="325" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="1102" fg:w="1"/><text x="89.5174%" y="335.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="89.3031%" y="309" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="1102" fg:w="1"/><text x="89.5174%" y="319.50"></text></g><g><title>put_prev_task_fair (8 samples, 0.65%)</title><rect x="88.8169%" y="357" width="0.6483%" height="15" fill="rgb(217,100,33)" fg:x="1096" fg:w="8"/><text x="89.0311%" y="367.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="89.3841%" y="341" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="1103" fg:w="1"/><text x="89.5984%" y="351.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="89.4652%" y="357" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="1104" fg:w="1"/><text x="89.6794%" y="367.50"></text></g><g><title>schedule_hrtimeout_range_clock (224 samples, 18.15%)</title><rect x="72.0421%" y="405" width="18.1524%" height="15" fill="rgb(209,201,27)" fg:x="889" fg:w="224"/><text x="72.2564%" y="415.50">schedule_hrtimeout_range_clock</text></g><g><title>schedule (198 samples, 16.05%)</title><rect x="74.1491%" y="389" width="16.0454%" height="15" fill="rgb(213,215,35)" fg:x="915" fg:w="198"/><text x="74.3634%" y="399.50">schedule</text></g><g><title>__schedule (194 samples, 15.72%)</title><rect x="74.4733%" y="373" width="15.7212%" height="15" fill="rgb(207,40,26)" fg:x="919" fg:w="194"/><text x="74.6875%" y="383.50">__schedule</text></g><g><title>update_rq_clock (8 samples, 0.65%)</title><rect x="89.5462%" y="357" width="0.6483%" height="15" fill="rgb(248,207,48)" fg:x="1105" fg:w="8"/><text x="89.7605%" y="367.50"></text></g><g><title>sched_clock_cpu (5 samples, 0.41%)</title><rect x="89.7893%" y="341" width="0.4052%" height="15" fill="rgb(217,142,15)" fg:x="1108" fg:w="5"/><text x="90.0036%" y="351.50"></text></g><g><title>sched_clock (3 samples, 0.24%)</title><rect x="89.9514%" y="325" width="0.2431%" height="15" fill="rgb(234,150,37)" fg:x="1110" fg:w="3"/><text x="90.1657%" y="335.50"></text></g><g><title>kvm_sched_clock_read (3 samples, 0.24%)</title><rect x="89.9514%" y="309" width="0.2431%" height="15" fill="rgb(248,187,27)" fg:x="1110" fg:w="3"/><text x="90.1657%" y="319.50"></text></g><g><title>pvclock_clocksource_read (1 samples, 0.08%)</title><rect x="90.1135%" y="293" width="0.0810%" height="15" fill="rgb(246,59,10)" fg:x="1112" fg:w="1"/><text x="90.3277%" y="303.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.16%)</title><rect x="90.1945%" y="389" width="0.1621%" height="15" fill="rgb(229,107,3)" fg:x="1113" fg:w="2"/><text x="90.4088%" y="399.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="90.3566%" y="389" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="1115" fg:w="1"/><text x="90.5708%" y="399.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="90.3566%" y="373" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="1115" fg:w="1"/><text x="90.5708%" y="383.50"></text></g><g><title>select_estimate_accuracy (7 samples, 0.57%)</title><rect x="90.1945%" y="405" width="0.5673%" height="15" fill="rgb(219,208,33)" fg:x="1113" fg:w="7"/><text x="90.4088%" y="415.50"></text></g><g><title>ktime_get_ts64 (4 samples, 0.32%)</title><rect x="90.4376%" y="389" width="0.3241%" height="15" fill="rgb(212,111,10)" fg:x="1116" fg:w="4"/><text x="90.6519%" y="399.50"></text></g><g><title>kvm_clock_get_cycles (4 samples, 0.32%)</title><rect x="90.4376%" y="373" width="0.3241%" height="15" fill="rgb(213,218,37)" fg:x="1116" fg:w="4"/><text x="90.6519%" y="383.50"></text></g><g><title>pvclock_clocksource_read (4 samples, 0.32%)</title><rect x="90.4376%" y="357" width="0.3241%" height="15" fill="rgb(246,59,10)" fg:x="1116" fg:w="4"/><text x="90.6519%" y="367.50"></text></g><g><title>__irqentry_text_start (4 samples, 0.32%)</title><rect x="92.3015%" y="389" width="0.3241%" height="15" fill="rgb(229,107,3)" fg:x="1139" fg:w="4"/><text x="92.5157%" y="399.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.08%)</title><rect x="92.6256%" y="389" width="0.0810%" height="15" fill="rgb(248,227,45)" fg:x="1143" fg:w="1"/><text x="92.8399%" y="399.50"></text></g><g><title>common_interrupt (1 samples, 0.08%)</title><rect x="92.6256%" y="373" width="0.0810%" height="15" fill="rgb(250,67,32)" fg:x="1143" fg:w="1"/><text x="92.8399%" y="383.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.08%)</title><rect x="92.6256%" y="357" width="0.0810%" height="15" fill="rgb(240,18,12)" fg:x="1143" fg:w="1"/><text x="92.8399%" y="367.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.08%)</title><rect x="92.6256%" y="341" width="0.0810%" height="15" fill="rgb(223,89,53)" fg:x="1143" fg:w="1"/><text x="92.8399%" y="351.50"></text></g><g><title>asm_call_sysvec_on_stack (1 samples, 0.08%)</title><rect x="92.6256%" y="325" width="0.0810%" height="15" fill="rgb(208,184,36)" fg:x="1143" fg:w="1"/><text x="92.8399%" y="335.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.08%)</title><rect x="92.6256%" y="309" width="0.0810%" height="15" fill="rgb(249,91,22)" fg:x="1143" fg:w="1"/><text x="92.8399%" y="319.50"></text></g><g><title>net_rx_action (1 samples, 0.08%)</title><rect x="92.6256%" y="293" width="0.0810%" height="15" fill="rgb(231,11,52)" fg:x="1143" fg:w="1"/><text x="92.8399%" y="303.50"></text></g><g><title>virtnet_poll_tx (1 samples, 0.08%)</title><rect x="92.6256%" y="277" width="0.0810%" height="15" fill="rgb(251,188,47)" fg:x="1143" fg:w="1"/><text x="92.8399%" y="287.50"></text></g><g><title>free_old_xmit_skbs (1 samples, 0.08%)</title><rect x="92.6256%" y="261" width="0.0810%" height="15" fill="rgb(235,178,6)" fg:x="1143" fg:w="1"/><text x="92.8399%" y="271.50"></text></g><g><title>napi_consume_skb (1 samples, 0.08%)</title><rect x="92.6256%" y="245" width="0.0810%" height="15" fill="rgb(244,99,54)" fg:x="1143" fg:w="1"/><text x="92.8399%" y="255.50"></text></g><g><title>kfree (1 samples, 0.08%)</title><rect x="92.6256%" y="229" width="0.0810%" height="15" fill="rgb(222,6,37)" fg:x="1143" fg:w="1"/><text x="92.8399%" y="239.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (1 samples, 0.08%)</title><rect x="92.6256%" y="213" width="0.0810%" height="15" fill="rgb(208,166,34)" fg:x="1143" fg:w="1"/><text x="92.8399%" y="223.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.24%)</title><rect x="94.3274%" y="373" width="0.2431%" height="15" fill="rgb(229,107,3)" fg:x="1164" fg:w="3"/><text x="94.5417%" y="383.50"></text></g><g><title>__pollwait (9 samples, 0.73%)</title><rect x="94.5705%" y="373" width="0.7293%" height="15" fill="rgb(248,41,12)" fg:x="1167" fg:w="9"/><text x="94.7848%" y="383.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.16%)</title><rect x="95.1378%" y="357" width="0.1621%" height="15" fill="rgb(229,107,3)" fg:x="1174" fg:w="2"/><text x="95.3520%" y="367.50"></text></g><g><title>_raw_spin_unlock_irqrestore (2 samples, 0.16%)</title><rect x="95.2998%" y="373" width="0.1621%" height="15" fill="rgb(216,183,20)" fg:x="1176" fg:w="2"/><text x="95.5141%" y="383.50"></text></g><g><title>__list_add_valid (5 samples, 0.41%)</title><rect x="95.7861%" y="357" width="0.4052%" height="15" fill="rgb(206,79,8)" fg:x="1182" fg:w="5"/><text x="96.0003%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (5 samples, 0.41%)</title><rect x="96.1912%" y="357" width="0.4052%" height="15" fill="rgb(206,213,41)" fg:x="1187" fg:w="5"/><text x="96.4055%" y="367.50"></text></g><g><title>do_sys_poll (370 samples, 29.98%)</title><rect x="66.6937%" y="421" width="29.9838%" height="15" fill="rgb(246,108,27)" fg:x="823" fg:w="370"/><text x="66.9080%" y="431.50">do_sys_poll</text></g><g><title>sock_poll (73 samples, 5.92%)</title><rect x="90.7618%" y="405" width="5.9157%" height="15" fill="rgb(224,152,37)" fg:x="1120" fg:w="73"/><text x="90.9760%" y="415.50">sock_poll</text></g><g><title>tcp_poll (49 samples, 3.97%)</title><rect x="92.7066%" y="389" width="3.9708%" height="15" fill="rgb(233,143,3)" fg:x="1144" fg:w="49"/><text x="92.9209%" y="399.50">tcp_p..</text></g><g><title>add_wait_queue (15 samples, 1.22%)</title><rect x="95.4619%" y="373" width="1.2156%" height="15" fill="rgb(227,131,29)" fg:x="1178" fg:w="15"/><text x="95.6762%" y="383.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="96.5964%" y="357" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="1192" fg:w="1"/><text x="96.8107%" y="367.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="96.6775%" y="405" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="1193" fg:w="1"/><text x="96.8918%" y="415.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.16%)</title><rect x="97.3258%" y="389" width="0.1621%" height="15" fill="rgb(229,107,3)" fg:x="1201" fg:w="2"/><text x="97.5401%" y="399.50"></text></g><g><title>__x64_sys_poll (393 samples, 31.85%)</title><rect x="65.9643%" y="437" width="31.8476%" height="15" fill="rgb(220,34,9)" fg:x="814" fg:w="393"/><text x="66.1786%" y="447.50">__x64_sys_poll</text></g><g><title>poll_select_set_timeout (14 samples, 1.13%)</title><rect x="96.6775%" y="421" width="1.1345%" height="15" fill="rgb(216,174,36)" fg:x="1193" fg:w="14"/><text x="96.8918%" y="431.50"></text></g><g><title>ktime_get_ts64 (13 samples, 1.05%)</title><rect x="96.7585%" y="405" width="1.0535%" height="15" fill="rgb(212,111,10)" fg:x="1194" fg:w="13"/><text x="96.9728%" y="415.50"></text></g><g><title>kvm_clock_get_cycles (4 samples, 0.32%)</title><rect x="97.4878%" y="389" width="0.3241%" height="15" fill="rgb(213,218,37)" fg:x="1203" fg:w="4"/><text x="97.7021%" y="399.50"></text></g><g><title>pvclock_clocksource_read (1 samples, 0.08%)</title><rect x="97.7310%" y="373" width="0.0810%" height="15" fill="rgb(246,59,10)" fg:x="1206" fg:w="1"/><text x="97.9452%" y="383.50"></text></g><g><title>do_syscall_64 (400 samples, 32.41%)</title><rect x="65.4781%" y="453" width="32.4149%" height="15" fill="rgb(220,74,14)" fg:x="808" fg:w="400"/><text x="65.6924%" y="463.50">do_syscall_64</text></g><g><title>syscall_enter_from_user_mode (1 samples, 0.08%)</title><rect x="97.8120%" y="437" width="0.0810%" height="15" fill="rgb(224,163,22)" fg:x="1207" fg:w="1"/><text x="98.0263%" y="447.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.08%)</title><rect x="98.1361%" y="421" width="0.0810%" height="15" fill="rgb(211,8,20)" fg:x="1211" fg:w="1"/><text x="98.3504%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (411 samples, 33.31%)</title><rect x="65.2350%" y="469" width="33.3063%" height="15" fill="rgb(205,226,15)" fg:x="805" fg:w="411"/><text x="65.4493%" y="479.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>syscall_exit_to_user_mode (8 samples, 0.65%)</title><rect x="97.8930%" y="453" width="0.6483%" height="15" fill="rgb(215,101,28)" fg:x="1208" fg:w="8"/><text x="98.1073%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.49%)</title><rect x="98.0551%" y="437" width="0.4862%" height="15" fill="rgb(240,77,26)" fg:x="1210" fg:w="6"/><text x="98.2694%" y="447.50"></text></g><g><title>switch_fpu_return (4 samples, 0.32%)</title><rect x="98.2172%" y="421" width="0.3241%" height="15" fill="rgb(214,180,49)" fg:x="1212" fg:w="4"/><text x="98.4315%" y="431.50"></text></g><g><title>syscall_return_via_sysret (2 samples, 0.16%)</title><rect x="98.5413%" y="469" width="0.1621%" height="15" fill="rgb(230,222,6)" fg:x="1216" fg:w="2"/><text x="98.7556%" y="479.50"></text></g><g><title>__poll (420 samples, 34.04%)</title><rect x="64.7488%" y="485" width="34.0357%" height="15" fill="rgb(248,204,13)" fg:x="799" fg:w="420"/><text x="64.9631%" y="495.50">__poll</text></g><g><title>tcp_poll (1 samples, 0.08%)</title><rect x="98.7034%" y="469" width="0.0810%" height="15" fill="rgb(233,143,3)" fg:x="1218" fg:w="1"/><text x="98.9177%" y="479.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.08%)</title><rect x="98.7034%" y="453" width="0.0810%" height="15" fill="rgb(210,87,27)" fg:x="1218" fg:w="1"/><text x="98.9177%" y="463.50"></text></g><g><title>read_pollfd (3 samples, 0.24%)</title><rect x="98.7844%" y="485" width="0.2431%" height="15" fill="rgb(216,128,13)" fg:x="1219" fg:w="3"/><text x="98.9987%" y="495.50"></text></g><g><title>poll (429 samples, 34.76%)</title><rect x="64.4246%" y="501" width="34.7650%" height="15" fill="rgb(233,125,31)" fg:x="795" fg:w="429"/><text x="64.6389%" y="511.50">poll</text></g><g><title>write_pollfd (2 samples, 0.16%)</title><rect x="99.0276%" y="485" width="0.1621%" height="15" fill="rgb(249,176,48)" fg:x="1222" fg:w="2"/><text x="99.2418%" y="495.50"></text></g><g><title>Poll::poll (534 samples, 43.27%)</title><rect x="55.9968%" y="517" width="43.2739%" height="15" fill="rgb(241,47,17)" fg:x="691" fg:w="534"/><text x="56.2110%" y="527.50">Poll::poll</text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::size (1 samples, 0.08%)</title><rect x="99.1896%" y="501" width="0.0810%" height="15" fill="rgb(240,137,7)" fg:x="1224" fg:w="1"/><text x="99.4039%" y="511.50"></text></g><g><title>Config::getConfig[abi:cxx11] (1 samples, 0.08%)</title><rect x="99.2707%" y="501" width="0.0810%" height="15" fill="rgb(237,222,52)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="511.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.08%)</title><rect x="99.2707%" y="485" width="0.0810%" height="15" fill="rgb(254,182,12)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="495.50"></text></g><g><title>operator new (1 samples, 0.08%)</title><rect x="99.2707%" y="469" width="0.0810%" height="15" fill="rgb(214,91,1)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="479.50"></text></g><g><title>__asan::asan_memalign (1 samples, 0.08%)</title><rect x="99.2707%" y="453" width="0.0810%" height="15" fill="rgb(248,206,7)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="463.50"></text></g><g><title>__asan::Allocator::Allocate (1 samples, 0.08%)</title><rect x="99.2707%" y="437" width="0.0810%" height="15" fill="rgb(251,118,48)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="447.50"></text></g><g><title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1 samples, 0.08%)</title><rect x="99.2707%" y="421" width="0.0810%" height="15" fill="rgb(218,174,54)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="431.50"></text></g><g><title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1 samples, 0.08%)</title><rect x="99.2707%" y="405" width="0.0810%" height="15" fill="rgb(241,35,21)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="415.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (1 samples, 0.08%)</title><rect x="99.2707%" y="389" width="0.0810%" height="15" fill="rgb(230,18,53)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="399.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (1 samples, 0.08%)</title><rect x="99.2707%" y="373" width="0.0810%" height="15" fill="rgb(210,154,38)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="383.50"></text></g><g><title>__sanitizer::MmapFixedImpl (1 samples, 0.08%)</title><rect x="99.2707%" y="357" width="0.0810%" height="15" fill="rgb(207,87,16)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="367.50"></text></g><g><title>__sanitizer::internal_mmap (1 samples, 0.08%)</title><rect x="99.2707%" y="341" width="0.0810%" height="15" fill="rgb(254,86,31)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="99.2707%" y="325" width="0.0810%" height="15" fill="rgb(205,226,15)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="335.50"></text></g><g><title>do_syscall_64 (1 samples, 0.08%)</title><rect x="99.2707%" y="309" width="0.0810%" height="15" fill="rgb(220,74,14)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="319.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.08%)</title><rect x="99.2707%" y="293" width="0.0810%" height="15" fill="rgb(226,196,1)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="303.50"></text></g><g><title>do_mmap (1 samples, 0.08%)</title><rect x="99.2707%" y="277" width="0.0810%" height="15" fill="rgb(228,25,27)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="287.50"></text></g><g><title>mmap_region (1 samples, 0.08%)</title><rect x="99.2707%" y="261" width="0.0810%" height="15" fill="rgb(233,57,38)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="271.50"></text></g><g><title>vma_link (1 samples, 0.08%)</title><rect x="99.2707%" y="245" width="0.0810%" height="15" fill="rgb(249,28,0)" fg:x="1225" fg:w="1"/><text x="99.4850%" y="255.50"></text></g><g><title>Config::Config (1 samples, 0.08%)</title><rect x="99.3517%" y="437" width="0.0810%" height="15" fill="rgb(252,56,39)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="447.50"></text></g><g><title>std::ostream::operator&lt;&lt; (1 samples, 0.08%)</title><rect x="99.3517%" y="421" width="0.0810%" height="15" fill="rgb(222,101,50)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="431.50"></text></g><g><title>std::__copy_streambufs_eof&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.08%)</title><rect x="99.3517%" y="405" width="0.0810%" height="15" fill="rgb(225,53,15)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="415.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (1 samples, 0.08%)</title><rect x="99.3517%" y="389" width="0.0810%" height="15" fill="rgb(223,166,47)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="399.50"></text></g><g><title>std::__basic_file&lt;char&gt;::xsgetn (1 samples, 0.08%)</title><rect x="99.3517%" y="373" width="0.0810%" height="15" fill="rgb(236,174,8)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="383.50"></text></g><g><title>read (1 samples, 0.08%)</title><rect x="99.3517%" y="357" width="0.0810%" height="15" fill="rgb(209,69,29)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="367.50"></text></g><g><title>__libc_read (1 samples, 0.08%)</title><rect x="99.3517%" y="341" width="0.0810%" height="15" fill="rgb(241,36,44)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.08%)</title><rect x="99.3517%" y="325" width="0.0810%" height="15" fill="rgb(205,226,15)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="335.50"></text></g><g><title>do_syscall_64 (1 samples, 0.08%)</title><rect x="99.3517%" y="309" width="0.0810%" height="15" fill="rgb(220,74,14)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="319.50"></text></g><g><title>ksys_read (1 samples, 0.08%)</title><rect x="99.3517%" y="293" width="0.0810%" height="15" fill="rgb(233,96,2)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="303.50"></text></g><g><title>vfs_read (1 samples, 0.08%)</title><rect x="99.3517%" y="277" width="0.0810%" height="15" fill="rgb(232,76,33)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="287.50"></text></g><g><title>new_sync_read (1 samples, 0.08%)</title><rect x="99.3517%" y="261" width="0.0810%" height="15" fill="rgb(207,29,15)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="271.50"></text></g><g><title>generic_file_buffered_read (1 samples, 0.08%)</title><rect x="99.3517%" y="245" width="0.0810%" height="15" fill="rgb(225,112,16)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="255.50"></text></g><g><title>page_cache_ra_unbounded (1 samples, 0.08%)</title><rect x="99.3517%" y="229" width="0.0810%" height="15" fill="rgb(243,13,49)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="239.50"></text></g><g><title>read_pages (1 samples, 0.08%)</title><rect x="99.3517%" y="213" width="0.0810%" height="15" fill="rgb(250,131,52)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="223.50"></text></g><g><title>blk_finish_plug (1 samples, 0.08%)</title><rect x="99.3517%" y="197" width="0.0810%" height="15" fill="rgb(215,206,23)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="207.50"></text></g><g><title>blk_mq_flush_plug_list (1 samples, 0.08%)</title><rect x="99.3517%" y="181" width="0.0810%" height="15" fill="rgb(216,93,3)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="191.50"></text></g><g><title>blk_mq_sched_insert_requests (1 samples, 0.08%)</title><rect x="99.3517%" y="165" width="0.0810%" height="15" fill="rgb(228,26,3)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="175.50"></text></g><g><title>__blk_mq_delay_run_hw_queue (1 samples, 0.08%)</title><rect x="99.3517%" y="149" width="0.0810%" height="15" fill="rgb(205,118,41)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="159.50"></text></g><g><title>__blk_mq_run_hw_queue (1 samples, 0.08%)</title><rect x="99.3517%" y="133" width="0.0810%" height="15" fill="rgb(205,33,35)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="143.50"></text></g><g><title>blk_mq_sched_dispatch_requests (1 samples, 0.08%)</title><rect x="99.3517%" y="117" width="0.0810%" height="15" fill="rgb(229,194,27)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="127.50"></text></g><g><title>__blk_mq_sched_dispatch_requests (1 samples, 0.08%)</title><rect x="99.3517%" y="101" width="0.0810%" height="15" fill="rgb(226,133,28)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="111.50"></text></g><g><title>blk_mq_do_dispatch_sched (1 samples, 0.08%)</title><rect x="99.3517%" y="85" width="0.0810%" height="15" fill="rgb(231,134,34)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="95.50"></text></g><g><title>blk_mq_dispatch_rq_list (1 samples, 0.08%)</title><rect x="99.3517%" y="69" width="0.0810%" height="15" fill="rgb(232,119,42)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="79.50"></text></g><g><title>scsi_queue_rq (1 samples, 0.08%)</title><rect x="99.3517%" y="53" width="0.0810%" height="15" fill="rgb(235,215,19)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="63.50"></text></g><g><title>sd_init_command (1 samples, 0.08%)</title><rect x="99.3517%" y="37" width="0.0810%" height="15" fill="rgb(205,195,15)" fg:x="1226" fg:w="1"/><text x="99.5660%" y="47.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_first_of (1 samples, 0.08%)</title><rect x="99.4327%" y="421" width="0.0810%" height="15" fill="rgb(212,119,18)" fg:x="1227" fg:w="1"/><text x="99.6470%" y="431.50"></text></g><g><title>__interceptor_memchr (1 samples, 0.08%)</title><rect x="99.4327%" y="405" width="0.0810%" height="15" fill="rgb(236,71,13)" fg:x="1227" fg:w="1"/><text x="99.6470%" y="415.50"></text></g><g><title>_start (560 samples, 45.38%)</title><rect x="54.2139%" y="565" width="45.3809%" height="15" fill="rgb(210,219,27)" fg:x="669" fg:w="560"/><text x="54.4282%" y="575.50">_start</text></g><g><title>__libc_start_main (560 samples, 45.38%)</title><rect x="54.2139%" y="549" width="45.3809%" height="15" fill="rgb(211,91,2)" fg:x="669" fg:w="560"/><text x="54.4282%" y="559.50">__libc_start_main</text></g><g><title>main (543 samples, 44.00%)</title><rect x="55.5916%" y="533" width="44.0032%" height="15" fill="rgb(238,28,47)" fg:x="686" fg:w="543"/><text x="55.8059%" y="543.50">main</text></g><g><title>loadConfig (4 samples, 0.32%)</title><rect x="99.2707%" y="517" width="0.3241%" height="15" fill="rgb(216,190,24)" fg:x="1225" fg:w="4"/><text x="99.4850%" y="527.50"></text></g><g><title>Config::parseContext (3 samples, 0.24%)</title><rect x="99.3517%" y="501" width="0.2431%" height="15" fill="rgb(250,19,45)" fg:x="1226" fg:w="3"/><text x="99.5660%" y="511.50"></text></g><g><title>Config::processContext (3 samples, 0.24%)</title><rect x="99.3517%" y="485" width="0.2431%" height="15" fill="rgb(235,18,8)" fg:x="1226" fg:w="3"/><text x="99.5660%" y="495.50"></text></g><g><title>Config::parseContext (3 samples, 0.24%)</title><rect x="99.3517%" y="469" width="0.2431%" height="15" fill="rgb(250,19,45)" fg:x="1226" fg:w="3"/><text x="99.5660%" y="479.50"></text></g><g><title>Config::processInclude (3 samples, 0.24%)</title><rect x="99.3517%" y="453" width="0.2431%" height="15" fill="rgb(213,118,24)" fg:x="1226" fg:w="3"/><text x="99.5660%" y="463.50"></text></g><g><title>Config::removeComments (2 samples, 0.16%)</title><rect x="99.4327%" y="437" width="0.1621%" height="15" fill="rgb(220,16,39)" fg:x="1227" fg:w="2"/><text x="99.6470%" y="447.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.08%)</title><rect x="99.5138%" y="421" width="0.0810%" height="15" fill="rgb(226,32,40)" fg:x="1228" fg:w="1"/><text x="99.7281%" y="431.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.08%)</title><rect x="99.5138%" y="405" width="0.0810%" height="15" fill="rgb(216,50,33)" fg:x="1228" fg:w="1"/><text x="99.7281%" y="415.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.08%)</title><rect x="99.5138%" y="389" width="0.0810%" height="15" fill="rgb(250,46,35)" fg:x="1228" fg:w="1"/><text x="99.7281%" y="399.50"></text></g><g><title>operator new (1 samples, 0.08%)</title><rect x="99.5138%" y="373" width="0.0810%" height="15" fill="rgb(214,91,1)" fg:x="1228" fg:w="1"/><text x="99.7281%" y="383.50"></text></g><g><title>__asan::asan_memalign (1 samples, 0.08%)</title><rect x="99.5138%" y="357" width="0.0810%" height="15" fill="rgb(248,206,7)" fg:x="1228" fg:w="1"/><text x="99.7281%" y="367.50"></text></g><g><title>__asan::Allocator::Allocate (1 samples, 0.08%)</title><rect x="99.5138%" y="341" width="0.0810%" height="15" fill="rgb(251,118,48)" fg:x="1228" fg:w="1"/><text x="99.7281%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.16%)</title><rect x="99.5948%" y="565" width="0.1621%" height="15" fill="rgb(205,226,15)" fg:x="1229" fg:w="2"/><text x="99.8091%" y="575.50"></text></g><g><title>do_syscall_64 (1 samples, 0.08%)</title><rect x="99.6759%" y="549" width="0.0810%" height="15" fill="rgb(220,74,14)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="559.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.08%)</title><rect x="99.6759%" y="533" width="0.0810%" height="15" fill="rgb(237,59,15)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="543.50"></text></g><g><title>do_execveat_common (1 samples, 0.08%)</title><rect x="99.6759%" y="517" width="0.0810%" height="15" fill="rgb(253,19,15)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="527.50"></text></g><g><title>bprm_execve (1 samples, 0.08%)</title><rect x="99.6759%" y="501" width="0.0810%" height="15" fill="rgb(232,147,16)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="511.50"></text></g><g><title>load_elf_binary (1 samples, 0.08%)</title><rect x="99.6759%" y="485" width="0.0810%" height="15" fill="rgb(246,102,21)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="495.50"></text></g><g><title>__clear_user (1 samples, 0.08%)</title><rect x="99.6759%" y="469" width="0.0810%" height="15" fill="rgb(245,175,43)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="479.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.08%)</title><rect x="99.6759%" y="453" width="0.0810%" height="15" fill="rgb(208,26,13)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="463.50"></text></g><g><title>exc_page_fault (1 samples, 0.08%)</title><rect x="99.6759%" y="437" width="0.0810%" height="15" fill="rgb(216,51,29)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="447.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.08%)</title><rect x="99.6759%" y="421" width="0.0810%" height="15" fill="rgb(253,37,52)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="431.50"></text></g><g><title>handle_mm_fault (1 samples, 0.08%)</title><rect x="99.6759%" y="405" width="0.0810%" height="15" fill="rgb(247,31,49)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="415.50"></text></g><g><title>__put_page (1 samples, 0.08%)</title><rect x="99.6759%" y="389" width="0.0810%" height="15" fill="rgb(215,95,36)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="399.50"></text></g><g><title>mem_cgroup_uncharge (1 samples, 0.08%)</title><rect x="99.6759%" y="373" width="0.0810%" height="15" fill="rgb(215,82,49)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="383.50"></text></g><g><title>uncharge_batch (1 samples, 0.08%)</title><rect x="99.6759%" y="357" width="0.0810%" height="15" fill="rgb(239,76,12)" fg:x="1230" fg:w="1"/><text x="99.8901%" y="367.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (1 samples, 0.08%)</title><rect x="99.7569%" y="565" width="0.0810%" height="15" fill="rgb(217,56,41)" fg:x="1231" fg:w="1"/><text x="99.9712%" y="575.50"></text></g><g><title>all (1,234 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="1234"/><text x="0.2143%" y="607.50"></text></g><g><title>webserv (1,233 samples, 99.92%)</title><rect x="0.0810%" y="581" width="99.9190%" height="15" fill="rgb(207,222,45)" fg:x="1" fg:w="1233"/><text x="0.2953%" y="591.50">webserv</text></g><g><title>std::distance&lt;char*&gt; (2 samples, 0.16%)</title><rect x="99.8379%" y="565" width="0.1621%" height="15" fill="rgb(213,138,18)" fg:x="1232" fg:w="2"/><text x="100.0522%" y="575.50"></text></g><g><title>std::__iterator_category&lt;char*&gt; (2 samples, 0.16%)</title><rect x="99.8379%" y="549" width="0.1621%" height="15" fill="rgb(222,138,19)" fg:x="1232" fg:w="2"/><text x="100.0522%" y="559.50"></text></g></svg></svg>