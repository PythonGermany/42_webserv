<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1400" height="614" onload="init(evt)" viewBox="0 0 1400 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="614" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="597.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1390" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1390" y="597.00"> </text><svg id="frames" x="10" width="1380" total_samples="892"><g><title>perf_5.10 (1 samples, 0.11%)</title><rect x="0.0000%" y="549" width="0.1121%" height="15" fill="rgb(233,83,33)" fg:x="0" fg:w="1"/><text x="0.2143%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="0.0000%" y="533" width="0.1121%" height="15" fill="rgb(205,226,15)" fg:x="0" fg:w="1"/><text x="0.2143%" y="543.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="0.0000%" y="517" width="0.1121%" height="15" fill="rgb(220,74,14)" fg:x="0" fg:w="1"/><text x="0.2143%" y="527.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.11%)</title><rect x="0.0000%" y="501" width="0.1121%" height="15" fill="rgb(237,59,15)" fg:x="0" fg:w="1"/><text x="0.2143%" y="511.50"></text></g><g><title>do_execveat_common (1 samples, 0.11%)</title><rect x="0.0000%" y="485" width="0.1121%" height="15" fill="rgb(253,19,15)" fg:x="0" fg:w="1"/><text x="0.2143%" y="495.50"></text></g><g><title>bprm_execve (1 samples, 0.11%)</title><rect x="0.0000%" y="469" width="0.1121%" height="15" fill="rgb(232,147,16)" fg:x="0" fg:w="1"/><text x="0.2143%" y="479.50"></text></g><g><title>load_elf_binary (1 samples, 0.11%)</title><rect x="0.0000%" y="453" width="0.1121%" height="15" fill="rgb(246,102,21)" fg:x="0" fg:w="1"/><text x="0.2143%" y="463.50"></text></g><g><title>begin_new_exec (1 samples, 0.11%)</title><rect x="0.0000%" y="437" width="0.1121%" height="15" fill="rgb(219,195,31)" fg:x="0" fg:w="1"/><text x="0.2143%" y="447.50"></text></g><g><title>perf_event_comm (1 samples, 0.11%)</title><rect x="0.0000%" y="421" width="0.1121%" height="15" fill="rgb(252,106,2)" fg:x="0" fg:w="1"/><text x="0.2143%" y="431.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="0.0000%" y="405" width="0.1121%" height="15" fill="rgb(241,203,1)" fg:x="0" fg:w="1"/><text x="0.2143%" y="415.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="0.0000%" y="389" width="0.1121%" height="15" fill="rgb(227,133,21)" fg:x="0" fg:w="1"/><text x="0.2143%" y="399.50"></text></g><g><title>AConnection::onPollIn (1 samples, 0.11%)</title><rect x="0.1121%" y="533" width="0.1121%" height="15" fill="rgb(238,25,4)" fg:x="1" fg:w="1"/><text x="0.3264%" y="543.50"></text></g><g><title>recv (1 samples, 0.11%)</title><rect x="0.1121%" y="517" width="0.1121%" height="15" fill="rgb(227,69,32)" fg:x="1" fg:w="1"/><text x="0.3264%" y="527.50"></text></g><g><title>__libc_recv (1 samples, 0.11%)</title><rect x="0.1121%" y="501" width="0.1121%" height="15" fill="rgb(249,36,48)" fg:x="1" fg:w="1"/><text x="0.3264%" y="511.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="0.1121%" y="485" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="1" fg:w="1"/><text x="0.3264%" y="495.50"></text></g><g><title>[anon] (3 samples, 0.34%)</title><rect x="0.2242%" y="533" width="0.3363%" height="15" fill="rgb(207,220,20)" fg:x="2" fg:w="3"/><text x="0.4385%" y="543.50"></text></g><g><title>__libc_recv (3 samples, 0.34%)</title><rect x="0.2242%" y="517" width="0.3363%" height="15" fill="rgb(249,36,48)" fg:x="2" fg:w="3"/><text x="0.4385%" y="527.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.34%)</title><rect x="0.2242%" y="501" width="0.3363%" height="15" fill="rgb(229,107,3)" fg:x="2" fg:w="3"/><text x="0.4385%" y="511.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.11%)</title><rect x="1.9058%" y="373" width="0.1121%" height="15" fill="rgb(248,227,45)" fg:x="17" fg:w="1"/><text x="2.1201%" y="383.50"></text></g><g><title>common_interrupt (1 samples, 0.11%)</title><rect x="1.9058%" y="357" width="0.1121%" height="15" fill="rgb(250,67,32)" fg:x="17" fg:w="1"/><text x="2.1201%" y="367.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.11%)</title><rect x="1.9058%" y="341" width="0.1121%" height="15" fill="rgb(240,18,12)" fg:x="17" fg:w="1"/><text x="2.1201%" y="351.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.11%)</title><rect x="1.9058%" y="325" width="0.1121%" height="15" fill="rgb(223,89,53)" fg:x="17" fg:w="1"/><text x="2.1201%" y="335.50"></text></g><g><title>asm_call_sysvec_on_stack (1 samples, 0.11%)</title><rect x="1.9058%" y="309" width="0.1121%" height="15" fill="rgb(208,184,36)" fg:x="17" fg:w="1"/><text x="2.1201%" y="319.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.11%)</title><rect x="1.9058%" y="293" width="0.1121%" height="15" fill="rgb(249,91,22)" fg:x="17" fg:w="1"/><text x="2.1201%" y="303.50"></text></g><g><title>net_rx_action (1 samples, 0.11%)</title><rect x="1.9058%" y="277" width="0.1121%" height="15" fill="rgb(231,11,52)" fg:x="17" fg:w="1"/><text x="2.1201%" y="287.50"></text></g><g><title>__kfree_skb_flush (1 samples, 0.11%)</title><rect x="1.9058%" y="261" width="0.1121%" height="15" fill="rgb(245,1,6)" fg:x="17" fg:w="1"/><text x="2.1201%" y="271.50"></text></g><g><title>kmem_cache_free_bulk (1 samples, 0.11%)</title><rect x="1.9058%" y="245" width="0.1121%" height="15" fill="rgb(249,162,6)" fg:x="17" fg:w="1"/><text x="2.1201%" y="255.50"></text></g><g><title>__ext4_journal_start_sb (1 samples, 0.11%)</title><rect x="2.0179%" y="197" width="0.1121%" height="15" fill="rgb(251,66,45)" fg:x="18" fg:w="1"/><text x="2.2322%" y="207.50"></text></g><g><title>jbd2__journal_start (1 samples, 0.11%)</title><rect x="2.0179%" y="181" width="0.1121%" height="15" fill="rgb(212,174,30)" fg:x="18" fg:w="1"/><text x="2.2322%" y="191.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.11%)</title><rect x="2.0179%" y="165" width="0.1121%" height="15" fill="rgb(223,51,51)" fg:x="18" fg:w="1"/><text x="2.2322%" y="175.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.11%)</title><rect x="2.0179%" y="149" width="0.1121%" height="15" fill="rgb(212,11,50)" fg:x="18" fg:w="1"/><text x="2.2322%" y="159.50"></text></g><g><title>file_update_time (3 samples, 0.34%)</title><rect x="2.0179%" y="261" width="0.3363%" height="15" fill="rgb(237,12,27)" fg:x="18" fg:w="3"/><text x="2.2322%" y="271.50"></text></g><g><title>generic_update_time (3 samples, 0.34%)</title><rect x="2.0179%" y="245" width="0.3363%" height="15" fill="rgb(212,0,0)" fg:x="18" fg:w="3"/><text x="2.2322%" y="255.50"></text></g><g><title>__mark_inode_dirty (3 samples, 0.34%)</title><rect x="2.0179%" y="229" width="0.3363%" height="15" fill="rgb(212,91,54)" fg:x="18" fg:w="3"/><text x="2.2322%" y="239.50"></text></g><g><title>ext4_dirty_inode (3 samples, 0.34%)</title><rect x="2.0179%" y="213" width="0.3363%" height="15" fill="rgb(235,194,15)" fg:x="18" fg:w="3"/><text x="2.2322%" y="223.50"></text></g><g><title>__ext4_mark_inode_dirty (2 samples, 0.22%)</title><rect x="2.1300%" y="197" width="0.2242%" height="15" fill="rgb(250,159,10)" fg:x="19" fg:w="2"/><text x="2.3443%" y="207.50"></text></g><g><title>ext4_reserve_inode_write (2 samples, 0.22%)</title><rect x="2.1300%" y="181" width="0.2242%" height="15" fill="rgb(232,18,0)" fg:x="19" fg:w="2"/><text x="2.3443%" y="191.50"></text></g><g><title>ext4_get_inode_loc (2 samples, 0.22%)</title><rect x="2.1300%" y="165" width="0.2242%" height="15" fill="rgb(251,31,11)" fg:x="19" fg:w="2"/><text x="2.3443%" y="175.50"></text></g><g><title>__ext4_get_inode_loc (2 samples, 0.22%)</title><rect x="2.1300%" y="149" width="0.2242%" height="15" fill="rgb(231,98,31)" fg:x="19" fg:w="2"/><text x="2.3443%" y="159.50"></text></g><g><title>_cond_resched (2 samples, 0.22%)</title><rect x="2.3543%" y="245" width="0.2242%" height="15" fill="rgb(240,228,18)" fg:x="21" fg:w="2"/><text x="2.5685%" y="255.50"></text></g><g><title>balance_dirty_pages_ratelimited (1 samples, 0.11%)</title><rect x="2.5785%" y="245" width="0.1121%" height="15" fill="rgb(221,121,40)" fg:x="23" fg:w="1"/><text x="2.7928%" y="255.50"></text></g><g><title>__ext4_journal_start_sb (1 samples, 0.11%)</title><rect x="2.8027%" y="229" width="0.1121%" height="15" fill="rgb(251,66,45)" fg:x="25" fg:w="1"/><text x="3.0170%" y="239.50"></text></g><g><title>jbd2__journal_start (1 samples, 0.11%)</title><rect x="2.8027%" y="213" width="0.1121%" height="15" fill="rgb(212,174,30)" fg:x="25" fg:w="1"/><text x="3.0170%" y="223.50"></text></g><g><title>start_this_handle (1 samples, 0.11%)</title><rect x="2.8027%" y="197" width="0.1121%" height="15" fill="rgb(247,124,24)" fg:x="25" fg:w="1"/><text x="3.0170%" y="207.50"></text></g><g><title>memcg_slab_post_alloc_hook (3 samples, 0.34%)</title><rect x="3.1390%" y="149" width="0.3363%" height="15" fill="rgb(242,216,24)" fg:x="28" fg:w="3"/><text x="3.3533%" y="159.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.11%)</title><rect x="3.3632%" y="133" width="0.1121%" height="15" fill="rgb(247,169,19)" fg:x="30" fg:w="1"/><text x="3.5775%" y="143.50"></text></g><g><title>create_empty_buffers (6 samples, 0.67%)</title><rect x="2.9148%" y="213" width="0.6726%" height="15" fill="rgb(209,173,14)" fg:x="26" fg:w="6"/><text x="3.1291%" y="223.50"></text></g><g><title>alloc_page_buffers (6 samples, 0.67%)</title><rect x="2.9148%" y="197" width="0.6726%" height="15" fill="rgb(210,90,32)" fg:x="26" fg:w="6"/><text x="3.1291%" y="207.50"></text></g><g><title>alloc_buffer_head (6 samples, 0.67%)</title><rect x="2.9148%" y="181" width="0.6726%" height="15" fill="rgb(220,228,42)" fg:x="26" fg:w="6"/><text x="3.1291%" y="191.50"></text></g><g><title>kmem_cache_alloc (6 samples, 0.67%)</title><rect x="2.9148%" y="165" width="0.6726%" height="15" fill="rgb(223,51,51)" fg:x="26" fg:w="6"/><text x="3.1291%" y="175.50"></text></g><g><title>memset_erms (1 samples, 0.11%)</title><rect x="3.4753%" y="149" width="0.1121%" height="15" fill="rgb(233,67,1)" fg:x="31" fg:w="1"/><text x="3.6896%" y="159.50"></text></g><g><title>ext4_da_reserve_space (1 samples, 0.11%)</title><rect x="3.5874%" y="197" width="0.1121%" height="15" fill="rgb(253,48,44)" fg:x="32" fg:w="1"/><text x="3.8017%" y="207.50"></text></g><g><title>ext4_block_write_begin (10 samples, 1.12%)</title><rect x="2.9148%" y="229" width="1.1211%" height="15" fill="rgb(218,63,41)" fg:x="26" fg:w="10"/><text x="3.1291%" y="239.50"></text></g><g><title>ext4_da_get_block_prep (4 samples, 0.45%)</title><rect x="3.5874%" y="213" width="0.4484%" height="15" fill="rgb(235,98,3)" fg:x="32" fg:w="4"/><text x="3.8017%" y="223.50"></text></g><g><title>ext4_es_insert_delayed_block (3 samples, 0.34%)</title><rect x="3.6996%" y="197" width="0.3363%" height="15" fill="rgb(214,51,42)" fg:x="33" fg:w="3"/><text x="3.9138%" y="207.50"></text></g><g><title>__es_insert_extent (1 samples, 0.11%)</title><rect x="3.9238%" y="181" width="0.1121%" height="15" fill="rgb(219,216,0)" fg:x="35" fg:w="1"/><text x="4.1381%" y="191.50"></text></g><g><title>__inc_numa_state (1 samples, 0.11%)</title><rect x="4.3722%" y="165" width="0.1121%" height="15" fill="rgb(213,57,28)" fg:x="39" fg:w="1"/><text x="4.5865%" y="175.50"></text></g><g><title>__list_del_entry_valid (1 samples, 0.11%)</title><rect x="4.4843%" y="165" width="0.1121%" height="15" fill="rgb(224,110,12)" fg:x="40" fg:w="1"/><text x="4.6986%" y="175.50"></text></g><g><title>node_dirty_ok (1 samples, 0.11%)</title><rect x="4.5964%" y="165" width="0.1121%" height="15" fill="rgb(238,125,45)" fg:x="41" fg:w="1"/><text x="4.8107%" y="175.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 1.01%)</title><rect x="4.0359%" y="197" width="1.0090%" height="15" fill="rgb(245,49,10)" fg:x="36" fg:w="9"/><text x="4.2502%" y="207.50"></text></g><g><title>get_page_from_freelist (7 samples, 0.78%)</title><rect x="4.2601%" y="181" width="0.7848%" height="15" fill="rgb(246,35,53)" fg:x="38" fg:w="7"/><text x="4.4744%" y="191.50"></text></g><g><title>prep_new_page (3 samples, 0.34%)</title><rect x="4.7085%" y="165" width="0.3363%" height="15" fill="rgb(220,94,29)" fg:x="42" fg:w="3"/><text x="4.9228%" y="175.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.34%)</title><rect x="4.7085%" y="149" width="0.3363%" height="15" fill="rgb(253,165,35)" fg:x="42" fg:w="3"/><text x="4.9228%" y="159.50"></text></g><g><title>clear_page_erms (3 samples, 0.34%)</title><rect x="4.7085%" y="133" width="0.3363%" height="15" fill="rgb(253,135,51)" fg:x="42" fg:w="3"/><text x="4.9228%" y="143.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.11%)</title><rect x="5.1570%" y="165" width="0.1121%" height="15" fill="rgb(240,209,16)" fg:x="46" fg:w="1"/><text x="5.3712%" y="175.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.11%)</title><rect x="5.2691%" y="165" width="0.1121%" height="15" fill="rgb(247,169,19)" fg:x="47" fg:w="1"/><text x="5.4833%" y="175.50"></text></g><g><title>__mod_memcg_state.part.0 (1 samples, 0.11%)</title><rect x="5.2691%" y="149" width="0.1121%" height="15" fill="rgb(252,169,8)" fg:x="47" fg:w="1"/><text x="5.4833%" y="159.50"></text></g><g><title>__add_to_page_cache_locked (6 samples, 0.67%)</title><rect x="5.0448%" y="181" width="0.6726%" height="15" fill="rgb(229,179,48)" fg:x="45" fg:w="6"/><text x="5.2591%" y="191.50"></text></g><g><title>mem_cgroup_charge (3 samples, 0.34%)</title><rect x="5.3812%" y="165" width="0.3363%" height="15" fill="rgb(232,189,48)" fg:x="48" fg:w="3"/><text x="5.5955%" y="175.50"></text></g><g><title>try_charge (2 samples, 0.22%)</title><rect x="5.4933%" y="149" width="0.2242%" height="15" fill="rgb(208,116,22)" fg:x="49" fg:w="2"/><text x="5.7076%" y="159.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.11%)</title><rect x="5.6054%" y="133" width="0.1121%" height="15" fill="rgb(222,104,3)" fg:x="50" fg:w="1"/><text x="5.8197%" y="143.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.11%)</title><rect x="5.6054%" y="117" width="0.1121%" height="15" fill="rgb(210,87,27)" fg:x="50" fg:w="1"/><text x="5.8197%" y="127.50"></text></g><g><title>add_to_page_cache_lru (9 samples, 1.01%)</title><rect x="5.0448%" y="197" width="1.0090%" height="15" fill="rgb(223,55,45)" fg:x="45" fg:w="9"/><text x="5.2591%" y="207.50"></text></g><g><title>lru_cache_add (3 samples, 0.34%)</title><rect x="5.7175%" y="181" width="0.3363%" height="15" fill="rgb(205,98,13)" fg:x="51" fg:w="3"/><text x="5.9318%" y="191.50"></text></g><g><title>pagevec_lru_move_fn (3 samples, 0.34%)</title><rect x="5.7175%" y="165" width="0.3363%" height="15" fill="rgb(220,168,32)" fg:x="51" fg:w="3"/><text x="5.9318%" y="175.50"></text></g><g><title>__pagevec_lru_add_fn (3 samples, 0.34%)</title><rect x="5.7175%" y="149" width="0.3363%" height="15" fill="rgb(215,186,14)" fg:x="51" fg:w="3"/><text x="5.9318%" y="159.50"></text></g><g><title>grab_cache_page_write_begin (19 samples, 2.13%)</title><rect x="4.0359%" y="229" width="2.1300%" height="15" fill="rgb(221,143,40)" fg:x="36" fg:w="19"/><text x="4.2502%" y="239.50">gr..</text></g><g><title>pagecache_get_page (19 samples, 2.13%)</title><rect x="4.0359%" y="213" width="2.1300%" height="15" fill="rgb(254,146,25)" fg:x="36" fg:w="19"/><text x="4.2502%" y="223.50">pa..</text></g><g><title>alloc_pages_current (1 samples, 0.11%)</title><rect x="6.0538%" y="197" width="0.1121%" height="15" fill="rgb(250,171,52)" fg:x="54" fg:w="1"/><text x="6.2681%" y="207.50"></text></g><g><title>ext4_da_write_begin (32 samples, 3.59%)</title><rect x="2.6906%" y="245" width="3.5874%" height="15" fill="rgb(235,31,43)" fg:x="24" fg:w="32"/><text x="2.9049%" y="255.50">ext4_..</text></g><g><title>unlock_page (1 samples, 0.11%)</title><rect x="6.1659%" y="229" width="0.1121%" height="15" fill="rgb(250,162,14)" fg:x="55" fg:w="1"/><text x="6.3802%" y="239.50"></text></g><g><title>__ext4_journal_stop (1 samples, 0.11%)</title><rect x="6.5022%" y="229" width="0.1121%" height="15" fill="rgb(225,40,54)" fg:x="58" fg:w="1"/><text x="6.7165%" y="239.50"></text></g><g><title>jbd2_journal_stop (1 samples, 0.11%)</title><rect x="6.5022%" y="213" width="0.1121%" height="15" fill="rgb(229,91,7)" fg:x="58" fg:w="1"/><text x="6.7165%" y="223.50"></text></g><g><title>kmem_cache_free (1 samples, 0.11%)</title><rect x="6.5022%" y="197" width="0.1121%" height="15" fill="rgb(225,137,16)" fg:x="58" fg:w="1"/><text x="6.7165%" y="207.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (3 samples, 0.34%)</title><rect x="6.6143%" y="213" width="0.3363%" height="15" fill="rgb(249,65,48)" fg:x="59" fg:w="3"/><text x="6.8286%" y="223.50"></text></g><g><title>mark_buffer_dirty (3 samples, 0.34%)</title><rect x="6.6143%" y="197" width="0.3363%" height="15" fill="rgb(238,162,48)" fg:x="59" fg:w="3"/><text x="6.8286%" y="207.50"></text></g><g><title>__set_page_dirty (3 samples, 0.34%)</title><rect x="6.6143%" y="181" width="0.3363%" height="15" fill="rgb(221,172,50)" fg:x="59" fg:w="3"/><text x="6.8286%" y="191.50"></text></g><g><title>account_page_dirtied (2 samples, 0.22%)</title><rect x="6.7265%" y="165" width="0.2242%" height="15" fill="rgb(240,165,27)" fg:x="60" fg:w="2"/><text x="6.9407%" y="175.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.22%)</title><rect x="6.7265%" y="149" width="0.2242%" height="15" fill="rgb(247,169,19)" fg:x="60" fg:w="2"/><text x="6.9407%" y="159.50"></text></g><g><title>__mod_memcg_state.part.0 (1 samples, 0.11%)</title><rect x="6.8386%" y="133" width="0.1121%" height="15" fill="rgb(252,169,8)" fg:x="61" fg:w="1"/><text x="7.0529%" y="143.50"></text></g><g><title>__ext4_journal_stop (1 samples, 0.11%)</title><rect x="6.9507%" y="197" width="0.1121%" height="15" fill="rgb(225,40,54)" fg:x="62" fg:w="1"/><text x="7.1650%" y="207.50"></text></g><g><title>ext4_mark_iloc_dirty (3 samples, 0.34%)</title><rect x="7.1749%" y="165" width="0.3363%" height="15" fill="rgb(236,133,21)" fg:x="64" fg:w="3"/><text x="7.3892%" y="175.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.11%)</title><rect x="7.3991%" y="149" width="0.1121%" height="15" fill="rgb(210,87,27)" fg:x="66" fg:w="1"/><text x="7.6134%" y="159.50"></text></g><g><title>ext4_da_write_end (12 samples, 1.35%)</title><rect x="6.2780%" y="245" width="1.3453%" height="15" fill="rgb(230,92,14)" fg:x="56" fg:w="12"/><text x="6.4923%" y="255.50"></text></g><g><title>generic_write_end (9 samples, 1.01%)</title><rect x="6.6143%" y="229" width="1.0090%" height="15" fill="rgb(207,107,21)" fg:x="59" fg:w="9"/><text x="6.8286%" y="239.50"></text></g><g><title>__mark_inode_dirty (6 samples, 0.67%)</title><rect x="6.9507%" y="213" width="0.6726%" height="15" fill="rgb(212,91,54)" fg:x="62" fg:w="6"/><text x="7.1650%" y="223.50"></text></g><g><title>ext4_dirty_inode (5 samples, 0.56%)</title><rect x="7.0628%" y="197" width="0.5605%" height="15" fill="rgb(235,194,15)" fg:x="63" fg:w="5"/><text x="7.2771%" y="207.50"></text></g><g><title>__ext4_mark_inode_dirty (4 samples, 0.45%)</title><rect x="7.1749%" y="181" width="0.4484%" height="15" fill="rgb(250,159,10)" fg:x="64" fg:w="4"/><text x="7.3892%" y="191.50"></text></g><g><title>ext4_reserve_inode_write (1 samples, 0.11%)</title><rect x="7.5112%" y="165" width="0.1121%" height="15" fill="rgb(232,18,0)" fg:x="67" fg:w="1"/><text x="7.7255%" y="175.50"></text></g><g><title>__ext4_journal_get_write_access (1 samples, 0.11%)</title><rect x="7.5112%" y="149" width="0.1121%" height="15" fill="rgb(219,28,3)" fg:x="67" fg:w="1"/><text x="7.7255%" y="159.50"></text></g><g><title>jbd2_journal_get_write_access (1 samples, 0.11%)</title><rect x="7.5112%" y="133" width="0.1121%" height="15" fill="rgb(238,71,44)" fg:x="67" fg:w="1"/><text x="7.7255%" y="143.50"></text></g><g><title>ext4_buffered_write_iter (53 samples, 5.94%)</title><rect x="2.0179%" y="277" width="5.9417%" height="15" fill="rgb(214,47,26)" fg:x="18" fg:w="53"/><text x="2.2322%" y="287.50">ext4_buff..</text></g><g><title>generic_perform_write (50 samples, 5.61%)</title><rect x="2.3543%" y="261" width="5.6054%" height="15" fill="rgb(218,161,27)" fg:x="21" fg:w="50"/><text x="2.5685%" y="271.50">generic_p..</text></g><g><title>iov_iter_fault_in_readable (3 samples, 0.34%)</title><rect x="7.6233%" y="245" width="0.3363%" height="15" fill="rgb(223,182,1)" fg:x="68" fg:w="3"/><text x="7.8376%" y="255.50"></text></g><g><title>__get_user_nocheck_1 (2 samples, 0.22%)</title><rect x="7.7354%" y="229" width="0.2242%" height="15" fill="rgb(245,112,5)" fg:x="69" fg:w="2"/><text x="7.9497%" y="239.50"></text></g><g><title>do_iter_write (54 samples, 6.05%)</title><rect x="2.0179%" y="309" width="6.0538%" height="15" fill="rgb(251,202,12)" fg:x="18" fg:w="54"/><text x="2.2322%" y="319.50">do_iter_w..</text></g><g><title>do_iter_readv_writev (54 samples, 6.05%)</title><rect x="2.0179%" y="293" width="6.0538%" height="15" fill="rgb(227,50,24)" fg:x="18" fg:w="54"/><text x="2.2322%" y="303.50">do_iter_r..</text></g><g><title>ext4_file_write_iter (1 samples, 0.11%)</title><rect x="7.9596%" y="277" width="0.1121%" height="15" fill="rgb(225,45,24)" fg:x="71" fg:w="1"/><text x="8.1739%" y="287.50"></text></g><g><title>Http::OnBodyRecv (56 samples, 6.28%)</title><rect x="1.9058%" y="485" width="6.2780%" height="15" fill="rgb(249,88,14)" fg:x="17" fg:w="56"/><text x="2.1201%" y="495.50">Http::OnBo..</text></g><g><title>Http::processPutData (56 samples, 6.28%)</title><rect x="1.9058%" y="469" width="6.2780%" height="15" fill="rgb(218,193,8)" fg:x="17" fg:w="56"/><text x="2.1201%" y="479.50">Http::proc..</text></g><g><title>std::ostream::write (56 samples, 6.28%)</title><rect x="1.9058%" y="453" width="6.2780%" height="15" fill="rgb(228,204,19)" fg:x="17" fg:w="56"/><text x="2.1201%" y="463.50">std::ostre..</text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (56 samples, 6.28%)</title><rect x="1.9058%" y="437" width="6.2780%" height="15" fill="rgb(230,183,37)" fg:x="17" fg:w="56"/><text x="2.1201%" y="447.50">std::basic..</text></g><g><title>std::__basic_file&lt;char&gt;::xsputn_2 (56 samples, 6.28%)</title><rect x="1.9058%" y="421" width="6.2780%" height="15" fill="rgb(226,181,43)" fg:x="17" fg:w="56"/><text x="2.1201%" y="431.50">std::__bas..</text></g><g><title>__interceptor_writev (56 samples, 6.28%)</title><rect x="1.9058%" y="405" width="6.2780%" height="15" fill="rgb(253,55,52)" fg:x="17" fg:w="56"/><text x="2.1201%" y="415.50">__intercep..</text></g><g><title>writev (56 samples, 6.28%)</title><rect x="1.9058%" y="389" width="6.2780%" height="15" fill="rgb(241,38,35)" fg:x="17" fg:w="56"/><text x="2.1201%" y="399.50">writev</text></g><g><title>entry_SYSCALL_64_after_hwframe (55 samples, 6.17%)</title><rect x="2.0179%" y="373" width="6.1659%" height="15" fill="rgb(205,226,15)" fg:x="18" fg:w="55"/><text x="2.2322%" y="383.50">entry_SYSC..</text></g><g><title>do_syscall_64 (55 samples, 6.17%)</title><rect x="2.0179%" y="357" width="6.1659%" height="15" fill="rgb(220,74,14)" fg:x="18" fg:w="55"/><text x="2.2322%" y="367.50">do_syscall..</text></g><g><title>do_writev (55 samples, 6.17%)</title><rect x="2.0179%" y="341" width="6.1659%" height="15" fill="rgb(245,175,10)" fg:x="18" fg:w="55"/><text x="2.2322%" y="351.50">do_writev</text></g><g><title>vfs_writev (55 samples, 6.17%)</title><rect x="2.0179%" y="325" width="6.1659%" height="15" fill="rgb(232,58,12)" fg:x="18" fg:w="55"/><text x="2.2322%" y="335.50">vfs_writev</text></g><g><title>import_iovec (1 samples, 0.11%)</title><rect x="8.0717%" y="309" width="0.1121%" height="15" fill="rgb(236,211,25)" fg:x="72" fg:w="1"/><text x="8.2860%" y="319.50"></text></g><g><title>__import_iovec (1 samples, 0.11%)</title><rect x="8.0717%" y="293" width="0.1121%" height="15" fill="rgb(221,41,2)" fg:x="72" fg:w="1"/><text x="8.2860%" y="303.50"></text></g><g><title>iovec_from_user (1 samples, 0.11%)</title><rect x="8.0717%" y="277" width="0.1121%" height="15" fill="rgb(247,27,47)" fg:x="72" fg:w="1"/><text x="8.2860%" y="287.50"></text></g><g><title>_copy_from_user (1 samples, 0.11%)</title><rect x="8.0717%" y="261" width="0.1121%" height="15" fill="rgb(224,68,34)" fg:x="72" fg:w="1"/><text x="8.2860%" y="271.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.11%)</title><rect x="8.0717%" y="245" width="0.1121%" height="15" fill="rgb(232,168,48)" fg:x="72" fg:w="1"/><text x="8.2860%" y="255.50"></text></g><g><title>operator delete (1 samples, 0.11%)</title><rect x="8.1839%" y="485" width="0.1121%" height="15" fill="rgb(249,165,17)" fg:x="73" fg:w="1"/><text x="8.3981%" y="495.50"></text></g><g><title>__asan::Allocator::QuarantineChunk (1 samples, 0.11%)</title><rect x="8.1839%" y="469" width="0.1121%" height="15" fill="rgb(236,101,31)" fg:x="73" fg:w="1"/><text x="8.3981%" y="479.50"></text></g><g><title>__sanitizer::StackDepotPut (1 samples, 0.11%)</title><rect x="8.1839%" y="453" width="0.1121%" height="15" fill="rgb(224,15,52)" fg:x="73" fg:w="1"/><text x="8.3981%" y="463.50"></text></g><g><title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1 samples, 0.11%)</title><rect x="8.1839%" y="437" width="0.1121%" height="15" fill="rgb(235,106,26)" fg:x="73" fg:w="1"/><text x="8.3981%" y="447.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.11%)</title><rect x="8.2960%" y="485" width="0.1121%" height="15" fill="rgb(239,29,9)" fg:x="74" fg:w="1"/><text x="8.5102%" y="495.50"></text></g><g><title>find_vma (1 samples, 0.11%)</title><rect x="9.1928%" y="373" width="0.1121%" height="15" fill="rgb(227,147,34)" fg:x="82" fg:w="1"/><text x="9.4071%" y="383.50"></text></g><g><title>vmacache_find (1 samples, 0.11%)</title><rect x="9.1928%" y="357" width="0.1121%" height="15" fill="rgb(248,72,26)" fg:x="82" fg:w="1"/><text x="9.4071%" y="367.50"></text></g><g><title>__page_set_anon_rmap (1 samples, 0.11%)</title><rect x="9.5291%" y="357" width="0.1121%" height="15" fill="rgb(233,29,49)" fg:x="85" fg:w="1"/><text x="9.7434%" y="367.50"></text></g><g><title>__list_del_entry_valid (1 samples, 0.11%)</title><rect x="9.6413%" y="309" width="0.1121%" height="15" fill="rgb(224,110,12)" fg:x="86" fg:w="1"/><text x="9.8555%" y="319.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.34%)</title><rect x="9.6413%" y="357" width="0.3363%" height="15" fill="rgb(242,79,46)" fg:x="86" fg:w="3"/><text x="9.8555%" y="367.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.34%)</title><rect x="9.6413%" y="341" width="0.3363%" height="15" fill="rgb(245,49,10)" fg:x="86" fg:w="3"/><text x="9.8555%" y="351.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.34%)</title><rect x="9.6413%" y="325" width="0.3363%" height="15" fill="rgb(246,35,53)" fg:x="86" fg:w="3"/><text x="9.8555%" y="335.50"></text></g><g><title>prep_new_page (2 samples, 0.22%)</title><rect x="9.7534%" y="309" width="0.2242%" height="15" fill="rgb(220,94,29)" fg:x="87" fg:w="2"/><text x="9.9676%" y="319.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.22%)</title><rect x="9.7534%" y="293" width="0.2242%" height="15" fill="rgb(253,165,35)" fg:x="87" fg:w="2"/><text x="9.9676%" y="303.50"></text></g><g><title>clear_page_erms (2 samples, 0.22%)</title><rect x="9.7534%" y="277" width="0.2242%" height="15" fill="rgb(253,135,51)" fg:x="87" fg:w="2"/><text x="9.9676%" y="287.50"></text></g><g><title>[libc-2.31.so] (15 samples, 1.68%)</title><rect x="8.4081%" y="437" width="1.6816%" height="15" fill="rgb(247,113,52)" fg:x="75" fg:w="15"/><text x="8.6224%" y="447.50">[..</text></g><g><title>asm_exc_page_fault (10 samples, 1.12%)</title><rect x="8.9686%" y="421" width="1.1211%" height="15" fill="rgb(208,26,13)" fg:x="80" fg:w="10"/><text x="9.1829%" y="431.50"></text></g><g><title>exc_page_fault (9 samples, 1.01%)</title><rect x="9.0807%" y="405" width="1.0090%" height="15" fill="rgb(216,51,29)" fg:x="81" fg:w="9"/><text x="9.2950%" y="415.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.90%)</title><rect x="9.1928%" y="389" width="0.8969%" height="15" fill="rgb(253,37,52)" fg:x="82" fg:w="8"/><text x="9.4071%" y="399.50"></text></g><g><title>handle_mm_fault (7 samples, 0.78%)</title><rect x="9.3049%" y="373" width="0.7848%" height="15" fill="rgb(247,31,49)" fg:x="83" fg:w="7"/><text x="9.5192%" y="383.50"></text></g><g><title>lru_cache_add (1 samples, 0.11%)</title><rect x="9.9776%" y="357" width="0.1121%" height="15" fill="rgb(205,98,13)" fg:x="89" fg:w="1"/><text x="10.1919%" y="367.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.11%)</title><rect x="9.9776%" y="341" width="0.1121%" height="15" fill="rgb(220,168,32)" fg:x="89" fg:w="1"/><text x="10.1919%" y="351.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.11%)</title><rect x="9.9776%" y="325" width="0.1121%" height="15" fill="rgb(215,186,14)" fg:x="89" fg:w="1"/><text x="10.1919%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.11%)</title><rect x="9.9776%" y="309" width="0.1121%" height="15" fill="rgb(247,169,19)" fg:x="89" fg:w="1"/><text x="10.1919%" y="319.50"></text></g><g><title>memcpy (16 samples, 1.79%)</title><rect x="8.4081%" y="453" width="1.7937%" height="15" fill="rgb(232,135,4)" fg:x="75" fg:w="16"/><text x="8.6224%" y="463.50">m..</text></g><g><title>__asan_region_is_poisoned (1 samples, 0.11%)</title><rect x="10.0897%" y="437" width="0.1121%" height="15" fill="rgb(252,76,50)" fg:x="90" fg:w="1"/><text x="10.3040%" y="447.50"></text></g><g><title>__sanitizer::mem_is_zero (1 samples, 0.11%)</title><rect x="10.0897%" y="421" width="0.1121%" height="15" fill="rgb(245,148,37)" fg:x="90" fg:w="1"/><text x="10.3040%" y="431.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.34%)</title><rect x="10.2018%" y="405" width="0.3363%" height="15" fill="rgb(247,113,52)" fg:x="91" fg:w="3"/><text x="10.4161%" y="415.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.34%)</title><rect x="10.2018%" y="389" width="0.3363%" height="15" fill="rgb(208,26,13)" fg:x="91" fg:w="3"/><text x="10.4161%" y="399.50"></text></g><g><title>exc_page_fault (3 samples, 0.34%)</title><rect x="10.2018%" y="373" width="0.3363%" height="15" fill="rgb(216,51,29)" fg:x="91" fg:w="3"/><text x="10.4161%" y="383.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.34%)</title><rect x="10.2018%" y="357" width="0.3363%" height="15" fill="rgb(253,37,52)" fg:x="91" fg:w="3"/><text x="10.4161%" y="367.50"></text></g><g><title>handle_mm_fault (2 samples, 0.22%)</title><rect x="10.3139%" y="341" width="0.2242%" height="15" fill="rgb(247,31,49)" fg:x="92" fg:w="2"/><text x="10.5282%" y="351.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.22%)</title><rect x="10.3139%" y="325" width="0.2242%" height="15" fill="rgb(242,79,46)" fg:x="92" fg:w="2"/><text x="10.5282%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.22%)</title><rect x="10.3139%" y="309" width="0.2242%" height="15" fill="rgb(245,49,10)" fg:x="92" fg:w="2"/><text x="10.5282%" y="319.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.22%)</title><rect x="10.3139%" y="293" width="0.2242%" height="15" fill="rgb(246,35,53)" fg:x="92" fg:w="2"/><text x="10.5282%" y="303.50"></text></g><g><title>prep_new_page (2 samples, 0.22%)</title><rect x="10.3139%" y="277" width="0.2242%" height="15" fill="rgb(220,94,29)" fg:x="92" fg:w="2"/><text x="10.5282%" y="287.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.22%)</title><rect x="10.3139%" y="261" width="0.2242%" height="15" fill="rgb(253,165,35)" fg:x="92" fg:w="2"/><text x="10.5282%" y="271.50"></text></g><g><title>clear_page_erms (2 samples, 0.22%)</title><rect x="10.3139%" y="245" width="0.2242%" height="15" fill="rgb(253,135,51)" fg:x="92" fg:w="2"/><text x="10.5282%" y="255.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="10.5381%" y="341" width="0.2242%" height="15" fill="rgb(247,113,52)" fg:x="94" fg:w="2"/><text x="10.7524%" y="351.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.22%)</title><rect x="10.5381%" y="325" width="0.2242%" height="15" fill="rgb(208,26,13)" fg:x="94" fg:w="2"/><text x="10.7524%" y="335.50"></text></g><g><title>exc_page_fault (1 samples, 0.11%)</title><rect x="10.6502%" y="309" width="0.1121%" height="15" fill="rgb(216,51,29)" fg:x="95" fg:w="1"/><text x="10.8645%" y="319.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="10.6502%" y="293" width="0.1121%" height="15" fill="rgb(253,37,52)" fg:x="95" fg:w="1"/><text x="10.8645%" y="303.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="10.6502%" y="277" width="0.1121%" height="15" fill="rgb(247,31,49)" fg:x="95" fg:w="1"/><text x="10.8645%" y="287.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="10.6502%" y="261" width="0.1121%" height="15" fill="rgb(242,79,46)" fg:x="95" fg:w="1"/><text x="10.8645%" y="271.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="10.6502%" y="245" width="0.1121%" height="15" fill="rgb(245,49,10)" fg:x="95" fg:w="1"/><text x="10.8645%" y="255.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="10.6502%" y="229" width="0.1121%" height="15" fill="rgb(246,35,53)" fg:x="95" fg:w="1"/><text x="10.8645%" y="239.50"></text></g><g><title>__asan::GetCurrentThreadStats (1 samples, 0.11%)</title><rect x="10.7623%" y="341" width="0.1121%" height="15" fill="rgb(238,52,35)" fg:x="96" fg:w="1"/><text x="10.9766%" y="351.50"></text></g><g><title>__asan::GetCurrentThread (1 samples, 0.11%)</title><rect x="10.7623%" y="325" width="0.1121%" height="15" fill="rgb(239,81,14)" fg:x="96" fg:w="1"/><text x="10.9766%" y="335.50"></text></g><g><title>__GI___pthread_getspecific (1 samples, 0.11%)</title><rect x="10.7623%" y="309" width="0.1121%" height="15" fill="rgb(238,82,10)" fg:x="96" fg:w="1"/><text x="10.9766%" y="319.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.11%)</title><rect x="10.8744%" y="309" width="0.1121%" height="15" fill="rgb(208,26,13)" fg:x="97" fg:w="1"/><text x="11.0887%" y="319.50"></text></g><g><title>syscall_enter_from_user_mode (1 samples, 0.11%)</title><rect x="10.9865%" y="277" width="0.1121%" height="15" fill="rgb(224,163,22)" fg:x="98" fg:w="1"/><text x="11.2008%" y="287.50"></text></g><g><title>__do_munmap (1 samples, 0.11%)</title><rect x="11.0987%" y="229" width="0.1121%" height="15" fill="rgb(225,34,24)" fg:x="99" fg:w="1"/><text x="11.3129%" y="239.50"></text></g><g><title>__split_vma (1 samples, 0.11%)</title><rect x="11.0987%" y="213" width="0.1121%" height="15" fill="rgb(231,148,17)" fg:x="99" fg:w="1"/><text x="11.3129%" y="223.50"></text></g><g><title>vm_area_dup (1 samples, 0.11%)</title><rect x="11.0987%" y="197" width="0.1121%" height="15" fill="rgb(241,106,19)" fg:x="99" fg:w="1"/><text x="11.3129%" y="207.50"></text></g><g><title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (7 samples, 0.78%)</title><rect x="10.5381%" y="405" width="0.7848%" height="15" fill="rgb(218,174,54)" fg:x="94" fg:w="7"/><text x="10.7524%" y="415.50"></text></g><g><title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (7 samples, 0.78%)</title><rect x="10.5381%" y="389" width="0.7848%" height="15" fill="rgb(241,35,21)" fg:x="94" fg:w="7"/><text x="10.7524%" y="399.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (7 samples, 0.78%)</title><rect x="10.5381%" y="373" width="0.7848%" height="15" fill="rgb(230,18,53)" fg:x="94" fg:w="7"/><text x="10.7524%" y="383.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (7 samples, 0.78%)</title><rect x="10.5381%" y="357" width="0.7848%" height="15" fill="rgb(210,154,38)" fg:x="94" fg:w="7"/><text x="10.7524%" y="367.50"></text></g><g><title>__sanitizer::MmapFixedImpl (4 samples, 0.45%)</title><rect x="10.8744%" y="341" width="0.4484%" height="15" fill="rgb(207,87,16)" fg:x="97" fg:w="4"/><text x="11.0887%" y="351.50"></text></g><g><title>__sanitizer::internal_mmap (4 samples, 0.45%)</title><rect x="10.8744%" y="325" width="0.4484%" height="15" fill="rgb(254,86,31)" fg:x="97" fg:w="4"/><text x="11.0887%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.34%)</title><rect x="10.9865%" y="309" width="0.3363%" height="15" fill="rgb(205,226,15)" fg:x="98" fg:w="3"/><text x="11.2008%" y="319.50"></text></g><g><title>do_syscall_64 (3 samples, 0.34%)</title><rect x="10.9865%" y="293" width="0.3363%" height="15" fill="rgb(220,74,14)" fg:x="98" fg:w="3"/><text x="11.2008%" y="303.50"></text></g><g><title>vm_mmap_pgoff (2 samples, 0.22%)</title><rect x="11.0987%" y="277" width="0.2242%" height="15" fill="rgb(226,196,1)" fg:x="99" fg:w="2"/><text x="11.3129%" y="287.50"></text></g><g><title>do_mmap (2 samples, 0.22%)</title><rect x="11.0987%" y="261" width="0.2242%" height="15" fill="rgb(228,25,27)" fg:x="99" fg:w="2"/><text x="11.3129%" y="271.50"></text></g><g><title>mmap_region (2 samples, 0.22%)</title><rect x="11.0987%" y="245" width="0.2242%" height="15" fill="rgb(233,57,38)" fg:x="99" fg:w="2"/><text x="11.3129%" y="255.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="11.2108%" y="229" width="0.1121%" height="15" fill="rgb(252,32,1)" fg:x="100" fg:w="1"/><text x="11.4250%" y="239.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="11.2108%" y="213" width="0.1121%" height="15" fill="rgb(241,203,1)" fg:x="100" fg:w="1"/><text x="11.4250%" y="223.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="11.2108%" y="197" width="0.1121%" height="15" fill="rgb(227,133,21)" fg:x="100" fg:w="1"/><text x="11.4250%" y="207.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.11%)</title><rect x="11.2108%" y="181" width="0.1121%" height="15" fill="rgb(225,127,18)" fg:x="100" fg:w="1"/><text x="11.4250%" y="191.50"></text></g><g><title>__perf_event__output_id_sample (1 samples, 0.11%)</title><rect x="11.2108%" y="165" width="0.1121%" height="15" fill="rgb(209,115,25)" fg:x="100" fg:w="1"/><text x="11.4250%" y="175.50"></text></g><g><title>find_vma (1 samples, 0.11%)</title><rect x="11.3229%" y="357" width="0.1121%" height="15" fill="rgb(227,147,34)" fg:x="101" fg:w="1"/><text x="11.5372%" y="367.50"></text></g><g><title>__asan::asan_memalign (12 samples, 1.35%)</title><rect x="10.2018%" y="437" width="1.3453%" height="15" fill="rgb(248,206,7)" fg:x="91" fg:w="12"/><text x="10.4161%" y="447.50"></text></g><g><title>__asan::Allocator::Allocate (12 samples, 1.35%)</title><rect x="10.2018%" y="421" width="1.3453%" height="15" fill="rgb(251,118,48)" fg:x="91" fg:w="12"/><text x="10.4161%" y="431.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.22%)</title><rect x="11.3229%" y="405" width="0.2242%" height="15" fill="rgb(208,26,13)" fg:x="101" fg:w="2"/><text x="11.5372%" y="415.50"></text></g><g><title>exc_page_fault (2 samples, 0.22%)</title><rect x="11.3229%" y="389" width="0.2242%" height="15" fill="rgb(216,51,29)" fg:x="101" fg:w="2"/><text x="11.5372%" y="399.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.22%)</title><rect x="11.3229%" y="373" width="0.2242%" height="15" fill="rgb(253,37,52)" fg:x="101" fg:w="2"/><text x="11.5372%" y="383.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="11.4350%" y="357" width="0.1121%" height="15" fill="rgb(247,31,49)" fg:x="102" fg:w="1"/><text x="11.6493%" y="367.50"></text></g><g><title>wp_page_copy (1 samples, 0.11%)</title><rect x="11.4350%" y="341" width="0.1121%" height="15" fill="rgb(231,223,9)" fg:x="102" fg:w="1"/><text x="11.6493%" y="351.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="11.4350%" y="325" width="0.1121%" height="15" fill="rgb(242,79,46)" fg:x="102" fg:w="1"/><text x="11.6493%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="11.4350%" y="309" width="0.1121%" height="15" fill="rgb(245,49,10)" fg:x="102" fg:w="1"/><text x="11.6493%" y="319.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="11.4350%" y="293" width="0.1121%" height="15" fill="rgb(246,35,53)" fg:x="102" fg:w="1"/><text x="11.6493%" y="303.50"></text></g><g><title>AConnection::passReadBuffer (88 samples, 9.87%)</title><rect x="1.7937%" y="501" width="9.8655%" height="15" fill="rgb(214,198,32)" fg:x="16" fg:w="88"/><text x="2.0080%" y="511.50">AConnection::pass..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (29 samples, 3.25%)</title><rect x="8.4081%" y="485" width="3.2511%" height="15" fill="rgb(237,70,52)" fg:x="75" fg:w="29"/><text x="8.6224%" y="495.50">std:..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (29 samples, 3.25%)</title><rect x="8.4081%" y="469" width="3.2511%" height="15" fill="rgb(240,176,52)" fg:x="75" fg:w="29"/><text x="8.6224%" y="479.50">std:..</text></g><g><title>operator new (13 samples, 1.46%)</title><rect x="10.2018%" y="453" width="1.4574%" height="15" fill="rgb(214,91,1)" fg:x="91" fg:w="13"/><text x="10.4161%" y="463.50"></text></g><g><title>__sanitizer::BufferedStackTrace::UnwindImpl (1 samples, 0.11%)</title><rect x="11.5471%" y="437" width="0.1121%" height="15" fill="rgb(237,1,53)" fg:x="103" fg:w="1"/><text x="11.7614%" y="447.50"></text></g><g><title>__sanitizer::BufferedStackTrace::UnwindFast (1 samples, 0.11%)</title><rect x="11.5471%" y="421" width="0.1121%" height="15" fill="rgb(240,14,30)" fg:x="103" fg:w="1"/><text x="11.7614%" y="431.50"></text></g><g><title>[libc-2.31.so] (21 samples, 2.35%)</title><rect x="11.6592%" y="501" width="2.3543%" height="15" fill="rgb(247,113,52)" fg:x="104" fg:w="21"/><text x="11.8735%" y="511.50">[l..</text></g><g><title>__asan_set_shadow_00 (1 samples, 0.11%)</title><rect x="14.0135%" y="501" width="0.1121%" height="15" fill="rgb(220,180,9)" fg:x="125" fg:w="1"/><text x="14.2277%" y="511.50"></text></g><g><title>__asan::GetCurrentThread (1 samples, 0.11%)</title><rect x="14.5740%" y="469" width="0.1121%" height="15" fill="rgb(239,81,14)" fg:x="130" fg:w="1"/><text x="14.7883%" y="479.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="14.6861%" y="453" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="131" fg:w="1"/><text x="14.9004%" y="463.50"></text></g><g><title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::Enqueue (2 samples, 0.22%)</title><rect x="14.6861%" y="469" width="0.2242%" height="15" fill="rgb(219,42,48)" fg:x="131" fg:w="2"/><text x="14.9004%" y="479.50"></text></g><g><title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1 samples, 0.11%)</title><rect x="14.7982%" y="453" width="0.1121%" height="15" fill="rgb(218,174,54)" fg:x="132" fg:w="1"/><text x="15.0125%" y="463.50"></text></g><g><title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1 samples, 0.11%)</title><rect x="14.7982%" y="437" width="0.1121%" height="15" fill="rgb(241,35,21)" fg:x="132" fg:w="1"/><text x="15.0125%" y="447.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (1 samples, 0.11%)</title><rect x="14.7982%" y="421" width="0.1121%" height="15" fill="rgb(230,18,53)" fg:x="132" fg:w="1"/><text x="15.0125%" y="431.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (1 samples, 0.11%)</title><rect x="14.7982%" y="405" width="0.1121%" height="15" fill="rgb(210,154,38)" fg:x="132" fg:w="1"/><text x="15.0125%" y="415.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="14.7982%" y="389" width="0.1121%" height="15" fill="rgb(247,113,52)" fg:x="132" fg:w="1"/><text x="15.0125%" y="399.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.11%)</title><rect x="14.7982%" y="373" width="0.1121%" height="15" fill="rgb(208,26,13)" fg:x="132" fg:w="1"/><text x="15.0125%" y="383.50"></text></g><g><title>exc_page_fault (1 samples, 0.11%)</title><rect x="14.7982%" y="357" width="0.1121%" height="15" fill="rgb(216,51,29)" fg:x="132" fg:w="1"/><text x="15.0125%" y="367.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="14.7982%" y="341" width="0.1121%" height="15" fill="rgb(253,37,52)" fg:x="132" fg:w="1"/><text x="15.0125%" y="351.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="14.7982%" y="325" width="0.1121%" height="15" fill="rgb(247,31,49)" fg:x="132" fg:w="1"/><text x="15.0125%" y="335.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="14.7982%" y="309" width="0.1121%" height="15" fill="rgb(242,79,46)" fg:x="132" fg:w="1"/><text x="15.0125%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="14.7982%" y="293" width="0.1121%" height="15" fill="rgb(245,49,10)" fg:x="132" fg:w="1"/><text x="15.0125%" y="303.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="14.7982%" y="277" width="0.1121%" height="15" fill="rgb(246,35,53)" fg:x="132" fg:w="1"/><text x="15.0125%" y="287.50"></text></g><g><title>__asan::Allocator::QuarantineChunk (8 samples, 0.90%)</title><rect x="14.2377%" y="485" width="0.8969%" height="15" fill="rgb(236,101,31)" fg:x="127" fg:w="8"/><text x="14.4520%" y="495.50"></text></g><g><title>__sanitizer::StackDepotPut (2 samples, 0.22%)</title><rect x="14.9103%" y="469" width="0.2242%" height="15" fill="rgb(224,15,52)" fg:x="133" fg:w="2"/><text x="15.1246%" y="479.50"></text></g><g><title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.22%)</title><rect x="14.9103%" y="453" width="0.2242%" height="15" fill="rgb(235,106,26)" fg:x="133" fg:w="2"/><text x="15.1246%" y="463.50"></text></g><g><title>operator delete (10 samples, 1.12%)</title><rect x="14.1256%" y="501" width="1.1211%" height="15" fill="rgb(249,165,17)" fg:x="126" fg:w="10"/><text x="14.3398%" y="511.50"></text></g><g><title>__sanitizer::BufferedStackTrace::UnwindImpl (1 samples, 0.11%)</title><rect x="15.1345%" y="485" width="0.1121%" height="15" fill="rgb(237,1,53)" fg:x="135" fg:w="1"/><text x="15.3488%" y="495.50"></text></g><g><title>__asan::QuickCheckForUnpoisonedRegion (1 samples, 0.11%)</title><rect x="15.2466%" y="485" width="0.1121%" height="15" fill="rgb(237,113,16)" fg:x="136" fg:w="1"/><text x="15.4609%" y="495.50"></text></g><g><title>__asan_region_is_poisoned (1 samples, 0.11%)</title><rect x="15.3587%" y="485" width="0.1121%" height="15" fill="rgb(252,76,50)" fg:x="137" fg:w="1"/><text x="15.5730%" y="495.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="15.5830%" y="469" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="139" fg:w="1"/><text x="15.7972%" y="479.50"></text></g><g><title>asm_exc_page_fault (8 samples, 0.90%)</title><rect x="15.6951%" y="469" width="0.8969%" height="15" fill="rgb(208,26,13)" fg:x="140" fg:w="8"/><text x="15.9094%" y="479.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.11%)</title><rect x="16.5919%" y="453" width="0.1121%" height="15" fill="rgb(211,8,20)" fg:x="148" fg:w="1"/><text x="16.8062%" y="463.50"></text></g><g><title>kfree (4 samples, 0.45%)</title><rect x="18.6099%" y="357" width="0.4484%" height="15" fill="rgb(222,6,37)" fg:x="166" fg:w="4"/><text x="18.8242%" y="367.50"></text></g><g><title>__slab_free (1 samples, 0.11%)</title><rect x="18.9462%" y="341" width="0.1121%" height="15" fill="rgb(207,84,8)" fg:x="169" fg:w="1"/><text x="19.1605%" y="351.50"></text></g><g><title>skb_release_data (3 samples, 0.34%)</title><rect x="19.0583%" y="357" width="0.3363%" height="15" fill="rgb(252,193,18)" fg:x="170" fg:w="3"/><text x="19.2726%" y="367.50"></text></g><g><title>__kfree_skb (12 samples, 1.35%)</title><rect x="18.6099%" y="373" width="1.3453%" height="15" fill="rgb(208,195,26)" fg:x="166" fg:w="12"/><text x="18.8242%" y="383.50"></text></g><g><title>skb_release_head_state (5 samples, 0.56%)</title><rect x="19.3946%" y="357" width="0.5605%" height="15" fill="rgb(221,1,22)" fg:x="173" fg:w="5"/><text x="19.6089%" y="367.50"></text></g><g><title>sock_rfree (2 samples, 0.22%)</title><rect x="19.7309%" y="341" width="0.2242%" height="15" fill="rgb(211,40,33)" fg:x="176" fg:w="2"/><text x="19.9452%" y="351.50"></text></g><g><title>kmalloc_slab (1 samples, 0.11%)</title><rect x="20.4036%" y="325" width="0.1121%" height="15" fill="rgb(219,98,13)" fg:x="182" fg:w="1"/><text x="20.6179%" y="335.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.34%)</title><rect x="20.2915%" y="341" width="0.3363%" height="15" fill="rgb(228,161,44)" fg:x="181" fg:w="3"/><text x="20.5058%" y="351.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.11%)</title><rect x="20.5157%" y="325" width="0.1121%" height="15" fill="rgb(212,11,50)" fg:x="183" fg:w="1"/><text x="20.7300%" y="335.50"></text></g><g><title>__tcp_send_ack.part.0 (8 samples, 0.90%)</title><rect x="19.9552%" y="373" width="0.8969%" height="15" fill="rgb(250,64,3)" fg:x="178" fg:w="8"/><text x="20.1694%" y="383.50"></text></g><g><title>__alloc_skb (6 samples, 0.67%)</title><rect x="20.1794%" y="357" width="0.6726%" height="15" fill="rgb(237,90,40)" fg:x="180" fg:w="6"/><text x="20.3937%" y="367.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.22%)</title><rect x="20.6278%" y="341" width="0.2242%" height="15" fill="rgb(227,94,12)" fg:x="184" fg:w="2"/><text x="20.8421%" y="351.50"></text></g><g><title>__nf_conntrack_find_get (2 samples, 0.22%)</title><rect x="21.4126%" y="293" width="0.2242%" height="15" fill="rgb(213,30,20)" fg:x="191" fg:w="2"/><text x="21.6268%" y="303.50"></text></g><g><title>get_l4proto (1 samples, 0.11%)</title><rect x="21.6368%" y="293" width="0.1121%" height="15" fill="rgb(228,115,12)" fg:x="193" fg:w="1"/><text x="21.8511%" y="303.50"></text></g><g><title>hash_conntrack_raw (3 samples, 0.34%)</title><rect x="21.7489%" y="293" width="0.3363%" height="15" fill="rgb(225,176,52)" fg:x="194" fg:w="3"/><text x="21.9632%" y="303.50"></text></g><g><title>nf_conntrack_in (9 samples, 1.01%)</title><rect x="21.3004%" y="309" width="1.0090%" height="15" fill="rgb(226,107,41)" fg:x="190" fg:w="9"/><text x="21.5147%" y="319.50"></text></g><g><title>nf_conntrack_tcp_packet (2 samples, 0.22%)</title><rect x="22.0852%" y="293" width="0.2242%" height="15" fill="rgb(210,106,10)" fg:x="197" fg:w="2"/><text x="22.2995%" y="303.50"></text></g><g><title>nft_counter_eval (1 samples, 0.11%)</title><rect x="23.4305%" y="277" width="0.1121%" height="15" fill="rgb(223,144,0)" fg:x="209" fg:w="1"/><text x="23.6448%" y="287.50"></text></g><g><title>nft_immediate_eval (1 samples, 0.11%)</title><rect x="23.5426%" y="277" width="0.1121%" height="15" fill="rgb(230,100,25)" fg:x="210" fg:w="1"/><text x="23.7569%" y="287.50"></text></g><g><title>__ip_local_out (23 samples, 2.58%)</title><rect x="21.3004%" y="341" width="2.5785%" height="15" fill="rgb(211,146,35)" fg:x="190" fg:w="23"/><text x="21.5147%" y="351.50">__i..</text></g><g><title>nf_hook_slow (23 samples, 2.58%)</title><rect x="21.3004%" y="325" width="2.5785%" height="15" fill="rgb(226,120,15)" fg:x="190" fg:w="23"/><text x="21.5147%" y="335.50">nf_..</text></g><g><title>nft_do_chain_ipv4 (14 samples, 1.57%)</title><rect x="22.3094%" y="309" width="1.5695%" height="15" fill="rgb(228,67,49)" fg:x="199" fg:w="14"/><text x="22.5237%" y="319.50">n..</text></g><g><title>nft_do_chain (13 samples, 1.46%)</title><rect x="22.4215%" y="293" width="1.4574%" height="15" fill="rgb(233,182,32)" fg:x="200" fg:w="13"/><text x="22.6358%" y="303.50"></text></g><g><title>nft_match_eval (2 samples, 0.22%)</title><rect x="23.6547%" y="277" width="0.2242%" height="15" fill="rgb(224,30,5)" fg:x="211" fg:w="2"/><text x="23.8690%" y="287.50"></text></g><g><title>conntrack_mt_v3 (1 samples, 0.11%)</title><rect x="23.7668%" y="261" width="0.1121%" height="15" fill="rgb(229,49,47)" fg:x="212" fg:w="1"/><text x="23.9811%" y="271.50"></text></g><g><title>__sk_dst_check (1 samples, 0.11%)</title><rect x="23.8789%" y="341" width="0.1121%" height="15" fill="rgb(240,116,12)" fg:x="213" fg:w="1"/><text x="24.0932%" y="351.50"></text></g><g><title>ip_finish_output (1 samples, 0.11%)</title><rect x="23.9910%" y="341" width="0.1121%" height="15" fill="rgb(215,36,54)" fg:x="214" fg:w="1"/><text x="24.2053%" y="351.50"></text></g><g><title>free_old_xmit_skbs (1 samples, 0.11%)</title><rect x="25.2242%" y="245" width="0.1121%" height="15" fill="rgb(235,178,6)" fg:x="225" fg:w="1"/><text x="25.4385%" y="255.50"></text></g><g><title>virtqueue_get_buf_ctx_split (1 samples, 0.11%)</title><rect x="25.2242%" y="229" width="0.1121%" height="15" fill="rgb(235,34,35)" fg:x="225" fg:w="1"/><text x="25.4385%" y="239.50"></text></g><g><title>skb_to_sgvec (1 samples, 0.11%)</title><rect x="25.3363%" y="245" width="0.1121%" height="15" fill="rgb(206,221,54)" fg:x="226" fg:w="1"/><text x="25.5506%" y="255.50"></text></g><g><title>virtqueue_add_outbuf (2 samples, 0.22%)</title><rect x="25.4484%" y="245" width="0.2242%" height="15" fill="rgb(207,208,9)" fg:x="227" fg:w="2"/><text x="25.6627%" y="255.50"></text></g><g><title>virtqueue_add_split (2 samples, 0.22%)</title><rect x="25.4484%" y="229" width="0.2242%" height="15" fill="rgb(238,41,16)" fg:x="227" fg:w="2"/><text x="25.6627%" y="239.50"></text></g><g><title>vring_map_one_sg (1 samples, 0.11%)</title><rect x="25.5605%" y="213" width="0.1121%" height="15" fill="rgb(242,129,3)" fg:x="228" fg:w="1"/><text x="25.7748%" y="223.50"></text></g><g><title>virtqueue_kick_prepare (2 samples, 0.22%)</title><rect x="25.6726%" y="245" width="0.2242%" height="15" fill="rgb(239,72,47)" fg:x="229" fg:w="2"/><text x="25.8869%" y="255.50"></text></g><g><title>dev_hard_start_xmit (25 samples, 2.80%)</title><rect x="24.6637%" y="277" width="2.8027%" height="15" fill="rgb(251,86,39)" fg:x="220" fg:w="25"/><text x="24.8780%" y="287.50">dev..</text></g><g><title>start_xmit (24 samples, 2.69%)</title><rect x="24.7758%" y="261" width="2.6906%" height="15" fill="rgb(211,140,13)" fg:x="221" fg:w="24"/><text x="24.9901%" y="271.50">sta..</text></g><g><title>virtqueue_notify (14 samples, 1.57%)</title><rect x="25.8969%" y="245" width="1.5695%" height="15" fill="rgb(219,119,18)" fg:x="231" fg:w="14"/><text x="26.1111%" y="255.50">v..</text></g><g><title>vp_notify (14 samples, 1.57%)</title><rect x="25.8969%" y="229" width="1.5695%" height="15" fill="rgb(230,193,37)" fg:x="231" fg:w="14"/><text x="26.1111%" y="239.50">v..</text></g><g><title>iowrite16 (14 samples, 1.57%)</title><rect x="25.8969%" y="213" width="1.5695%" height="15" fill="rgb(218,139,37)" fg:x="231" fg:w="14"/><text x="26.1111%" y="223.50">i..</text></g><g><title>__qdisc_run (28 samples, 3.14%)</title><rect x="24.5516%" y="309" width="3.1390%" height="15" fill="rgb(252,144,25)" fg:x="219" fg:w="28"/><text x="24.7659%" y="319.50">__qd..</text></g><g><title>sch_direct_xmit (27 samples, 3.03%)</title><rect x="24.6637%" y="293" width="3.0269%" height="15" fill="rgb(222,128,44)" fg:x="220" fg:w="27"/><text x="24.8780%" y="303.50">sch..</text></g><g><title>validate_xmit_skb_list (2 samples, 0.22%)</title><rect x="27.4664%" y="277" width="0.2242%" height="15" fill="rgb(254,174,52)" fg:x="245" fg:w="2"/><text x="27.6807%" y="287.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.11%)</title><rect x="27.5785%" y="261" width="0.1121%" height="15" fill="rgb(240,104,40)" fg:x="246" fg:w="1"/><text x="27.7928%" y="271.50"></text></g><g><title>netif_skb_features (1 samples, 0.11%)</title><rect x="27.5785%" y="245" width="0.1121%" height="15" fill="rgb(211,31,54)" fg:x="246" fg:w="1"/><text x="27.7928%" y="255.50"></text></g><g><title>skb_network_protocol (1 samples, 0.11%)</title><rect x="27.5785%" y="229" width="0.1121%" height="15" fill="rgb(218,54,26)" fg:x="246" fg:w="1"/><text x="27.7928%" y="239.50"></text></g><g><title>ip_finish_output2 (33 samples, 3.70%)</title><rect x="24.1031%" y="341" width="3.6996%" height="15" fill="rgb(219,227,11)" fg:x="215" fg:w="33"/><text x="24.3174%" y="351.50">ip_fi..</text></g><g><title>__dev_queue_xmit (32 samples, 3.59%)</title><rect x="24.2152%" y="325" width="3.5874%" height="15" fill="rgb(232,116,37)" fg:x="216" fg:w="32"/><text x="24.4295%" y="335.50">__dev..</text></g><g><title>_raw_spin_trylock (1 samples, 0.11%)</title><rect x="27.6906%" y="309" width="0.1121%" height="15" fill="rgb(241,168,50)" fg:x="247" fg:w="1"/><text x="27.9049%" y="319.50"></text></g><g><title>__tcp_transmit_skb (63 samples, 7.06%)</title><rect x="20.8520%" y="373" width="7.0628%" height="15" fill="rgb(238,106,36)" fg:x="186" fg:w="63"/><text x="21.0663%" y="383.50">__tcp_trans..</text></g><g><title>__ip_queue_xmit (60 samples, 6.73%)</title><rect x="21.1883%" y="357" width="6.7265%" height="15" fill="rgb(224,11,5)" fg:x="189" fg:w="60"/><text x="21.4026%" y="367.50">__ip_queue_..</text></g><g><title>ip_output (1 samples, 0.11%)</title><rect x="27.8027%" y="341" width="0.1121%" height="15" fill="rgb(213,11,33)" fg:x="248" fg:w="1"/><text x="28.0170%" y="351.50"></text></g><g><title>nf_hook_slow (1 samples, 0.11%)</title><rect x="27.8027%" y="325" width="0.1121%" height="15" fill="rgb(226,120,15)" fg:x="248" fg:w="1"/><text x="28.0170%" y="335.50"></text></g><g><title>apparmor_ipv4_postroute (1 samples, 0.11%)</title><rect x="27.8027%" y="309" width="0.1121%" height="15" fill="rgb(238,177,46)" fg:x="248" fg:w="1"/><text x="28.0170%" y="319.50"></text></g><g><title>kmem_cache_free (6 samples, 0.67%)</title><rect x="27.9148%" y="373" width="0.6726%" height="15" fill="rgb(225,137,16)" fg:x="249" fg:w="6"/><text x="28.1291%" y="383.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (1 samples, 0.11%)</title><rect x="28.4753%" y="357" width="0.1121%" height="15" fill="rgb(208,166,34)" fg:x="254" fg:w="1"/><text x="28.6896%" y="367.50"></text></g><g><title>lock_sock_nested (2 samples, 0.22%)</title><rect x="28.5874%" y="373" width="0.2242%" height="15" fill="rgb(207,134,26)" fg:x="255" fg:w="2"/><text x="28.8017%" y="383.50"></text></g><g><title>_cond_resched (1 samples, 0.11%)</title><rect x="28.6996%" y="357" width="0.1121%" height="15" fill="rgb(240,228,18)" fg:x="256" fg:w="1"/><text x="28.9138%" y="367.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="28.9238%" y="357" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="258" fg:w="1"/><text x="29.1381%" y="367.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="29.0359%" y="357" width="0.1121%" height="15" fill="rgb(217,35,53)" fg:x="259" fg:w="1"/><text x="29.2502%" y="367.50"></text></g><g><title>release_sock (4 samples, 0.45%)</title><rect x="28.8117%" y="373" width="0.4484%" height="15" fill="rgb(217,78,19)" fg:x="257" fg:w="4"/><text x="29.0259%" y="383.50"></text></g><g><title>tcp_release_cb (1 samples, 0.11%)</title><rect x="29.1480%" y="357" width="0.1121%" height="15" fill="rgb(230,144,50)" fg:x="260" fg:w="1"/><text x="29.3623%" y="367.50"></text></g><g><title>_copy_to_iter (14 samples, 1.57%)</title><rect x="29.5964%" y="341" width="1.5695%" height="15" fill="rgb(220,50,42)" fg:x="264" fg:w="14"/><text x="29.8107%" y="351.50">_..</text></g><g><title>copy_user_enhanced_fast_string (13 samples, 1.46%)</title><rect x="29.7085%" y="325" width="1.4574%" height="15" fill="rgb(254,4,9)" fg:x="265" fg:w="13"/><text x="29.9228%" y="335.50"></text></g><g><title>skb_copy_datagram_iter (18 samples, 2.02%)</title><rect x="29.2601%" y="373" width="2.0179%" height="15" fill="rgb(241,149,22)" fg:x="261" fg:w="18"/><text x="29.4744%" y="383.50">s..</text></g><g><title>__skb_datagram_iter (17 samples, 1.91%)</title><rect x="29.3722%" y="357" width="1.9058%" height="15" fill="rgb(248,96,51)" fg:x="262" fg:w="17"/><text x="29.5865%" y="367.50">_..</text></g><g><title>simple_copy_to_iter (1 samples, 0.11%)</title><rect x="31.1659%" y="341" width="0.1121%" height="15" fill="rgb(239,76,11)" fg:x="278" fg:w="1"/><text x="31.3802%" y="351.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="31.1659%" y="325" width="0.1121%" height="15" fill="rgb(218,1,22)" fg:x="278" fg:w="1"/><text x="31.3802%" y="335.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.11%)</title><rect x="31.1659%" y="309" width="0.1121%" height="15" fill="rgb(216,204,49)" fg:x="278" fg:w="1"/><text x="31.3802%" y="319.50"></text></g><g><title>inet_recvmsg (129 samples, 14.46%)</title><rect x="17.3767%" y="405" width="14.4619%" height="15" fill="rgb(247,19,13)" fg:x="155" fg:w="129"/><text x="17.5910%" y="415.50">inet_recvmsg</text></g><g><title>tcp_recvmsg (125 samples, 14.01%)</title><rect x="17.8251%" y="389" width="14.0135%" height="15" fill="rgb(228,39,8)" fg:x="159" fg:w="125"/><text x="18.0394%" y="399.50">tcp_recvmsg</text></g><g><title>tcp_rcv_space_adjust (5 samples, 0.56%)</title><rect x="31.2780%" y="373" width="0.5605%" height="15" fill="rgb(251,209,13)" fg:x="279" fg:w="5"/><text x="31.4923%" y="383.50"></text></g><g><title>tcp_mstamp_refresh (4 samples, 0.45%)</title><rect x="31.3901%" y="357" width="0.4484%" height="15" fill="rgb(229,63,29)" fg:x="280" fg:w="4"/><text x="31.6044%" y="367.50"></text></g><g><title>ktime_get (4 samples, 0.45%)</title><rect x="31.3901%" y="341" width="0.4484%" height="15" fill="rgb(226,51,13)" fg:x="280" fg:w="4"/><text x="31.6044%" y="351.50"></text></g><g><title>kvm_clock_get_cycles (3 samples, 0.34%)</title><rect x="31.5022%" y="325" width="0.3363%" height="15" fill="rgb(213,218,37)" fg:x="281" fg:w="3"/><text x="31.7165%" y="335.50"></text></g><g><title>pvclock_clocksource_read (2 samples, 0.22%)</title><rect x="31.6143%" y="309" width="0.2242%" height="15" fill="rgb(246,59,10)" fg:x="282" fg:w="2"/><text x="31.8286%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (148 samples, 16.59%)</title><rect x="16.5919%" y="469" width="16.5919%" height="15" fill="rgb(205,226,15)" fg:x="148" fg:w="148"/><text x="16.8062%" y="479.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (147 samples, 16.48%)</title><rect x="16.7040%" y="453" width="16.4798%" height="15" fill="rgb(220,74,14)" fg:x="149" fg:w="147"/><text x="16.9183%" y="463.50">do_syscall_64</text></g><g><title>__x64_sys_recvfrom (146 samples, 16.37%)</title><rect x="16.8161%" y="437" width="16.3677%" height="15" fill="rgb(244,149,45)" fg:x="150" fg:w="146"/><text x="17.0304%" y="447.50">__x64_sys_recvfrom</text></g><g><title>__sys_recvfrom (145 samples, 16.26%)</title><rect x="16.9283%" y="421" width="16.2556%" height="15" fill="rgb(223,213,54)" fg:x="151" fg:w="145"/><text x="17.1425%" y="431.50">__sys_recvfrom</text></g><g><title>sock_recvmsg (12 samples, 1.35%)</title><rect x="31.8386%" y="405" width="1.3453%" height="15" fill="rgb(241,13,25)" fg:x="284" fg:w="12"/><text x="32.0529%" y="415.50"></text></g><g><title>security_socket_recvmsg (10 samples, 1.12%)</title><rect x="32.0628%" y="389" width="1.1211%" height="15" fill="rgb(251,47,32)" fg:x="286" fg:w="10"/><text x="32.2771%" y="399.50"></text></g><g><title>aa_sk_perm (8 samples, 0.90%)</title><rect x="32.2870%" y="373" width="0.8969%" height="15" fill="rgb(235,5,54)" fg:x="288" fg:w="8"/><text x="32.5013%" y="383.50"></text></g><g><title>recv (162 samples, 18.16%)</title><rect x="15.2466%" y="501" width="18.1614%" height="15" fill="rgb(227,69,32)" fg:x="136" fg:w="162"/><text x="15.4609%" y="511.50">recv</text></g><g><title>__libc_recv (160 samples, 17.94%)</title><rect x="15.4709%" y="485" width="17.9372%" height="15" fill="rgb(249,36,48)" fg:x="138" fg:w="160"/><text x="15.6851%" y="495.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (2 samples, 0.22%)</title><rect x="33.1839%" y="469" width="0.2242%" height="15" fill="rgb(230,222,6)" fg:x="296" fg:w="2"/><text x="33.3981%" y="479.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="33.6323%" y="469" width="0.2242%" height="15" fill="rgb(247,113,52)" fg:x="300" fg:w="2"/><text x="33.8466%" y="479.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (6 samples, 0.67%)</title><rect x="33.4081%" y="501" width="0.6726%" height="15" fill="rgb(216,50,33)" fg:x="298" fg:w="6"/><text x="33.6224%" y="511.50"></text></g><g><title>memcpy (4 samples, 0.45%)</title><rect x="33.6323%" y="485" width="0.4484%" height="15" fill="rgb(232,135,4)" fg:x="300" fg:w="4"/><text x="33.8466%" y="495.50"></text></g><g><title>__asan_region_is_poisoned (2 samples, 0.22%)</title><rect x="33.8565%" y="469" width="0.2242%" height="15" fill="rgb(252,76,50)" fg:x="302" fg:w="2"/><text x="34.0708%" y="479.50"></text></g><g><title>__sanitizer::mem_is_zero (2 samples, 0.22%)</title><rect x="33.8565%" y="453" width="0.2242%" height="15" fill="rgb(245,148,37)" fg:x="302" fg:w="2"/><text x="34.0708%" y="463.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.11%)</title><rect x="34.3049%" y="485" width="0.1121%" height="15" fill="rgb(213,211,15)" fg:x="306" fg:w="1"/><text x="34.5192%" y="495.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.78%)</title><rect x="35.9865%" y="421" width="0.7848%" height="15" fill="rgb(247,113,52)" fg:x="321" fg:w="7"/><text x="36.2008%" y="431.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.11%)</title><rect x="36.6592%" y="405" width="0.1121%" height="15" fill="rgb(208,26,13)" fg:x="327" fg:w="1"/><text x="36.8735%" y="415.50"></text></g><g><title>memcpy (16 samples, 1.79%)</title><rect x="35.3139%" y="437" width="1.7937%" height="15" fill="rgb(232,135,4)" fg:x="315" fg:w="16"/><text x="35.5282%" y="447.50">m..</text></g><g><title>__asan_region_is_poisoned (3 samples, 0.34%)</title><rect x="36.7713%" y="421" width="0.3363%" height="15" fill="rgb(252,76,50)" fg:x="328" fg:w="3"/><text x="36.9856%" y="431.50"></text></g><g><title>__sanitizer::mem_is_zero (2 samples, 0.22%)</title><rect x="36.8834%" y="405" width="0.2242%" height="15" fill="rgb(245,148,37)" fg:x="329" fg:w="2"/><text x="37.0977%" y="415.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="39.5740%" y="373" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="353" fg:w="1"/><text x="39.7883%" y="383.50"></text></g><g><title>__kvm_handle_async_pf (1 samples, 0.11%)</title><rect x="39.7982%" y="341" width="0.1121%" height="15" fill="rgb(236,45,5)" fg:x="355" fg:w="1"/><text x="40.0125%" y="351.50"></text></g><g><title>kvm_read_and_reset_apf_flags (1 samples, 0.11%)</title><rect x="39.7982%" y="325" width="0.1121%" height="15" fill="rgb(240,22,44)" fg:x="355" fg:w="1"/><text x="40.0125%" y="335.50"></text></g><g><title>find_vma (1 samples, 0.11%)</title><rect x="40.2466%" y="325" width="0.1121%" height="15" fill="rgb(227,147,34)" fg:x="359" fg:w="1"/><text x="40.4609%" y="335.50"></text></g><g><title>vmacache_find (1 samples, 0.11%)</title><rect x="40.2466%" y="309" width="0.1121%" height="15" fill="rgb(248,72,26)" fg:x="359" fg:w="1"/><text x="40.4609%" y="319.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.11%)</title><rect x="40.9193%" y="309" width="0.1121%" height="15" fill="rgb(209,149,49)" fg:x="365" fg:w="1"/><text x="41.1336%" y="319.50"></text></g><g><title>__page_set_anon_rmap (1 samples, 0.11%)</title><rect x="41.0314%" y="309" width="0.1121%" height="15" fill="rgb(233,29,49)" fg:x="366" fg:w="1"/><text x="41.2457%" y="319.50"></text></g><g><title>add_mm_counter_fast (1 samples, 0.11%)</title><rect x="41.1435%" y="309" width="0.1121%" height="15" fill="rgb(222,45,9)" fg:x="367" fg:w="1"/><text x="41.3578%" y="319.50"></text></g><g><title>_cond_resched (1 samples, 0.11%)</title><rect x="41.9283%" y="277" width="0.1121%" height="15" fill="rgb(240,228,18)" fg:x="374" fg:w="1"/><text x="42.1425%" y="287.50"></text></g><g><title>alloc_pages_vma (14 samples, 1.57%)</title><rect x="41.2556%" y="309" width="1.5695%" height="15" fill="rgb(242,79,46)" fg:x="368" fg:w="14"/><text x="41.4699%" y="319.50">a..</text></g><g><title>__alloc_pages_nodemask (14 samples, 1.57%)</title><rect x="41.2556%" y="293" width="1.5695%" height="15" fill="rgb(245,49,10)" fg:x="368" fg:w="14"/><text x="41.4699%" y="303.50">_..</text></g><g><title>get_page_from_freelist (7 samples, 0.78%)</title><rect x="42.0404%" y="277" width="0.7848%" height="15" fill="rgb(246,35,53)" fg:x="375" fg:w="7"/><text x="42.2546%" y="287.50"></text></g><g><title>prep_new_page (6 samples, 0.67%)</title><rect x="42.1525%" y="261" width="0.6726%" height="15" fill="rgb(220,94,29)" fg:x="376" fg:w="6"/><text x="42.3668%" y="271.50"></text></g><g><title>kernel_init_free_pages (6 samples, 0.67%)</title><rect x="42.1525%" y="245" width="0.6726%" height="15" fill="rgb(253,165,35)" fg:x="376" fg:w="6"/><text x="42.3668%" y="255.50"></text></g><g><title>clear_page_erms (5 samples, 0.56%)</title><rect x="42.2646%" y="229" width="0.5605%" height="15" fill="rgb(253,135,51)" fg:x="377" fg:w="5"/><text x="42.4789%" y="239.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="43.0493%" y="293" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="384" fg:w="1"/><text x="43.2636%" y="303.50"></text></g><g><title>cgroup_throttle_swaprate (5 samples, 0.56%)</title><rect x="42.8251%" y="309" width="0.5605%" height="15" fill="rgb(212,88,13)" fg:x="382" fg:w="5"/><text x="43.0394%" y="319.50"></text></g><g><title>kthread_blkcg (2 samples, 0.22%)</title><rect x="43.1614%" y="293" width="0.2242%" height="15" fill="rgb(205,93,7)" fg:x="385" fg:w="2"/><text x="43.3757%" y="303.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.11%)</title><rect x="43.3857%" y="277" width="0.1121%" height="15" fill="rgb(215,186,14)" fg:x="387" fg:w="1"/><text x="43.5999%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.11%)</title><rect x="43.3857%" y="261" width="0.1121%" height="15" fill="rgb(247,169,19)" fg:x="387" fg:w="1"/><text x="43.5999%" y="271.50"></text></g><g><title>lru_cache_add (2 samples, 0.22%)</title><rect x="43.3857%" y="309" width="0.2242%" height="15" fill="rgb(205,98,13)" fg:x="387" fg:w="2"/><text x="43.5999%" y="319.50"></text></g><g><title>pagevec_lru_move_fn (2 samples, 0.22%)</title><rect x="43.3857%" y="293" width="0.2242%" height="15" fill="rgb(220,168,32)" fg:x="387" fg:w="2"/><text x="43.5999%" y="303.50"></text></g><g><title>release_pages (1 samples, 0.11%)</title><rect x="43.4978%" y="277" width="0.1121%" height="15" fill="rgb(247,202,4)" fg:x="388" fg:w="1"/><text x="43.7120%" y="287.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (1 samples, 0.11%)</title><rect x="43.6099%" y="293" width="0.1121%" height="15" fill="rgb(241,41,49)" fg:x="389" fg:w="1"/><text x="43.8242%" y="303.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.11%)</title><rect x="43.6099%" y="277" width="0.1121%" height="15" fill="rgb(209,149,49)" fg:x="389" fg:w="1"/><text x="43.8242%" y="287.50"></text></g><g><title>mem_cgroup_charge (2 samples, 0.22%)</title><rect x="43.6099%" y="309" width="0.2242%" height="15" fill="rgb(232,189,48)" fg:x="389" fg:w="2"/><text x="43.8242%" y="319.50"></text></g><g><title>try_charge (1 samples, 0.11%)</title><rect x="43.7220%" y="293" width="0.1121%" height="15" fill="rgb(208,116,22)" fg:x="390" fg:w="1"/><text x="43.9363%" y="303.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.11%)</title><rect x="43.9462%" y="293" width="0.1121%" height="15" fill="rgb(240,209,16)" fg:x="392" fg:w="1"/><text x="44.1605%" y="303.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.11%)</title><rect x="43.9462%" y="277" width="0.1121%" height="15" fill="rgb(214,74,36)" fg:x="392" fg:w="1"/><text x="44.1605%" y="287.50"></text></g><g><title>do_user_addr_fault (39 samples, 4.37%)</title><rect x="39.9103%" y="341" width="4.3722%" height="15" fill="rgb(253,37,52)" fg:x="356" fg:w="39"/><text x="40.1246%" y="351.50">do_use..</text></g><g><title>handle_mm_fault (35 samples, 3.92%)</title><rect x="40.3587%" y="325" width="3.9238%" height="15" fill="rgb(247,31,49)" fg:x="360" fg:w="35"/><text x="40.5730%" y="335.50">handl..</text></g><g><title>page_add_new_anon_rmap (4 samples, 0.45%)</title><rect x="43.8341%" y="309" width="0.4484%" height="15" fill="rgb(242,29,16)" fg:x="391" fg:w="4"/><text x="44.0484%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.22%)</title><rect x="44.0583%" y="293" width="0.2242%" height="15" fill="rgb(247,169,19)" fg:x="393" fg:w="2"/><text x="44.2726%" y="303.50"></text></g><g><title>__mod_memcg_state.part.0 (1 samples, 0.11%)</title><rect x="44.1704%" y="277" width="0.1121%" height="15" fill="rgb(252,169,8)" fg:x="394" fg:w="1"/><text x="44.3847%" y="287.50"></text></g><g><title>[libc-2.31.so] (49 samples, 5.49%)</title><rect x="38.9013%" y="389" width="5.4933%" height="15" fill="rgb(247,113,52)" fg:x="347" fg:w="49"/><text x="39.1156%" y="399.50">[libc-2...</text></g><g><title>asm_exc_page_fault (42 samples, 4.71%)</title><rect x="39.6861%" y="373" width="4.7085%" height="15" fill="rgb(208,26,13)" fg:x="354" fg:w="42"/><text x="39.9004%" y="383.50">asm_exc..</text></g><g><title>exc_page_fault (41 samples, 4.60%)</title><rect x="39.7982%" y="357" width="4.5964%" height="15" fill="rgb(216,51,29)" fg:x="355" fg:w="41"/><text x="40.0125%" y="367.50">exc_pag..</text></g><g><title>irqentry_enter (1 samples, 0.11%)</title><rect x="44.2825%" y="341" width="0.1121%" height="15" fill="rgb(248,13,40)" fg:x="395" fg:w="1"/><text x="44.4968%" y="351.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.11%)</title><rect x="44.2825%" y="325" width="0.1121%" height="15" fill="rgb(211,8,20)" fg:x="395" fg:w="1"/><text x="44.4968%" y="335.50"></text></g><g><title>__sanitizer::BlockingMutex::Lock (1 samples, 0.11%)</title><rect x="44.7309%" y="341" width="0.1121%" height="15" fill="rgb(209,146,23)" fg:x="399" fg:w="1"/><text x="44.9452%" y="351.50"></text></g><g><title>__list_del_entry_valid (1 samples, 0.11%)</title><rect x="45.1794%" y="197" width="0.1121%" height="15" fill="rgb(224,110,12)" fg:x="403" fg:w="1"/><text x="45.3937%" y="207.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.45%)</title><rect x="45.0673%" y="245" width="0.4484%" height="15" fill="rgb(242,79,46)" fg:x="402" fg:w="4"/><text x="45.2816%" y="255.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.45%)</title><rect x="45.0673%" y="229" width="0.4484%" height="15" fill="rgb(245,49,10)" fg:x="402" fg:w="4"/><text x="45.2816%" y="239.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.34%)</title><rect x="45.1794%" y="213" width="0.3363%" height="15" fill="rgb(246,35,53)" fg:x="403" fg:w="3"/><text x="45.3937%" y="223.50"></text></g><g><title>prep_new_page (2 samples, 0.22%)</title><rect x="45.2915%" y="197" width="0.2242%" height="15" fill="rgb(220,94,29)" fg:x="404" fg:w="2"/><text x="45.5058%" y="207.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.22%)</title><rect x="45.2915%" y="181" width="0.2242%" height="15" fill="rgb(253,165,35)" fg:x="404" fg:w="2"/><text x="45.5058%" y="191.50"></text></g><g><title>clear_page_erms (2 samples, 0.22%)</title><rect x="45.2915%" y="165" width="0.2242%" height="15" fill="rgb(253,135,51)" fg:x="404" fg:w="2"/><text x="45.5058%" y="175.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.11%)</title><rect x="45.5157%" y="245" width="0.1121%" height="15" fill="rgb(232,189,48)" fg:x="406" fg:w="1"/><text x="45.7300%" y="255.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.90%)</title><rect x="44.8430%" y="325" width="0.8969%" height="15" fill="rgb(247,113,52)" fg:x="400" fg:w="8"/><text x="45.0573%" y="335.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.78%)</title><rect x="44.9552%" y="309" width="0.7848%" height="15" fill="rgb(208,26,13)" fg:x="401" fg:w="7"/><text x="45.1694%" y="319.50"></text></g><g><title>exc_page_fault (7 samples, 0.78%)</title><rect x="44.9552%" y="293" width="0.7848%" height="15" fill="rgb(216,51,29)" fg:x="401" fg:w="7"/><text x="45.1694%" y="303.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.78%)</title><rect x="44.9552%" y="277" width="0.7848%" height="15" fill="rgb(253,37,52)" fg:x="401" fg:w="7"/><text x="45.1694%" y="287.50"></text></g><g><title>handle_mm_fault (7 samples, 0.78%)</title><rect x="44.9552%" y="261" width="0.7848%" height="15" fill="rgb(247,31,49)" fg:x="401" fg:w="7"/><text x="45.1694%" y="271.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.11%)</title><rect x="45.6278%" y="245" width="0.1121%" height="15" fill="rgb(242,29,16)" fg:x="407" fg:w="1"/><text x="45.8421%" y="255.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.11%)</title><rect x="45.6278%" y="229" width="0.1121%" height="15" fill="rgb(247,169,19)" fg:x="407" fg:w="1"/><text x="45.8421%" y="239.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.34%)</title><rect x="45.7399%" y="293" width="0.3363%" height="15" fill="rgb(208,26,13)" fg:x="408" fg:w="3"/><text x="45.9542%" y="303.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.11%)</title><rect x="46.0762%" y="261" width="0.1121%" height="15" fill="rgb(211,8,20)" fg:x="411" fg:w="1"/><text x="46.2905%" y="271.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.11%)</title><rect x="46.0762%" y="245" width="0.1121%" height="15" fill="rgb(210,87,27)" fg:x="411" fg:w="1"/><text x="46.2905%" y="255.50"></text></g><g><title>__split_vma (2 samples, 0.22%)</title><rect x="46.4126%" y="197" width="0.2242%" height="15" fill="rgb(231,148,17)" fg:x="414" fg:w="2"/><text x="46.6268%" y="207.50"></text></g><g><title>vm_area_dup (2 samples, 0.22%)</title><rect x="46.4126%" y="181" width="0.2242%" height="15" fill="rgb(241,106,19)" fg:x="414" fg:w="2"/><text x="46.6268%" y="191.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.11%)</title><rect x="46.5247%" y="165" width="0.1121%" height="15" fill="rgb(223,51,51)" fg:x="415" fg:w="1"/><text x="46.7389%" y="175.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (1 samples, 0.11%)</title><rect x="46.5247%" y="149" width="0.1121%" height="15" fill="rgb(212,11,50)" fg:x="415" fg:w="1"/><text x="46.7389%" y="159.50"></text></g><g><title>obj_cgroup_charge (1 samples, 0.11%)</title><rect x="46.5247%" y="133" width="0.1121%" height="15" fill="rgb(236,185,43)" fg:x="415" fg:w="1"/><text x="46.7389%" y="143.50"></text></g><g><title>free_pgtables (1 samples, 0.11%)</title><rect x="46.6368%" y="181" width="0.1121%" height="15" fill="rgb(248,44,31)" fg:x="416" fg:w="1"/><text x="46.8511%" y="191.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.11%)</title><rect x="46.6368%" y="165" width="0.1121%" height="15" fill="rgb(210,87,27)" fg:x="416" fg:w="1"/><text x="46.8511%" y="175.50"></text></g><g><title>lru_add_drain (1 samples, 0.11%)</title><rect x="46.7489%" y="181" width="0.1121%" height="15" fill="rgb(252,215,2)" fg:x="417" fg:w="1"/><text x="46.9632%" y="191.50"></text></g><g><title>lru_add_drain_cpu (1 samples, 0.11%)</title><rect x="46.7489%" y="165" width="0.1121%" height="15" fill="rgb(207,80,1)" fg:x="417" fg:w="1"/><text x="46.9632%" y="175.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.11%)</title><rect x="46.7489%" y="149" width="0.1121%" height="15" fill="rgb(220,168,32)" fg:x="417" fg:w="1"/><text x="46.9632%" y="159.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.11%)</title><rect x="46.7489%" y="133" width="0.1121%" height="15" fill="rgb(215,186,14)" fg:x="417" fg:w="1"/><text x="46.9632%" y="143.50"></text></g><g><title>unmap_page_range (1 samples, 0.11%)</title><rect x="46.8610%" y="165" width="0.1121%" height="15" fill="rgb(216,127,1)" fg:x="418" fg:w="1"/><text x="47.0753%" y="175.50"></text></g><g><title>__do_munmap (6 samples, 0.67%)</title><rect x="46.4126%" y="213" width="0.6726%" height="15" fill="rgb(225,34,24)" fg:x="414" fg:w="6"/><text x="46.6268%" y="223.50"></text></g><g><title>unmap_region (4 samples, 0.45%)</title><rect x="46.6368%" y="197" width="0.4484%" height="15" fill="rgb(215,221,10)" fg:x="416" fg:w="4"/><text x="46.8511%" y="207.50"></text></g><g><title>unmap_vmas (2 samples, 0.22%)</title><rect x="46.8610%" y="181" width="0.2242%" height="15" fill="rgb(216,135,47)" fg:x="418" fg:w="2"/><text x="47.0753%" y="191.50"></text></g><g><title>unmap_single_vma (1 samples, 0.11%)</title><rect x="46.9731%" y="165" width="0.1121%" height="15" fill="rgb(251,169,1)" fg:x="419" fg:w="1"/><text x="47.1874%" y="175.50"></text></g><g><title>__sanitizer::MmapFixedImpl (13 samples, 1.46%)</title><rect x="45.7399%" y="325" width="1.4574%" height="15" fill="rgb(207,87,16)" fg:x="408" fg:w="13"/><text x="45.9542%" y="335.50"></text></g><g><title>__sanitizer::internal_mmap (13 samples, 1.46%)</title><rect x="45.7399%" y="309" width="1.4574%" height="15" fill="rgb(254,86,31)" fg:x="408" fg:w="13"/><text x="45.9542%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 1.12%)</title><rect x="46.0762%" y="293" width="1.1211%" height="15" fill="rgb(205,226,15)" fg:x="411" fg:w="10"/><text x="46.2905%" y="303.50"></text></g><g><title>do_syscall_64 (10 samples, 1.12%)</title><rect x="46.0762%" y="277" width="1.1211%" height="15" fill="rgb(220,74,14)" fg:x="411" fg:w="10"/><text x="46.2905%" y="287.50"></text></g><g><title>vm_mmap_pgoff (9 samples, 1.01%)</title><rect x="46.1883%" y="261" width="1.0090%" height="15" fill="rgb(226,196,1)" fg:x="412" fg:w="9"/><text x="46.4026%" y="271.50"></text></g><g><title>do_mmap (9 samples, 1.01%)</title><rect x="46.1883%" y="245" width="1.0090%" height="15" fill="rgb(228,25,27)" fg:x="412" fg:w="9"/><text x="46.4026%" y="255.50"></text></g><g><title>mmap_region (9 samples, 1.01%)</title><rect x="46.1883%" y="229" width="1.0090%" height="15" fill="rgb(233,57,38)" fg:x="412" fg:w="9"/><text x="46.4026%" y="239.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="47.0852%" y="213" width="0.1121%" height="15" fill="rgb(252,32,1)" fg:x="420" fg:w="1"/><text x="47.2995%" y="223.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="47.0852%" y="197" width="0.1121%" height="15" fill="rgb(241,203,1)" fg:x="420" fg:w="1"/><text x="47.2995%" y="207.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="47.0852%" y="181" width="0.1121%" height="15" fill="rgb(227,133,21)" fg:x="420" fg:w="1"/><text x="47.2995%" y="191.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.11%)</title><rect x="47.0852%" y="165" width="0.1121%" height="15" fill="rgb(225,127,18)" fg:x="420" fg:w="1"/><text x="47.2995%" y="175.50"></text></g><g><title>__perf_event__output_id_sample (1 samples, 0.11%)</title><rect x="47.0852%" y="149" width="0.1121%" height="15" fill="rgb(209,115,25)" fg:x="420" fg:w="1"/><text x="47.2995%" y="159.50"></text></g><g><title>perf_output_copy (1 samples, 0.11%)</title><rect x="47.0852%" y="133" width="0.1121%" height="15" fill="rgb(250,195,20)" fg:x="420" fg:w="1"/><text x="47.2995%" y="143.50"></text></g><g><title>memcpy_erms (1 samples, 0.11%)</title><rect x="47.0852%" y="117" width="0.1121%" height="15" fill="rgb(234,99,0)" fg:x="420" fg:w="1"/><text x="47.2995%" y="127.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="47.1973%" y="309" width="0.1121%" height="15" fill="rgb(247,113,52)" fg:x="421" fg:w="1"/><text x="47.4116%" y="319.50"></text></g><g><title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (27 samples, 3.03%)</title><rect x="44.3946%" y="389" width="3.0269%" height="15" fill="rgb(218,174,54)" fg:x="396" fg:w="27"/><text x="44.6089%" y="399.50">__s..</text></g><g><title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (24 samples, 2.69%)</title><rect x="44.7309%" y="373" width="2.6906%" height="15" fill="rgb(241,35,21)" fg:x="399" fg:w="24"/><text x="44.9452%" y="383.50">__s..</text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (24 samples, 2.69%)</title><rect x="44.7309%" y="357" width="2.6906%" height="15" fill="rgb(230,18,53)" fg:x="399" fg:w="24"/><text x="44.9452%" y="367.50">__s..</text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (23 samples, 2.58%)</title><rect x="44.8430%" y="341" width="2.5785%" height="15" fill="rgb(210,154,38)" fg:x="400" fg:w="23"/><text x="45.0573%" y="351.50">__s..</text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::EnsureFreeArraySpace (2 samples, 0.22%)</title><rect x="47.1973%" y="325" width="0.2242%" height="15" fill="rgb(250,99,25)" fg:x="421" fg:w="2"/><text x="47.4116%" y="335.50"></text></g><g><title>__sanitizer::MmapFixedImpl (1 samples, 0.11%)</title><rect x="47.3094%" y="309" width="0.1121%" height="15" fill="rgb(207,87,16)" fg:x="422" fg:w="1"/><text x="47.5237%" y="319.50"></text></g><g><title>__sanitizer::internal_mmap (1 samples, 0.11%)</title><rect x="47.3094%" y="293" width="0.1121%" height="15" fill="rgb(254,86,31)" fg:x="422" fg:w="1"/><text x="47.5237%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="47.3094%" y="277" width="0.1121%" height="15" fill="rgb(205,226,15)" fg:x="422" fg:w="1"/><text x="47.5237%" y="287.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="47.3094%" y="261" width="0.1121%" height="15" fill="rgb(220,74,14)" fg:x="422" fg:w="1"/><text x="47.5237%" y="271.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.11%)</title><rect x="47.3094%" y="245" width="0.1121%" height="15" fill="rgb(226,196,1)" fg:x="422" fg:w="1"/><text x="47.5237%" y="255.50"></text></g><g><title>do_mmap (1 samples, 0.11%)</title><rect x="47.3094%" y="229" width="0.1121%" height="15" fill="rgb(228,25,27)" fg:x="422" fg:w="1"/><text x="47.5237%" y="239.50"></text></g><g><title>mmap_region (1 samples, 0.11%)</title><rect x="47.3094%" y="213" width="0.1121%" height="15" fill="rgb(233,57,38)" fg:x="422" fg:w="1"/><text x="47.5237%" y="223.50"></text></g><g><title>__do_munmap (1 samples, 0.11%)</title><rect x="47.3094%" y="197" width="0.1121%" height="15" fill="rgb(225,34,24)" fg:x="422" fg:w="1"/><text x="47.5237%" y="207.50"></text></g><g><title>__split_vma (1 samples, 0.11%)</title><rect x="47.3094%" y="181" width="0.1121%" height="15" fill="rgb(231,148,17)" fg:x="422" fg:w="1"/><text x="47.5237%" y="191.50"></text></g><g><title>__sanitizer::RunMallocHooks (1 samples, 0.11%)</title><rect x="47.4215%" y="389" width="0.1121%" height="15" fill="rgb(250,71,11)" fg:x="423" fg:w="1"/><text x="47.6358%" y="399.50"></text></g><g><title>__sanitizer::StackDepotPut (4 samples, 0.45%)</title><rect x="47.5336%" y="389" width="0.4484%" height="15" fill="rgb(224,15,52)" fg:x="424" fg:w="4"/><text x="47.7479%" y="399.50"></text></g><g><title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (4 samples, 0.45%)</title><rect x="47.5336%" y="373" width="0.4484%" height="15" fill="rgb(235,106,26)" fg:x="424" fg:w="4"/><text x="47.7479%" y="383.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.11%)</title><rect x="47.8700%" y="357" width="0.1121%" height="15" fill="rgb(208,26,13)" fg:x="427" fg:w="1"/><text x="48.0842%" y="367.50"></text></g><g><title>exc_page_fault (1 samples, 0.11%)</title><rect x="47.8700%" y="341" width="0.1121%" height="15" fill="rgb(216,51,29)" fg:x="427" fg:w="1"/><text x="48.0842%" y="351.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="47.8700%" y="325" width="0.1121%" height="15" fill="rgb(253,37,52)" fg:x="427" fg:w="1"/><text x="48.0842%" y="335.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="47.8700%" y="309" width="0.1121%" height="15" fill="rgb(247,31,49)" fg:x="427" fg:w="1"/><text x="48.0842%" y="319.50"></text></g><g><title>wp_page_copy (1 samples, 0.11%)</title><rect x="47.8700%" y="293" width="0.1121%" height="15" fill="rgb(231,223,9)" fg:x="427" fg:w="1"/><text x="48.0842%" y="303.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="47.8700%" y="277" width="0.1121%" height="15" fill="rgb(242,79,46)" fg:x="427" fg:w="1"/><text x="48.0842%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="47.8700%" y="261" width="0.1121%" height="15" fill="rgb(245,49,10)" fg:x="427" fg:w="1"/><text x="48.0842%" y="271.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="47.8700%" y="245" width="0.1121%" height="15" fill="rgb(246,35,53)" fg:x="427" fg:w="1"/><text x="48.0842%" y="255.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.11%)</title><rect x="48.4305%" y="325" width="0.1121%" height="15" fill="rgb(209,149,49)" fg:x="432" fg:w="1"/><text x="48.6448%" y="335.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.34%)</title><rect x="48.7668%" y="309" width="0.3363%" height="15" fill="rgb(242,79,46)" fg:x="435" fg:w="3"/><text x="48.9811%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.34%)</title><rect x="48.7668%" y="293" width="0.3363%" height="15" fill="rgb(245,49,10)" fg:x="435" fg:w="3"/><text x="48.9811%" y="303.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.22%)</title><rect x="48.8789%" y="277" width="0.2242%" height="15" fill="rgb(246,35,53)" fg:x="436" fg:w="2"/><text x="49.0932%" y="287.50"></text></g><g><title>prep_new_page (2 samples, 0.22%)</title><rect x="48.8789%" y="261" width="0.2242%" height="15" fill="rgb(220,94,29)" fg:x="436" fg:w="2"/><text x="49.0932%" y="271.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.22%)</title><rect x="48.8789%" y="245" width="0.2242%" height="15" fill="rgb(253,165,35)" fg:x="436" fg:w="2"/><text x="49.0932%" y="255.50"></text></g><g><title>clear_page_erms (2 samples, 0.22%)</title><rect x="48.8789%" y="229" width="0.2242%" height="15" fill="rgb(253,135,51)" fg:x="436" fg:w="2"/><text x="49.0932%" y="239.50"></text></g><g><title>handle_mm_fault (12 samples, 1.35%)</title><rect x="48.0942%" y="341" width="1.3453%" height="15" fill="rgb(247,31,49)" fg:x="429" fg:w="12"/><text x="48.3085%" y="351.50"></text></g><g><title>wp_page_copy (8 samples, 0.90%)</title><rect x="48.5426%" y="325" width="0.8969%" height="15" fill="rgb(231,223,9)" fg:x="433" fg:w="8"/><text x="48.7569%" y="335.50"></text></g><g><title>ptep_clear_flush (3 samples, 0.34%)</title><rect x="49.1031%" y="309" width="0.3363%" height="15" fill="rgb(210,44,11)" fg:x="438" fg:w="3"/><text x="49.3174%" y="319.50"></text></g><g><title>flush_tlb_mm_range (3 samples, 0.34%)</title><rect x="49.1031%" y="293" width="0.3363%" height="15" fill="rgb(233,143,54)" fg:x="438" fg:w="3"/><text x="49.3174%" y="303.50"></text></g><g><title>cpumask_any_but (1 samples, 0.11%)</title><rect x="49.3274%" y="277" width="0.1121%" height="15" fill="rgb(237,52,10)" fg:x="440" fg:w="1"/><text x="49.5416%" y="287.50"></text></g><g><title>_find_next_bit.constprop.0 (1 samples, 0.11%)</title><rect x="49.3274%" y="261" width="0.1121%" height="15" fill="rgb(225,176,24)" fg:x="440" fg:w="1"/><text x="49.5416%" y="271.50"></text></g><g><title>exc_page_fault (14 samples, 1.57%)</title><rect x="47.9821%" y="373" width="1.5695%" height="15" fill="rgb(216,51,29)" fg:x="428" fg:w="14"/><text x="48.1963%" y="383.50">e..</text></g><g><title>do_user_addr_fault (13 samples, 1.46%)</title><rect x="48.0942%" y="357" width="1.4574%" height="15" fill="rgb(253,37,52)" fg:x="429" fg:w="13"/><text x="48.3085%" y="367.50"></text></g><g><title>up_read (1 samples, 0.11%)</title><rect x="49.4395%" y="341" width="0.1121%" height="15" fill="rgb(211,225,19)" fg:x="441" fg:w="1"/><text x="49.6537%" y="351.50"></text></g><g><title>__asan::asan_memalign (104 samples, 11.66%)</title><rect x="38.0045%" y="421" width="11.6592%" height="15" fill="rgb(248,206,7)" fg:x="339" fg:w="104"/><text x="38.2188%" y="431.50">__asan::asan_memalign</text></g><g><title>__asan::Allocator::Allocate (103 samples, 11.55%)</title><rect x="38.1166%" y="405" width="11.5471%" height="15" fill="rgb(251,118,48)" fg:x="340" fg:w="103"/><text x="38.3309%" y="415.50">__asan::Allocator::A..</text></g><g><title>asm_exc_page_fault (15 samples, 1.68%)</title><rect x="47.9821%" y="389" width="1.6816%" height="15" fill="rgb(208,26,13)" fg:x="428" fg:w="15"/><text x="48.1963%" y="399.50">a..</text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.11%)</title><rect x="49.5516%" y="373" width="0.1121%" height="15" fill="rgb(229,166,35)" fg:x="442" fg:w="1"/><text x="49.7659%" y="383.50"></text></g><g><title>__GI___pthread_getspecific (1 samples, 0.11%)</title><rect x="49.8879%" y="389" width="0.1121%" height="15" fill="rgb(238,82,10)" fg:x="445" fg:w="1"/><text x="50.1022%" y="399.50"></text></g><g><title>__asan::GetCurrentThread (3 samples, 0.34%)</title><rect x="49.7758%" y="405" width="0.3363%" height="15" fill="rgb(239,81,14)" fg:x="444" fg:w="3"/><text x="49.9901%" y="415.50"></text></g><g><title>__asan::AsanTSDGet (1 samples, 0.11%)</title><rect x="50.0000%" y="389" width="0.1121%" height="15" fill="rgb(206,96,24)" fg:x="446" fg:w="1"/><text x="50.2143%" y="399.50"></text></g><g><title>operator new (121 samples, 13.57%)</title><rect x="37.1076%" y="437" width="13.5650%" height="15" fill="rgb(214,91,1)" fg:x="331" fg:w="121"/><text x="37.3219%" y="447.50">operator new</text></g><g><title>__sanitizer::BufferedStackTrace::UnwindImpl (9 samples, 1.01%)</title><rect x="49.6637%" y="421" width="1.0090%" height="15" fill="rgb(237,1,53)" fg:x="443" fg:w="9"/><text x="49.8780%" y="431.50"></text></g><g><title>__sanitizer::BufferedStackTrace::UnwindFast (5 samples, 0.56%)</title><rect x="50.1121%" y="405" width="0.5605%" height="15" fill="rgb(240,14,30)" fg:x="447" fg:w="5"/><text x="50.3264%" y="415.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.11%)</title><rect x="50.6726%" y="437" width="0.1121%" height="15" fill="rgb(252,219,9)" fg:x="452" fg:w="1"/><text x="50.8869%" y="447.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.11%)</title><rect x="50.7848%" y="437" width="0.1121%" height="15" fill="rgb(237,198,2)" fg:x="453" fg:w="1"/><text x="50.9990%" y="447.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.11%)</title><rect x="50.8969%" y="437" width="0.1121%" height="15" fill="rgb(246,68,35)" fg:x="454" fg:w="1"/><text x="51.1111%" y="447.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.22%)</title><rect x="51.0090%" y="437" width="0.2242%" height="15" fill="rgb(254,6,25)" fg:x="455" fg:w="2"/><text x="51.2233%" y="447.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (152 samples, 17.04%)</title><rect x="34.4170%" y="485" width="17.0404%" height="15" fill="rgb(254,182,12)" fg:x="307" fg:w="152"/><text x="34.6313%" y="495.50">std::__cxx11::basic_string&lt;char..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (148 samples, 16.59%)</title><rect x="34.8655%" y="469" width="16.5919%" height="15" fill="rgb(241,200,23)" fg:x="311" fg:w="148"/><text x="35.0798%" y="479.50">std::__cxx11::basic_string&lt;cha..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (145 samples, 16.26%)</title><rect x="35.2018%" y="453" width="16.2556%" height="15" fill="rgb(254,182,12)" fg:x="314" fg:w="145"/><text x="35.4161%" y="463.50">std::__cxx11::basic_string&lt;cha..</text></g><g><title>std::distance&lt;char*&gt; (2 samples, 0.22%)</title><rect x="51.2332%" y="437" width="0.2242%" height="15" fill="rgb(213,138,18)" fg:x="457" fg:w="2"/><text x="51.4475%" y="447.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt; (157 samples, 17.60%)</title><rect x="34.0807%" y="501" width="17.6009%" height="15" fill="rgb(217,84,11)" fg:x="304" fg:w="157"/><text x="34.2950%" y="511.50">std::__cxx11::basic_string&lt;char,..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.22%)</title><rect x="51.4574%" y="485" width="0.2242%" height="15" fill="rgb(220,74,47)" fg:x="459" fg:w="2"/><text x="51.6717%" y="495.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (6 samples, 0.67%)</title><rect x="51.6816%" y="501" width="0.6726%" height="15" fill="rgb(216,41,4)" fg:x="461" fg:w="6"/><text x="51.8959%" y="511.50"></text></g><g><title>AConnection::onPollIn (464 samples, 52.02%)</title><rect x="0.5605%" y="517" width="52.0179%" height="15" fill="rgb(238,25,4)" fg:x="5" fg:w="464"/><text x="0.7748%" y="527.50">AConnection::onPollIn</text></g><g><title>std::allocator&lt;char&gt;::allocator (2 samples, 0.22%)</title><rect x="52.3543%" y="501" width="0.2242%" height="15" fill="rgb(215,89,36)" fg:x="467" fg:w="2"/><text x="52.5685%" y="511.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.22%)</title><rect x="52.5785%" y="517" width="0.2242%" height="15" fill="rgb(254,182,12)" fg:x="469" fg:w="2"/><text x="52.7928%" y="527.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (2 samples, 0.22%)</title><rect x="52.5785%" y="501" width="0.2242%" height="15" fill="rgb(241,200,23)" fg:x="469" fg:w="2"/><text x="52.7928%" y="511.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.22%)</title><rect x="52.5785%" y="485" width="0.2242%" height="15" fill="rgb(254,182,12)" fg:x="469" fg:w="2"/><text x="52.7928%" y="495.50"></text></g><g><title>memcpy (2 samples, 0.22%)</title><rect x="52.5785%" y="469" width="0.2242%" height="15" fill="rgb(232,135,4)" fg:x="469" fg:w="2"/><text x="52.7928%" y="479.50"></text></g><g><title>__asan_region_is_poisoned (2 samples, 0.22%)</title><rect x="52.5785%" y="453" width="0.2242%" height="15" fill="rgb(252,76,50)" fg:x="469" fg:w="2"/><text x="52.7928%" y="463.50"></text></g><g><title>__asan::Allocator::Allocate (2 samples, 0.22%)</title><rect x="52.5785%" y="437" width="0.2242%" height="15" fill="rgb(251,118,48)" fg:x="469" fg:w="2"/><text x="52.7928%" y="447.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="52.5785%" y="421" width="0.2242%" height="15" fill="rgb(247,113,52)" fg:x="469" fg:w="2"/><text x="52.7928%" y="431.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.22%)</title><rect x="52.5785%" y="405" width="0.2242%" height="15" fill="rgb(229,107,3)" fg:x="469" fg:w="2"/><text x="52.7928%" y="415.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.34%)</title><rect x="52.8027%" y="421" width="0.3363%" height="15" fill="rgb(229,107,3)" fg:x="471" fg:w="3"/><text x="53.0170%" y="431.50"></text></g><g><title>[unknown] (471 samples, 52.80%)</title><rect x="0.5605%" y="533" width="52.8027%" height="15" fill="rgb(227,28,50)" fg:x="5" fg:w="471"/><text x="0.7748%" y="543.50">[unknown]</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (5 samples, 0.56%)</title><rect x="52.8027%" y="517" width="0.5605%" height="15" fill="rgb(241,200,23)" fg:x="471" fg:w="5"/><text x="53.0170%" y="527.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.56%)</title><rect x="52.8027%" y="501" width="0.5605%" height="15" fill="rgb(254,182,12)" fg:x="471" fg:w="5"/><text x="53.0170%" y="511.50"></text></g><g><title>memcpy (5 samples, 0.56%)</title><rect x="52.8027%" y="485" width="0.5605%" height="15" fill="rgb(232,135,4)" fg:x="471" fg:w="5"/><text x="53.0170%" y="495.50"></text></g><g><title>__asan_region_is_poisoned (5 samples, 0.56%)</title><rect x="52.8027%" y="469" width="0.5605%" height="15" fill="rgb(252,76,50)" fg:x="471" fg:w="5"/><text x="53.0170%" y="479.50"></text></g><g><title>__asan::Allocator::Allocate (5 samples, 0.56%)</title><rect x="52.8027%" y="453" width="0.5605%" height="15" fill="rgb(251,118,48)" fg:x="471" fg:w="5"/><text x="53.0170%" y="463.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.56%)</title><rect x="52.8027%" y="437" width="0.5605%" height="15" fill="rgb(247,113,52)" fg:x="471" fg:w="5"/><text x="53.0170%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.22%)</title><rect x="53.1390%" y="421" width="0.2242%" height="15" fill="rgb(234,224,53)" fg:x="474" fg:w="2"/><text x="53.3533%" y="431.50"></text></g><g><title>__libc_csu_init (1 samples, 0.11%)</title><rect x="53.3632%" y="501" width="0.1121%" height="15" fill="rgb(249,82,12)" fg:x="476" fg:w="1"/><text x="53.5775%" y="511.50"></text></g><g><title>asan.module_ctor (1 samples, 0.11%)</title><rect x="53.3632%" y="485" width="0.1121%" height="15" fill="rgb(210,107,37)" fg:x="476" fg:w="1"/><text x="53.5775%" y="495.50"></text></g><g><title>__asan_init (1 samples, 0.11%)</title><rect x="53.3632%" y="469" width="0.1121%" height="15" fill="rgb(227,187,50)" fg:x="476" fg:w="1"/><text x="53.5775%" y="479.50"></text></g><g><title>__asan::AsanActivate (1 samples, 0.11%)</title><rect x="53.3632%" y="453" width="0.1121%" height="15" fill="rgb(248,132,5)" fg:x="476" fg:w="1"/><text x="53.5775%" y="463.50"></text></g><g><title>Init::init (1 samples, 0.11%)</title><rect x="53.8117%" y="485" width="0.1121%" height="15" fill="rgb(209,120,41)" fg:x="480" fg:w="1"/><text x="54.0259%" y="495.50"></text></g><g><title>Init::initVirtualHosts (1 samples, 0.11%)</title><rect x="53.8117%" y="469" width="0.1121%" height="15" fill="rgb(239,50,52)" fg:x="480" fg:w="1"/><text x="54.0259%" y="479.50"></text></g><g><title>VirtualHost::VirtualHost (1 samples, 0.11%)</title><rect x="53.8117%" y="453" width="0.1121%" height="15" fill="rgb(211,93,32)" fg:x="480" fg:w="1"/><text x="54.0259%" y="463.50"></text></g><g><title>Address::resolveHost (1 samples, 0.11%)</title><rect x="53.8117%" y="437" width="0.1121%" height="15" fill="rgb(229,227,33)" fg:x="480" fg:w="1"/><text x="54.0259%" y="447.50"></text></g><g><title>__interceptor_getaddrinfo (1 samples, 0.11%)</title><rect x="53.8117%" y="421" width="0.1121%" height="15" fill="rgb(224,192,25)" fg:x="480" fg:w="1"/><text x="54.0259%" y="431.50"></text></g><g><title>getaddrinfo (1 samples, 0.11%)</title><rect x="53.8117%" y="405" width="0.1121%" height="15" fill="rgb(251,135,34)" fg:x="480" fg:w="1"/><text x="54.0259%" y="415.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="53.8117%" y="389" width="0.1121%" height="15" fill="rgb(247,113,52)" fg:x="480" fg:w="1"/><text x="54.0259%" y="399.50"></text></g><g><title>_nss_files_gethostbyname4_r (1 samples, 0.11%)</title><rect x="53.8117%" y="373" width="0.1121%" height="15" fill="rgb(250,32,8)" fg:x="480" fg:w="1"/><text x="54.0259%" y="383.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="53.8117%" y="357" width="0.1121%" height="15" fill="rgb(247,113,52)" fg:x="480" fg:w="1"/><text x="54.0259%" y="367.50"></text></g><g><title>Poll::setTimeout (2 samples, 0.22%)</title><rect x="58.9686%" y="437" width="0.2242%" height="15" fill="rgb(227,76,18)" fg:x="526" fg:w="2"/><text x="59.1829%" y="447.50"></text></g><g><title>Poll::getInstance (1 samples, 0.11%)</title><rect x="59.0807%" y="421" width="0.1121%" height="15" fill="rgb(237,174,43)" fg:x="527" fg:w="1"/><text x="59.2950%" y="431.50"></text></g><g><title>[[vdso]] (2 samples, 0.22%)</title><rect x="59.4170%" y="421" width="0.2242%" height="15" fill="rgb(229,169,17)" fg:x="530" fg:w="2"/><text x="59.6313%" y="431.50"></text></g><g><title>AConnection::onPollEvent (14 samples, 1.57%)</title><rect x="58.1839%" y="453" width="1.5695%" height="15" fill="rgb(240,200,10)" fg:x="519" fg:w="14"/><text x="58.3981%" y="463.50">A..</text></g><g><title>__vdso_gettimeofday (5 samples, 0.56%)</title><rect x="59.1928%" y="437" width="0.5605%" height="15" fill="rgb(246,114,18)" fg:x="528" fg:w="5"/><text x="59.4071%" y="447.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.11%)</title><rect x="59.6413%" y="421" width="0.1121%" height="15" fill="rgb(248,227,45)" fg:x="532" fg:w="1"/><text x="59.8555%" y="431.50"></text></g><g><title>common_interrupt (1 samples, 0.11%)</title><rect x="59.6413%" y="405" width="0.1121%" height="15" fill="rgb(250,67,32)" fg:x="532" fg:w="1"/><text x="59.8555%" y="415.50"></text></g><g><title>handle_edge_irq (1 samples, 0.11%)</title><rect x="59.6413%" y="389" width="0.1121%" height="15" fill="rgb(219,15,9)" fg:x="532" fg:w="1"/><text x="59.8555%" y="399.50"></text></g><g><title>handle_irq_event (1 samples, 0.11%)</title><rect x="59.6413%" y="373" width="0.1121%" height="15" fill="rgb(209,73,52)" fg:x="532" fg:w="1"/><text x="59.8555%" y="383.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.11%)</title><rect x="59.6413%" y="357" width="0.1121%" height="15" fill="rgb(239,110,26)" fg:x="532" fg:w="1"/><text x="59.8555%" y="367.50"></text></g><g><title>vring_interrupt (1 samples, 0.11%)</title><rect x="59.6413%" y="341" width="0.1121%" height="15" fill="rgb(206,212,41)" fg:x="532" fg:w="1"/><text x="59.8555%" y="351.50"></text></g><g><title>skb_xmit_done (1 samples, 0.11%)</title><rect x="59.6413%" y="325" width="0.1121%" height="15" fill="rgb(238,39,45)" fg:x="532" fg:w="1"/><text x="59.8555%" y="335.50"></text></g><g><title>virtqueue_disable_cb (1 samples, 0.11%)</title><rect x="59.6413%" y="309" width="0.1121%" height="15" fill="rgb(248,182,34)" fg:x="532" fg:w="1"/><text x="59.8555%" y="319.50"></text></g><g><title>CallbackPointer::CallbackPointer (2 samples, 0.22%)</title><rect x="59.7534%" y="453" width="0.2242%" height="15" fill="rgb(246,133,48)" fg:x="533" fg:w="2"/><text x="59.9676%" y="463.50"></text></g><g><title>Address::Address (4 samples, 0.45%)</title><rect x="61.0987%" y="437" width="0.4484%" height="15" fill="rgb(231,26,17)" fg:x="545" fg:w="4"/><text x="61.3129%" y="447.50"></text></g><g><title>ListenSocket::onPollEvent (17 samples, 1.91%)</title><rect x="59.9776%" y="453" width="1.9058%" height="15" fill="rgb(234,106,36)" fg:x="535" fg:w="17"/><text x="60.1919%" y="463.50">L..</text></g><g><title>[libc-2.31.so] (3 samples, 0.34%)</title><rect x="61.5471%" y="437" width="0.3363%" height="15" fill="rgb(247,113,52)" fg:x="549" fg:w="3"/><text x="61.7614%" y="447.50"></text></g><g><title>Poll::tryToAddNewElements (1 samples, 0.11%)</title><rect x="61.8834%" y="453" width="0.1121%" height="15" fill="rgb(241,105,43)" fg:x="552" fg:w="1"/><text x="62.0977%" y="463.50"></text></g><g><title>Poll::iterate (67 samples, 7.51%)</title><rect x="54.7085%" y="469" width="7.5112%" height="15" fill="rgb(241,227,18)" fg:x="488" fg:w="67"/><text x="54.9228%" y="479.50">Poll::iterate</text></g><g><title>std::vector&lt;pollfd, std::allocator&lt;pollfd&gt; &gt;::operator[] (2 samples, 0.22%)</title><rect x="61.9955%" y="453" width="0.2242%" height="15" fill="rgb(219,78,45)" fg:x="553" fg:w="2"/><text x="62.2098%" y="463.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="62.7803%" y="437" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="560" fg:w="1"/><text x="62.9946%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.22%)</title><rect x="62.8924%" y="437" width="0.2242%" height="15" fill="rgb(206,213,41)" fg:x="561" fg:w="2"/><text x="63.1067%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="63.1166%" y="437" width="0.1121%" height="15" fill="rgb(234,224,53)" fg:x="563" fg:w="1"/><text x="63.3309%" y="447.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.22%)</title><rect x="63.5650%" y="421" width="0.2242%" height="15" fill="rgb(211,8,20)" fg:x="567" fg:w="2"/><text x="63.7793%" y="431.50"></text></g><g><title>srso_safe_ret_alias (2 samples, 0.22%)</title><rect x="63.5650%" y="405" width="0.2242%" height="15" fill="rgb(210,87,27)" fg:x="567" fg:w="2"/><text x="63.7793%" y="415.50"></text></g><g><title>__fget_light (10 samples, 1.12%)</title><rect x="65.6951%" y="373" width="1.1211%" height="15" fill="rgb(243,103,32)" fg:x="586" fg:w="10"/><text x="65.9094%" y="383.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.22%)</title><rect x="66.5919%" y="357" width="0.2242%" height="15" fill="rgb(229,107,3)" fg:x="594" fg:w="2"/><text x="66.8062%" y="367.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="66.8161%" y="373" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="596" fg:w="1"/><text x="67.0304%" y="383.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.11%)</title><rect x="66.9283%" y="373" width="0.1121%" height="15" fill="rgb(211,8,20)" fg:x="597" fg:w="1"/><text x="67.1425%" y="383.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.11%)</title><rect x="66.9283%" y="357" width="0.1121%" height="15" fill="rgb(210,87,27)" fg:x="597" fg:w="1"/><text x="67.1425%" y="367.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.11%)</title><rect x="67.3767%" y="357" width="0.1121%" height="15" fill="rgb(254,4,9)" fg:x="601" fg:w="1"/><text x="67.5910%" y="367.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="67.3767%" y="341" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="601" fg:w="1"/><text x="67.5910%" y="351.50"></text></g><g><title>_copy_from_user (5 samples, 0.56%)</title><rect x="67.0404%" y="373" width="0.5605%" height="15" fill="rgb(224,68,34)" fg:x="598" fg:w="5"/><text x="67.2546%" y="383.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.11%)</title><rect x="67.4888%" y="357" width="0.1121%" height="15" fill="rgb(232,168,48)" fg:x="602" fg:w="1"/><text x="67.7031%" y="367.50"></text></g><g><title>_raw_spin_unlock_irqrestore (2 samples, 0.22%)</title><rect x="68.3857%" y="357" width="0.2242%" height="15" fill="rgb(216,183,20)" fg:x="610" fg:w="2"/><text x="68.5999%" y="367.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="68.4978%" y="341" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="611" fg:w="1"/><text x="68.7120%" y="351.50"></text></g><g><title>fput_many (1 samples, 0.11%)</title><rect x="68.6099%" y="357" width="0.1121%" height="15" fill="rgb(223,66,3)" fg:x="612" fg:w="1"/><text x="68.8242%" y="367.50"></text></g><g><title>poll_freewait (15 samples, 1.68%)</title><rect x="67.6009%" y="373" width="1.6816%" height="15" fill="rgb(240,0,18)" fg:x="603" fg:w="15"/><text x="67.8152%" y="383.50">p..</text></g><g><title>remove_wait_queue (5 samples, 0.56%)</title><rect x="68.7220%" y="357" width="0.5605%" height="15" fill="rgb(247,210,21)" fg:x="613" fg:w="5"/><text x="68.9363%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="69.1704%" y="341" width="0.1121%" height="15" fill="rgb(206,213,41)" fg:x="617" fg:w="1"/><text x="69.3847%" y="351.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="69.3946%" y="357" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="619" fg:w="1"/><text x="69.6089%" y="367.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="69.5067%" y="357" width="0.1121%" height="15" fill="rgb(216,183,20)" fg:x="620" fg:w="1"/><text x="69.7210%" y="367.50"></text></g><g><title>error_return (1 samples, 0.11%)</title><rect x="69.5067%" y="341" width="0.1121%" height="15" fill="rgb(235,226,9)" fg:x="620" fg:w="1"/><text x="69.7210%" y="351.50"></text></g><g><title>hrtimer_init_sleeper (1 samples, 0.11%)</title><rect x="69.6188%" y="357" width="0.1121%" height="15" fill="rgb(224,203,45)" fg:x="621" fg:w="1"/><text x="69.8331%" y="367.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="69.6188%" y="341" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="621" fg:w="1"/><text x="69.8331%" y="351.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="70.0673%" y="341" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="625" fg:w="1"/><text x="70.2816%" y="351.50"></text></g><g><title>enqueue_hrtimer (12 samples, 1.35%)</title><rect x="70.1794%" y="341" width="1.3453%" height="15" fill="rgb(218,84,40)" fg:x="626" fg:w="12"/><text x="70.3937%" y="351.50"></text></g><g><title>timerqueue_add (11 samples, 1.23%)</title><rect x="70.2915%" y="325" width="1.2332%" height="15" fill="rgb(235,22,27)" fg:x="627" fg:w="11"/><text x="70.5058%" y="335.50"></text></g><g><title>rb_insert_color (1 samples, 0.11%)</title><rect x="71.4126%" y="309" width="0.1121%" height="15" fill="rgb(215,171,47)" fg:x="637" fg:w="1"/><text x="71.6268%" y="319.50"></text></g><g><title>hrtimer_start_range_ns (20 samples, 2.24%)</title><rect x="69.7309%" y="357" width="2.2422%" height="15" fill="rgb(231,227,51)" fg:x="622" fg:w="20"/><text x="69.9452%" y="367.50">hr..</text></g><g><title>get_nohz_timer_target (4 samples, 0.45%)</title><rect x="71.5247%" y="341" width="0.4484%" height="15" fill="rgb(247,59,26)" fg:x="638" fg:w="4"/><text x="71.7389%" y="351.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.22%)</title><rect x="72.0852%" y="341" width="0.2242%" height="15" fill="rgb(229,107,3)" fg:x="643" fg:w="2"/><text x="72.2995%" y="351.50"></text></g><g><title>native_read_msr (54 samples, 6.05%)</title><rect x="73.2063%" y="277" width="6.0538%" height="15" fill="rgb(218,43,9)" fg:x="653" fg:w="54"/><text x="73.4206%" y="287.50">native_re..</text></g><g><title>amd_pmu_disable_all (68 samples, 7.62%)</title><rect x="73.0942%" y="309" width="7.6233%" height="15" fill="rgb(224,0,7)" fg:x="652" fg:w="68"/><text x="73.3085%" y="319.50">amd_pmu_disab..</text></g><g><title>x86_pmu_disable_all (68 samples, 7.62%)</title><rect x="73.0942%" y="293" width="7.6233%" height="15" fill="rgb(235,111,43)" fg:x="652" fg:w="68"/><text x="73.3085%" y="303.50">x86_pmu_disab..</text></g><g><title>native_write_msr (13 samples, 1.46%)</title><rect x="79.2601%" y="277" width="1.4574%" height="15" fill="rgb(220,53,36)" fg:x="707" fg:w="13"/><text x="79.4744%" y="287.50"></text></g><g><title>__perf_event_task_sched_out (69 samples, 7.74%)</title><rect x="73.0942%" y="325" width="7.7354%" height="15" fill="rgb(206,30,45)" fg:x="652" fg:w="69"/><text x="73.3085%" y="335.50">__perf_event_..</text></g><g><title>x86_pmu_disable (1 samples, 0.11%)</title><rect x="80.7175%" y="309" width="0.1121%" height="15" fill="rgb(240,6,49)" fg:x="720" fg:w="1"/><text x="80.9318%" y="319.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="80.8296%" y="325" width="0.1121%" height="15" fill="rgb(225,195,37)" fg:x="721" fg:w="1"/><text x="81.0439%" y="335.50"></text></g><g><title>__x86_return_thunk (2 samples, 0.22%)</title><rect x="81.5022%" y="293" width="0.2242%" height="15" fill="rgb(211,8,20)" fg:x="727" fg:w="2"/><text x="81.7165%" y="303.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.11%)</title><rect x="81.6143%" y="277" width="0.1121%" height="15" fill="rgb(210,87,27)" fg:x="728" fg:w="1"/><text x="81.8286%" y="287.50"></text></g><g><title>clear_buddies (1 samples, 0.11%)</title><rect x="81.7265%" y="293" width="0.1121%" height="15" fill="rgb(218,15,54)" fg:x="729" fg:w="1"/><text x="81.9407%" y="303.50"></text></g><g><title>rcu_read_unlock_strict (1 samples, 0.11%)</title><rect x="82.0628%" y="277" width="0.1121%" height="15" fill="rgb(251,95,14)" fg:x="732" fg:w="1"/><text x="82.2771%" y="287.50"></text></g><g><title>update_curr (4 samples, 0.45%)</title><rect x="81.8386%" y="293" width="0.4484%" height="15" fill="rgb(242,65,24)" fg:x="730" fg:w="4"/><text x="82.0529%" y="303.50"></text></g><g><title>update_min_vruntime (1 samples, 0.11%)</title><rect x="82.1749%" y="277" width="0.1121%" height="15" fill="rgb(235,225,54)" fg:x="733" fg:w="1"/><text x="82.3892%" y="287.50"></text></g><g><title>dequeue_entity (11 samples, 1.23%)</title><rect x="81.2780%" y="309" width="1.2332%" height="15" fill="rgb(217,209,51)" fg:x="725" fg:w="11"/><text x="81.4923%" y="319.50"></text></g><g><title>update_load_avg (2 samples, 0.22%)</title><rect x="82.2870%" y="293" width="0.2242%" height="15" fill="rgb(222,111,24)" fg:x="734" fg:w="2"/><text x="82.5013%" y="303.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="82.3991%" y="277" width="0.1121%" height="15" fill="rgb(206,162,20)" fg:x="735" fg:w="1"/><text x="82.6134%" y="287.50"></text></g><g><title>dequeue_task_fair (15 samples, 1.68%)</title><rect x="80.9417%" y="325" width="1.6816%" height="15" fill="rgb(221,4,41)" fg:x="722" fg:w="15"/><text x="81.1560%" y="335.50">d..</text></g><g><title>update_min_vruntime (1 samples, 0.11%)</title><rect x="82.5112%" y="309" width="0.1121%" height="15" fill="rgb(235,225,54)" fg:x="736" fg:w="1"/><text x="82.7255%" y="319.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.22%)</title><rect x="82.8475%" y="309" width="0.2242%" height="15" fill="rgb(229,107,3)" fg:x="739" fg:w="2"/><text x="83.0618%" y="319.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.11%)</title><rect x="83.0717%" y="277" width="0.1121%" height="15" fill="rgb(211,8,20)" fg:x="741" fg:w="1"/><text x="83.2860%" y="287.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.11%)</title><rect x="83.0717%" y="261" width="0.1121%" height="15" fill="rgb(210,87,27)" fg:x="741" fg:w="1"/><text x="83.2860%" y="271.50"></text></g><g><title>asm_call_sysvec_on_stack (1 samples, 0.11%)</title><rect x="83.1839%" y="277" width="0.1121%" height="15" fill="rgb(208,184,36)" fg:x="742" fg:w="1"/><text x="83.3981%" y="287.50"></text></g><g><title>handle_edge_irq (1 samples, 0.11%)</title><rect x="83.1839%" y="261" width="0.1121%" height="15" fill="rgb(219,15,9)" fg:x="742" fg:w="1"/><text x="83.3981%" y="271.50"></text></g><g><title>handle_irq_event (1 samples, 0.11%)</title><rect x="83.1839%" y="245" width="0.1121%" height="15" fill="rgb(209,73,52)" fg:x="742" fg:w="1"/><text x="83.3981%" y="255.50"></text></g><g><title>__kfree_skb_flush (4 samples, 0.45%)</title><rect x="83.4081%" y="197" width="0.4484%" height="15" fill="rgb(245,1,6)" fg:x="744" fg:w="4"/><text x="83.6224%" y="207.50"></text></g><g><title>kmem_cache_free_bulk (4 samples, 0.45%)</title><rect x="83.4081%" y="181" width="0.4484%" height="15" fill="rgb(249,162,6)" fg:x="744" fg:w="4"/><text x="83.6224%" y="191.50"></text></g><g><title>ip_local_deliver (2 samples, 0.22%)</title><rect x="83.9686%" y="85" width="0.2242%" height="15" fill="rgb(221,216,39)" fg:x="749" fg:w="2"/><text x="84.1829%" y="95.50"></text></g><g><title>nf_hook_slow (2 samples, 0.22%)</title><rect x="83.9686%" y="69" width="0.2242%" height="15" fill="rgb(226,120,15)" fg:x="749" fg:w="2"/><text x="84.1829%" y="79.50"></text></g><g><title>nft_do_chain_ipv4 (2 samples, 0.22%)</title><rect x="83.9686%" y="53" width="0.2242%" height="15" fill="rgb(228,67,49)" fg:x="749" fg:w="2"/><text x="84.1829%" y="63.50"></text></g><g><title>nft_do_chain (2 samples, 0.22%)</title><rect x="83.9686%" y="37" width="0.2242%" height="15" fill="rgb(233,182,32)" fg:x="749" fg:w="2"/><text x="84.1829%" y="47.50"></text></g><g><title>virtnet_poll (4 samples, 0.45%)</title><rect x="83.8565%" y="197" width="0.4484%" height="15" fill="rgb(213,187,12)" fg:x="748" fg:w="4"/><text x="84.0708%" y="207.50"></text></g><g><title>napi_complete_done (4 samples, 0.45%)</title><rect x="83.8565%" y="181" width="0.4484%" height="15" fill="rgb(226,216,13)" fg:x="748" fg:w="4"/><text x="84.0708%" y="191.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.45%)</title><rect x="83.8565%" y="165" width="0.4484%" height="15" fill="rgb(216,153,44)" fg:x="748" fg:w="4"/><text x="84.0708%" y="175.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.45%)</title><rect x="83.8565%" y="149" width="0.4484%" height="15" fill="rgb(227,176,26)" fg:x="748" fg:w="4"/><text x="84.0708%" y="159.50"></text></g><g><title>ip_list_rcv (3 samples, 0.34%)</title><rect x="83.9686%" y="133" width="0.3363%" height="15" fill="rgb(215,38,16)" fg:x="749" fg:w="3"/><text x="84.1829%" y="143.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.34%)</title><rect x="83.9686%" y="117" width="0.3363%" height="15" fill="rgb(207,166,9)" fg:x="749" fg:w="3"/><text x="84.1829%" y="127.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.34%)</title><rect x="83.9686%" y="101" width="0.3363%" height="15" fill="rgb(223,178,14)" fg:x="749" fg:w="3"/><text x="84.1829%" y="111.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.11%)</title><rect x="84.1928%" y="85" width="0.1121%" height="15" fill="rgb(220,94,29)" fg:x="751" fg:w="1"/><text x="84.4071%" y="95.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.11%)</title><rect x="84.1928%" y="69" width="0.1121%" height="15" fill="rgb(207,19,13)" fg:x="751" fg:w="1"/><text x="84.4071%" y="79.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.11%)</title><rect x="84.1928%" y="53" width="0.1121%" height="15" fill="rgb(224,38,0)" fg:x="751" fg:w="1"/><text x="84.4071%" y="63.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="84.6413%" y="149" width="0.1121%" height="15" fill="rgb(222,6,37)" fg:x="755" fg:w="1"/><text x="84.8555%" y="159.50"></text></g><g><title>finish_task_switch (20 samples, 2.24%)</title><rect x="82.6233%" y="325" width="2.2422%" height="15" fill="rgb(214,214,33)" fg:x="737" fg:w="20"/><text x="82.8376%" y="335.50">fi..</text></g><g><title>asm_common_interrupt (16 samples, 1.79%)</title><rect x="83.0717%" y="309" width="1.7937%" height="15" fill="rgb(248,227,45)" fg:x="741" fg:w="16"/><text x="83.2860%" y="319.50">a..</text></g><g><title>common_interrupt (16 samples, 1.79%)</title><rect x="83.0717%" y="293" width="1.7937%" height="15" fill="rgb(250,67,32)" fg:x="741" fg:w="16"/><text x="83.2860%" y="303.50">c..</text></g><g><title>irq_exit_rcu (14 samples, 1.57%)</title><rect x="83.2960%" y="277" width="1.5695%" height="15" fill="rgb(240,18,12)" fg:x="743" fg:w="14"/><text x="83.5102%" y="287.50">i..</text></g><g><title>do_softirq_own_stack (14 samples, 1.57%)</title><rect x="83.2960%" y="261" width="1.5695%" height="15" fill="rgb(223,89,53)" fg:x="743" fg:w="14"/><text x="83.5102%" y="271.50">d..</text></g><g><title>asm_call_sysvec_on_stack (14 samples, 1.57%)</title><rect x="83.2960%" y="245" width="1.5695%" height="15" fill="rgb(208,184,36)" fg:x="743" fg:w="14"/><text x="83.5102%" y="255.50">a..</text></g><g><title>__softirqentry_text_start (14 samples, 1.57%)</title><rect x="83.2960%" y="229" width="1.5695%" height="15" fill="rgb(249,91,22)" fg:x="743" fg:w="14"/><text x="83.5102%" y="239.50">_..</text></g><g><title>net_rx_action (13 samples, 1.46%)</title><rect x="83.4081%" y="213" width="1.4574%" height="15" fill="rgb(231,11,52)" fg:x="744" fg:w="13"/><text x="83.6224%" y="223.50"></text></g><g><title>virtnet_poll_tx (5 samples, 0.56%)</title><rect x="84.3049%" y="197" width="0.5605%" height="15" fill="rgb(251,188,47)" fg:x="752" fg:w="5"/><text x="84.5192%" y="207.50"></text></g><g><title>free_old_xmit_skbs (3 samples, 0.34%)</title><rect x="84.5291%" y="181" width="0.3363%" height="15" fill="rgb(235,178,6)" fg:x="754" fg:w="3"/><text x="84.7434%" y="191.50"></text></g><g><title>napi_consume_skb (3 samples, 0.34%)</title><rect x="84.5291%" y="165" width="0.3363%" height="15" fill="rgb(244,99,54)" fg:x="754" fg:w="3"/><text x="84.7434%" y="175.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="84.7534%" y="149" width="0.1121%" height="15" fill="rgb(252,193,18)" fg:x="756" fg:w="1"/><text x="84.9676%" y="159.50"></text></g><g><title>hrtick_update (1 samples, 0.11%)</title><rect x="84.8655%" y="325" width="0.1121%" height="15" fill="rgb(247,64,54)" fg:x="757" fg:w="1"/><text x="85.0798%" y="335.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.45%)</title><rect x="84.9776%" y="325" width="0.4484%" height="15" fill="rgb(247,213,54)" fg:x="758" fg:w="4"/><text x="85.1919%" y="335.50"></text></g><g><title>newidle_balance (3 samples, 0.34%)</title><rect x="85.0897%" y="309" width="0.3363%" height="15" fill="rgb(211,171,16)" fg:x="759" fg:w="3"/><text x="85.3040%" y="319.50"></text></g><g><title>psi_task_change (35 samples, 3.92%)</title><rect x="85.4260%" y="325" width="3.9238%" height="15" fill="rgb(214,87,45)" fg:x="762" fg:w="35"/><text x="85.6403%" y="335.50">psi_t..</text></g><g><title>psi_group_change (29 samples, 3.25%)</title><rect x="86.0987%" y="309" width="3.2511%" height="15" fill="rgb(214,74,3)" fg:x="768" fg:w="29"/><text x="86.3129%" y="319.50">psi_..</text></g><g><title>record_times (12 samples, 1.35%)</title><rect x="88.0045%" y="293" width="1.3453%" height="15" fill="rgb(235,137,9)" fg:x="785" fg:w="12"/><text x="88.2188%" y="303.50"></text></g><g><title>sched_clock_cpu (9 samples, 1.01%)</title><rect x="88.3408%" y="277" width="1.0090%" height="15" fill="rgb(217,142,15)" fg:x="788" fg:w="9"/><text x="88.5551%" y="287.50"></text></g><g><title>sched_clock (8 samples, 0.90%)</title><rect x="88.4529%" y="261" width="0.8969%" height="15" fill="rgb(234,150,37)" fg:x="789" fg:w="8"/><text x="88.6672%" y="271.50"></text></g><g><title>kvm_sched_clock_read (8 samples, 0.90%)</title><rect x="88.4529%" y="245" width="0.8969%" height="15" fill="rgb(248,187,27)" fg:x="789" fg:w="8"/><text x="88.6672%" y="255.50"></text></g><g><title>pvclock_clocksource_read (8 samples, 0.90%)</title><rect x="88.4529%" y="229" width="0.8969%" height="15" fill="rgb(246,59,10)" fg:x="789" fg:w="8"/><text x="88.6672%" y="239.50"></text></g><g><title>psi_task_switch (2 samples, 0.22%)</title><rect x="89.3498%" y="325" width="0.2242%" height="15" fill="rgb(233,176,51)" fg:x="797" fg:w="2"/><text x="89.5641%" y="335.50"></text></g><g><title>put_prev_task_fair (3 samples, 0.34%)</title><rect x="89.5740%" y="325" width="0.3363%" height="15" fill="rgb(217,100,33)" fg:x="799" fg:w="3"/><text x="89.7883%" y="335.50"></text></g><g><title>put_prev_entity (2 samples, 0.22%)</title><rect x="89.6861%" y="309" width="0.2242%" height="15" fill="rgb(223,18,39)" fg:x="800" fg:w="2"/><text x="89.9004%" y="319.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.11%)</title><rect x="89.7982%" y="293" width="0.1121%" height="15" fill="rgb(211,8,20)" fg:x="801" fg:w="1"/><text x="90.0125%" y="303.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.11%)</title><rect x="89.7982%" y="277" width="0.1121%" height="15" fill="rgb(210,87,27)" fg:x="801" fg:w="1"/><text x="90.0125%" y="287.50"></text></g><g><title>schedule_hrtimeout_range_clock (191 samples, 21.41%)</title><rect x="69.2825%" y="373" width="21.4126%" height="15" fill="rgb(209,201,27)" fg:x="618" fg:w="191"/><text x="69.4968%" y="383.50">schedule_hrtimeout_range_clock</text></g><g><title>schedule (167 samples, 18.72%)</title><rect x="71.9731%" y="357" width="18.7220%" height="15" fill="rgb(213,215,35)" fg:x="642" fg:w="167"/><text x="72.1874%" y="367.50">schedule</text></g><g><title>__schedule (164 samples, 18.39%)</title><rect x="72.3094%" y="341" width="18.3857%" height="15" fill="rgb(207,40,26)" fg:x="645" fg:w="164"/><text x="72.5237%" y="351.50">__schedule</text></g><g><title>update_rq_clock (7 samples, 0.78%)</title><rect x="89.9103%" y="325" width="0.7848%" height="15" fill="rgb(248,207,48)" fg:x="802" fg:w="7"/><text x="90.1246%" y="335.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.34%)</title><rect x="90.3587%" y="309" width="0.3363%" height="15" fill="rgb(217,142,15)" fg:x="806" fg:w="3"/><text x="90.5730%" y="319.50"></text></g><g><title>sched_clock (2 samples, 0.22%)</title><rect x="90.4709%" y="293" width="0.2242%" height="15" fill="rgb(234,150,37)" fg:x="807" fg:w="2"/><text x="90.6851%" y="303.50"></text></g><g><title>kvm_sched_clock_read (2 samples, 0.22%)</title><rect x="90.4709%" y="277" width="0.2242%" height="15" fill="rgb(248,187,27)" fg:x="807" fg:w="2"/><text x="90.6851%" y="287.50"></text></g><g><title>pvclock_clocksource_read (2 samples, 0.22%)</title><rect x="90.4709%" y="261" width="0.2242%" height="15" fill="rgb(246,59,10)" fg:x="807" fg:w="2"/><text x="90.6851%" y="271.50"></text></g><g><title>select_estimate_accuracy (4 samples, 0.45%)</title><rect x="90.6951%" y="373" width="0.4484%" height="15" fill="rgb(219,208,33)" fg:x="809" fg:w="4"/><text x="90.9094%" y="383.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.22%)</title><rect x="92.8251%" y="357" width="0.2242%" height="15" fill="rgb(229,107,3)" fg:x="828" fg:w="2"/><text x="93.0394%" y="367.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.11%)</title><rect x="93.0493%" y="357" width="0.1121%" height="15" fill="rgb(248,227,45)" fg:x="830" fg:w="1"/><text x="93.2636%" y="367.50"></text></g><g><title>common_interrupt (1 samples, 0.11%)</title><rect x="93.0493%" y="341" width="0.1121%" height="15" fill="rgb(250,67,32)" fg:x="830" fg:w="1"/><text x="93.2636%" y="351.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.11%)</title><rect x="93.0493%" y="325" width="0.1121%" height="15" fill="rgb(240,18,12)" fg:x="830" fg:w="1"/><text x="93.2636%" y="335.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.11%)</title><rect x="93.0493%" y="309" width="0.1121%" height="15" fill="rgb(223,89,53)" fg:x="830" fg:w="1"/><text x="93.2636%" y="319.50"></text></g><g><title>asm_call_sysvec_on_stack (1 samples, 0.11%)</title><rect x="93.0493%" y="293" width="0.1121%" height="15" fill="rgb(208,184,36)" fg:x="830" fg:w="1"/><text x="93.2636%" y="303.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.11%)</title><rect x="93.0493%" y="277" width="0.1121%" height="15" fill="rgb(249,91,22)" fg:x="830" fg:w="1"/><text x="93.2636%" y="287.50"></text></g><g><title>net_rx_action (1 samples, 0.11%)</title><rect x="93.0493%" y="261" width="0.1121%" height="15" fill="rgb(231,11,52)" fg:x="830" fg:w="1"/><text x="93.2636%" y="271.50"></text></g><g><title>virtnet_poll_tx (1 samples, 0.11%)</title><rect x="93.0493%" y="245" width="0.1121%" height="15" fill="rgb(251,188,47)" fg:x="830" fg:w="1"/><text x="93.2636%" y="255.50"></text></g><g><title>free_old_xmit_skbs (1 samples, 0.11%)</title><rect x="93.0493%" y="229" width="0.1121%" height="15" fill="rgb(235,178,6)" fg:x="830" fg:w="1"/><text x="93.2636%" y="239.50"></text></g><g><title>napi_consume_skb (1 samples, 0.11%)</title><rect x="93.0493%" y="213" width="0.1121%" height="15" fill="rgb(244,99,54)" fg:x="830" fg:w="1"/><text x="93.2636%" y="223.50"></text></g><g><title>skb_release_head_state (1 samples, 0.11%)</title><rect x="93.0493%" y="197" width="0.1121%" height="15" fill="rgb(221,1,22)" fg:x="830" fg:w="1"/><text x="93.2636%" y="207.50"></text></g><g><title>__sock_wfree (1 samples, 0.11%)</title><rect x="93.0493%" y="181" width="0.1121%" height="15" fill="rgb(218,21,38)" fg:x="830" fg:w="1"/><text x="93.2636%" y="191.50"></text></g><g><title>__irqentry_text_start (2 samples, 0.22%)</title><rect x="93.6099%" y="341" width="0.2242%" height="15" fill="rgb(229,107,3)" fg:x="835" fg:w="2"/><text x="93.8242%" y="351.50"></text></g><g><title>__pollwait (9 samples, 1.01%)</title><rect x="93.8341%" y="341" width="1.0090%" height="15" fill="rgb(248,41,12)" fg:x="837" fg:w="9"/><text x="94.0484%" y="351.50"></text></g><g><title>__irqentry_text_start (3 samples, 0.34%)</title><rect x="94.5067%" y="325" width="0.3363%" height="15" fill="rgb(229,107,3)" fg:x="843" fg:w="3"/><text x="94.7210%" y="335.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="94.8430%" y="341" width="0.1121%" height="15" fill="rgb(216,183,20)" fg:x="846" fg:w="1"/><text x="95.0573%" y="351.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="94.8430%" y="325" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="846" fg:w="1"/><text x="95.0573%" y="335.50"></text></g><g><title>__list_add_valid (3 samples, 0.34%)</title><rect x="95.7399%" y="325" width="0.3363%" height="15" fill="rgb(206,79,8)" fg:x="854" fg:w="3"/><text x="95.9542%" y="335.50"></text></g><g><title>add_wait_queue (13 samples, 1.46%)</title><rect x="94.9552%" y="341" width="1.4574%" height="15" fill="rgb(227,131,29)" fg:x="847" fg:w="13"/><text x="95.1694%" y="351.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.34%)</title><rect x="96.0762%" y="325" width="0.3363%" height="15" fill="rgb(206,213,41)" fg:x="857" fg:w="3"/><text x="96.2905%" y="335.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="96.3004%" y="309" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="859" fg:w="1"/><text x="96.5147%" y="319.50"></text></g><g><title>do_sys_poll (290 samples, 32.51%)</title><rect x="64.2377%" y="389" width="32.5112%" height="15" fill="rgb(246,108,27)" fg:x="573" fg:w="290"/><text x="64.4520%" y="399.50">do_sys_poll</text></g><g><title>sock_poll (50 samples, 5.61%)</title><rect x="91.1435%" y="373" width="5.6054%" height="15" fill="rgb(224,152,37)" fg:x="813" fg:w="50"/><text x="91.3578%" y="383.50">sock_poll</text></g><g><title>tcp_poll (32 samples, 3.59%)</title><rect x="93.1614%" y="357" width="3.5874%" height="15" fill="rgb(233,143,3)" fg:x="831" fg:w="32"/><text x="93.3757%" y="367.50">tcp_p..</text></g><g><title>tcp_stream_memory_free (3 samples, 0.34%)</title><rect x="96.4126%" y="341" width="0.3363%" height="15" fill="rgb(235,140,9)" fg:x="860" fg:w="3"/><text x="96.6268%" y="351.50"></text></g><g><title>__x86_return_thunk (1 samples, 0.11%)</title><rect x="96.8610%" y="373" width="0.1121%" height="15" fill="rgb(211,8,20)" fg:x="864" fg:w="1"/><text x="97.0753%" y="383.50"></text></g><g><title>srso_safe_ret_alias (1 samples, 0.11%)</title><rect x="96.8610%" y="357" width="0.1121%" height="15" fill="rgb(210,87,27)" fg:x="864" fg:w="1"/><text x="97.0753%" y="367.50"></text></g><g><title>ktime_get_ts64 (8 samples, 0.90%)</title><rect x="96.9731%" y="373" width="0.8969%" height="15" fill="rgb(212,111,10)" fg:x="865" fg:w="8"/><text x="97.1874%" y="383.50"></text></g><g><title>kvm_clock_get_cycles (4 samples, 0.45%)</title><rect x="97.4215%" y="357" width="0.4484%" height="15" fill="rgb(213,218,37)" fg:x="869" fg:w="4"/><text x="97.6358%" y="367.50"></text></g><g><title>pvclock_clocksource_read (4 samples, 0.45%)</title><rect x="97.4215%" y="341" width="0.4484%" height="15" fill="rgb(246,59,10)" fg:x="869" fg:w="4"/><text x="97.6358%" y="351.50"></text></g><g><title>__x64_sys_poll (305 samples, 34.19%)</title><rect x="64.0135%" y="405" width="34.1928%" height="15" fill="rgb(220,34,9)" fg:x="571" fg:w="305"/><text x="64.2277%" y="415.50">__x64_sys_poll</text></g><g><title>poll_select_set_timeout (13 samples, 1.46%)</title><rect x="96.7489%" y="389" width="1.4574%" height="15" fill="rgb(216,174,36)" fg:x="863" fg:w="13"/><text x="96.9632%" y="399.50"></text></g><g><title>timespec64_add_safe (3 samples, 0.34%)</title><rect x="97.8700%" y="373" width="0.3363%" height="15" fill="rgb(244,181,45)" fg:x="873" fg:w="3"/><text x="98.0842%" y="383.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.11%)</title><rect x="98.0942%" y="357" width="0.1121%" height="15" fill="rgb(229,107,3)" fg:x="875" fg:w="1"/><text x="98.3085%" y="367.50"></text></g><g><title>do_syscall_64 (308 samples, 34.53%)</title><rect x="63.7892%" y="421" width="34.5291%" height="15" fill="rgb(220,74,14)" fg:x="569" fg:w="308"/><text x="64.0035%" y="431.50">do_syscall_64</text></g><g><title>syscall_enter_from_user_mode (1 samples, 0.11%)</title><rect x="98.2063%" y="405" width="0.1121%" height="15" fill="rgb(224,163,22)" fg:x="876" fg:w="1"/><text x="98.4206%" y="415.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.11%)</title><rect x="98.4305%" y="389" width="0.1121%" height="15" fill="rgb(227,221,38)" fg:x="878" fg:w="1"/><text x="98.6448%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (319 samples, 35.76%)</title><rect x="63.2287%" y="437" width="35.7623%" height="15" fill="rgb(205,226,15)" fg:x="564" fg:w="319"/><text x="63.4430%" y="447.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>syscall_exit_to_user_mode (6 samples, 0.67%)</title><rect x="98.3184%" y="421" width="0.6726%" height="15" fill="rgb(215,101,28)" fg:x="877" fg:w="6"/><text x="98.5327%" y="431.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.67%)</title><rect x="98.3184%" y="405" width="0.6726%" height="15" fill="rgb(240,77,26)" fg:x="877" fg:w="6"/><text x="98.5327%" y="415.50"></text></g><g><title>switch_fpu_return (4 samples, 0.45%)</title><rect x="98.5426%" y="389" width="0.4484%" height="15" fill="rgb(214,180,49)" fg:x="879" fg:w="4"/><text x="98.7569%" y="399.50"></text></g><g><title>sock_poll (1 samples, 0.11%)</title><rect x="98.9910%" y="437" width="0.1121%" height="15" fill="rgb(224,152,37)" fg:x="883" fg:w="1"/><text x="99.2053%" y="447.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.11%)</title><rect x="98.9910%" y="421" width="0.1121%" height="15" fill="rgb(231,153,3)" fg:x="883" fg:w="1"/><text x="99.2053%" y="431.50"></text></g><g><title>__poll (329 samples, 36.88%)</title><rect x="62.3318%" y="453" width="36.8834%" height="15" fill="rgb(248,204,13)" fg:x="556" fg:w="329"/><text x="62.5461%" y="463.50">__poll</text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="99.1031%" y="437" width="0.1121%" height="15" fill="rgb(230,222,6)" fg:x="884" fg:w="1"/><text x="99.3174%" y="447.50"></text></g><g><title>read_pollfd (4 samples, 0.45%)</title><rect x="99.2152%" y="453" width="0.4484%" height="15" fill="rgb(216,128,13)" fg:x="885" fg:w="4"/><text x="99.4295%" y="463.50"></text></g><g><title>Poll::poll (409 samples, 45.85%)</title><rect x="53.9238%" y="485" width="45.8520%" height="15" fill="rgb(241,47,17)" fg:x="481" fg:w="409"/><text x="54.1381%" y="495.50">Poll::poll</text></g><g><title>poll (335 samples, 37.56%)</title><rect x="62.2197%" y="469" width="37.5561%" height="15" fill="rgb(233,125,31)" fg:x="555" fg:w="335"/><text x="62.4340%" y="479.50">poll</text></g><g><title>write_pollfd (1 samples, 0.11%)</title><rect x="99.6637%" y="453" width="0.1121%" height="15" fill="rgb(249,176,48)" fg:x="889" fg:w="1"/><text x="99.8780%" y="463.50"></text></g><g><title>_start (415 samples, 46.52%)</title><rect x="53.3632%" y="533" width="46.5247%" height="15" fill="rgb(210,219,27)" fg:x="476" fg:w="415"/><text x="53.5775%" y="543.50">_start</text></g><g><title>__libc_start_main (415 samples, 46.52%)</title><rect x="53.3632%" y="517" width="46.5247%" height="15" fill="rgb(211,91,2)" fg:x="476" fg:w="415"/><text x="53.5775%" y="527.50">__libc_start_main</text></g><g><title>main (414 samples, 46.41%)</title><rect x="53.4753%" y="501" width="46.4126%" height="15" fill="rgb(238,28,47)" fg:x="477" fg:w="414"/><text x="53.6896%" y="511.50">main</text></g><g><title>loadConfig (1 samples, 0.11%)</title><rect x="99.7758%" y="485" width="0.1121%" height="15" fill="rgb(216,190,24)" fg:x="890" fg:w="1"/><text x="99.9901%" y="495.50"></text></g><g><title>Config::parseContext (1 samples, 0.11%)</title><rect x="99.7758%" y="469" width="0.1121%" height="15" fill="rgb(250,19,45)" fg:x="890" fg:w="1"/><text x="99.9901%" y="479.50"></text></g><g><title>Config::processContext (1 samples, 0.11%)</title><rect x="99.7758%" y="453" width="0.1121%" height="15" fill="rgb(235,18,8)" fg:x="890" fg:w="1"/><text x="99.9901%" y="463.50"></text></g><g><title>Config::parseContext (1 samples, 0.11%)</title><rect x="99.7758%" y="437" width="0.1121%" height="15" fill="rgb(250,19,45)" fg:x="890" fg:w="1"/><text x="99.9901%" y="447.50"></text></g><g><title>Config::processInclude (1 samples, 0.11%)</title><rect x="99.7758%" y="421" width="0.1121%" height="15" fill="rgb(213,118,24)" fg:x="890" fg:w="1"/><text x="99.9901%" y="431.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.11%)</title><rect x="99.7758%" y="405" width="0.1121%" height="15" fill="rgb(226,32,40)" fg:x="890" fg:w="1"/><text x="99.9901%" y="415.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.11%)</title><rect x="99.7758%" y="389" width="0.1121%" height="15" fill="rgb(216,50,33)" fg:x="890" fg:w="1"/><text x="99.9901%" y="399.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.11%)</title><rect x="99.7758%" y="373" width="0.1121%" height="15" fill="rgb(250,46,35)" fg:x="890" fg:w="1"/><text x="99.9901%" y="383.50"></text></g><g><title>operator new (1 samples, 0.11%)</title><rect x="99.7758%" y="357" width="0.1121%" height="15" fill="rgb(214,91,1)" fg:x="890" fg:w="1"/><text x="99.9901%" y="367.50"></text></g><g><title>__asan::asan_memalign (1 samples, 0.11%)</title><rect x="99.7758%" y="341" width="0.1121%" height="15" fill="rgb(248,206,7)" fg:x="890" fg:w="1"/><text x="99.9901%" y="351.50"></text></g><g><title>__asan::Allocator::Allocate (1 samples, 0.11%)</title><rect x="99.7758%" y="325" width="0.1121%" height="15" fill="rgb(251,118,48)" fg:x="890" fg:w="1"/><text x="99.9901%" y="335.50"></text></g><g><title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1 samples, 0.11%)</title><rect x="99.7758%" y="309" width="0.1121%" height="15" fill="rgb(218,174,54)" fg:x="890" fg:w="1"/><text x="99.9901%" y="319.50"></text></g><g><title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1 samples, 0.11%)</title><rect x="99.7758%" y="293" width="0.1121%" height="15" fill="rgb(241,35,21)" fg:x="890" fg:w="1"/><text x="99.9901%" y="303.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (1 samples, 0.11%)</title><rect x="99.7758%" y="277" width="0.1121%" height="15" fill="rgb(230,18,53)" fg:x="890" fg:w="1"/><text x="99.9901%" y="287.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (1 samples, 0.11%)</title><rect x="99.7758%" y="261" width="0.1121%" height="15" fill="rgb(210,154,38)" fg:x="890" fg:w="1"/><text x="99.9901%" y="271.50"></text></g><g><title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::EnsureFreeArraySpace (1 samples, 0.11%)</title><rect x="99.7758%" y="245" width="0.1121%" height="15" fill="rgb(250,99,25)" fg:x="890" fg:w="1"/><text x="99.9901%" y="255.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="99.7758%" y="229" width="0.1121%" height="15" fill="rgb(247,113,52)" fg:x="890" fg:w="1"/><text x="99.9901%" y="239.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.11%)</title><rect x="99.7758%" y="213" width="0.1121%" height="15" fill="rgb(208,26,13)" fg:x="890" fg:w="1"/><text x="99.9901%" y="223.50"></text></g><g><title>exc_page_fault (1 samples, 0.11%)</title><rect x="99.7758%" y="197" width="0.1121%" height="15" fill="rgb(216,51,29)" fg:x="890" fg:w="1"/><text x="99.9901%" y="207.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="99.7758%" y="181" width="0.1121%" height="15" fill="rgb(253,37,52)" fg:x="890" fg:w="1"/><text x="99.9901%" y="191.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="99.7758%" y="165" width="0.1121%" height="15" fill="rgb(247,31,49)" fg:x="890" fg:w="1"/><text x="99.9901%" y="175.50"></text></g><g><title>__pte_alloc (1 samples, 0.11%)</title><rect x="99.7758%" y="149" width="0.1121%" height="15" fill="rgb(238,36,24)" fg:x="890" fg:w="1"/><text x="99.9901%" y="159.50"></text></g><g><title>pte_alloc_one (1 samples, 0.11%)</title><rect x="99.7758%" y="133" width="0.1121%" height="15" fill="rgb(240,162,31)" fg:x="890" fg:w="1"/><text x="99.9901%" y="143.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="99.7758%" y="117" width="0.1121%" height="15" fill="rgb(245,49,10)" fg:x="890" fg:w="1"/><text x="99.9901%" y="127.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="99.7758%" y="101" width="0.1121%" height="15" fill="rgb(246,35,53)" fg:x="890" fg:w="1"/><text x="99.9901%" y="111.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="99.7758%" y="85" width="0.1121%" height="15" fill="rgb(220,94,29)" fg:x="890" fg:w="1"/><text x="99.9901%" y="95.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="99.7758%" y="69" width="0.1121%" height="15" fill="rgb(253,165,35)" fg:x="890" fg:w="1"/><text x="99.9901%" y="79.50"></text></g><g><title>clear_page_erms (1 samples, 0.11%)</title><rect x="99.7758%" y="53" width="0.1121%" height="15" fill="rgb(253,135,51)" fg:x="890" fg:w="1"/><text x="99.9901%" y="63.50"></text></g><g><title>all (892 samples, 100%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="892"/><text x="0.2143%" y="575.50"></text></g><g><title>webserv (891 samples, 99.89%)</title><rect x="0.1121%" y="549" width="99.8879%" height="15" fill="rgb(207,222,45)" fg:x="1" fg:w="891"/><text x="0.3264%" y="559.50">webserv</text></g><g><title>entry_SYSCALL_64_safe_stack (1 samples, 0.11%)</title><rect x="99.8879%" y="533" width="0.1121%" height="15" fill="rgb(217,56,41)" fg:x="891" fg:w="1"/><text x="100.1022%" y="543.50"></text></g></svg></svg>